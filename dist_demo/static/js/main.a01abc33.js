/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./App.tsx":
/*!*****************!*\
  !*** ./App.tsx ***!
  \*****************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _demo_DemoApp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./demo/DemoApp */ "./demo/DemoApp.tsx");
/* harmony import */ var _src_components_Toast_ToastProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/components/Toast/ToastProvider */ "./src/components/Toast/ToastProvider.tsx");
/* harmony import */ var _src_components_Snackbar_SnackbarProvider__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/components/Snackbar/SnackbarProvider */ "./src/components/Snackbar/SnackbarProvider.tsx");
/* harmony import */ var _src__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./src */ "./src/index.ts");





const App = () => {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src__WEBPACK_IMPORTED_MODULE_4__.ThemeProvider, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components_Toast_ToastProvider__WEBPACK_IMPORTED_MODULE_2__.ToastProvider, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components_Snackbar_SnackbarProvider__WEBPACK_IMPORTED_MODULE_3__.SnackbarProvider, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_demo_DemoApp__WEBPACK_IMPORTED_MODULE_1__.DemoApp, null))));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (App);

/***/ }),

/***/ "./demo/Accordion.tsx":
/*!****************************!*\
  !*** ./demo/Accordion.tsx ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AccordionDemo: () => (/* binding */ AccordionDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");



const AccordionConfigurator = ({
  defaultValue,
  setDefaultValue
}) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "1rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
  as: "label",
  size: "sm",
  weight: "medium",
  color: "textSecondary"
}, "DefaultValue Prop"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
  size: "sm"
}, "This control remounts the component with a new default value to see the effect."), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.SegmentedControl, {
  value: defaultValue || 'none',
  onChange: val => setDefaultValue(val === 'none' ? '' : val),
  options: [{
    label: 'Item 1',
    value: 'item-1'
  }, {
    label: 'Item 2',
    value: 'item-2'
  }, {
    label: 'None',
    value: 'none'
  }]
}));
const documentation = `# Accordion

A vertically stacked set of interactive headings that each reveal a section of content.

## Components

*   **Accordion**: The main wrapper that manages the state.
*   **AccordionItem**: A container for a single accordion section.
*   **AccordionTrigger**: The clickable header that toggles the content's visibility.
*   **AccordionContent**: The collapsible content panel.

## Props

### Accordion
*   \`defaultValue\` (string, optional): The \`value\` of the \`AccordionItem\` that should be open by default.
*   \`children\` (React.ReactNode): Should be a series of \`AccordionItem\` components.

### AccordionItem
*   \`value\` (string, required): A unique identifier for the item.
*   \`children\` (React.ReactNode): Should contain an \`AccordionTrigger\` and an \`AccordionContent\`.

## Usage

\`\`\`tsx
import { Accordion, AccordionItem, AccordionTrigger, AccordionContent } from './src/components';

<Accordion defaultValue="item-1">
  <AccordionItem value="item-1">
    <AccordionTrigger>Is it accessible?</AccordionTrigger>
    <AccordionContent>
      Yes. It adheres to the WAI-ARIA design pattern for accordions.
    </AccordionContent>
  </AccordionItem>
  <AccordionItem value="item-2">
    <AccordionTrigger>Is it styled?</AccordionTrigger>
    <AccordionContent>
      Yes. It comes with a modern, dark-theme-friendly style.
    </AccordionContent>
  </AccordionItem>
</Accordion>
\`\`\``;
const sourceCode = `import React, { useState, createContext, useContext } from 'react';
import { useStyles } from '../../core/hooks/useStyles';
import { useTheme } from '../../core/theme/ThemeProvider';

interface AccordionContextType {
    activeItem: string | null;
    setActiveItem: (id: string | null) => void;
}

const AccordionContext = createContext<AccordionContextType | null>(null);

const useAccordion = () => {
    const context = useContext(AccordionContext);
    if (!context) {
        throw new Error('Accordion components must be used within an Accordion provider.');
    }
    return context;
};

export const Accordion: React.FC<{ children: React.ReactNode; defaultValue?: string; className?: string }> = ({ children, defaultValue, className }) => {
    const [activeItem, setActiveItem] = useState<string | null>(defaultValue || null);
    return (
        <AccordionContext.Provider value={{ activeItem, setActiveItem }}>
            <div className={className}>{children}</div>
        </AccordionContext.Provider>
    );
};

export const AccordionItem: React.FC<{ children: React.ReactNode; value: string; className?: string }> = ({ children, value, className }) => {
    const { theme } = useTheme();
    const createStyle = useStyles('accordion-item');
    const itemClass = createStyle({
        borderBottom: \`1px solid \${theme.colors.border}\`,
        '&:last-child': {
            borderBottom: 'none',
        },
    });

    return <div className={\`\${itemClass} \${className}\`}>{React.Children.map(children, child => React.isValidElement(child) ? React.cloneElement(child as React.ReactElement<any>, { value }) : child)}</div>;
};

export const AccordionTrigger: React.FC<{ children: React.ReactNode; value?: string; className?: string }> = ({ children, value, className }) => {
    const { activeItem, setActiveItem } = useAccordion();
    const { theme } = useTheme();
    const createStyle = useStyles('accordion-trigger');
    const isOpen = activeItem === value;

    const triggerClass = createStyle({
        width: '100%',
        padding: \`\${theme.spacing.md} 0\`,
        display: 'flex',
        justifyContent: 'space-between',
        alignItems: 'center',
        background: 'none',
        border: 'none',
        color: theme.colors.text,
        cursor: 'pointer',
        fontSize: '1rem',
        textAlign: 'left',
        '&::after': {
            content: '"â–¼"',
            fontSize: '10px',
            color: theme.colors.textSecondary,
            transition: 'transform 0.2s ease',
            transform: isOpen ? 'rotate(180deg)' : 'none',
        }
    });

    return (
        <button
            className={\`\${triggerClass} \${className}\`}
            onClick={() => setActiveItem(isOpen ? null : value!)}
            aria-expanded={isOpen}
            aria-controls={\`accordion-content-\${value}\`}
        >
            {children}
        </button>
    );
};

export const AccordionContent: React.FC<{ children: React.ReactNode; value?: string; className?: string }> = ({ children, value, className }) => {
    const { activeItem } = useAccordion();
    const { theme } = useTheme();
    const createStyle = useStyles('accordion-content');
    const isOpen = activeItem === value;
    
    const contentClass = createStyle({
        overflow: 'hidden',
        transition: 'max-height 0.3s ease, padding 0.3s ease',
        maxHeight: isOpen ? '500px' : '0',
    });

    const innerClass = createStyle({
         paddingBottom: isOpen ? theme.spacing.md : '0',
         color: theme.colors.textSecondary,
    });

    return (
        <div id={\`accordion-content-\${value}\`} className={\`\${contentClass} \${className}\`} aria-hidden={!isOpen}>
            <div className={innerClass}>{children}</div>
        </div>
    );
};`;
const AccordionDemo = () => {
  const [defaultValue, setDefaultValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('item-1');
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_2__.DemoSection, {
    title: "Accordion",
    description: "A vertically stacked set of interactive headings that each reveal a section of content.",
    livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Accordion, {
      defaultValue: defaultValue,
      key: defaultValue
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.AccordionItem, {
      value: "item-1"
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.AccordionTrigger, null, "Is it accessible?"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.AccordionContent, null, "Yes. It adheres to the WAI-ARIA design pattern for accordions.")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.AccordionItem, {
      value: "item-2"
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.AccordionTrigger, null, "Is it styled?"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.AccordionContent, null, "Yes. It comes with a modern, dark-theme-friendly style that fits the library's aesthetic."))),
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(AccordionConfigurator, {
      defaultValue: defaultValue,
      setDefaultValue: setDefaultValue
    }),
    documentation: documentation,
    fullSourceCode: sourceCode
  });
};

/***/ }),

/***/ "./demo/Alert.tsx":
/*!************************!*\
  !*** ./demo/Alert.tsx ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AlertDemo: () => (/* binding */ AlertDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");
/* harmony import */ var _src_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../src/core */ "./src/core/index.ts");




const AlertConfigurator = ({
  title,
  setTitle,
  childrenText,
  setChildrenText,
  variant,
  setVariant
}) => {
  const {
    theme
  } = (0,_src_core__WEBPACK_IMPORTED_MODULE_3__.useTheme)();
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
    gap: "1.5rem"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Input, {
    label: "Title Prop",
    value: title,
    onChange: e => setTitle(e.target.value)
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
    gap: "4px"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    as: "label",
    htmlFor: "alert-children-input",
    size: theme.typography.fontSizes.sm,
    weight: theme.typography.fontWeights.medium,
    color: theme.colors.textSecondary
  }, "Children Prop (Text)"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Textarea, {
    id: "alert-children-input",
    value: childrenText,
    onChange: e => setChildrenText(e.target.value),
    rows: 3
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
    gap: "4px"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    as: "label",
    size: theme.typography.fontSizes.sm,
    weight: theme.typography.fontWeights.medium,
    color: theme.colors.textSecondary
  }, "Variant Prop"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.SegmentedControl, {
    options: [{
      label: 'Info',
      value: 'info'
    }, {
      label: 'Success',
      value: 'success'
    }, {
      label: 'Warning',
      value: 'warning'
    }, {
      label: 'Error',
      value: 'error'
    }],
    value: variant,
    onChange: val => setVariant(val)
  })));
};
const documentation = `# Alert

A component to display contextual feedback messages for user actions.

## Props

*   \`title\` (string, required): The main title of the alert.
*   \`children\` (React.ReactNode, optional): Additional description text for the alert.
*   \`variant\` (enum: 'info' | 'warning' | 'error' | 'success', optional, default: 'info'): The style and color scheme of the alert.
*   \`className\` (string, optional): Additional CSS classes for custom styling.

## Usage

\`\`\`tsx
import { Alert } from './src/components';

<Alert title="Success!" variant="success">
  Your profile has been updated.
</Alert>
\`\`\``;
const fullSourceCode = `import React from 'react';
import { Text } from '../Text/Text';
import { useTheme } from '../../core/theme/ThemeProvider';
import { useStyles } from '../../core/hooks/useStyles';

interface AlertProps {
    title: string;
    children?: React.ReactNode;
    variant?: 'info' | 'warning' | 'error' | 'success';
    className?: string;
}

const icons = {
    info: \`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="h-5 w-5"><circle cx="12" cy="12" r="10"></circle><line x1="12" y1="16" x2="12" y2="12"></line><line x1="12" y1="8" x2="12.01" y2="8"></line></svg>\`,
    warning: \`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="h-5 w-5"><path d="m21.73 18-8-14a2 2 0 0 0-3.46 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z"></path><line x1="12" y1="9" x2="12" y2="13"></line><line x1="12" y1="17" x2="12.01" y2="17"></line></svg>\`,
    error: \`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="h-5 w-5"><path d="M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"></path><line x1="12" y1="9" x2="12" y2="13"></line><line x1="12" y1="17" x2="12.01" y2="17"></line></svg>\`,
    success: \`<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="h-5 w-5"><path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path><polyline points="22 4 12 14.01 9 11.01"></polyline></svg>\`
};

export const Alert: React.FC<AlertProps> = ({ title, children, variant = 'info', className = '' }) => {
    const { theme } = useTheme();
    const createStyle = useStyles('alert');
    const iconHtml = { __html: icons[variant] };

    const variantStyles = {
        info: { backgroundColor: 'rgba(59, 130, 246, 0.2)', borderColor: 'rgba(59, 130, 246, 0.5)', color: '#93c5fd' },
        warning: { backgroundColor: 'rgba(245, 158, 11, 0.2)', borderColor: 'rgba(245, 158, 11, 0.5)', color: '#fcd34d' },
        error: { backgroundColor: 'rgba(239, 68, 68, 0.2)', borderColor: 'rgba(239, 68, 68, 0.5)', color: '#fca5a5' },
        success: { backgroundColor: 'rgba(16, 185, 129, 0.2)', borderColor: 'rgba(16, 185, 129, 0.5)', color: '#6ee7b7' },
    };

    const containerClass = createStyle({
        display: 'grid',
        gridTemplateColumns: 'auto 1fr',
        alignItems: 'start',
        gap: theme.spacing.md,
        borderRadius: '8px',
        border: '1px solid',
        padding: theme.spacing.md,
        ...variantStyles[variant],
        '@supports (backdrop-filter: none) or (-webkit-backdrop-filter: none)': {
            backdropFilter: 'blur(12px)',
        },
    });

    return (
        <div role="alert" className={\`\${containerClass} \${className}\`}>
            <span aria-hidden="true" style={{ flexShrink: 0, width: '20px', height: '20px' }} dangerouslySetInnerHTML={iconHtml}></span>
            <div>
                <Text weight="600" style={{ marginBottom: '0.25rem' }}>{title}</Text>
                {children && <Text size="0.875rem" color="inherit" style={{ opacity: 0.8 }}>{children}</Text>}
            </div>
        </div>
    );
};`;
const AlertDemo = () => {
  const [title, setTitle] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('Info');
  const [childrenText, setChildrenText] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('This is an informational message.');
  const [variant, setVariant] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('info');
  const code = `<Alert title="${title}" variant="${variant}">${childrenText}</Alert>`;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_2__.DemoSection, {
    title: "Alert",
    description: "Provides contextual feedback messages for typical user actions, with variants for different severity levels.",
    initialCode: code,
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(AlertConfigurator, {
      title: title,
      setTitle: setTitle,
      childrenText: childrenText,
      setChildrenText: setChildrenText,
      variant: variant,
      setVariant: setVariant
    }),
    documentation: documentation,
    fullSourceCode: fullSourceCode
  });
};

/***/ }),

/***/ "./demo/AnimatedBlock.tsx":
/*!********************************!*\
  !*** ./demo/AnimatedBlock.tsx ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AnimatedBlockDemo: () => (/* binding */ AnimatedBlockDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");



const documentation = `# Animated Block

An interactive demonstration of the \`useCurveAnimation\` hook. It allows you to visually test different animation timing functions like ease, bounce, and elastic.

## Props

*   \`className\` (string, optional): Additional CSS classes for custom styling.

## Usage

This component is primarily for demonstration purposes and is self-contained.

\`\`\`tsx
import { AnimatedBlock } from './src/components';

<AnimatedBlock />
\`\`\``;
const fullSourceCode = `
import React, { useState } from 'react'
import { useCurveAnimation } from '../../core/hooks/useCurveAnimation'
import { useStyles } from '../../core/hooks/useStyles'
import { useTheme } from '../../core/theme/ThemeProvider'
import { CurveType } from '../../core/animation/CurveContextAnimation'

interface AnimatedBlockProps {
    className?: string
}

export const AnimatedBlock: React.FC<AnimatedBlockProps> = ({ className = '' }) => {
    const { theme } = useTheme()
    const createStyle = useStyles('animated-block')
    const [curveType, setCurveType] = useState<CurveType>('easeInOut')

    const animation = useCurveAnimation({
        duration: 1000,
        type: curveType,
        bounceStrength: 3,
        elasticity: 0.3
    })

    const blockClass = createStyle({
        width: '100px',
        height: '100px',
        backgroundColor: theme.colors.primary,
        borderRadius: '8px',
        transition: 'background-color 0.3s'
    })

    const containerClass = createStyle({
        padding: theme.spacing.lg,
        display: 'grid',
        gap: theme.spacing.md
    })

    const controlsClass = createStyle({
        display: 'grid',
        gap: theme.spacing.sm,
        gridTemplateColumns: 'repeat(auto-fill, minmax(80px, 1fr))'
    })

    const buttonClass = createStyle({
        padding: \`\${theme.spacing.sm} \${theme.spacing.md}\`,
        backgroundColor: theme.colors.secondary,
        color: theme.colors.background,
        border: 'none',
        borderRadius: '4px',
        cursor: 'pointer',
        '&:hover': {
            opacity: 0.9
        }
    })

    const curveTypes: CurveType[] = ['linear', 'easeIn', 'easeOut', 'easeInOut', 'bounce', 'elastic']

    return (
        <div className={\`\${containerClass} \${className}\`}>
            <div style={{ position: 'relative', height: '100px', overflow: 'hidden' }}>
                <div 
                className={blockClass}
                style={{ 
                    transform: \`translateX(\${animation.value}px)\`,
                    position: 'absolute'
                }}
                />
            </div>

            <div className={controlsClass}>
                {curveTypes.map(type => (
                <button
                    key={type}
                    className={buttonClass}
                    onClick={() => {
                        setCurveType(type)
                        animation.animate(animation.value === 0 ? 200 : 0)
                    }}
                >
                    {type}
                </button>
                ))}
            </div>

            <div>Progress: {Math.round(animation.progress * 100)}%</div>
        </div>
    )
}

export default AnimatedBlock`;
const AnimatedBlockDemo = () => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_2__.DemoSection, {
  title: "Animated Block",
  description: "An interactive demonstration of the `useCurveAnimation` hook. The buttons in the preview control the animation. The 'Props' tab is empty as this is a self-contained demo component.",
  livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.AnimatedBlock, null),
  initialCode: `<AnimatedBlock />`,
  propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    color: "textSecondary"
  }, "This is a self-contained demo. Use the controls in the 'Live Preview' panel to test different animation curves."),
  documentation: documentation,
  fullSourceCode: fullSourceCode
});

/***/ }),

/***/ "./demo/AspectRatio.tsx":
/*!******************************!*\
  !*** ./demo/AspectRatio.tsx ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AspectRatioDemo: () => (/* binding */ AspectRatioDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _src_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../src/core */ "./src/core/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");




const AspectRatioConfigurator = ({
  ratio,
  setRatio
}) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "1rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
  as: "label",
  size: "sm",
  weight: "medium",
  color: "textSecondary"
}, "Ratio Prop"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.SegmentedControl, {
  value: String(ratio),
  onChange: val => setRatio(Number(val)),
  options: [{
    label: '16 / 9',
    value: String(16 / 9)
  }, {
    label: '4 / 3',
    value: String(4 / 3)
  }, {
    label: '1 / 1',
    value: '1'
  }, {
    label: '9 / 16',
    value: String(9 / 16)
  }]
}));
const documentation = `# AspectRatio

A layout component that wraps its children in a container that maintains a specific aspect ratio. Useful for videos, images, or any embedded content.

## Props

*   \`ratio\` (number, optional): The aspect ratio, calculated as \`width / height\`. Defaults to \`16 / 9\`.
*   All other \`Box\` props are supported.

## Usage

\`\`\`tsx
import { AspectRatio } from './src/components';

<AspectRatio ratio={4 / 3}>
  <img src="path/to/image.jpg" alt="A landscape image" />
</AspectRatio>
\`\`\``;
const sourceCode = `import React from 'react';
import { Box } from '../Box/Box';
import { useStyles } from '../../core';

interface AspectRatioProps extends React.ComponentProps<typeof Box<'div'>> {
    ratio?: number;
}

export const AspectRatio: React.FC<AspectRatioProps> = ({ ratio = 16 / 9, children, className = '', ...props }) => {
    const createStyle = useStyles('aspect-ratio');
    
    const containerClass = createStyle({
        position: 'relative',
        width: '100%',
        '&::before': {
            content: '""',
            display: 'block',
            paddingBottom: \`\${100 / ratio}%\`,
        },
    });

    const contentClass = createStyle({
        position: 'absolute',
        top: 0,
        left: 0,
        width: '100%',
        height: '100%',
        display: 'flex',
        alignItems: 'center',
        justifyContent: 'center',
        '& > *': {
            width: '100%',
            height: '100%',
            objectFit: 'cover',
        }
    });

    return (
        <Box className={\`\${containerClass} \${className}\`} {...props}>
            <div className={contentClass}>
                {children}
            </div>
        </Box>
    );
};`;
const AspectRatioDemo = () => {
  const {
    theme
  } = (0,_src_core__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const [ratio, setRatio] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(16 / 9);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_3__.DemoSection, {
    title: "AspectRatio",
    description: "A container that maintains a fixed aspect ratio.",
    livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.AspectRatio, {
      ratio: ratio,
      style: {
        backgroundColor: theme.colors.background,
        borderRadius: '8px'
      }
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Center, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, null, ratio === 16 / 9 ? '16 / 9' : ratio === 4 / 3 ? '4 / 3' : ratio === 1 ? '1 / 1' : '9 / 16'))),
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(AspectRatioConfigurator, {
      ratio: ratio,
      setRatio: setRatio
    }),
    documentation: documentation,
    fullSourceCode: sourceCode
  });
};

/***/ }),

/***/ "./demo/Audio.tsx":
/*!************************!*\
  !*** ./demo/Audio.tsx ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AudioDemo: () => (/* binding */ AudioDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");


const defaultAudioSrc = null;
const AudioDemo = () => {
  const [audioSrc, setAudioSrc] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(defaultAudioSrc);
  const [fileType, setFileType] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('audio/mpeg');
  const handleFileSelect = file => {
    if (file) {
      // Revoke the old object URL to avoid memory leaks if one exists
      if (audioSrc && audioSrc.startsWith('blob:')) {
        URL.revokeObjectURL(audioSrc);
      }
      setAudioSrc(URL.createObjectURL(file));
      setFileType(file.type);
    } else {
      if (audioSrc && audioSrc.startsWith('blob:')) {
        URL.revokeObjectURL(audioSrc);
      }
      setAudioSrc(null);
    }
  };

  // Clean up the object URL when the component unmounts or src changes
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    return () => {
      if (audioSrc && audioSrc.startsWith('blob:')) {
        URL.revokeObjectURL(audioSrc);
      }
    };
  }, [audioSrc]);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Sofa, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
    gap: "1rem"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    as: "h2",
    size: "1.5rem",
    weight: "600"
  }, "Audio Player with Effects"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, null, "A composable audio player with Web Audio API effects like EQ and a real-time FFT visualizer. Upload your own audio file to try it out."), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.FileUpload, {
    onFileSelect: handleFileSelect
  }), !audioSrc && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    size: "sm",
    color: "textSecondary",
    style: {
      textAlign: 'center',
      padding: '1rem'
    }
  }, "No audio file loaded. Upload one to use the player."), audioSrc && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Audio, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.AudioView, {
    key: audioSrc,
    crossOrigin: "anonymous"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.AudioFile, {
    src: audioSrc,
    type: fileType
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.AudioVisualizer, null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.AudioControls, null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.AudioFilters, null))));
};

/***/ }),

/***/ "./demo/Avatar.tsx":
/*!*************************!*\
  !*** ./demo/Avatar.tsx ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AvatarDemo: () => (/* binding */ AvatarDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");



const AvatarConfigurator = ({
  size,
  setSize,
  fallback,
  setFallback,
  src,
  setSrc,
  groupMax,
  setGroupMax
}) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "1.5rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "0.5rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
  as: "label",
  size: "sm",
  weight: "medium",
  color: "textSecondary"
}, "Avatar: Size (", size, "px)"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Slider, {
  value: size,
  onChange: setSize,
  min: 20,
  max: 80
})), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Input, {
  label: "Avatar: Fallback",
  value: fallback,
  onChange: e => setFallback(e.target.value)
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Input, {
  label: "Avatar: Src (URL)",
  value: src,
  onChange: e => setSrc(e.target.value),
  placeholder: "Enter image URL"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "0.5rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
  as: "label",
  size: "sm",
  weight: "medium",
  color: "textSecondary"
}, "AvatarGroup: Max (", groupMax, ")"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Slider, {
  value: groupMax,
  onChange: setGroupMax,
  min: 1,
  max: 5
})));
const documentation = `# Avatar & AvatarGroup

Components for displaying user profile images or initials.

## Components

*   **Avatar**: Displays a single avatar image with a fallback to initials.
*   **AvatarGroup**: Displays a stacked collection of avatars, with an indicator for overflow.

## Props

### Avatar
*   \`src\` (string, optional): The URL of the image to display.
*   \`alt\` (string, optional): Alternative text for the image.
*   \`fallback\` (string, required): The initials or text to display if the image fails to load.
*   \`size\` (number, optional, default: 40): The width and height of the avatar in pixels.

### AvatarGroup
*   \`children\` (React.ReactNode): A series of \`Avatar\` components.
*   \`max\` (number, optional, default: 3): The maximum number of avatars to display before showing an overflow count.

## Usage

\`\`\`tsx
import { Avatar, AvatarGroup } from './src/components';

// Single Avatar
<Avatar src="path/to/image.jpg" fallback="JD" />

// Avatar Group
<AvatarGroup max={3}>
    <Avatar src="path/to/user1.jpg" fallback="U1" />
    <Avatar src="path/to/user2.jpg" fallback="U2" />
    <Avatar fallback="U3" />
    <Avatar fallback="U4" />
</AvatarGroup>
\`\`\``;
const sourceCode = `import React from 'react';
import { useStyles } from '../../core/hooks/useStyles';
import { useTheme } from '../../core/theme/ThemeProvider';

interface AvatarProps extends React.HTMLAttributes<HTMLDivElement> {
    src?: string;
    alt?: string;
    fallback: string;
    size?: number;
}

export const Avatar: React.FC<AvatarProps> = ({ src, alt, fallback, size = 40, className = '', ...props }) => {
    const { theme } = useTheme();
    const createStyle = useStyles('avatar');

    const containerClass = createStyle({
        width: \`\${size}px\`,
        height: \`\${size}px\`,
        borderRadius: '50%',
        display: 'inline-flex',
        alignItems: 'center',
        justifyContent: 'center',
        overflow: 'hidden',
        backgroundColor: theme.colors.border,
        color: theme.colors.textSecondary,
        fontWeight: '500',
        fontSize: \`\${size * 0.45}px\`,
        userSelect: 'none',
    });

    const imageClass = createStyle({
        width: '100%',
        height: '100%',
        objectFit: 'cover',
    });

    return (
        <div className={\`\${containerClass} \${className}\`} {...props}>
            {src ? (
                <img src={src} alt={alt} className={imageClass} />
            ) : (
                <span>{fallback}</span>
            )}
        </div>
    );
};


interface AvatarGroupProps {
    children: React.ReactNode;
    max?: number;
    className?: string;
}

export const AvatarGroup: React.FC<AvatarGroupProps> = ({ children, max = 3, className = '' }) => {
    const { theme } = useTheme();
    const createStyle = useStyles('avatar-group');
    const avatars = React.Children.toArray(children);
    const visibleAvatars = avatars.slice(0, max);
    const hiddenCount = avatars.length - max;

    const groupClass = createStyle({
        display: 'inline-flex',
        '& > *:not(:first-child)': {
            marginLeft: '-12px', // Overlap avatars
        },
         '& > *': {
            border: \`2px solid \${theme.colors.background}\`,
        }
    });
    
    const excessClass = createStyle({
        backgroundColor: theme.colors.secondary,
        color: theme.colors.text,
    });

    return (
        <div className={\`\${groupClass} \${className}\`}>
            {visibleAvatars}
            {hiddenCount > 0 && <Avatar fallback={\`+\${hiddenCount}\`} className={excessClass} />}
        </div>
    );
};`;
const AvatarDemo = () => {
  const [size, setSize] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(40);
  const [fallback, setFallback] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('ZW');
  const [src, setSrc] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('https://i.pravatar.cc/150?u=a042581f4e29026704d');
  const [groupMax, setGroupMax] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(3);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_2__.DemoSection, {
    title: "Avatar",
    description: "An image element with a fallback for representing a user. Includes an AvatarGroup for stacking.",
    livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
      direction: "row",
      gap: "2rem",
      align: "center"
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Avatar, {
      size: size,
      fallback: fallback,
      src: src
    }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.AvatarGroup, {
      max: groupMax
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Avatar, {
      fallback: "A",
      src: "https://i.pravatar.cc/150?u=a042581f4e29026704d"
    }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Avatar, {
      fallback: "B",
      src: "https://i.pravatar.cc/150?u=a042581f4e29026704e"
    }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Avatar, {
      fallback: "C",
      src: "https://i.pravatar.cc/150?u=a042581f4e29026704f"
    }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Avatar, {
      fallback: "D"
    }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Avatar, {
      fallback: "E"
    }))),
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(AvatarConfigurator, {
      size: size,
      setSize: setSize,
      fallback: fallback,
      setFallback: setFallback,
      src: src,
      setSrc: setSrc,
      groupMax: groupMax,
      setGroupMax: setGroupMax
    }),
    documentation: documentation,
    fullSourceCode: sourceCode
  });
};

/***/ }),

/***/ "./demo/Backdrop.tsx":
/*!***************************!*\
  !*** ./demo/Backdrop.tsx ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BackdropDemo: () => (/* binding */ BackdropDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");



const BackdropConfigurator = ({
  isOpen,
  setIsOpen
}) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "1rem",
  align: "start"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, null, "The `isOpen` prop controls the visibility of the Backdrop. Use the button to toggle it."), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
  onClick: () => setIsOpen(!isOpen)
}, isOpen ? 'Hide' : 'Show', " Backdrop"));
const documentation = `# Backdrop

A semi-transparent, blurred overlay used to disable interaction with the main page. It's typically used in conjunction with components like \`Modal\` or \`Drawer\`.

## Props

*   \`isOpen\` (boolean, required): Controls the visibility of the backdrop.
*   \`onClick\` (function, optional): A callback function to execute when the backdrop is clicked.
*   \`className\` (string, optional): Additional CSS classes for custom styling.

## Usage

\`\`\`tsx
import { Backdrop, Button } from './src/components';
import { useState } from 'react';

const [isOpen, setIsOpen] = useState(false);

<>
    <Button onClick={() => setIsOpen(true)}>Show Backdrop</Button>
    <Backdrop isOpen={isOpen} onClick={() => setIsOpen(false)} />
</>
\`\`\``;
const sourceCode = `import React from 'react';
import { useStyles } from '../../core/hooks/useStyles';
import { useFade } from '../../core/hooks/useAnimation';

interface BackdropProps {
    isOpen: boolean;
    onClick?: () => void;
    className?: string;
}

export const Backdrop: React.FC<BackdropProps> = ({ isOpen, onClick, className = '' }) => {
    const createStyle = useStyles('backdrop');
    const { isRendered, style: fadeStyle } = useFade(isOpen, 200);

    if (!isRendered) return null;

    const backdropClass = createStyle({
        position: 'fixed',
        top: 0,
        left: 0,
        right: 0,
        bottom: 0,
        backgroundColor: 'rgba(0, 0, 0, 0.7)',
        backdropFilter: 'blur(16px)',
        zIndex: 40, // Should be below modals
    });

    return (
        <div 
            className={\`\${backdropClass} \${className}\`} 
            style={fadeStyle}
            onClick={onClick}
        />
    );
};

export default Backdrop;`;
const BackdropDemo = () => {
  const [isOpen, setIsOpen] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_2__.DemoSection, {
    title: "Backdrop",
    description: "A semi-transparent overlay to disable interaction with the main page, often used with Modals or Drawers.",
    livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, null, "The backdrop will cover the entire screen. Use the controls in the 'Props' tab to show it."),
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(BackdropConfigurator, {
      isOpen: isOpen,
      setIsOpen: setIsOpen
    }),
    documentation: documentation,
    fullSourceCode: sourceCode
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Backdrop, {
    isOpen: isOpen,
    onClick: () => setIsOpen(false)
  }));
};

/***/ }),

/***/ "./demo/Badge.tsx":
/*!************************!*\
  !*** ./demo/Badge.tsx ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BadgeDemo: () => (/* binding */ BadgeDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");



const BadgeConfigurator = ({
  variant,
  setVariant,
  colorScheme,
  setColorScheme,
  childrenText,
  setChildrenText
}) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "1.5rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Input, {
  label: "Children Prop (Text)",
  value: childrenText,
  onChange: e => setChildrenText(e.target.value)
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "0.5rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
  as: "label",
  size: "sm",
  weight: "medium",
  color: "textSecondary"
}, "Variant Prop"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.SegmentedControl, {
  value: variant,
  onChange: setVariant,
  options: [{
    label: 'Solid',
    value: 'solid'
  }, {
    label: 'Outline',
    value: 'outline'
  }]
})), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "0.5rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
  as: "label",
  size: "sm",
  weight: "medium",
  color: "textSecondary"
}, "Color Scheme Prop"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.SegmentedControl, {
  value: colorScheme,
  onChange: setColorScheme,
  options: [{
    label: 'Primary',
    value: 'primary'
  }, {
    label: 'Accent',
    value: 'accent'
  }, {
    label: 'Success',
    value: 'success'
  }, {
    label: 'Error',
    value: 'error'
  }]
})));
const documentation = `# Badge

A small component used to highlight status, metadata, or other snippet-sized information.

## Props

*   \`children\` (React.ReactNode): The content to display inside the badge.
*   \`variant\` (enum: 'solid' | 'outline', optional, default: 'solid'): The visual style of the badge.
*   \`colorScheme\` (enum: 'primary' | 'accent' | 'success' | 'error', optional, default: 'primary'): The color theme of the badge.
*   \`className\` (string, optional): Additional CSS classes for custom styling.

## Usage

\`\`\`tsx
import { Badge } from './src/components';

<Badge colorScheme="success">
  Active
</Badge>

<Badge colorScheme="error" variant="outline">
  Offline
</Badge>
\`\`\``;
const sourceCode = `import React from 'react';
import { useStyles } from '../../core/hooks/useStyles';
import { useTheme } from '../../core/theme/ThemeProvider';
import { hexToRgba } from '../../core/color/utils';

interface BadgeProps extends React.HTMLAttributes<HTMLSpanElement> {
    variant?: 'solid' | 'outline';
    colorScheme?: 'primary' | 'accent' | 'success' | 'error';
}

export const Badge: React.FC<BadgeProps> = ({ children, variant = 'solid', colorScheme = 'primary', className = '', ...props }) => {
    const { theme } = useTheme();
    const createStyle = useStyles('badge');

    const colors = {
        primary: theme.colors.primary,
        accent: theme.colors.accent,
        success: '#10b981',
        error: '#ef4444',
    };
    
    const baseColor = colors[colorScheme];

    const variantStyles = {
        solid: {
            backgroundColor: hexToRgba(baseColor, 0.2),
            color: baseColor,
            border: '1px solid transparent',
        },
        outline: {
            backgroundColor: 'transparent',
            color: baseColor,
            border: \`1px solid \${baseColor}\`,
        },
    };

    const badgeClass = createStyle({
        display: 'inline-block',
        padding: '0.125rem 0.625rem',
        fontSize: '0.75rem',
        fontWeight: '500',
        borderRadius: '999px',
        lineHeight: '1.25',
        ...variantStyles[variant],
    });

    return (
        <span className={\`\${badgeClass} \${className}\`} {...props}>
            {children}
        </span>
    );
};`;
const BadgeDemo = () => {
  const [variant, setVariant] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('solid');
  const [colorScheme, setColorScheme] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('primary');
  const [childrenText, setChildrenText] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('New');
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_2__.DemoSection, {
    title: "Badge",
    description: "A small component to highlight status or metadata.",
    livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Badge, {
      variant: variant,
      colorScheme: colorScheme
    }, childrenText),
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(BadgeConfigurator, {
      variant: variant,
      setVariant: setVariant,
      colorScheme: colorScheme,
      setColorScheme: setColorScheme,
      childrenText: childrenText,
      setChildrenText: setChildrenText
    }),
    documentation: documentation,
    fullSourceCode: sourceCode
  });
};

/***/ }),

/***/ "./demo/Box.tsx":
/*!**********************!*\
  !*** ./demo/Box.tsx ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BoxDemo: () => (/* binding */ BoxDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _src_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../src/core */ "./src/core/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");




const BoxConfigurator = ({
  as,
  setAs
}) =>
/*#__PURE__*/
// FIX: The `as` prop can be a component, which is not a valid `value` for an input.
// Conditionally render the string value or an empty string.
react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Input, {
  label: "As Prop",
  value: typeof as === 'string' ? as : '',
  onChange: e => setAs(e.target.value)
});
const documentation = `# Box

A polymorphic layout primitive that renders a \`div\` by default but can be changed to any other HTML element using the \`as\` prop.

## Props

*   \`as\` (React.ElementType, optional): The underlying HTML element to render. Defaults to \`div\`.
*   All other standard HTML attributes for the rendered element are supported.

## Usage

\`\`\`tsx
import { Box } from './src/components';

// Renders a div
<Box style={{ padding: '1rem', background: '#333' }}>
  This is a box.
</Box>

// Renders a section element
<Box as="section">
  This is a section.
</Box>
\`\`\``;
const sourceCode = `import React from 'react';

type BoxProps<C extends React.ElementType> = {
    as?: C;
} & Omit<React.ComponentPropsWithoutRef<C>, 'as'>;

export const Box = <C extends React.ElementType = 'div'>({
    as: Component = 'div' as C,
    ...props
}: BoxProps<C>) => {
    return React.createElement(Component, props);
};`;
const BoxDemo = () => {
  const {
    theme
  } = (0,_src_core__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const [as, setAs] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('div');
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_3__.DemoSection, {
    title: "Box",
    description: "A polymorphic layout primitive, a foundational building block for other components.",
    livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Box, {
      as: as,
      style: {
        padding: '1rem',
        backgroundColor: theme.colors.background,
        border: `1px solid ${theme.colors.border}`,
        borderRadius: '8px'
      }
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, null, "This is a <", typeof as === 'string' ? as : 'Component', "> element.")),
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(BoxConfigurator, {
      as: as,
      setAs: setAs
    }),
    documentation: documentation,
    fullSourceCode: sourceCode
  });
};

/***/ }),

/***/ "./demo/Breadcrumbs.tsx":
/*!******************************!*\
  !*** ./demo/Breadcrumbs.tsx ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BreadcrumbsDemo: () => (/* binding */ BreadcrumbsDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");



const initialItems = [{
  label: 'Home',
  to: '/'
}, {
  label: 'Components',
  to: '#'
}, {
  label: 'Breadcrumbs'
}];
const BreadcrumbsConfigurator = ({
  itemsString,
  setItemsString,
  separator,
  setSeparator,
  error
}) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "1.5rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "0.5rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
  as: "label",
  size: "sm",
  weight: "medium",
  color: "textSecondary"
}, "Items Prop (JSON Array)"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Textarea, {
  value: itemsString,
  onChange: e => setItemsString(e.target.value),
  rows: 6,
  style: {
    fontFamily: 'monospace'
  }
}), error && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Error, null, error)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Input, {
  label: "Separator Prop",
  value: separator,
  onChange: e => setSeparator(e.target.value)
}));
const documentation = `# Breadcrumbs

A navigational aid that shows the user's current location within the application's hierarchy.

## Props

*   \`items\` (array of objects, required): An array of breadcrumb items. Each object should have:
    *   \`label\` (string, required): The text to display.
    *   \`href\` (string, optional): The URL for the link. If omitted, the item will be rendered as plain text.
*   \`separator\` (React.ReactNode, optional, default: '/'): The character or component to display between items.
*   \`className\` (string, optional): Additional CSS classes for the container.

## Usage

\`\`\`tsx
import { Breadcrumbs } from './src/components';

const breadcrumbItems = [
    { label: 'Home', href: '/' },
    { label: 'Components', href: '/components' },
    { label: 'Breadcrumbs' },
];

<Breadcrumbs items={breadcrumbItems} />
\`\`\``;
const sourceCode = `import React from 'react';
import { Link } from '../Link/Link';
import { Text } from '../Text/Text';
import { useTheme } from '../../core/theme/ThemeProvider';
import { useStyles } from '../../core/hooks/useStyles';

interface BreadcrumbItem {
    label: string;
    href?: string;
    to?: string;
}

interface BreadcrumbsProps {
    items: BreadcrumbItem[];
    separator?: React.ReactNode;
    className?: string;
}

export const Breadcrumbs: React.FC<BreadcrumbsProps> = ({ items, separator = '/', className = '' }) => {
    const { theme } = useTheme();
    const createStyle = useStyles('breadcrumbs');

    const navClass = createStyle({
        display: 'flex',
        alignItems: 'center',
        gap: theme.spacing.sm,
    });
    
    const separatorClass = createStyle({
        color: theme.colors.textSecondary,
    });

    return (
        <nav aria-label="breadcrumb" className={\`\${navClass} \${className}\`}>
            {items.map((item, index) => (
                <React.Fragment key={index}>
                    {item.href || item.to ? (
                        <Link href={item.href} to={item.to}>{item.label}</Link>
                    ) : (
                        <Text as="span" color={theme.colors.textSecondary}>{item.label}</Text>
                    )}
                    {index < items.length - 1 && (
                        <span className={separatorClass} aria-hidden="true">{separator}</span>
                    )}
                </React.Fragment>
            ))}
        </nav>
    );
};`;
const BreadcrumbsDemo = () => {
  const [itemsString, setItemsString] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(JSON.stringify(initialItems, null, 2));
  const [separator, setSeparator] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('>');
  const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');
  let items = initialItems;
  try {
    const parsed = JSON.parse(itemsString);
    if (Array.isArray(parsed)) {
      items = parsed;
      if (error) setError('');
    } else {
      if (!error) setError('Items must be a valid JSON array.');
    }
  } catch (e) {
    if (!error) setError('Invalid JSON format.');
  }
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_2__.DemoSection, {
    title: "Breadcrumbs",
    description: "A navigational aid that shows the user's location within the app. Supports react-router `to` prop.",
    livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Breadcrumbs, {
      items: items,
      separator: separator
    }),
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(BreadcrumbsConfigurator, {
      itemsString: itemsString,
      setItemsString: setItemsString,
      separator: separator,
      setSeparator: setSeparator,
      error: error
    }),
    documentation: documentation,
    fullSourceCode: sourceCode
  });
};

/***/ }),

/***/ "./demo/Button.tsx":
/*!*************************!*\
  !*** ./demo/Button.tsx ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ButtonDemo: () => (/* binding */ ButtonDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");
/* harmony import */ var _src_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../src/core */ "./src/core/index.ts");




const ButtonConfigurator = ({
  variant,
  setVariant,
  childrenText,
  setChildrenText,
  isDisabled,
  setIsDisabled
}) => {
  const {
    theme
  } = (0,_src_core__WEBPACK_IMPORTED_MODULE_3__.useTheme)();
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
    gap: "1.5rem"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
    gap: "4px"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    as: "label",
    size: theme.typography.fontSizes.sm,
    weight: theme.typography.fontWeights.medium,
    color: theme.colors.textSecondary
  }, "Variant Prop"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.SegmentedControl, {
    options: [{
      label: 'Primary',
      value: 'primary'
    }, {
      label: 'Secondary',
      value: 'secondary'
    }, {
      label: 'Accent',
      value: 'accent'
    }],
    value: variant,
    onChange: val => setVariant(val)
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Input, {
    label: "Children Prop (Text)",
    value: childrenText,
    onChange: e => setChildrenText(e.target.value)
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Checkbox, {
    label: "Disabled Prop",
    checked: isDisabled,
    onChange: e => setIsDisabled(e.target.checked)
  }));
};
const documentation = `# Button

A standard, clickable button component with multiple variants and states. It features an enhanced, high-contrast focus state for improved keyboard navigation and accessibility.

## Props

*   \`variant\` (enum: 'primary' | 'secondary' | 'accent', optional, default: 'primary'): The visual style of the button.
*   \`className\` (string, optional): Additional CSS classes for custom styling.
*   All other standard HTML \`<button>\` attributes are supported (e.g., \`onClick\`, \`disabled\`).

## Usage

\`\`\`tsx
import { Button } from './src/components';

// Primary Button
<Button variant="primary" onClick={() => alert('Clicked!')}>
  Submit
</Button>
\`\`\``;
const fullSourceCode = `import React from 'react'
import { useStyles } from '../core/hooks/useStyles';
import { useTheme } from '../core/theme/ThemeProvider';

export interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {
  variant?: 'primary' | 'secondary' | 'accent'
}

export const Button: React.FC<ButtonProps> = ({ variant = 'primary', className = '', children, ...rest }) => {
  const { theme, mode } = useTheme();
  const createStyle = useStyles('button');
  const isDark = mode !== 'light';

  const base = createStyle({
    padding: '0.5rem 1rem',
    borderRadius: '0.375rem',
    fontWeight: '500',
    display: 'inline-grid',
    gridAutoFlow: 'column',
    alignItems: 'center',
    justifyContent: 'center',
    gap: '0.5rem',
    transition: 'all 0.2s',
    border: '1px solid transparent',
    '@supports (backdrop-filter: none) or (-webkit-backdrop-filter: none)': {
        backdropFilter: 'blur(8px)',
    },
    '&:disabled': {
        cursor: 'not-allowed',
        opacity: 0.6
    },
    // Remove default outline for all focus states to prevent interference
    '&:focus': {
        outline: 'none',
    }
  });

  const variants = {
    primary: createStyle({
      backgroundColor: theme.colors.primary,
      color: isDark ? '#172554' : '#fff', // Use dark text on light blue, white text on dark blue
      '&:hover:not(:disabled)': {
        filter: isDark ? 'brightness(1.2)' : 'brightness(0.9)',
      },
       '&:focus-visible': {
        boxShadow: \`0 0 0 2px \${theme.colors.background}, 0 0 0 4px \${theme.colors.primary}\`
      },
    }),
    secondary: createStyle({
      backgroundColor: theme.colors.border,
      color: theme.colors.text,
      '&:hover:not(:disabled)': {
        backgroundColor: isDark ? theme.colors.secondary : '#d1d5db' // darker gray
      },
      '&:focus-visible': {
        boxShadow: \`0 0 0 2px \${theme.colors.background}, 0 0 0 4px \${theme.colors.secondary}\`
      },
    }),
    accent: createStyle({
      backgroundColor: theme.colors.accent,
      color: '#fff',
      '&:hover:not(:disabled)': {
        filter: 'brightness(0.9)',
      },
      '&:focus-visible': {
        boxShadow: \`0 0 0 2px \${theme.colors.background}, 0 0 0 4px \${theme.colors.accent}\`
      },
    })
  };

  return (
    <button className={\`\${base} \${variants[variant]} \${className}\`} {...rest}>
      {children}
    </button>
  )
}

export default Button`;
const ButtonDemo = () => {
  const [variant, setVariant] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('primary');
  const [childrenText, setChildrenText] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('Click Me');
  const [isDisabled, setIsDisabled] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const code = `<Button variant="${variant}" disabled="${isDisabled}">${childrenText}</Button>`;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_2__.DemoSection, {
    title: "Button",
    description: "A standard button component with primary, secondary, accent, and disabled states.",
    initialCode: code,
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ButtonConfigurator, {
      variant: variant,
      setVariant: setVariant,
      childrenText: childrenText,
      setChildrenText: setChildrenText,
      isDisabled: isDisabled,
      setIsDisabled: setIsDisabled
    }),
    documentation: documentation,
    fullSourceCode: fullSourceCode
  });
};

/***/ }),

/***/ "./demo/ButtonGroup.tsx":
/*!******************************!*\
  !*** ./demo/ButtonGroup.tsx ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ButtonGroupDemo: () => (/* binding */ ButtonGroupDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");



const ButtonGroupConfigurator = ({
  isAttached,
  setIsAttached
}) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Checkbox, {
  label: "Is Attached Prop",
  checked: isAttached,
  onChange: e => setIsAttached(e.target.checked)
});
const documentation = `# ButtonGroup

A layout component to group related buttons together.

## Props

*   \`isAttached\` (boolean, optional): If true, the buttons will be visually attached with no space or rounded corners between them.
*   All \`Stack\` props are supported.

## Usage

\`\`\`tsx
import { ButtonGroup, Button } from './src/components';

// Spaced group
<ButtonGroup>
  <Button>Save</Button>
  <Button>Cancel</Button>
</ButtonGroup>

// Attached group
<ButtonGroup isAttached>
  <Button>Bold</Button>
  <Button>Italic</Button>
  <Button>Underline</Button>
</ButtonGroup>
\`\`\``;
const sourceCode = `import React from 'react';
import { Stack } from '../Stack/Stack';
import { useStyles } from '../../core';

interface ButtonGroupProps extends React.ComponentProps<typeof Stack> {
    isAttached?: boolean;
}

export const ButtonGroup: React.FC<ButtonGroupProps> = ({ isAttached, className, children, ...props }) => {
    const createStyle = useStyles('button-group');
    
    const attachedClass = isAttached ? createStyle({
        '& > button:not(:first-child)': {
            borderTopLeftRadius: 0,
            borderBottomLeftRadius: 0,
        },
        '& > button:not(:last-child)': {
            borderTopRightRadius: 0,
            borderBottomRightRadius: 0,
            borderRight: 0,
        },
    }) : '';

    return (
        <Stack direction="row" gap={isAttached ? '0' : '0.5rem'} className={\`\${attachedClass} \${className}\`} {...props}>
            {children}
        </Stack>
    );
};`;
const ButtonGroupDemo = () => {
  const [isAttached, setIsAttached] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_2__.DemoSection, {
    title: "Button Group",
    description: "A component to group related buttons together, either spaced or attached.",
    livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.ButtonGroup, {
      isAttached: isAttached
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
      variant: "secondary"
    }, "Copy"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
      variant: "secondary"
    }, "Paste"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
      variant: "secondary"
    }, "Cut")),
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ButtonGroupConfigurator, {
      isAttached: isAttached,
      setIsAttached: setIsAttached
    }),
    documentation: documentation,
    fullSourceCode: sourceCode
  });
};

/***/ }),

/***/ "./demo/Card.tsx":
/*!***********************!*\
  !*** ./demo/Card.tsx ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CardDemo: () => (/* binding */ CardDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _src_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../src/core */ "./src/core/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");




const CardConfigurator = ({
  title,
  setTitle,
  childrenText,
  setChildrenText,
  variant,
  setVariant
}) => {
  const {
    theme
  } = (0,_src_core__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
    gap: "1.5rem"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Input, {
    label: "Title Prop",
    value: title,
    onChange: e => setTitle(e.target.value),
    placeholder: "Enter card title"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
    gap: "4px"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("label", {
    htmlFor: "card-children-input"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    as: "span",
    size: theme.typography.fontSizes.sm,
    weight: theme.typography.fontWeights.medium,
    color: theme.colors.textSecondary
  }, "Children Prop (Text)")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Textarea, {
    id: "card-children-input",
    value: childrenText,
    onChange: e => setChildrenText(e.target.value),
    rows: 3
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
    gap: "4px"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    as: "span",
    size: theme.typography.fontSizes.sm,
    weight: theme.typography.fontWeights.medium,
    color: theme.colors.textSecondary
  }, "Variant Prop"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.SegmentedControl, {
    options: [{
      label: 'Default',
      value: 'default'
    }, {
      label: 'Glass',
      value: 'glass'
    }],
    value: variant,
    onChange: val => setVariant(val)
  })));
};
const documentation = `# Card

A versatile container component that displays content in a distinct bordered box. It supports a default style and a \`glass\` variant for a blurred, transparent effect.

## Props

*   \`title\` (string, optional): The title to display at the top of the card.
*   \`children\` (React.ReactNode): The content to be rendered inside the card.
*   \`className\` (string, optional): Additional CSS class for custom styling.
*   \`variant\` (enum: 'default' | 'glass', optional, default: 'default'): The visual style of the card. 'glass' applies a blur effect.
*   \`onClick\` (function, optional): A callback function to execute when the card is clicked.

## Usage

\`\`\`tsx
<Card variant="glass" title="Glass Card">
  <p>Content with a blurred background effect.</p>
</Card>
\`\`\``;
const fullSourceCode = `import React from 'react'
import { useStyles } from '../../core/hooks/useStyles'
import { useTheme } from '../../core/theme/ThemeProvider'

export interface CardProps {
    title?: string
    children: React.ReactNode
    className?: string
    variant?: 'default' | 'glass'
    onClick?: (event: React.MouseEvent<HTMLDivElement> | React.KeyboardEvent<HTMLDivElement>) => void
    style?: React.CSSProperties
}

export const Card: React.FC<CardProps> = ({
    title,
    children,
    className = '',
    variant = 'default',
    onClick,
    style
}) => {
    const { theme } = useTheme()
    const createStyle = useStyles('card')

    const cardClass = createStyle({
        padding: theme.spacing.md,
        borderRadius: '6px',
        backgroundColor: theme.colors.backgroundSecondary,
        border: \`1px solid \${theme.colors.border}\`,
        height: '100%',
        transition: 'all 0.3s ease',
        cursor: onClick ? 'pointer' : 'default',
        '@supports (backdrop-filter: none) or (-webkit-backdrop-filter: none)': {
            backdropFilter: 'blur(16px)',
        },
        '&:hover': {
            transform: 'translateY(-4px)',
            borderColor: 'rgba(255, 255, 255, 0.25)',
            boxShadow: \`0 8px 24px rgba(0, 0, 0, 0.5)\`,
        },
        '&:focus-visible': onClick ? {
            outline: \`2px solid \${theme.colors.primary}\`,
            outlineOffset: '2px',
        } : {},
    })

    const titleClass = title && createStyle({
        fontSize: theme.typography.fontSizes.base,
        fontWeight: String(theme.typography.fontWeights.semibold),
        marginBottom: theme.spacing.md,
        color: theme.colors.text
    })

    const handleKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {
        if (onClick && (event.key === 'Enter' || event.key === ' ')) {
            event.preventDefault();
            onClick(event);
        }
    };

    const interactiveProps = onClick ? {
        role: 'button',
        tabIndex: 0,
        onKeyDown: handleKeyDown,
    } : {};

    return (
        <div 
            className={\`\${cardClass} \${className}\`} 
            style={style}
            onClick={onClick ? (e) => onClick(e) : undefined}
            {...interactiveProps}
        >
            {title && <h3 className={titleClass}>{title}</h3>}
            {children}
        </div>
    )
}`;
const CardDemo = () => {
  const [title, setTitle] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('Configurable Card');
  const [childrenText, setChildrenText] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('This is the content of the card. You can edit it using the controls in the Props panel.');
  const [variant, setVariant] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('default');
  const code = `<Card title="${title}" variant="${variant}">
    <Text>${childrenText}</Text>
</Card>`;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_3__.DemoSection, {
    title: "Card",
    description: "A flexible content container. Use the controls to configure the card in real-time.",
    initialCode: code,
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(CardConfigurator, {
      title: title,
      setTitle: setTitle,
      childrenText: childrenText,
      setChildrenText: setChildrenText,
      variant: variant,
      setVariant: setVariant
    }),
    documentation: documentation,
    fullSourceCode: fullSourceCode
  });
};

/***/ }),

/***/ "./demo/Center.tsx":
/*!*************************!*\
  !*** ./demo/Center.tsx ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CenterDemo: () => (/* binding */ CenterDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _src_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../src/core */ "./src/core/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");




const CenterConfigurator = ({
  as,
  setAs
}) =>
/*#__PURE__*/
// FIX: The `as` prop can be a component, which is not a valid `value` for an input.
// Conditionally render the string value or an empty string.
react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Input, {
  label: "As Prop",
  value: typeof as === 'string' ? as : '',
  onChange: e => setAs(e.target.value)
});
const documentation = `# Center

A layout component that centers its children both horizontally and vertically. It is built on top of the \`Flex\` component.

## Props

*   All \`Flex\` props are supported.

## Usage

\`\`\`tsx
import { Center } from './src/components';

<Center style={{ height: '100px', background: '#333' }}>
  <p>Centered Content</p>
</Center>
\`\`\``;
const sourceCode = `import React from 'react';
import { Flex } from '../Flex/Flex';

type CenterProps<C extends React.ElementType> = React.ComponentProps<typeof Flex<C>>;

export const Center = <C extends React.ElementType = 'div'>(props: CenterProps<C>) => {
    return (
        <Flex
            align="center"
            justify="center"
            {...props}
        />
    );
};`;
const CenterDemo = () => {
  const {
    theme
  } = (0,_src_core__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const [as, setAs] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('div');
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_3__.DemoSection, {
    title: "Center",
    description: "A layout component to center its children both horizontally and vertically.",
    livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Center, {
      as: as,
      style: {
        height: '100px',
        width: '100%',
        backgroundColor: theme.colors.background,
        borderRadius: '8px'
      }
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Card, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, null, "Perfectly Centered"))),
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(CenterConfigurator, {
      as: as,
      setAs: setAs
    }),
    documentation: documentation,
    fullSourceCode: sourceCode
  });
};

/***/ }),

/***/ "./demo/Charts.tsx":
/*!*************************!*\
  !*** ./demo/Charts.tsx ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ChartsDemo: () => (/* binding */ ChartsDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _src_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../src/core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");



const timeSeriesData = Array.from({
  length: 50
}, (_, i) => ({
  x: i,
  y1: Math.sin(i / 5) * 50 + 50,
  y2: Math.cos(i / 5) * 25 + 30
}));
const barData = [{
  x: 1,
  y: 50
}, {
  x: 2,
  y: 90
}, {
  x: 3,
  y: 30
}, {
  x: 4,
  y: 70
}, {
  x: 5,
  y: 45
}];
const heatmapData = {
  data: [[10, 50, 20], [80, 10, 90], [40, 70, 30]],
  rowLabels: ['Alpha', 'Beta', 'Gamma'],
  colLabels: ['X', 'Y', 'Z']
};
const radarData = [{
  series: 'Product A',
  color: '#60a5fa',
  values: [{
    axis: 'Usability',
    value: 8
  }, {
    axis: 'Performance',
    value: 9
  }, {
    axis: 'Features',
    value: 6
  }, {
    axis: 'Support',
    value: 7
  }, {
    axis: 'Price',
    value: 5
  }]
}, {
  series: 'Product B',
  color: '#f59e0b',
  values: [{
    axis: 'Usability',
    value: 6
  }, {
    axis: 'Performance',
    value: 7
  }, {
    axis: 'Features',
    value: 9
  }, {
    axis: 'Support',
    value: 8
  }, {
    axis: 'Price',
    value: 8
  }]
}];
const radialData = [{
  value: 45,
  color: '#60a5fa',
  label: 'Desktop'
}, {
  value: 35,
  color: '#f59e0b',
  label: 'Mobile'
}, {
  value: 20,
  color: '#4b5563',
  label: 'Tablet'
}];
const ChartsDemo = () => {
  const {
    theme
  } = (0,_src_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Sofa, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
    gap: "2rem"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    as: "h2",
    size: "1.5rem",
    weight: "600"
  }, "Line & Area Chart"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Charts, {
    dataset: timeSeriesData,
    xAxis: [{
      dataKey: 'x'
    }],
    series: [{
      type: 'area',
      dataKey: 'y2',
      color: theme.colors.accent
    }, {
      type: 'line',
      dataKey: 'y2',
      color: theme.colors.accent
    }, {
      type: 'area',
      dataKey: 'y1'
    }, {
      type: 'line',
      dataKey: 'y1'
    }],
    className: "h-[300px]",
    style: {
      height: '300px'
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.ChartAxis, {
    dimension: "x"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.ChartAxis, {
    dimension: "y"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.ChartTooltip, {
    series: [{
      key: 'y1',
      label: 'Series 1',
      color: theme.colors.primary,
      accessor: d => d.y1
    }, {
      key: 'y2',
      label: 'Series 2',
      color: theme.colors.accent,
      accessor: d => d.y2
    }]
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    as: "h2",
    size: "1.5rem",
    weight: "600"
  }, "Bar Chart"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Charts, {
    dataset: barData,
    xAxis: [{
      dataKey: 'x'
    }],
    series: [{
      type: 'bar',
      dataKey: 'y'
    }],
    className: "h-[300px]",
    style: {
      height: '300px'
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.ChartAxis, {
    dimension: "x",
    numberOfTicks: barData.length
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.ChartAxis, {
    dimension: "y"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    as: "h2",
    size: "1.5rem",
    weight: "600"
  }, "Specialty Charts"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: "grid grid-cols-1 md:grid-cols-3 gap-8 items-center"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    className: "text-center mb-4"
  }, "Radar Chart"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.ChartRadar, {
    data: radarData,
    size: 250
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    className: "text-center mb-4"
  }, "Radial Chart"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.ChartRadial, {
    data: radialData,
    size: 250
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    className: "text-center mb-4"
  }, "Heatmap"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.ChartHeatmap, heatmapData)))));
};

/***/ }),

/***/ "./demo/Checkbox.tsx":
/*!***************************!*\
  !*** ./demo/Checkbox.tsx ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CheckboxDemo: () => (/* binding */ CheckboxDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");



const CheckboxConfigurator = ({
  label,
  setLabel,
  isChecked,
  setIsChecked,
  isDisabled,
  setIsDisabled
}) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "1.5rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Input, {
  label: "Label Prop",
  value: label,
  onChange: e => setLabel(e.target.value)
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Checkbox, {
  label: "Checked Prop",
  checked: isChecked,
  onChange: e => setIsChecked(e.target.checked)
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Checkbox, {
  label: "Disabled Prop",
  checked: isDisabled,
  onChange: e => setIsDisabled(e.target.checked)
}));
const documentation = `# Checkbox

A standard checkbox component for capturing boolean (true/false) input from a user.

## Props

*   \`label\` (string, optional): The text label displayed next to the checkbox.
*   \`id\` (string, optional): A unique identifier, necessary for associating the label with the input.
*   \`checked\` (boolean): The current state of the checkbox.
*   \`disabled\` (boolean, optional): If true, the checkbox will be un-interactive.
*   All other standard HTML \`<input type="checkbox">\` attributes are supported (e.g., \`onChange\`).

## Usage

\`\`\`tsx
import { Checkbox } from './src/components';
import { useState } from 'react';

const [isChecked, setIsChecked] = useState(false);

<Checkbox
  label="Accept terms and conditions"
  checked={isChecked}
  onChange={(e) => setIsChecked(e.target.checked)}
/>
\`\`\``;
const fullSourceCode = `import React from 'react';
import { useStyles } from '../../core/hooks/useStyles';
import { useTheme } from '../../core/theme/ThemeProvider';

interface CheckboxProps extends React.InputHTMLAttributes<HTMLInputElement> {
    label?: string;
}

export const Checkbox: React.FC<CheckboxProps> = ({ label, id, className = '', checked, disabled, ...props }) => {
    const { theme } = useTheme();
    const createStyle = useStyles('checkbox');
    
    const containerClass = createStyle({
        display: 'grid',
        gridTemplateColumns: 'auto 1fr',
        gap: theme.spacing.sm,
        alignItems: 'center',
        cursor: disabled ? 'not-allowed' : 'pointer',
        userSelect: 'none',
        opacity: disabled ? 0.6 : 1,
    });
    
    const customCheckboxClass = createStyle({
        width: '18px',
        height: '18px',
        border: '2px solid',
        borderRadius: '4px',
        display: 'grid',
        placeContent: 'center',
        transition: 'all 0.2s',
        backgroundColor: checked ? theme.colors.primary : 'transparent',
        borderColor: checked ? theme.colors.primary : theme.colors.border,
    });

    const inputClass = createStyle({
        position: 'absolute',
        opacity: 0,
        height: 0,
        width: 0,
        '&:focus-visible + div': {
            boxShadow: \`0 0 0 2px \${theme.colors.background}, 0 0 0 4px \${theme.colors.primary}\`,
        }
    });

    return (
        <label htmlFor={id} className={\`\${containerClass} \${className}\`}>
            <input 
                type="checkbox" 
                id={id} 
                checked={checked} 
                disabled={disabled}
                {...props} 
                className={inputClass}
            />
            <div className={customCheckboxClass}>
                 {checked && <svg width="12" height="12" viewBox="0 0 24 24" fill="none" stroke={theme.colors.background} strokeWidth="3" strokeLinecap="round" strokeLinejoin="round"><polyline points="20 6 9 17 4 12"></polyline></svg>}
            </div>
            {label && <span style={{color: theme.colors.text}}>{label}</span>}
        </label>
    );
};`;
const CheckboxDemo = () => {
  const [label, setLabel] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('Accept terms');
  const [isChecked, setIsChecked] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);
  const [isDisabled, setIsDisabled] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const code = `<Checkbox label="${label}" checked="${isChecked}" disabled="${isDisabled}" />`;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_2__.DemoSection, {
    title: "Checkbox",
    description: "A standard checkbox component for capturing boolean input.",
    initialCode: code,
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(CheckboxConfigurator, {
      label: label,
      setLabel: setLabel,
      isChecked: isChecked,
      setIsChecked: setIsChecked,
      isDisabled: isDisabled,
      setIsDisabled: setIsDisabled
    }),
    documentation: documentation,
    fullSourceCode: fullSourceCode
  });
};

/***/ }),

/***/ "./demo/Code.tsx":
/*!***********************!*\
  !*** ./demo/Code.tsx ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CodeDemo: () => (/* binding */ CodeDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");



const CodeConfigurator = ({
  childrenText,
  setChildrenText
}) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Input, {
  label: "Children Prop (Text)",
  value: childrenText,
  onChange: e => setChildrenText(e.target.value)
});
const documentation = `# Code

A component for displaying inline code snippets with appropriate styling.

## Props

*   All standard \`<code>\` attributes are supported.

## Usage

\`\`\`tsx
import { Code, Text } from './src/components';

<Text>
  Run the command <Code>npm install</Code> to get started.
</Text>
\`\`\``;
const sourceCode = `import React from 'react';
import { useStyles, useTheme } from '../../core';

export const Code: React.FC<React.HTMLAttributes<HTMLElement>> = ({ children, className = '', ...props }) => {
    const { theme } = useTheme();
    const createStyle = useStyles('code');

    const codeClass = createStyle({
        fontFamily: 'monospace',
        fontSize: '0.875em',
        backgroundColor: 'rgba(255, 255, 255, 0.1)',
        padding: '0.125em 0.3em',
        borderRadius: '4px',
        color: theme.colors.text,
    });

    return (
        <code className={\`\${codeClass} \${className}\`} {...props}>
            {children}
        </code>
    );
};`;
const CodeDemo = () => {
  const [childrenText, setChildrenText] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('useStyles()');
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_2__.DemoSection, {
    title: "Code",
    description: "A component for displaying inline code snippets.",
    livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, null, "The ", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Code, null, childrenText), " hook is a powerful tool."),
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(CodeConfigurator, {
      childrenText: childrenText,
      setChildrenText: setChildrenText
    }),
    documentation: documentation,
    fullSourceCode: sourceCode
  });
};

/***/ }),

/***/ "./demo/ColorPicker.tsx":
/*!******************************!*\
  !*** ./demo/ColorPicker.tsx ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ColorPickerDemo: () => (/* binding */ ColorPickerDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");



const ColorPickerConfigurator = ({
  color,
  setColor
}) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Input, {
  label: "Value Prop (hex color)",
  value: color,
  onChange: e => setColor(e.target.value)
});
const documentation = `# Color Picker

An interactive component for selecting a color. It displays a color swatch, RGB sliders, and a hex input field.

## Props

*   \`value\` (string, required): The currently selected color as a hex string (e.g., \`#RRGGBB\`).
*   \`onChange\` (function, required): A callback function triggered when the color value changes. It receives the new hex color string as an argument.
*   \`className\` (string, optional): Additional CSS classes for the container.

## Usage

\`\`\`tsx
import { ColorPicker } from './src/components';
import { useState } from 'react';

const [color, setColor] = useState('#60a5fa');

<ColorPicker value={color} onChange={setColor} />
\`\`\``;
const fullSourceCode = `import React from 'react';
import { useStyles } from '../../core/hooks/useStyles';
import { useTheme } from '../../core/theme/ThemeProvider';
import { Slider } from '../Slider/Slider';
import { Stack } from '../Stack/Stack';
import { Text } from '../Text/Text';
import { parseColor } from '../../core/color/utils';

interface ColorPickerProps {
    value: string; // hex color string e.g. #RRGGBB
    onChange: (color: string) => void;
    className?: string;
}

export const ColorPicker: React.FC<ColorPickerProps> = ({ value, onChange, className = '' }) => {
    const { theme } = useTheme();
    const createStyle = useStyles('color-picker');
    const [r, g, b] = parseColor(value);

    const handleColorChange = (channel: 'r' | 'g' | 'b', newValue: number) => {
        const newColor = [r, g, b];
        if (channel === 'r') newColor[0] = newValue;
        if (channel === 'g') newColor[1] = newValue;
        if (channel === 'b') newColor[2] = newValue;

        const toHex = (c: number) => \`0\${c.toString(16)}\`.slice(-2);
        onChange(\`#\${toHex(newColor[0])}\${toHex(newColor[1])}\${toHex(newColor[2])}\`);
    };

    const containerClass = createStyle({
        padding: theme.spacing.md,
        backgroundColor: theme.colors.backgroundSecondary,
        borderRadius: '8px',
        border: \`1px solid \${theme.colors.border}\`,
        width: '250px',
        '@supports (backdrop-filter: none) or (-webkit-backdrop-filter: none)': {
            backdropFilter: 'blur(16px)',
        },
    });

    const swatchClass = createStyle({
        width: '100%',
        height: '60px',
        backgroundColor: value,
        borderRadius: '4px',
        border: \`1px solid \${theme.colors.border}\`,
        marginBottom: theme.spacing.md,
    });
    
    const hexInputClass = createStyle({
        width: '100%',
        fontFamily: 'monospace',
        textAlign: 'center',
        padding: theme.spacing.sm,
        backgroundColor: theme.colors.background,
        border: \`1px solid \${theme.colors.border}\`,
        color: theme.colors.text,
        borderRadius: '4px'
    });

    return (
        <div className={\`\${containerClass} \${className}\`}>
            <div className={swatchClass} />
            <Stack direction="column" gap={theme.spacing.sm}>
                <Stack direction="row" align="center" gap={theme.spacing.sm} style={{ gridTemplateColumns: 'auto 1fr' }}>
                    <Text as="span" size="14px" color="#ef4444" style={{width: '15px'}}>R</Text>
                    <Slider value={r} onChange={(newR) => handleColorChange('r', newR)} min={0} max={255} color="#ef4444" />
                </Stack>
                <Stack direction="row" align="center" gap={theme.spacing.sm} style={{ gridTemplateColumns: 'auto 1fr' }}>
                    <Text as="span" size="14px" color="#10b981" style={{width: '15px'}}>G</Text>
                    <Slider value={g} onChange={(newG) => handleColorChange('g', newG)} min={0} max={255} color="#10b981" />
                </Stack>
                <Stack direction="row" align="center" gap={theme.spacing.sm} style={{ gridTemplateColumns: 'auto 1fr' }}>
                    <Text as="span" size="14px" color="#3b82f6" style={{width: '15px'}}>B</Text>
                    <Slider value={b} onChange={(newB) => handleColorChange('b', newB)} min={0} max={255} color="#3b82f6" />
                </Stack>
                <input 
                    className={hexInputClass} 
                    type="text" 
                    value={value} 
                    onChange={(e) => onChange(e.target.value)}
                />
            </Stack>
        </div>
    );
};

export default ColorPicker;`;
const ColorPickerDemo = () => {
  const [color, setColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('#60a5fa');
  const code = `<ColorPicker value="${color}" />`;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_2__.DemoSection, {
    title: "Color Picker",
    description: "An interactive component for selecting a color using RGB sliders.",
    livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.ColorPicker, {
      value: color,
      onChange: setColor
    }),
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ColorPickerConfigurator, {
      color: color,
      setColor: setColor
    }),
    documentation: documentation,
    fullSourceCode: fullSourceCode
  });
};

/***/ }),

/***/ "./demo/Combobox.tsx":
/*!***************************!*\
  !*** ./demo/Combobox.tsx ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ComboboxDemo: () => (/* binding */ ComboboxDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");



const frameworks = [{
  value: 'react',
  label: 'React'
}, {
  value: 'vue',
  label: 'Vue.js'
}, {
  value: 'angular',
  label: 'Angular'
}, {
  value: 'svelte',
  label: 'Svelte'
}, {
  value: 'solid',
  label: 'SolidJS'
}];
const ComboboxConfigurator = ({
  placeholder,
  setPlaceholder,
  value
}) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "1.5rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Input, {
  label: "Placeholder Prop",
  value: placeholder,
  onChange: e => setPlaceholder(e.target.value)
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, null, "Selected value: ", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("code", {
  style: {
    background: 'rgba(255,255,255,0.1)',
    padding: '2px 4px',
    borderRadius: '4px'
  }
}, value || 'None')));
const documentation = `# Combobox

An input field that combines a text input with a dropdown list. It allows users to filter a list of options and select one.

## Props

*   \`items\` (array of objects, required): The list of options to display. Each object must have \`value\` and \`label\` properties.
*   \`value\` (string, required): The \`value\` of the currently selected item.
*   \`onChange\` (function, required): A callback function triggered when an item is selected.
*   \`placeholder\` (string, optional): Placeholder text for the input field.

## Usage

\`\`\`tsx
import { Combobox } from './src/components';
import { useState } from 'react';

const frameworks = [
  { value: 'react', label: 'React' },
];

const [selectedValue, setSelectedValue] = useState('react');

<Combobox
  items={frameworks}
  value={selectedValue}
  onChange={setSelectedValue}
  placeholder="Select a framework..."
/>
\`\`\``;
const fullSourceCode = `import React, { useState, useMemo, useRef } from 'react';
import { Popper, PopperTrigger, PopperContent } from '../Popper/Popper';
import { TextInput } from '../TextInput/TextInput';
import { useStyles } from '../../core/hooks/useStyles';
import { useTheme } from '../../core/theme/ThemeProvider';
import { useClickOutside } from '../../core/hooks/useInteractions';

interface ComboboxItem {
    value: string;
    label: string;
}

interface ComboboxProps {
    items: ComboboxItem[];
    value: string;
    onChange: (value: string) => void;
    placeholder?: string;
}

export const Combobox: React.FC<ComboboxProps> = ({ items, value, onChange, placeholder }) => {
    const { theme } = useTheme();
    const createStyle = useStyles('combobox');
    const [isOpen, setIsOpen] = useState(false);
    const [inputValue, setInputValue] = useState('');
    const [activeIndex, setActiveIndex] = useState(-1);
    const comboboxRef = useClickOutside<HTMLDivElement>(() => setIsOpen(false));

    const selectedItem = useMemo(() => items.find(item => item.value === value), [items, value]);

    React.useEffect(() => {
        setInputValue(selectedItem?.label || '');
    }, [selectedItem]);

    const filteredItems = useMemo(() => {
        if (!inputValue) return items;
        return items.filter(item => item.label.toLowerCase().includes(inputValue.toLowerCase()));
    }, [items, inputValue]);

    const handleSelect = (item: ComboboxItem) => {
        onChange(item.value);
        setInputValue(item.label);
        setIsOpen(false);
    };

    const handleKeyDown = (e: React.KeyboardEvent) => {
        if (e.key === 'ArrowDown') {
            e.preventDefault();
            setActiveIndex(prev => (prev + 1) % filteredItems.length);
        } else if (e.key === 'ArrowUp') {
            e.preventDefault();
            setActiveIndex(prev => (prev - 1 + filteredItems.length) % filteredItems.length);
        } else if (e.key === 'Enter') {
            e.preventDefault();
            if (activeIndex >= 0 && filteredItems[activeIndex]) {
                handleSelect(filteredItems[activeIndex]);
            }
        } else if (e.key === 'Escape') {
            setIsOpen(false);
        }
    };

    const optionsListClass = createStyle({
        maxHeight: '200px',
        overflowY: 'auto',
        display: 'grid',
        gap: '4px',
    });

    const optionClass = createStyle({
        padding: '8px 12px',
        borderRadius: '4px',
        cursor: 'pointer',
        color: theme.colors.textSecondary,
        transition: 'all 0.2s ease',
        '&:hover': {
            backgroundColor: theme.colors.border,
            color: theme.colors.text,
        },
        '&[data-active="true"]': {
            backgroundColor: theme.colors.border,
            color: theme.colors.text,
        }
    });

    return (
        <Popper isOpen={isOpen} setIsOpen={setIsOpen}>
            <div ref={comboboxRef} style={{width: '250px'}}>
                <PopperTrigger>
                    <TextInput
                        placeholder={placeholder}
                        value={inputValue}
                        onChange={(e) => {
                            setInputValue(e.target.value);
                            setIsOpen(true);
                            onChange('');
                        }}
                        onFocus={() => setIsOpen(true)}
                        onKeyDown={handleKeyDown}
                        autoComplete="off"
                    />
                </PopperTrigger>
                <PopperContent>
                    <div className={optionsListClass}>
                        {filteredItems.length > 0 ? (
                            filteredItems.map((item, index) => (
                                <div
                                    key={item.value}
                                    className={optionClass}
                                    data-active={index === activeIndex}
                                    onClick={() => handleSelect(item)}
                                    onMouseMove={() => setActiveIndex(index)}
                                >
                                    {item.label}
                                </div>
                            ))
                        ) : (
                            <div style={{ padding: '8px 12px', color: theme.colors.textSecondary }}>
                                No results found.
                            </div>
                        )}
                    </div>
                </PopperContent>
            </div>
        </Popper>
    );
};`;
const ComboboxDemo = () => {
  const [value, setValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('react');
  const [placeholder, setPlaceholder] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('Select a framework...');

  // Note: Because this component is stateful, we can't generate the XML easily.
  // The live preview will be a fully interactive instance.
  const code = `<Combobox 
    items={[
        { value: 'react', label: 'React' },
        { value: 'vue', label: 'Vue.js' },
        // ... more items
    ]}
    placeholder="${placeholder}" 
/> 
// The 'value' and 'onChange' props are managed in the live preview.`;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_2__.DemoSection, {
    title: "Combobox",
    description: "An input field that combines a text input with a dropdown list for filtering and selecting options.",
    livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Combobox, {
      items: frameworks,
      value: value,
      onChange: setValue,
      placeholder: placeholder
    }),
    initialCode: code,
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ComboboxConfigurator, {
      placeholder: placeholder,
      setPlaceholder: setPlaceholder,
      value: value
    }),
    documentation: documentation,
    fullSourceCode: fullSourceCode
  });
};

/***/ }),

/***/ "./demo/Container.tsx":
/*!****************************!*\
  !*** ./demo/Container.tsx ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ContainerDemo: () => (/* binding */ ContainerDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _src_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../src/core */ "./src/core/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");




const ContainerConfigurator = ({
  size,
  setSize
}) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "1rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
  as: "label",
  size: "sm",
  weight: "medium",
  color: "textSecondary"
}, "Size Prop"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.SegmentedControl, {
  value: size,
  onChange: setSize,
  options: [{
    label: 'xs',
    value: 'xs'
  }, {
    label: 'sm',
    value: 'sm'
  }, {
    label: 'md',
    value: 'md'
  }, {
    label: 'lg',
    value: 'lg'
  }, {
    label: 'xl',
    value: 'xl'
  }, {
    label: 'container',
    value: 'container'
  }]
}));
const documentation = `# Container

A layout component that centers its content and constrains it to a maximum width. This is essential for creating consistent, readable layouts on wider screens.

## Props

*   \`children\` (React.ReactNode): The content to be rendered inside the container.
*   \`size\` (enum: 'xs' | 'sm' | 'md' | 'lg' | 'xl', optional): A predefined size from the theme's \`maxWidths\` scale.
*   \`maxWidth\` (string, optional): A specific max-width for the container (e.g., '800px'). Overrides \`size\` if both are provided. Defaults to \`theme.maxWidths.container\`.
*   \`className\` (string, optional): Additional CSS classes for custom styling.
*   All other standard \`<div>\` attributes are supported.

## Usage

\`\`\`tsx
import { Container, Card, Text } from './src/components';

// Default container
<Container>
  <Text>This content is centered with the default max-width.</Text>
</Container>

// Sized container
<Container size="sm">
  <Text>This content is in a small container.</Text>
</Container>
\`\`\``;
const sourceCode = `import React from 'react';
import { useStyles } from '../../core/hooks/useStyles';
import { useTheme, Theme } from '../../core/theme/ThemeProvider';

interface ContainerProps extends React.HTMLAttributes<HTMLDivElement> {
    maxWidth?: string;
    size?: keyof Theme['maxWidths'];
}

export const Container: React.FC<ContainerProps> = ({ children, className = '', maxWidth, size, ...props }) => {
    const { theme } = useTheme();
    const createStyle = useStyles('container');

    const containerClass = createStyle({
        width: '100%',
        maxWidth: (size ? theme.maxWidths[size] : undefined) || maxWidth || theme.maxWidths.container,
        margin: '0 auto',
        padding: \`0 \${theme.spacing.lg}\`,
        '@media': {
            "(maxWidth: 'sm')": {
                padding: \`0 \${theme.spacing.md}\`,
            }
        }
    });

    return (
        <div className={\`\${containerClass} \${className}\`} {...props}>
            {children}
        </div>
    );
};`;
const ContainerDemo = () => {
  const {
    theme
  } = (0,_src_core__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const [size, setSize] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('sm');
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_3__.DemoSection, {
    title: "Container",
    description: "A layout component that centers its content and constrains it to a maximum width. Supports a `size` prop for theme-based widths.",
    livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
      style: {
        backgroundColor: 'rgba(0,0,0,0.3)',
        padding: '1rem 0',
        borderRadius: '8px',
        width: '100%'
      }
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Container, {
      size: size
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Card, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, null, "This content is inside a `Container` with `size=\"", size, "\"`.")))),
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ContainerConfigurator, {
      size: size,
      setSize: setSize
    }),
    documentation: documentation,
    fullSourceCode: sourceCode
  });
};

/***/ }),

/***/ "./demo/DataTable.tsx":
/*!****************************!*\
  !*** ./demo/DataTable.tsx ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DataTableDemo: () => (/* binding */ DataTableDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _src_icons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../src/icons */ "./src/icons/index.ts");




// 1. Define the data type

// 2. Create mock data
const mockData = [{
  id: 1,
  name: 'John Doe',
  email: 'john.d@example.com',
  role: 'Admin',
  status: 'Active',
  createdAt: '2024-01-15'
}, {
  id: 2,
  name: 'Jane Smith',
  email: 'jane.s@example.com',
  role: 'Member',
  status: 'Active',
  createdAt: '2024-02-20'
}, {
  id: 3,
  name: 'Sam Wilson',
  email: 'sam.w@example.com',
  role: 'Member',
  status: 'Pending',
  createdAt: '2024-03-01'
}, {
  id: 4,
  name: 'Alice Johnson',
  email: 'alice.j@example.com',
  role: 'Guest',
  status: 'Inactive',
  createdAt: '2023-12-10'
}, {
  id: 5,
  name: 'Michael Brown',
  email: 'michael.b@example.com',
  role: 'Member',
  status: 'Active',
  createdAt: '2024-01-25'
}, {
  id: 6,
  name: 'Emily Davis',
  email: 'emily.d@example.com',
  role: 'Admin',
  status: 'Active',
  createdAt: '2023-11-30'
}, {
  id: 7,
  name: 'Chris Green',
  email: 'chris.g@example.com',
  role: 'Member',
  status: 'Pending',
  createdAt: '2024-04-05'
}, {
  id: 8,
  name: 'Patricia White',
  email: 'patricia.w@example.com',
  role: 'Guest',
  status: 'Inactive',
  createdAt: '2024-03-15'
}, {
  id: 9,
  name: 'Robert Harris',
  email: 'robert.h@example.com',
  role: 'Member',
  status: 'Active',
  createdAt: '2024-02-10'
}, {
  id: 10,
  name: 'Linda Martinez',
  email: 'linda.m@example.com',
  role: 'Member',
  status: 'Active',
  createdAt: '2023-10-05'
}, {
  id: 11,
  name: 'James Taylor',
  email: 'james.t@example.com',
  role: 'Guest',
  status: 'Pending',
  createdAt: '2024-05-01'
}, {
  id: 12,
  name: 'Mary Anderson',
  email: 'mary.a@example.com',
  role: 'Admin',
  status: 'Inactive',
  createdAt: '2024-01-01'
}, {
  id: 13,
  name: 'David Thomas',
  email: 'david.t@example.com',
  role: 'Member',
  status: 'Active',
  createdAt: '2024-04-20'
}, {
  id: 14,
  name: 'Jennifer Garcia',
  email: 'jennifer.g@example.com',
  role: 'Member',
  status: 'Active',
  createdAt: '2024-03-22'
}];
const DataTableDemo = () => {
  const {
    addToast
  } = (0,_src_components__WEBPACK_IMPORTED_MODULE_1__.useToast)();

  // 3. Define columns
  const columns = [{
    accessorKey: 'name',
    header: 'Name'
  }, {
    accessorKey: 'email',
    header: 'Email'
  }, {
    accessorKey: 'role',
    header: 'Role'
  }, {
    accessorKey: 'status',
    header: 'Status',
    cell: status => {
      const colorScheme = status === 'Active' ? 'success' : status === 'Pending' ? 'accent' : 'error';
      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Badge, {
        colorScheme: colorScheme
      }, status);
    }
  }, {
    accessorKey: 'createdAt',
    header: 'Created At'
  }];

  // 4. Define actions for selected items
  const tableActions = (selectedItems, clearSelection) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
    variant: "accent",
    onClick: () => {
      addToast({
        title: `Deleted ${selectedItems.length} user(s)`,
        description: selectedItems.map(u => u.name).join(', '),
        variant: 'error'
      });
      clearSelection();
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Icon, {
    as: _src_icons__WEBPACK_IMPORTED_MODULE_2__.TrashIcon,
    size: 16
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", null, "Delete Selected"));
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Sofa, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
    gap: "1rem"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    as: "h2",
    size: "1.5rem",
    weight: "600"
  }, "Data Table"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, null, "A powerful table component with built-in pagination, sorting, filtering, selection, and contextual actions."), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.DataTable, {
    data: mockData,
    columns: columns,
    pageSize: 5,
    actions: tableActions
  })));
};

/***/ }),

/***/ "./demo/DatePicker.tsx":
/*!*****************************!*\
  !*** ./demo/DatePicker.tsx ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DatePickerDemo: () => (/* binding */ DatePickerDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");


const DatePickerDemo = () => {
  const [date, setDate] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(new Date());
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Sofa, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
    gap: "1rem"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    as: "h2",
    size: "1.5rem",
    weight: "600"
  }, "Date Picker"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, null, "An input that allows users to select a date from a calendar."), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.DatePicker, {
    label: "Event Date",
    value: date,
    onChange: setDate
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, null, "Selected Date: ", date ? date.toDateString() : 'None')));
};

/***/ }),

/***/ "./demo/DemoApp.tsx":
/*!**************************!*\
  !*** ./demo/DemoApp.tsx ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DemoApp: () => (/* binding */ DemoApp)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _src_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../src/core */ "./src/core/index.ts");
/* harmony import */ var _Welcome__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Welcome */ "./demo/Welcome.tsx");
/* harmony import */ var _Button__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Button */ "./demo/Button.tsx");
/* harmony import */ var _Icon__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Icon */ "./demo/Icon.tsx");
/* harmony import */ var _Text__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Text */ "./demo/Text.tsx");
/* harmony import */ var _Link__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Link */ "./demo/Link.tsx");
/* harmony import */ var _Kbd__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Kbd */ "./demo/Kbd.tsx");
/* harmony import */ var _Badge__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Badge */ "./demo/Badge.tsx");
/* harmony import */ var _Tag__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./Tag */ "./demo/Tag.tsx");
/* harmony import */ var _Code__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./Code */ "./demo/Code.tsx");
/* harmony import */ var _Stack__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./Stack */ "./demo/Stack.tsx");
/* harmony import */ var _Grid__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./Grid */ "./demo/Grid.tsx");
/* harmony import */ var _Container__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./Container */ "./demo/Container.tsx");
/* harmony import */ var _Sofa__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./Sofa */ "./demo/Sofa.tsx");
/* harmony import */ var _Header__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./Header */ "./demo/Header.tsx");
/* harmony import */ var _Footer__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./Footer */ "./demo/Footer.tsx");
/* harmony import */ var _Sidebar__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./Sidebar */ "./demo/Sidebar.tsx");
/* harmony import */ var _Box__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./Box */ "./demo/Box.tsx");
/* harmony import */ var _Flex__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./Flex */ "./demo/Flex.tsx");
/* harmony import */ var _Center__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./Center */ "./demo/Center.tsx");
/* harmony import */ var _AspectRatio__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./AspectRatio */ "./demo/AspectRatio.tsx");
/* harmony import */ var _Divider__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./Divider */ "./demo/Divider.tsx");
/* harmony import */ var _Input__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./Input */ "./demo/Input.tsx");
/* harmony import */ var _TextInput__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./TextInput */ "./demo/TextInput.tsx");
/* harmony import */ var _Textarea__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./Textarea */ "./demo/Textarea.tsx");
/* harmony import */ var _Checkbox__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./Checkbox */ "./demo/Checkbox.tsx");
/* harmony import */ var _RadioGroup__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./RadioGroup */ "./demo/RadioGroup.tsx");
/* harmony import */ var _Switch__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./Switch */ "./demo/Switch.tsx");
/* harmony import */ var _Select__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./Select */ "./demo/Select.tsx");
/* harmony import */ var _Combobox__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./Combobox */ "./demo/Combobox.tsx");
/* harmony import */ var _Slider__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./Slider */ "./demo/Slider.tsx");
/* harmony import */ var _NumberInput__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./NumberInput */ "./demo/NumberInput.tsx");
/* harmony import */ var _FileUpload__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./FileUpload */ "./demo/FileUpload.tsx");
/* harmony import */ var _ColorPicker__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./ColorPicker */ "./demo/ColorPicker.tsx");
/* harmony import */ var _DatePicker__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./DatePicker */ "./demo/DatePicker.tsx");
/* harmony import */ var _Search__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./Search */ "./demo/Search.tsx");
/* harmony import */ var _Rating__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./Rating */ "./demo/Rating.tsx");
/* harmony import */ var _ToggleButton__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./ToggleButton */ "./demo/ToggleButton.tsx");
/* harmony import */ var _IconButton__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./IconButton */ "./demo/IconButton.tsx");
/* harmony import */ var _ButtonGroup__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./ButtonGroup */ "./demo/ButtonGroup.tsx");
/* harmony import */ var _FormControl__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./FormControl */ "./demo/FormControl.tsx");
/* harmony import */ var _PinInput__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./PinInput */ "./demo/PinInput.tsx");
/* harmony import */ var _Editable__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./Editable */ "./demo/Editable.tsx");
/* harmony import */ var _List__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./List */ "./demo/List.tsx");
/* harmony import */ var _Table__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./Table */ "./demo/Table.tsx");
/* harmony import */ var _DataTable__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./DataTable */ "./demo/DataTable.tsx");
/* harmony import */ var _Avatar__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./Avatar */ "./demo/Avatar.tsx");
/* harmony import */ var _Card__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./Card */ "./demo/Card.tsx");
/* harmony import */ var _Accordion__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./Accordion */ "./demo/Accordion.tsx");
/* harmony import */ var _TreeView__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./TreeView */ "./demo/TreeView.tsx");
/* harmony import */ var _XNodeTree__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./XNodeTree */ "./demo/XNodeTree.tsx");
/* harmony import */ var _Timeline__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./Timeline */ "./demo/Timeline.tsx");
/* harmony import */ var _Image__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ./Image */ "./demo/Image.tsx");
/* harmony import */ var _Alert__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ./Alert */ "./demo/Alert.tsx");
/* harmony import */ var _Toast__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ./Toast */ "./demo/Toast.tsx");
/* harmony import */ var _Spinner__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ./Spinner */ "./demo/Spinner.tsx");
/* harmony import */ var _Progress__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ./Progress */ "./demo/Progress.tsx");
/* harmony import */ var _Skeleton__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ./Skeleton */ "./demo/Skeleton.tsx");
/* harmony import */ var _Modal__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ./Modal */ "./demo/Modal.tsx");
/* harmony import */ var _Dialog__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ./Dialog */ "./demo/Dialog.tsx");
/* harmony import */ var _Drawer__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ./Drawer */ "./demo/Drawer.tsx");
/* harmony import */ var _Popover__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ./Popover */ "./demo/Popover.tsx");
/* harmony import */ var _HoverCard__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ./HoverCard */ "./demo/HoverCard.tsx");
/* harmony import */ var _Backdrop__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ./Backdrop */ "./demo/Backdrop.tsx");
/* harmony import */ var _Snackbar__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ./Snackbar */ "./demo/Snackbar.tsx");
/* harmony import */ var _Nav__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! ./Nav */ "./demo/Nav.tsx");
/* harmony import */ var _Breadcrumbs__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! ./Breadcrumbs */ "./demo/Breadcrumbs.tsx");
/* harmony import */ var _Pagination__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! ./Pagination */ "./demo/Pagination.tsx");
/* harmony import */ var _Tabs__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! ./Tabs */ "./demo/Tabs.tsx");
/* harmony import */ var _Stepper__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! ./Stepper */ "./demo/Stepper.tsx");
/* harmony import */ var _Menu__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! ./Menu */ "./demo/Menu.tsx");
/* harmony import */ var _Dropdown__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! ./Dropdown */ "./demo/Dropdown.tsx");
/* harmony import */ var _FloatingActionButton__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! ./FloatingActionButton */ "./demo/FloatingActionButton.tsx");
/* harmony import */ var _SpeedDial__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! ./SpeedDial */ "./demo/SpeedDial.tsx");
/* harmony import */ var _TransferList__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! ./TransferList */ "./demo/TransferList.tsx");
/* harmony import */ var _AnimatedBlock__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! ./AnimatedBlock */ "./demo/AnimatedBlock.tsx");
/* harmony import */ var _Audio__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(/*! ./Audio */ "./demo/Audio.tsx");
/* harmony import */ var _Video__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(/*! ./Video */ "./demo/Video.tsx");
/* harmony import */ var _Charts__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(/*! ./Charts */ "./demo/Charts.tsx");
/* harmony import */ var _Sparkline__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(/*! ./Sparkline */ "./demo/Sparkline.tsx");
/* harmony import */ var _XmlRenderer__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(/*! ./XmlRenderer */ "./demo/XmlRenderer.tsx");
/* harmony import */ var _GraphicsNodeEditor__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(/*! ./GraphicsNodeEditor */ "./demo/GraphicsNodeEditor.tsx");
/* harmony import */ var _PhotoEditor__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(/*! ./PhotoEditor */ "./demo/PhotoEditor.tsx");
/* harmony import */ var _examples__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__(/*! ../examples */ "./examples/index.ts");





// Import all demos


















































































const demos = {
  general: [{
    id: 'button',
    label: 'Button',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Button__WEBPACK_IMPORTED_MODULE_4__.ButtonDemo, null)
  }, {
    id: 'icon',
    label: 'Icon',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Icon__WEBPACK_IMPORTED_MODULE_5__.IconDemo, null)
  }, {
    id: 'text',
    label: 'Text',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Text__WEBPACK_IMPORTED_MODULE_6__.TextDemo, null)
  }, {
    id: 'link',
    label: 'Link',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Link__WEBPACK_IMPORTED_MODULE_7__.LinkDemo, null)
  }, {
    id: 'kbd',
    label: 'Kbd',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Kbd__WEBPACK_IMPORTED_MODULE_8__.KbdDemo, null)
  }, {
    id: 'badge',
    label: 'Badge',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Badge__WEBPACK_IMPORTED_MODULE_9__.BadgeDemo, null)
  }, {
    id: 'tag',
    label: 'Tag',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Tag__WEBPACK_IMPORTED_MODULE_10__.TagDemo, null)
  }, {
    id: 'code',
    label: 'Code',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Code__WEBPACK_IMPORTED_MODULE_11__.CodeDemo, null)
  }],
  layout: [{
    id: 'box',
    label: 'Box',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Box__WEBPACK_IMPORTED_MODULE_19__.BoxDemo, null)
  }, {
    id: 'flex',
    label: 'Flex',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Flex__WEBPACK_IMPORTED_MODULE_20__.FlexDemo, null)
  }, {
    id: 'center',
    label: 'Center',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Center__WEBPACK_IMPORTED_MODULE_21__.CenterDemo, null)
  }, {
    id: 'stack',
    label: 'Stack',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Stack__WEBPACK_IMPORTED_MODULE_12__.StackDemo, null)
  }, {
    id: 'grid',
    label: 'Grid',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Grid__WEBPACK_IMPORTED_MODULE_13__.GridDemo, null)
  }, {
    id: 'container',
    label: 'Container',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Container__WEBPACK_IMPORTED_MODULE_14__.ContainerDemo, null)
  }, {
    id: 'aspect-ratio',
    label: 'AspectRatio',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_AspectRatio__WEBPACK_IMPORTED_MODULE_22__.AspectRatioDemo, null)
  }, {
    id: 'divider',
    label: 'Divider',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Divider__WEBPACK_IMPORTED_MODULE_23__.DividerDemo, null)
  }, {
    id: 'sofa',
    label: 'Sofa',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Sofa__WEBPACK_IMPORTED_MODULE_15__.SofaDemo, null)
  }, {
    id: 'header',
    label: 'Header',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Header__WEBPACK_IMPORTED_MODULE_16__.HeaderDemo, null)
  }, {
    id: 'footer',
    label: 'Footer',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Footer__WEBPACK_IMPORTED_MODULE_17__.FooterDemo, null)
  }, {
    id: 'sidebar',
    label: 'Sidebar',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Sidebar__WEBPACK_IMPORTED_MODULE_18__.SidebarDemo, null)
  }],
  forms: [{
    id: 'form-control',
    label: 'FormControl',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_FormControl__WEBPACK_IMPORTED_MODULE_42__.FormControlDemo, null)
  }, {
    id: 'input',
    label: 'Input',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Input__WEBPACK_IMPORTED_MODULE_24__.InputDemo, null)
  }, {
    id: 'text-input',
    label: 'TextInput',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_TextInput__WEBPACK_IMPORTED_MODULE_25__.TextInputDemo, null)
  }, {
    id: 'textarea',
    label: 'Textarea',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Textarea__WEBPACK_IMPORTED_MODULE_26__.TextareaDemo, null)
  }, {
    id: 'checkbox',
    label: 'Checkbox',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Checkbox__WEBPACK_IMPORTED_MODULE_27__.CheckboxDemo, null)
  }, {
    id: 'radio-group',
    label: 'RadioGroup',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_RadioGroup__WEBPACK_IMPORTED_MODULE_28__.RadioGroupDemo, null)
  }, {
    id: 'switch',
    label: 'Switch',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Switch__WEBPACK_IMPORTED_MODULE_29__.SwitchDemo, null)
  }, {
    id: 'select',
    label: 'Select',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Select__WEBPACK_IMPORTED_MODULE_30__.SelectDemo, null)
  }, {
    id: 'combobox',
    label: 'Combobox',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Combobox__WEBPACK_IMPORTED_MODULE_31__.ComboboxDemo, null)
  }, {
    id: 'slider',
    label: 'Slider',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Slider__WEBPACK_IMPORTED_MODULE_32__.SliderDemo, null)
  }, {
    id: 'number-input',
    label: 'NumberInput',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_NumberInput__WEBPACK_IMPORTED_MODULE_33__.NumberInputDemo, null)
  }, {
    id: 'pin-input',
    label: 'PinInput',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_PinInput__WEBPACK_IMPORTED_MODULE_43__.PinInputDemo, null)
  }, {
    id: 'editable',
    label: 'Editable',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Editable__WEBPACK_IMPORTED_MODULE_44__.EditableDemo, null)
  }, {
    id: 'file-upload',
    label: 'FileUpload',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_FileUpload__WEBPACK_IMPORTED_MODULE_34__.FileUploadDemo, null)
  }, {
    id: 'color-picker',
    label: 'ColorPicker',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_ColorPicker__WEBPACK_IMPORTED_MODULE_35__.ColorPickerDemo, null)
  }, {
    id: 'date-picker',
    label: 'DatePicker',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DatePicker__WEBPACK_IMPORTED_MODULE_36__.DatePickerDemo, null)
  }, {
    id: 'search',
    label: 'Search',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Search__WEBPACK_IMPORTED_MODULE_37__.SearchDemo, null)
  }, {
    id: 'rating',
    label: 'Rating',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Rating__WEBPACK_IMPORTED_MODULE_38__.RatingDemo, null)
  }, {
    id: 'toggle-button',
    label: 'ToggleButton',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_ToggleButton__WEBPACK_IMPORTED_MODULE_39__.ToggleButtonDemo, null)
  }, {
    id: 'icon-button',
    label: 'IconButton',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_IconButton__WEBPACK_IMPORTED_MODULE_40__.IconButtonDemo, null)
  }, {
    id: 'button-group',
    label: 'ButtonGroup',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_ButtonGroup__WEBPACK_IMPORTED_MODULE_41__.ButtonGroupDemo, null)
  }],
  dataDisplay: [{
    id: 'list',
    label: 'List',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_List__WEBPACK_IMPORTED_MODULE_45__.ListDemo, null)
  }, {
    id: 'table',
    label: 'Table',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Table__WEBPACK_IMPORTED_MODULE_46__.TableDemo, null)
  }, {
    id: 'data-table',
    label: 'DataTable',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DataTable__WEBPACK_IMPORTED_MODULE_47__.DataTableDemo, null)
  }, {
    id: 'avatar',
    label: 'Avatar',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Avatar__WEBPACK_IMPORTED_MODULE_48__.AvatarDemo, null)
  }, {
    id: 'card',
    label: 'Card',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Card__WEBPACK_IMPORTED_MODULE_49__.CardDemo, null)
  }, {
    id: 'accordion',
    label: 'Accordion',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Accordion__WEBPACK_IMPORTED_MODULE_50__.AccordionDemo, null)
  }, {
    id: 'tree-view',
    label: 'TreeView',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_TreeView__WEBPACK_IMPORTED_MODULE_51__.TreeViewDemo, null)
  }, {
    id: 'x-node-tree',
    label: 'XNodeTree',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_XNodeTree__WEBPACK_IMPORTED_MODULE_52__.XNodeTreeDemo, null)
  }, {
    id: 'timeline',
    label: 'Timeline',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Timeline__WEBPACK_IMPORTED_MODULE_53__.TimelineDemo, null)
  }, {
    id: 'image',
    label: 'Image',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Image__WEBPACK_IMPORTED_MODULE_54__.ImageDemo, null)
  }],
  feedback: [{
    id: 'alert',
    label: 'Alert',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Alert__WEBPACK_IMPORTED_MODULE_55__.AlertDemo, null)
  }, {
    id: 'toast',
    label: 'Toast',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Toast__WEBPACK_IMPORTED_MODULE_56__.ToastDemo, null)
  }, {
    id: 'snackbar',
    label: 'Snackbar',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Snackbar__WEBPACK_IMPORTED_MODULE_66__.SnackbarDemo, null)
  }, {
    id: 'spinner',
    label: 'Spinner',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Spinner__WEBPACK_IMPORTED_MODULE_57__.SpinnerDemo, null)
  }, {
    id: 'progress',
    label: 'Progress',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Progress__WEBPACK_IMPORTED_MODULE_58__.ProgressDemo, null)
  }, {
    id: 'skeleton',
    label: 'Skeleton',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Skeleton__WEBPACK_IMPORTED_MODULE_59__.SkeletonDemo, null)
  }, {
    id: 'modal',
    label: 'Modal',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Modal__WEBPACK_IMPORTED_MODULE_60__.ModalDemo, null)
  }, {
    id: 'dialog',
    label: 'Dialog',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Dialog__WEBPACK_IMPORTED_MODULE_61__.DialogDemo, null)
  }, {
    id: 'drawer',
    label: 'Drawer',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Drawer__WEBPACK_IMPORTED_MODULE_62__.DrawerDemo, null)
  }, {
    id: 'popover',
    label: 'Popover',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Popover__WEBPACK_IMPORTED_MODULE_63__.PopoverDemo, null)
  }, {
    id: 'hover-card',
    label: 'HoverCard',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_HoverCard__WEBPACK_IMPORTED_MODULE_64__.HoverCardDemo, null)
  }, {
    id: 'backdrop',
    label: 'Backdrop',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Backdrop__WEBPACK_IMPORTED_MODULE_65__.BackdropDemo, null)
  }],
  navigation: [{
    id: 'nav',
    label: 'Nav',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Nav__WEBPACK_IMPORTED_MODULE_67__.NavDemo, null)
  }, {
    id: 'breadcrumbs',
    label: 'Breadcrumbs',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Breadcrumbs__WEBPACK_IMPORTED_MODULE_68__.BreadcrumbsDemo, null)
  }, {
    id: 'pagination',
    label: 'Pagination',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Pagination__WEBPACK_IMPORTED_MODULE_69__.PaginationDemo, null)
  }, {
    id: 'tabs',
    label: 'Tabs',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Tabs__WEBPACK_IMPORTED_MODULE_70__.TabsDemo, null)
  }, {
    id: 'stepper',
    label: 'Stepper',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Stepper__WEBPACK_IMPORTED_MODULE_71__.StepperDemo, null)
  }, {
    id: 'menu',
    label: 'Menu',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Menu__WEBPACK_IMPORTED_MODULE_72__.MenuDemo, null)
  }, {
    id: 'dropdown',
    label: 'Dropdown',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Dropdown__WEBPACK_IMPORTED_MODULE_73__.DropdownDemo, null)
  }, {
    id: 'fab',
    label: 'FloatingActionButton',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_FloatingActionButton__WEBPACK_IMPORTED_MODULE_74__.FloatingActionButtonDemo, null)
  }, {
    id: 'speed-dial',
    label: 'SpeedDial',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_SpeedDial__WEBPACK_IMPORTED_MODULE_75__.SpeedDialDemo, null)
  }, {
    id: 'transfer-list',
    label: 'TransferList',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_TransferList__WEBPACK_IMPORTED_MODULE_76__.TransferListDemo, null)
  }],
  advanced: [{
    id: 'animated-block',
    label: 'AnimatedBlock',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_AnimatedBlock__WEBPACK_IMPORTED_MODULE_77__.AnimatedBlockDemo, null)
  }, {
    id: 'audio',
    label: 'Audio',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Audio__WEBPACK_IMPORTED_MODULE_78__.AudioDemo, null)
  }, {
    id: 'video',
    label: 'Video',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Video__WEBPACK_IMPORTED_MODULE_79__.VideoDemo, null)
  }, {
    id: 'charts',
    label: 'Charts',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Charts__WEBPACK_IMPORTED_MODULE_80__.ChartsDemo, null)
  }, {
    id: 'sparkline',
    label: 'Sparkline',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Sparkline__WEBPACK_IMPORTED_MODULE_81__.SparklineDemo, null)
  }, {
    id: 'xml-renderer',
    label: 'XmlRenderer',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_XmlRenderer__WEBPACK_IMPORTED_MODULE_82__.XmlRendererDemo, null)
  }, {
    id: 'graphics-node-editor',
    label: 'GraphicsNodeEditor',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_GraphicsNodeEditor__WEBPACK_IMPORTED_MODULE_83__.GraphicsNodeEditorDemo, null)
  }, {
    id: 'photo-editor',
    label: 'PhotoEditor',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_PhotoEditor__WEBPACK_IMPORTED_MODULE_84__.PhotoEditorDemo, null)
  }],
  examples: [{
    id: 'signin-page',
    label: 'Sign-In Page',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_examples__WEBPACK_IMPORTED_MODULE_85__.ExampleSignInPage, null)
  }, {
    id: 'file-browser',
    label: 'File Browser',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_examples__WEBPACK_IMPORTED_MODULE_85__.ExampleFileBrowser, null)
  }, {
    id: 'video-player',
    label: 'Video Player',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_examples__WEBPACK_IMPORTED_MODULE_85__.ExampleVideo, null)
  }, {
    id: 'audio-player',
    label: 'Audio Player',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_examples__WEBPACK_IMPORTED_MODULE_85__.ExampleAudio, null)
  }, {
    id: 'photo-editor-example',
    label: 'Photo Editor',
    component: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_examples__WEBPACK_IMPORTED_MODULE_85__.ExamplePhotoEditor, null)
  }]
};
const allDemos = Object.values(demos).flat();
const AppContent = () => {
  const [activeDemoId, setActiveDemoId] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('welcome');
  const {
    theme
  } = (0,_src_core__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const activeDemo = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {
    if (activeDemoId === 'welcome') return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Welcome__WEBPACK_IMPORTED_MODULE_3__.Welcome, {
      onNavigate: setActiveDemoId
    });
    return allDemos.find(d => d.id === activeDemoId)?.component || null;
  }, [activeDemoId]);
  const handleNavClick = (e, id) => {
    e.preventDefault();
    setActiveDemoId(id);
  };
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    style: {
      display: 'flex',
      height: '100vh',
      width: '100vw',
      backgroundColor: theme.colors.background
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Sidebar, {
    width: "280px",
    height: "auto"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
    justify: "space-between",
    style: {
      height: '100%'
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
    gap: "2rem",
    style: {
      flex: 1,
      minHeight: 0,
      display: 'flex',
      flexDirection: 'column'
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    onClick: e => handleNavClick(e, 'welcome'),
    style: {
      cursor: 'pointer',
      padding: '0 1rem'
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    as: "h1",
    size: "1.5rem",
    weight: "700"
  }, "ZwheUI"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    size: "0.875rem",
    color: "textSecondary"
  }, "Component Showcase")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    style: {
      flex: '1 1 0',
      minHeight: 0,
      overflowY: 'auto',
      paddingRight: '0.5rem'
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
    gap: "1.5rem"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.SidebarNav, {
    title: "Examples"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(NavItems, {
    items: demos.examples,
    activeId: activeDemoId,
    onClick: handleNavClick
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.SidebarNav, {
    title: "General"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(NavItems, {
    items: demos.general,
    activeId: activeDemoId,
    onClick: handleNavClick
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.SidebarNav, {
    title: "Layout"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(NavItems, {
    items: demos.layout,
    activeId: activeDemoId,
    onClick: handleNavClick
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.SidebarNav, {
    title: "Forms & Input"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(NavItems, {
    items: demos.forms,
    activeId: activeDemoId,
    onClick: handleNavClick
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.SidebarNav, {
    title: "Data Display"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(NavItems, {
    items: demos.dataDisplay,
    activeId: activeDemoId,
    onClick: handleNavClick
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.SidebarNav, {
    title: "Feedback & Overlays"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(NavItems, {
    items: demos.feedback,
    activeId: activeDemoId,
    onClick: handleNavClick
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.SidebarNav, {
    title: "Navigation"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(NavItems, {
    items: demos.navigation,
    activeId: activeDemoId,
    onClick: handleNavClick
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.SidebarNav, {
    title: "Advanced"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(NavItems, {
    items: demos.advanced,
    activeId: activeDemoId,
    onClick: handleNavClick
  }))))))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("main", {
    style: {
      flex: 1,
      display: 'flex',
      flexDirection: 'column',
      height: '100vh',
      minWidth: 0
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Header, {
    height: "60px"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Header.Left, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    weight: "600",
    size: "1.125rem"
  }, allDemos.find(d => d.id === activeDemoId)?.label || 'Welcome')), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Header.Right, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    style: {
      flex: 1,
      overflowY: 'auto',
      padding: '2rem'
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Grid, {
    minItemWidth: "600px",
    gap: "2rem"
  }, activeDemo))));
};
const NavItems = ({
  items,
  activeId,
  onClick
}) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, items.map(item => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.SidebarNavItem, {
  key: item.id,
  href: "#",
  isActive: activeId === item.id,
  onClick: e => onClick(e, item.id)
}, item.label)));
const DemoApp = () => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_core__WEBPACK_IMPORTED_MODULE_2__.ThemeProvider, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(AppContent, null));

/***/ }),

/***/ "./demo/DemoSection.tsx":
/*!******************************!*\
  !*** ./demo/DemoSection.tsx ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DemoSection: () => (/* binding */ DemoSection)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _src_icons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../src/icons */ "./src/icons/index.ts");
/* harmony import */ var _src_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../src/core */ "./src/core/index.ts");





// Create a map of all available components and icons for the XmlRenderer
const renderableComponents = {
  Input: _src_components__WEBPACK_IMPORTED_MODULE_1__.Input,
  Button: _src_components__WEBPACK_IMPORTED_MODULE_1__.Button,
  Text: _src_components__WEBPACK_IMPORTED_MODULE_1__.Text,
  Stack: _src_components__WEBPACK_IMPORTED_MODULE_1__.Stack,
  Center: _src_components__WEBPACK_IMPORTED_MODULE_1__.Center,
  Accordion: _src_components__WEBPACK_IMPORTED_MODULE_1__.Accordion,
  AccordionItem: _src_components__WEBPACK_IMPORTED_MODULE_1__.AccordionItem,
  AccordionTrigger: _src_components__WEBPACK_IMPORTED_MODULE_1__.AccordionTrigger,
  AccordionContent: _src_components__WEBPACK_IMPORTED_MODULE_1__.AccordionContent,
  Grid: _src_components__WEBPACK_IMPORTED_MODULE_1__.Grid,
  "Grid.Item": _src_components__WEBPACK_IMPORTED_MODULE_1__.Grid.Item,
  SegmentedControl: _src_components__WEBPACK_IMPORTED_MODULE_1__.SegmentedControl
};
// Manually iterate over the imported components object to build the map.
// This is a safer way to exclude hooks than destructuring with a rest pattern.
for (const key in _src_components__WEBPACK_IMPORTED_MODULE_1__) {
  if (Object.prototype.hasOwnProperty.call(_src_components__WEBPACK_IMPORTED_MODULE_1__, key)) {
    // Exclude hooks which are not components
    if (!key.startsWith('use')) {
      renderableComponents[key] = _src_components__WEBPACK_IMPORTED_MODULE_1__[key];
    }
  }
}
const componentMap = {
  ...renderableComponents,
  ..._src_icons__WEBPACK_IMPORTED_MODULE_2__
};
const DemoSection = ({
  title,
  description,
  initialCode,
  livePreview,
  propControls,
  documentation,
  fullSourceCode
}) => {
  const {
    theme
  } = (0,_src_core__WEBPACK_IMPORTED_MODULE_3__.useTheme)();
  const [code, setCode] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(initialCode || '');

  // When the props change from the configurator, update the code in the editor.
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (initialCode !== undefined) {
      setCode(initialCode);
    }
  }, [initialCode]);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Sofa, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
    gap: "1.5rem"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    as: "h2",
    size: "1.5rem",
    weight: "600"
  }, title), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, null, description)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Grid, {
    minItemWidth: "300px",
    gap: "2rem",
    style: {
      alignItems: 'start'
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Grid.Item, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Accordion, {
    defaultValue: "props"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.AccordionItem, {
    value: "props"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.AccordionTrigger, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    weight: "600"
  }, "Props")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.AccordionContent, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
    gap: "1.5rem",
    style: {
      paddingTop: '1rem'
    }
  }, propControls))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.AccordionItem, {
    value: "docs"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.AccordionTrigger, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    weight: "600"
  }, "Documentation")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.AccordionContent, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("pre", {
    style: {
      whiteSpace: 'pre-wrap',
      fontFamily: 'monospace',
      fontSize: '13px',
      color: theme.colors.textSecondary,
      lineHeight: '1.5',
      paddingTop: '1rem'
    }
  }, documentation))))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Grid.Item, {
    colSpan: 2
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
    gap: "1.5rem"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Sofa, {
    title: "Live Preview"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Center, {
    style: {
      minHeight: '150px',
      padding: '1rem'
    }
  }, livePreview ?? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.XmlRenderer, {
    xml: code,
    components: componentMap
  }))), initialCode !== undefined && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Sofa, {
    title: "Editable Code"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    style: {
      height: '250px'
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.CodeEditor, {
    value: code,
    onChange: setCode
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    size: "xs",
    color: theme.colors.textSecondary,
    style: {
      marginTop: '0.5rem'
    }
  }, "Note: Editing the code here directly may be overwritten if you change a value in the \"Props\" panel.")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Sofa, {
    title: "Full Component Source"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    style: {
      height: '300px',
      overflow: 'auto'
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.CodeEditor, {
    value: fullSourceCode,
    onChange: () => {}
  }))))))));
};

/***/ }),

/***/ "./demo/Dialog.tsx":
/*!*************************!*\
  !*** ./demo/Dialog.tsx ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DialogDemo: () => (/* binding */ DialogDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");



const DialogConfigurator = ({
  title,
  setTitle,
  showActions,
  setShowActions,
  isOpen,
  setIsOpen
}) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "1.5rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Input, {
  label: "Title Prop",
  value: title,
  onChange: e => setTitle(e.target.value)
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Checkbox, {
  label: "Show Actions Prop",
  checked: showActions,
  onChange: e => setShowActions(e.target.checked)
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
  onClick: () => setIsOpen(true)
}, "Open Dialog"));
const documentation = `# Dialog

A modal window that interrupts the user with important information or a request for a decision. It's built on top of the \`Modal\` component.

## Props

*   \`isOpen\` (boolean, required): Controls the visibility of the dialog.
*   \`onClose\` (function, required): A callback function to close the dialog.
*   \`title\` (string, required): The title displayed at the top of the dialog.
*   \`children\` (React.ReactNode, required): The main content of the dialog.
*   \`actions\` (array of objects, optional): An array of actions to render as buttons in the footer. Each object is passed as props to a \`Button\` component, with an added \`label\` property for the button text.
*   \`className\` (string, optional): Additional CSS classes for the modal container.

## Usage

\`\`\`tsx
import { Dialog, Button } from './src/components';
import { useState } from 'react';

const [isOpen, setIsOpen] = useState(false);

const dialogActions = [
    { label: 'Cancel', onClick: () => setIsOpen(false), variant: 'secondary' },
    { label: 'Confirm', onClick: () => { alert('Confirmed!'); setIsOpen(false); } }
];

<>
    <Button onClick={() => setIsOpen(true)}>Open Dialog</Button>
    <Dialog
      isOpen={isOpen}
      onClose={() => setIsOpen(false)}
      title="Confirm Action"
      actions={dialogActions}
    >
      Are you sure you want to proceed with this action?
    </Dialog>
</>
\`\`\``;
const sourceCode = `import React from 'react';
import { Modal } from '../Modal/Modal';
import { Text } from '../Text/Text';
import { Stack } from '../Stack/Stack';
import { Button, ButtonProps } from '../Button';
import { useStyles } from '../../core/hooks/useStyles';
import { useTheme } from '../../core/theme/ThemeProvider';

interface DialogAction extends ButtonProps {
    label: string;
}

export interface DialogProps {
    isOpen: boolean;
    onClose: () => void;
    title: string;
    children: React.ReactNode;
    actions?: DialogAction[];
    className?: string;
}

export const Dialog: React.FC<DialogProps> = ({ isOpen, onClose, title, children, actions, className = '' }) => {
    const { theme } = useTheme();
    const createStyle = useStyles('dialog');

    const contentClass = createStyle({
        display: 'grid',
        gap: theme.spacing.md,
    });
    
    const footerClass = createStyle({
        borderTop: \`1px solid \${theme.colors.border}\`,
        paddingTop: theme.spacing.md,
        marginTop: theme.spacing.md,
    });

    return (
        <Modal isOpen={isOpen} onClose={onClose} title={title} className={className}>
            <div className={contentClass}>
                <div>{children}</div>
                {actions && actions.length > 0 && (
                     <Stack direction="row" className={footerClass} justify="end" gap={theme.spacing.sm}>
                        {actions.map(({ label, ...props }, index) => (
                            <Button key={index} {...props}>{label}</Button>
                        ))}
                    </Stack>
                )}
            </div>
        </Modal>
    );
};

export default Dialog;`;
const DialogDemo = () => {
  const [isOpen, setIsOpen] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [title, setTitle] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('Delete Item');
  const [showActions, setShowActions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);
  const dialogActions = showActions ? [{
    label: 'Cancel',
    onClick: () => setIsOpen(false),
    variant: 'secondary'
  }, {
    label: 'Delete',
    onClick: () => {
      alert('Deleted!');
      setIsOpen(false);
    },
    variant: 'primary'
  }] : undefined;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_2__.DemoSection, {
    title: "Dialog",
    description: "A modal window that prompts for a decision, built on top of the Modal component.",
    livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
      color: "textSecondary"
    }, "Use the 'Props' tab to configure and open the dialog."),
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(DialogConfigurator, {
      isOpen: isOpen,
      setIsOpen: setIsOpen,
      title: title,
      setTitle: setTitle,
      showActions: showActions,
      setShowActions: setShowActions
    }),
    documentation: documentation,
    fullSourceCode: sourceCode
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Dialog, {
    isOpen: isOpen,
    onClose: () => setIsOpen(false),
    title: title,
    actions: dialogActions
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, null, "Are you sure you want to delete this item? This action cannot be undone.")));
};

/***/ }),

/***/ "./demo/Divider.tsx":
/*!**************************!*\
  !*** ./demo/Divider.tsx ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DividerDemo: () => (/* binding */ DividerDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");



const DividerConfigurator = ({
  orientation,
  setOrientation
}) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "1rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
  as: "label",
  size: "sm",
  weight: "medium",
  color: "textSecondary"
}, "Orientation Prop"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.SegmentedControl, {
  value: orientation,
  onChange: setOrientation,
  options: [{
    label: 'Horizontal',
    value: 'horizontal'
  }, {
    label: 'Vertical',
    value: 'vertical'
  }]
}));
const documentation = `# Divider

A component to visually separate content, either horizontally or vertically.

## Props

*   \`orientation\` (enum: 'horizontal' | 'vertical', optional): The orientation of the divider. Defaults to \`horizontal\`.
*   All other standard \`<hr>\` attributes are supported.

## Usage

\`\`\`tsx
import { Divider, Stack, Text } from './src/components';

// Horizontal divider
<Stack>
  <Text>Content above</Text>
  <Divider />
  <Text>Content below</Text>
</Stack>

// Vertical divider
<Stack direction="row" align="center">
  <Text>Left</Text>
  <Divider orientation="vertical" style={{ height: '24px' }}/>
  <Text>Right</Text>
</Stack>
\`\`\``;
const sourceCode = `import React from 'react';
import { useStyles } from '../../core/hooks/useStyles';
import { useTheme } from '../../core/theme/ThemeProvider';

interface DividerProps extends React.HTMLAttributes<HTMLHRElement> {
    orientation?: 'horizontal' | 'vertical';
}

export const Divider: React.FC<DividerProps> = ({ orientation = 'horizontal', className, ...props }) => {
    const { theme } = useTheme();
    const createStyle = useStyles('divider');
    const dividerClass = createStyle({
        border: 'none',
        backgroundColor: theme.colors.border,
        ...(orientation === 'horizontal' 
            ? { height: '1px', width: '100%', margin: '0.5rem 0' }
            : { width: '1px', height: 'auto', alignSelf: 'stretch', margin: '0 0.5rem' }
        ),
    });
    return <hr className={\`\${dividerClass} \${className}\`} {...props} />;
}`;
const DividerDemo = () => {
  const [orientation, setOrientation] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('horizontal');
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_2__.DemoSection, {
    title: "Divider",
    description: "A component to visually separate content, either horizontally or vertically.",
    livePreview: orientation === 'horizontal' ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
      align: "stretch",
      style: {
        width: '200px'
      }
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, null, "Content A"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Divider, {
      orientation: "horizontal"
    }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, null, "Content B")) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
      direction: "row",
      align: "center",
      style: {
        height: '40px'
      }
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, null, "Item 1"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Divider, {
      orientation: "vertical"
    }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, null, "Item 2")),
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(DividerConfigurator, {
      orientation: orientation,
      setOrientation: setOrientation
    }),
    documentation: documentation,
    fullSourceCode: sourceCode
  });
};

/***/ }),

/***/ "./demo/Drawer.tsx":
/*!*************************!*\
  !*** ./demo/Drawer.tsx ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DrawerDemo: () => (/* binding */ DrawerDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");



const DrawerConfigurator = ({
  title,
  setTitle,
  position,
  setPosition,
  setIsOpen
}) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "1.5rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Input, {
  label: "Title Prop",
  value: title,
  onChange: e => setTitle(e.target.value)
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "0.5rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
  as: "label",
  size: "sm",
  weight: "medium",
  color: "textSecondary"
}, "Position Prop"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.SegmentedControl, {
  value: position,
  onChange: setPosition,
  options: [{
    label: 'Left',
    value: 'left'
  }, {
    label: 'Right',
    value: 'right'
  }]
})), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
  onClick: () => setIsOpen(true)
}, "Open Drawer"));
const documentation = `# Drawer

A panel that slides in from the edge of the screen, typically used for navigation or settings. It renders in a portal attached to the document body.

## Props

*   \`isOpen\` (boolean, required): Controls the visibility of the drawer.
*   \`onClose\` (function, required): A callback function to close the drawer.
*   \`children\` (React.ReactNode, required): The main content of the drawer.
*   \`title\` (string, optional): The title displayed in the drawer's header.
*   \`position\` (enum: 'left' | 'right', optional, default: 'right'): The edge from which the drawer slides in.
*   \`className\` (string, optional): Additional CSS classes for the drawer panel.

## Usage

\`\`\`tsx
import { Drawer, Button } from './src/components';
import { useState } from 'react';

const [isOpen, setIsOpen] = useState(false);

<>
    <Button onClick={() => setIsOpen(true)}>Open Drawer</Button>
    <Drawer
      isOpen={isOpen}
      onClose={() => setIsOpen(false)}
      title="Settings"
      position="left"
    >
      <p>Drawer content goes here.</p>
    </Drawer>
</>
\`\`\``;
const sourceCode = `import React, { useEffect, useRef } from 'react';
import { createPortal } from 'react-dom';
import { useSlide } from '../../core/hooks/useAnimation';
import { useStyles } from '../../core/hooks/useStyles';
import { useTheme } from '../../core/theme/ThemeProvider';
import { Backdrop } from '../Backdrop/Backdrop';

interface DrawerProps {
    isOpen: boolean;
    onClose: () => void;
    children: React.ReactNode;
    title?: string;
    position?: 'left' | 'right';
    className?: string;
}

export const Drawer: React.FC<DrawerProps> = ({ isOpen, onClose, children, title, position = 'right', className = '' }) => {
    const { theme } = useTheme();
    const createStyle = useStyles('drawer');
    const { isRendered, style: slideStyle } = useSlide(isOpen, { direction: position });
    const drawerRef = useRef<HTMLDivElement>(null);
    const triggerRef = useRef<HTMLElement | null>(null);
    const titleId = useRef(\`drawer-title-\${Math.random().toString(36).substring(2, 9)}\`).current;

    useEffect(() => {
        if (isOpen) {
            const originalBodyOverflow = document.body.style.overflow;
            document.body.style.overflow = 'hidden';
            triggerRef.current = document.activeElement as HTMLElement;

            const focusTimeout = setTimeout(() => {
                drawerRef.current?.focus();
            }, 100);

            const handleKeyDown = (e: KeyboardEvent) => {
                if (e.key === 'Escape') {
                    onClose();
                }

                if (e.key === 'Tab') {
                    const focusableElements = drawerRef.current?.querySelectorAll<HTMLElement>(
                        'a[href], button:not([disabled]), textarea, input, select, [tabindex]:not([tabindex="-1"])'
                    );
                    if (!focusableElements || focusableElements.length === 0) {
                        e.preventDefault();
                        return;
                    };

                    const firstElement = focusableElements[0];
                    const lastElement = focusableElements[focusableElements.length - 1];

                    if (e.shiftKey) {
                        if (document.activeElement === firstElement) {
                            lastElement.focus();
                            e.preventDefault();
                        }
                    } else {
                        if (document.activeElement === lastElement) {
                            firstElement.focus();
                            e.preventDefault();
                        }
                    }
                }
            };
            
            document.addEventListener('keydown', handleKeyDown);

            return () => {
                document.body.style.overflow = originalBodyOverflow;
                clearTimeout(focusTimeout);
                document.removeEventListener('keydown', handleKeyDown);
                triggerRef.current?.focus();
            };
        }
    }, [isOpen, onClose]);
    
    if (!isRendered) return null;

    const drawerClass = createStyle({
        position: 'fixed',
        top: 0,
        bottom: 0,
        [position]: 0,
        width: '320px',
        maxWidth: '90vw',
        backgroundColor: theme.colors.backgroundSecondary,
        borderLeft: position === 'right' ? \`1px solid \${theme.colors.border}\` : 'none',
        borderRight: position === 'left' ? \`1px solid \${theme.colors.border}\` : 'none',
        boxShadow: '0 8px 32px rgba(0, 0, 0, 0.5)',
        zIndex: 60,
        display: 'flex',
        flexDirection: 'column',
         '@supports (backdrop-filter: none) or (-webkit-backdrop-filter: none)': {
            backdropFilter: 'blur(16px)',
        },
        '&:focus': {
            outline: 'none',
        }
    });
    
    const headerClass = createStyle({
        padding: theme.spacing.md,
        borderBottom: \`1px solid \${theme.colors.border}\`,
        display: 'flex',
        justifyContent: 'space-between',
        alignItems: 'center',
        flexShrink: 0,
    });
    
    const contentClass = createStyle({
        padding: theme.spacing.md,
        overflowY: 'auto',
        flex: 1,
    });

    const closeButtonClass = createStyle({
        cursor: 'pointer',
        border: 'none',
        background: 'none',
        color: theme.colors.textSecondary,
        padding: '4px',
        '&:hover': { color: theme.colors.text }
    });

    return createPortal(
        <>
            <Backdrop isOpen={isOpen} onClick={onClose} />
            <div 
                ref={drawerRef}
                className={\`\${drawerClass} \${className}\`} 
                style={slideStyle}
                role="dialog"
                aria-modal="true"
                aria-labelledby={title ? titleId : undefined}
                tabIndex={-1}
            >
                <div className={headerClass}>
                    {title && <h2 id={titleId} style={{ fontSize: '1.125rem', fontWeight: 600, color: theme.colors.text }}>{title}</h2>}
                    <button className={closeButtonClass} onClick={onClose} aria-label="Close drawer">
                         <svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>
                    </button>
                </div>
                 <div className={contentClass}>
                    {children}
                 </div>
            </div>
        </>,
        document.body
    );
};`;
const DrawerDemo = () => {
  const [isOpen, setIsOpen] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [title, setTitle] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('Settings');
  const [position, setPosition] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('right');
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_2__.DemoSection, {
    title: "Drawer",
    description: "A panel that slides in from the edge of the screen.",
    livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
      color: "textSecondary"
    }, "Use the 'Props' tab to configure and open the drawer."),
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(DrawerConfigurator, {
      title: title,
      setTitle: setTitle,
      position: position,
      setPosition: setPosition,
      setIsOpen: setIsOpen
    }),
    documentation: documentation,
    fullSourceCode: sourceCode
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Drawer, {
    isOpen: isOpen,
    onClose: () => setIsOpen(false),
    title: title,
    position: position
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
    gap: "1rem"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, null, "This is the content of the drawer."), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, null, "You can place forms, navigation, or any other content here."), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
    onClick: () => setIsOpen(false)
  }, "Close"))));
};

/***/ }),

/***/ "./demo/Dropdown.tsx":
/*!***************************!*\
  !*** ./demo/Dropdown.tsx ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DropdownDemo: () => (/* binding */ DropdownDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");



const documentation = `# Dropdown

A flexible, general-purpose dropdown menu component built on top of the \`Popper\` utility.

## Components

*   **Dropdown**: The main wrapper component.
*   **DropdownTrigger**: The element that, when clicked, toggles the dropdown's visibility. It must wrap a single child.
*   **DropdownContent**: The container for the dropdown menu items that appears when open.
*   **DropdownItem**: A clickable button element within the \`DropdownContent\`.

## Usage

\`\`\`tsx
import { Dropdown, DropdownTrigger, DropdownContent, DropdownItem, Button } from './src/components';

<Dropdown>
    <DropdownTrigger>
        <Button>User Actions</Button>
    </DropdownTrigger>
    <DropdownContent>
         <DropdownItem onClick={() => alert('Profile clicked')}>Profile</DropdownItem>
         <DropdownItem onClick={() => alert('Settings clicked')}>Settings</DropdownItem>
         <DropdownItem onClick={() => alert('Logout clicked')} style={{color: '#f87171'}}>
            Logout
         </DropdownItem>
    </DropdownContent>
</Dropdown>
\`\`\``;
const sourceCode = `import React from 'react';
import { Popper, PopperTrigger, PopperContent, usePopperContext } from '../Popper/Popper';
import { useStyles } from '../../core/hooks/useStyles';
import { useTheme } from '../../core/theme/ThemeProvider';

export const Dropdown: React.FC<{ children: React.ReactNode }> = ({ children }) => <Popper>{children}</Popper>;

export const DropdownTrigger: React.FC<{ children: React.ReactNode }> = ({ children }) => <PopperTrigger>{children}</PopperTrigger>;

export const DropdownContent: React.FC<{ children: React.ReactNode; className?: string }> = ({ children, className = '' }) => {
    const { theme } = useTheme();
    const createStyle = useStyles('dropdown-content');

    const contentClass = createStyle({
        backgroundColor: theme.colors.backgroundSecondary,
        borderRadius: '6px',
        border: \`1px solid \${theme.colors.border}\`,
        boxShadow: \`0 4px 12px rgba(0,0,0,0.5)\`,
        zIndex: 50,
        overflow: 'hidden',
        padding: '4px',
        minWidth: '180px',
         '@supports (backdrop-filter: none) or (-webkit-backdrop-filter: none)': {
            backdropFilter: 'blur(16px)',
        },
    });

    return <PopperContent className={\`\${contentClass} \${className}\`} >{children}</PopperContent>;
};

export const DropdownItem: React.FC<React.ButtonHTMLAttributes<HTMLButtonElement>> = ({ children, className, ...props }) => {
    const { theme } = useTheme();
    const createStyle = useStyles('dropdown-item');
    const { setIsOpen } = usePopperContext();

    const itemClass = createStyle({
        width: '100%',
        padding: '8px 12px',
        border: 'none',
        backgroundColor: 'transparent',
        textAlign: 'left',
        cursor: 'pointer',
        display: 'grid',
        gridTemplateColumns: 'auto 1fr',
        alignItems: 'center',
        gap: theme.spacing.sm,
        color: theme.colors.textSecondary,
        transition: 'all 0.2s ease',
        borderRadius: '4px',
        fontSize: '14px',
        '&:hover': {
            backgroundColor: 'rgba(255, 255, 255, 0.1)',
            color: theme.colors.text,
        }
    });
    
    const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {
        props.onClick?.(e);
        setIsOpen(false);
    };

    return <button className={\`\${itemClass} \${className}\`} {...props} onClick={handleClick}>{children}</button>;
};`;
const DropdownDemo = () => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_2__.DemoSection, {
  title: "Dropdown",
  description: "A flexible dropdown menu built on Popper, an alternative to StyledMenu.",
  livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Dropdown, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.DropdownTrigger, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Button, null, "User Actions")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.DropdownContent, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.DropdownItem, {
    onClick: () => alert('Profile clicked')
  }, "Profile"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.DropdownItem, {
    onClick: () => alert('Settings clicked')
  }, "Settings"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.DropdownItem, {
    onClick: () => alert('Logout clicked'),
    style: {
      color: '#f87171'
    }
  }, "Logout"))),
  propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    color: "textSecondary"
  }, "This is a standard implementation of the Dropdown component. No props are available to configure in this demo."),
  documentation: documentation,
  fullSourceCode: sourceCode
});

/***/ }),

/***/ "./demo/Editable.tsx":
/*!***************************!*\
  !*** ./demo/Editable.tsx ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   EditableDemo: () => (/* binding */ EditableDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");



const EditableConfigurator = ({
  defaultValue,
  setDefaultValue
}) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "1rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Input, {
  label: "DefaultValue Prop",
  value: defaultValue,
  onChange: e => setDefaultValue(e.target.value)
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
  size: "sm"
}, "This control remounts the component with a new default value."));
const documentation = `# Editable

A component that provides an inline editing experience. It displays text that, when clicked, transforms into an input field.

## Props

*   \`defaultValue\` (string, required): The initial text value to display.
*   \`onSave\` (function, required): A callback function that is triggered when the user confirms their edit. It receives the new value as an argument.

## Usage

\`\`\`tsx
import { Editable } from './src/components';

<Editable 
  defaultValue="Click to edit me"
  onSave={(newValue) => console.log('Saved:', newValue)}
/>
\`\`\``;
const sourceCode = `import React, { useState } from 'react';
import { Box } from '../Box/Box';
import { Text } from '../Text/Text';
import { TextInput } from '../TextInput/TextInput';
import { ButtonGroup, IconButton } from '..';
import { Flex } from '../Flex/Flex';
import { TimesIcon } from '../../icons';

const CheckIcon = () => <svg viewBox="0 0 24 24" width="1em" height="1em" stroke="currentColor" strokeWidth="2" fill="none" strokeLinecap="round" strokeLinejoin="round"><polyline points="20 6 9 17 4 12"></polyline></svg>;

interface EditableProps {
    defaultValue: string;
    onSave: (value: string) => void;
}

export const Editable: React.FC<EditableProps> = ({ defaultValue, onSave }) => {
    const [isEditing, setIsEditing] = useState(false);
    const [value, setValue] = useState(defaultValue);

    const handleSave = () => {
        onSave(value);
        setIsEditing(false);
    };

    const handleCancel = () => {
        setValue(defaultValue);
        setIsEditing(false);
    };

    if (isEditing) {
        return (
            <Flex align="center" gap="0.5rem">
                <TextInput
                    value={value}
                    onChange={(e) => setValue(e.target.value)}
                    onKeyDown={(e) => {
                        if (e.key === 'Enter') handleSave();
                        if (e.key === 'Escape') handleCancel();
                    }}
                    autoFocus
                />
                <ButtonGroup isAttached>
                    <IconButton icon={CheckIcon} aria-label="Save" onClick={handleSave} />
                    <IconButton icon={TimesIcon} aria-label="Cancel" onClick={handleCancel} />
                </ButtonGroup>
            </Flex>
        );
    }

    return (
        <Text onClick={() => setIsEditing(true)} style={{ cursor: 'pointer', borderBottom: '1px dashed grey', padding: '0.5rem 0.75rem' }}>
            {value}
        </Text>
    );
};`;
const EditableDemo = () => {
  const {
    addToast
  } = (0,_src_components__WEBPACK_IMPORTED_MODULE_1__.useToast)();
  const [defaultValue, setDefaultValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('Project Alpha');
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_2__.DemoSection, {
    title: "Editable",
    description: "A component for inline editing. Click the text in the preview to edit it.",
    livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Editable, {
      defaultValue: defaultValue,
      key: defaultValue,
      onSave: newValue => {
        addToast({
          title: 'Saved!',
          description: `Name changed to "${newValue}"`,
          variant: 'success'
        });
      }
    }),
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(EditableConfigurator, {
      defaultValue: defaultValue,
      setDefaultValue: setDefaultValue
    }),
    documentation: documentation,
    fullSourceCode: sourceCode
  });
};

/***/ }),

/***/ "./demo/FileUpload.tsx":
/*!*****************************!*\
  !*** ./demo/FileUpload.tsx ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   FileUploadDemo: () => (/* binding */ FileUploadDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");



const documentation = `# File Upload

A component that allows users to select a file by clicking or by dragging and dropping it into a designated area.

## Props

*   \`onFileSelect\` (function, required): A callback function that is triggered when a file is selected or cleared. It receives the \`File\` object or \`null\`.
*   \`className\` (string, optional): Additional CSS classes for the container.

## Usage

\`\`\`tsx
import { FileUpload } from './src/components';
import { useState } from 'react';

const [selectedFile, setSelectedFile] = useState(null);

<FileUpload onFileSelect={setSelectedFile} />
\`\`\``;
const sourceCode = `import React, { useState, useRef, useCallback } from 'react';
import { useStyles } from '../../core/hooks/useStyles';
import { useTheme } from '../../core/theme/ThemeProvider';
import { Text } from '../Text/Text';

interface FileUploadProps {
    onFileSelect: (file: File | null) => void;
    className?: string;
}

export const FileUpload: React.FC<FileUploadProps> = ({ onFileSelect, className }) => {
    const { theme } = useTheme();
    const createStyle = useStyles('file-upload');
    const [isDragging, setIsDragging] = useState(false);
    const [fileName, setFileName] = useState('');
    const fileInputRef = useRef<HTMLInputElement>(null);

    const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {
        const file = e.target.files?.[0];
        if (file) {
            setFileName(file.name);
            onFileSelect(file);
        } else {
            setFileName('');
            onFileSelect(null);
        }
    };

    const handleDrag = useCallback((e: React.DragEvent) => {
        e.preventDefault();
        e.stopPropagation();
    }, []);

    const handleDragIn = useCallback((e: React.DragEvent) => {
        handleDrag(e);
        if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {
            setIsDragging(true);
        }
    }, [handleDrag]);
    
    const handleDragOut = useCallback((e: React.DragEvent) => {
        handleDrag(e);
        setIsDragging(false);
    }, [handleDrag]);
    
    const handleDrop = useCallback((e: React.DragEvent) => {
        handleDrag(e);
        setIsDragging(false);
        const file = e.dataTransfer.files?.[0];
         if (file) {
            setFileName(file.name);
            onFileSelect(file);
        }
    }, [handleDrag, onFileSelect]);

    const handleClick = () => {
        fileInputRef.current?.click();
    };
    
    const containerClass = createStyle({
        width: '100%',
        padding: theme.spacing.lg,
        border: \`2px dashed \${isDragging ? theme.colors.primary : theme.colors.border}\`,
        borderRadius: '8px',
        backgroundColor: isDragging ? 'rgba(59, 130, 246, 0.1)' : theme.colors.backgroundSecondary,
        display: 'flex',
        flexDirection: 'column',
        alignItems: 'center',
        justifyContent: 'center',
        textAlign: 'center',
        cursor: 'pointer',
        transition: 'all 0.2s',
        '@supports (backdrop-filter: none) or (-webkit-backdrop-filter: none)': {
            backdropFilter: 'blur(12px)',
        },
    });

    return (
        <div 
            className={\`\${containerClass} \${className}\`}
            onClick={handleClick}
            onDragEnter={handleDragIn}
            onDragLeave={handleDragOut}
            onDragOver={handleDrag}
            onDrop={handleDrop}
        >
            <input type="file" ref={fileInputRef} onChange={handleFileChange} style={{ display: 'none' }} />
            <Text>
                {fileName ? \`Selected: \${fileName}\` : 'Drag & drop a file here, or click to select'}
            </Text>
            <Text size="12px" color={theme.colors.textSecondary}>Max file size: 10MB</Text>
        </div>
    );
};`;
const FileUploadDemo = () => {
  const [file, setFile] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_2__.DemoSection, {
    title: "File Upload",
    description: "A drag-and-drop file input component.",
    livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
      gap: "1rem",
      style: {
        width: '100%'
      }
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.FileUpload, {
      onFileSelect: setFile
    }), file && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
      size: "14px"
    }, "File ready for upload: ", file.name, " (", Math.round(file.size / 1024), " KB)")),
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
      color: "textSecondary"
    }, "The main prop, `onFileSelect`, is a callback. Use the Preview tab to test the file selection and drag-and-drop functionality."),
    documentation: documentation,
    fullSourceCode: sourceCode
  });
};

/***/ }),

/***/ "./demo/Flex.tsx":
/*!***********************!*\
  !*** ./demo/Flex.tsx ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   FlexDemo: () => (/* binding */ FlexDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _src_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../src/core */ "./src/core/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");




const FlexConfigurator = ({
  direction,
  setDirection,
  align,
  setAlign,
  justify,
  setJustify,
  wrap,
  setWrap
}) => {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
    gap: "1.5rem"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
    gap: "0.5rem"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    as: "label",
    size: "sm",
    weight: "medium",
    color: "textSecondary"
  }, "Direction"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.SegmentedControl, {
    value: direction,
    onChange: setDirection,
    options: [{
      label: 'row',
      value: 'row'
    }, {
      label: 'column',
      value: 'column'
    }, {
      label: 'row-reverse',
      value: 'row-reverse'
    }, {
      label: 'column-reverse',
      value: 'column-reverse'
    }]
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
    gap: "0.5rem"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    as: "label",
    size: "sm",
    weight: "medium",
    color: "textSecondary"
  }, "Align Items"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.SegmentedControl, {
    value: align,
    onChange: setAlign,
    options: [{
      label: 'start',
      value: 'flex-start'
    }, {
      label: 'center',
      value: 'center'
    }, {
      label: 'end',
      value: 'flex-end'
    }, {
      label: 'stretch',
      value: 'stretch'
    }]
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
    gap: "0.5rem"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    as: "label",
    size: "sm",
    weight: "medium",
    color: "textSecondary"
  }, "Justify Content"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.SegmentedControl, {
    value: justify,
    onChange: setJustify,
    options: [{
      label: 'start',
      value: 'flex-start'
    }, {
      label: 'center',
      value: 'center'
    }, {
      label: 'end',
      value: 'flex-end'
    }, {
      label: 'space-between',
      value: 'space-between'
    }]
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
    gap: "0.5rem"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    as: "label",
    size: "sm",
    weight: "medium",
    color: "textSecondary"
  }, "Wrap"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.SegmentedControl, {
    value: wrap,
    onChange: setWrap,
    options: [{
      label: 'nowrap',
      value: 'nowrap'
    }, {
      label: 'wrap',
      value: 'wrap'
    }]
  })));
};
const documentation = `# Flex

A polymorphic layout primitive that renders a \`div\` by default but can be changed to any other HTML element using the \`as\` prop. It provides convenient props for controlling flexbox layouts.

## Props

*   \`as\` (React.ElementType, optional): The underlying HTML element to render.
*   \`direction\` (CSS \`flex-direction\`, optional)
*   \`align\` (CSS \`align-items\`, optional)
*   \`justify\` (CSS \`justify-content\`, optional)
*   \`wrap\` (CSS \`flex-wrap\`, optional)
*   \`gap\` (CSS \`gap\`, optional)

## Usage

\`\`\`tsx
<Flex direction="row" gap="1rem" align="center">
  <Card>Item A</Card>
  <Card>Item B</Card>
</Flex>
\`\`\``;
const fullSourceCode = `import React from 'react';
import { useStyles } from '../../core';

type FlexProps<C extends React.ElementType> = {
    as?: C;
    direction?: React.CSSProperties['flexDirection'];
    align?: React.CSSProperties['alignItems'];
    justify?: React.CSSProperties['justifyContent'];
    wrap?: React.CSSProperties['flexWrap'];
    gap?: React.CSSProperties['gap'];
} & Omit<React.ComponentPropsWithoutRef<C>, 'as'>;

export const Flex = <C extends React.ElementType = 'div'>({
    direction,
    align,
    justify,
    wrap,
    gap,
    as: Component = 'div' as C,
    className,
    ...props
}: FlexProps<C>) => {
    const createStyle = useStyles('flex');

    const flexClass = createStyle({
        display: 'flex',
        flexDirection: direction,
        alignItems: align,
        justifyContent: justify,
        flexWrap: wrap,
        gap: gap,
    });

    const finalClassName = [flexClass, className].filter(Boolean).join(' ');

    return React.createElement(Component, { ...props, className: finalClassName });
};`;
const FlexDemo = () => {
  const {
    theme
  } = (0,_src_core__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const [direction, setDirection] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('row');
  const [align, setAlign] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('center');
  const [justify, setJustify] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('flex-start');
  const [wrap, setWrap] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('wrap');
  const code = `<Flex direction="${direction}" align="${align}" justify="${justify}" wrap="${wrap}" gap="1rem">
    <Card><Text>Item 1</Text></Card>
    <Card><Text>Item 2</Text></Card>
    <Card><Text>Item 3</Text></Card>
</Flex>`;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_3__.DemoSection, {
    title: "Flex",
    description: "A layout component for arranging items with consistent spacing, powered by Flexbox.",
    initialCode: code,
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(FlexConfigurator, {
      direction: direction,
      setDirection: setDirection,
      align: align,
      setAlign: setAlign,
      justify: justify,
      setJustify: setJustify,
      wrap: wrap,
      setWrap: setWrap
    }),
    documentation: documentation,
    fullSourceCode: fullSourceCode
  });
};

/***/ }),

/***/ "./demo/FloatingActionButton.tsx":
/*!***************************************!*\
  !*** ./demo/FloatingActionButton.tsx ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   FloatingActionButtonDemo: () => (/* binding */ FloatingActionButtonDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _src_icons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../src/icons */ "./src/icons/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");




const FABConfigurator = ({
  size,
  setSize
}) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "1rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
  as: "label",
  size: "sm",
  weight: "medium",
  color: "textSecondary"
}, "Size Prop"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.SegmentedControl, {
  value: size,
  onChange: setSize,
  options: [{
    label: 'Small',
    value: 'small'
  }, {
    label: 'Medium',
    value: 'medium'
  }, {
    label: 'Large',
    value: 'large'
  }]
}));
const documentation = `# Floating Action Button (FAB)

A circular button that appears in front of all screen content, typically used for a primary or common action.

## Props

*   \`icon\` (React.ElementType, required): The icon component to display inside the button.
*   \`label\` (string, required): An accessible label for the button, as it has no visible text.
*   \`position\` (object, optional): An object with \`top\`, \`bottom\`, \`left\`, \`right\` properties to position the FAB. Defaults to \`{ bottom: '2rem', right: '2rem' }\`.
*   \`size\` (enum: 'small' | 'medium' | 'large', optional, default: 'medium'): The size of the button.
*   All other props are passed down to the underlying \`Button\` component (e.g., \`onClick\`).

## Usage

\`\`\`tsx
import { FloatingActionButton } from './src/components';
import { PlusIcon } from './src/icons';

<FloatingActionButton
  icon={PlusIcon}
  label="Add new item"
  onClick={() => alert('FAB clicked!')}
/>
\`\`\``;
const sourceCode = `import React from 'react';
import { Button, ButtonProps } from '../Button';
import { Icon } from '../Icon/Icon';
import { useStyles } from '../../core';

interface FloatingActionButtonProps extends Omit<ButtonProps, 'variant'> {
    icon: React.ElementType;
    label: string; // for accessibility
    position?: { bottom?: string; right?: string; top?: string; left?: string };
    size?: 'small' | 'medium' | 'large';
}

export const FloatingActionButton: React.FC<FloatingActionButtonProps> = ({
    icon,
    label,
    position = { bottom: '2rem', right: '2rem' },
    size = 'medium',
    className = '',
    ...props
}) => {
    const createStyle = useStyles('fab');

    const sizes = {
        small: { wrapper: '40px', icon: 18 },
        medium: { wrapper: '56px', icon: 24 },
        large: { wrapper: '72px', icon: 32 },
    };

    const fabClass = createStyle({
        position: 'fixed',
        ...position,
        width: sizes[size].wrapper,
        height: sizes[size].wrapper,
        borderRadius: '50%',
        padding: 0,
        boxShadow: '0 4px 12px rgba(0,0,0,0.4)',
        display: 'flex',
        alignItems: 'center',
        justifyContent: 'center',
        zIndex: 40,
    });

    return (
        <Button
            variant="primary"
            className={\`\${fabClass} \${className}\`}
            aria-label={label}
            {...props}
        >
            <Icon as={icon} size={sizes[size].icon} />
        </Button>
    );
};`;
const FloatingActionButtonDemo = () => {
  const [size, setSize] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('medium');
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_3__.DemoSection, {
    title: "Floating Action Button",
    description: "A circular button for a primary action that \"floats\" above the UI. The button is fixed to the viewport, not this container.",
    livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
      color: "textSecondary"
    }, "The FAB is positioned at the bottom right of the screen. Change its props below."),
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(FABConfigurator, {
      size: size,
      setSize: setSize
    }),
    documentation: documentation,
    fullSourceCode: sourceCode
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.FloatingActionButton, {
    key: size // Re-mount on size change to see effect
    ,
    icon: _src_icons__WEBPACK_IMPORTED_MODULE_2__.PlusIcon,
    label: "Add new item",
    onClick: () => alert('FAB clicked!'),
    size: size
  }));
};

/***/ }),

/***/ "./demo/Footer.tsx":
/*!*************************!*\
  !*** ./demo/Footer.tsx ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   FooterDemo: () => (/* binding */ FooterDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");



const documentation = `# Footer

A semantic container component for the bottom section of a page, typically containing copyright information, links, and other metadata.

## Props

*   \`children\` (React.ReactNode): The content to be rendered inside the footer.
*   All other standard \`<footer>\` attributes are supported.

## Usage

\`\`\`tsx
import { Footer, Text, Link } from './src/components';

<Footer>
  <Text size="14px">
    Â© {new Date().getFullYear()} ZwheUI. All Rights Reserved.
  </Text>
  <Link href="/privacy">Privacy Policy</Link>
</Footer>
\`\`\``;
const sourceCode = `import React from 'react';
import { useStyles } from '../../core/hooks/useStyles';
import { useTheme } from '../../core/theme/ThemeProvider';

interface FooterProps extends React.HTMLAttributes<HTMLElement> {}

export const Footer: React.FC<FooterProps> = ({ children, className = '', ...props }) => {
    const { theme } = useTheme();
    const createStyle = useStyles('footer');

    const footerClass = createStyle({
        padding: \`\${theme.spacing.lg} \${theme.spacing.lg}\`,
        backgroundColor: theme.colors.backgroundSecondary,
        borderTop: \`1px solid \${theme.colors.border}\`,
        color: theme.colors.textSecondary,
        textAlign: 'center',
        marginTop: 'auto', // Pushes footer to the bottom in a flex column layout
    });

    return (
        <footer className={\`\${footerClass} \${className}\`} {...props}>
            {children}
        </footer>
    );
};`;
const FooterDemo = () => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_2__.DemoSection, {
  title: "Footer",
  description: "A semantic container for the bottom of a page layout.",
  livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Footer, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
    gap: "0.5rem"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    size: "14px",
    color: "inherit"
  }, "\xA9 2024 ZwheUI"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Link, {
    href: "#"
  }, "Terms of Service"))),
  propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    color: "textSecondary"
  }, "This is a standard implementation of the Footer component. No props are available to configure in this demo."),
  documentation: documentation,
  fullSourceCode: sourceCode
});

/***/ }),

/***/ "./demo/FormControl.tsx":
/*!******************************!*\
  !*** ./demo/FormControl.tsx ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   FormControlDemo: () => (/* binding */ FormControlDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");



const FormControlConfigurator = ({
  isInvalid,
  setIsInvalid
}) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Checkbox, {
  label: "Is Invalid Prop",
  checked: isInvalid,
  onChange: e => setIsInvalid(e.target.checked)
});
const documentation = `# FormControl

A set of components that provides context to form inputs for building accessible and structured forms.

## Components

*   **FormControl**: The main wrapper that provides context (\`id\`, \`isInvalid\`, \`isDisabled\`) to its children.
*   **FormLabel**: A \`<label>\` that is automatically associated with the input via the context \`id\`.
*   **FormHelperText**: Text displayed below the input to provide additional guidance.
*   **FormErrorMessage**: An error message that is only rendered when \`isInvalid\` is true on \`FormControl\`.

## Usage

\`\`\`tsx
import { FormControl, FormLabel, FormHelperText, FormErrorMessage, TextInput } from './src/components';

<FormControl isInvalid={isError}>
  <FormLabel>Email Address</FormLabel>
  <TextInput type="email" />
  <FormHelperText>We'll never share your email.</FormHelperText>
  <FormErrorMessage>Your email is invalid.</FormErrorMessage>
</FormControl>
\`\`\``;
const sourceCode = `import React, { createContext, useContext, useId } from 'react';
import { Box } from '../Box/Box';
import { useStyles, useTheme } from '../../core';
import { Text } from '../Text/Text';

interface FormControlContextType {
    id: string;
    isInvalid?: boolean;
    isDisabled?: boolean;
}

const FormControlContext = createContext<FormControlContextType | null>(null);
const useFormControl = () => useContext(FormControlContext);

interface FormControlProps extends React.ComponentProps<typeof Box<'div'>> {
    isInvalid?: boolean;
    isDisabled?: boolean;
}

export const FormControl: React.FC<FormControlProps> = ({ isInvalid, isDisabled, ...props }) => {
    const id = useId();
    const context = { id, isInvalid, isDisabled };
    
    const createStyle = useStyles('form-control');
    const formControlClass = createStyle({
        display: 'flex',
        flexDirection: 'column',
        gap: '0.25rem',
    });

    return (
        <FormControlContext.Provider value={context}>
            <Box className={formControlClass} {...props} />
        </FormControlContext.Provider>
    );
};

export const FormLabel: React.FC<React.ComponentProps<typeof Text<'label'>>> = (props) => {
    const context = useFormControl();
    const { theme } = useTheme();
    return (
        <Text 
            as="label"
            htmlFor={context?.id}
            size={theme.typography.fontSizes.sm}
            weight={theme.typography.fontWeights.medium}
            color={theme.colors.textSecondary}
            {...props}
        />
    );
};

export const FormHelperText: React.FC<React.ComponentProps<typeof Text<'p'>>> = (props) => {
    const context = useFormControl();
    const { theme } = useTheme();
    return (
        <Text 
            size={theme.typography.fontSizes.sm}
            color={theme.colors.textSecondary}
            id={context ? \`\${context.id}-helper-text\` : undefined}
            {...props}
        />
    );
};

export const FormErrorMessage: React.FC<React.ComponentProps<typeof Text<'p'>>> = (props) => {
    const context = useFormControl();
    if (!context?.isInvalid) return null;
    
    return (
        <Text
            color="#f87171" // red-400
            size="0.875rem"
            id={context ? \`\${context.id}-error-message\` : undefined}
            aria-live="polite"
            {...props}
        />
    );
};`;
const FormControlDemo = () => {
  const [isInvalid, setIsInvalid] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_2__.DemoSection, {
    title: "Form Control",
    description: "A group of components for building accessible and structured forms.",
    livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.FormControl, {
      isInvalid: isInvalid,
      style: {
        width: '300px'
      }
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.FormLabel, null, "Email Address"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Input, {
      placeholder: "you@example.com"
    }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.FormHelperText, null, "We'll never share your email."), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.FormErrorMessage, null, "This email address is not valid.")),
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(FormControlConfigurator, {
      isInvalid: isInvalid,
      setIsInvalid: setIsInvalid
    }),
    documentation: documentation,
    fullSourceCode: sourceCode
  });
};

/***/ }),

/***/ "./demo/GraphicsNodeEditor.tsx":
/*!*************************************!*\
  !*** ./demo/GraphicsNodeEditor.tsx ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   GraphicsNodeEditorDemo: () => (/* binding */ GraphicsNodeEditorDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _src_components_GraphicsNodeEditor_nodeTypes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../src/components/GraphicsNodeEditor/nodeTypes */ "./src/components/GraphicsNodeEditor/nodeTypes.tsx");
/* harmony import */ var _src_components_GraphicsNodeEditor_plugins_GZoom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../src/components/GraphicsNodeEditor/plugins/GZoom */ "./src/components/GraphicsNodeEditor/plugins/GZoom.tsx");
/* harmony import */ var _src_components_GraphicsNodeEditor_plugins_GMenu__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../src/components/GraphicsNodeEditor/plugins/GMenu */ "./src/components/GraphicsNodeEditor/plugins/GMenu.tsx");





const initialNodes = [{
  ..._src_components_GraphicsNodeEditor_nodeTypes__WEBPACK_IMPORTED_MODULE_2__.numberNodeType,
  id: 'num1',
  position: {
    x: 50,
    y: 50
  },
  data: {
    value: 100
  }
}, {
  ..._src_components_GraphicsNodeEditor_nodeTypes__WEBPACK_IMPORTED_MODULE_2__.sliderNodeType,
  id: 'slider1',
  position: {
    x: 50,
    y: 200
  },
  data: {
    value: 50
  }
}, {
  ..._src_components_GraphicsNodeEditor_nodeTypes__WEBPACK_IMPORTED_MODULE_2__.addNodeType,
  id: 'add1',
  position: {
    x: 350,
    y: 80
  }
}, {
  ..._src_components_GraphicsNodeEditor_nodeTypes__WEBPACK_IMPORTED_MODULE_2__.subtractNodeType,
  id: 'sub1',
  position: {
    x: 350,
    y: 220
  }
}, {
  ..._src_components_GraphicsNodeEditor_nodeTypes__WEBPACK_IMPORTED_MODULE_2__.displayNodeType,
  id: 'display1',
  position: {
    x: 650,
    y: 80
  }
}, {
  ..._src_components_GraphicsNodeEditor_nodeTypes__WEBPACK_IMPORTED_MODULE_2__.displayNodeType,
  id: 'display2',
  position: {
    x: 650,
    y: 220
  }
}];
const initialConnections = [{
  id: 'conn-1',
  sourceNodeId: 'num1',
  sourceSocketId: 'value',
  targetNodeId: 'add1',
  targetSocketId: 'a'
}, {
  id: 'conn-2',
  sourceNodeId: 'slider1',
  sourceSocketId: 'value',
  targetNodeId: 'add1',
  targetSocketId: 'b'
}, {
  id: 'conn-3',
  sourceNodeId: 'num1',
  sourceSocketId: 'value',
  targetNodeId: 'sub1',
  targetSocketId: 'a'
}, {
  id: 'conn-4',
  sourceNodeId: 'slider1',
  sourceSocketId: 'value',
  targetNodeId: 'sub1',
  targetSocketId: 'b'
}, {
  id: 'conn-5',
  sourceNodeId: 'add1',
  sourceSocketId: 'result',
  targetNodeId: 'display1',
  targetSocketId: 'value'
}, {
  id: 'conn-6',
  sourceNodeId: 'sub1',
  sourceSocketId: 'result',
  targetNodeId: 'display2',
  targetSocketId: 'value'
}];
const EditorWithControls = () => {
  const {
    processGraph
  } = (0,_src_components__WEBPACK_IMPORTED_MODULE_1__.useGraphicsContext)();
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
    gap: "1rem"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
    direction: "row",
    justify: "space-between",
    align: "center"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, null, "A visual editor for creating and connecting nodes. Use the scroll wheel to zoom and drag the background to pan. Right-click the background to add new nodes."), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
    onClick: processGraph
  }, "Process Graph")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    style: {
      height: '600px',
      width: '100%',
      borderRadius: '8px',
      overflow: 'hidden'
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.GraphicsNodeEditorView, {
    plugins: [_src_components_GraphicsNodeEditor_plugins_GZoom__WEBPACK_IMPORTED_MODULE_3__.GZoom, _src_components_GraphicsNodeEditor_plugins_GMenu__WEBPACK_IMPORTED_MODULE_4__.GMenu]
  })));
};
const GraphicsNodeEditorDemo = () => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Sofa, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "1rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
  as: "h2",
  size: "1.5rem",
  weight: "600"
}, "Graphics Node Editor"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.GraphicsProvider, {
  initialNodes: initialNodes,
  initialConnections: initialConnections,
  creatableNodeTypes: _src_components_GraphicsNodeEditor_nodeTypes__WEBPACK_IMPORTED_MODULE_2__.creatableNodeTypes
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(EditorWithControls, null))));

/***/ }),

/***/ "./demo/Grid.tsx":
/*!***********************!*\
  !*** ./demo/Grid.tsx ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   GridDemo: () => (/* binding */ GridDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");



const GridConfigurator = ({
  columns,
  setColumns,
  minItemWidth,
  setMinItemWidth,
  gap,
  setGap
}) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "1.5rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "0.5rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
  as: "label",
  size: "sm",
  weight: "medium",
  color: "textSecondary"
}, "Columns (fixed, overrides min width)"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Slider, {
  value: columns,
  onChange: setColumns,
  min: 0,
  max: 6,
  step: 1,
  showValue: true
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
  size: "xs",
  color: "textSecondary"
}, "Set to 0 to use responsive mode with minItemWidth.")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "0.5rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
  as: "label",
  size: "sm",
  weight: "medium",
  color: "textSecondary"
}, "Min Item Width (px, responsive mode)"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Slider, {
  value: minItemWidth,
  onChange: setMinItemWidth,
  min: 80,
  max: 300,
  step: 10,
  showValue: true
})), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "0.5rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
  as: "label",
  size: "sm",
  weight: "medium",
  color: "textSecondary"
}, "Gap (rem)"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Slider, {
  value: gap,
  onChange: setGap,
  min: 0,
  max: 4,
  step: 0.5,
  showValue: true
})));
const documentation = `# Grid

A responsive grid layout component. It automatically adjusts the number of columns to fit its container, or uses a fixed number of columns. Now includes a \`Grid.Item\` sub-component for controlling column and row spans.

## Components

*   **Grid**: The main grid container.
*   **Grid.Item**: A wrapper for a grid item, allowing control over its span.

## Props

### Grid
*   \`minItemWidth\` (string, optional, default: '350px'): The minimum width for each item in a responsive grid.
*   \`gap\` (string, optional, default: '1.5rem'): The space between grid items.
*   \`columns\` (number, optional): A fixed number of columns. Overrides \`minItemWidth\`.

### Grid.Item
*   \`colSpan\` (number, optional): The number of columns the item should span.
*   \`rowSpan\` (number, optional): The number of rows the item should span.
`;
const fullSourceCode = `import React from 'react';
import { useStyles } from '../../core/hooks/useStyles';

interface GridItemProps extends React.HTMLAttributes<HTMLDivElement> {
    colSpan?: number;
    rowSpan?: number;
}

const GridItem: React.FC<GridItemProps> = ({
    colSpan,
    rowSpan,
    className = '',
    children,
    ...props
}) => {
    const createStyle = useStyles('grid-item');
    const itemClass = createStyle({
        gridColumn: colSpan ? \`span \${colSpan}\` : undefined,
        gridRow: rowSpan ? \`span \${rowSpan}\` : undefined,
    });
    return (
        <div className={\`\${itemClass} \${className}\`} {...props}>
            {children}
        </div>
    );
};
GridItem.displayName = 'Grid.Item';


interface GridProps extends React.HTMLAttributes<HTMLDivElement> {
    minItemWidth?: string;
    gap?: string;
    columns?: number;
    alignItems?: string;
    justifyContent?: string;
    flow?: 'row' | 'column';
}

export const Grid: React.FC<GridProps> & { Item: typeof GridItem } = ({ 
    minItemWidth = '350px', 
    gap = '1.5rem', 
    columns,
    alignItems,
    justifyContent,
    flow = 'row',
    className = '', 
    children, 
    ...props 
}) => {
    const createStyle = useStyles('grid');
    
    const gridClass = createStyle({
        display: 'grid',
        gridTemplateColumns: columns ? \`repeat(\${columns}, 1fr)\` : \`repeat(auto-fit, minmax(\${minItemWidth}, 1fr))\`,
        gap: gap,
        alignItems: alignItems,
        justifyContent: justifyContent,
        gridAutoFlow: flow,
        '@media': {
            "(maxWidth: 'sm')": {
                gridTemplateColumns: columns ? undefined : '1fr',
            },
        },
    });

    return (
        <div className={\`\${gridClass} \${className}\`} {...props}>
            {children}
        </div>
    );
};

Grid.Item = GridItem;`;
const GridDemo = () => {
  const [columns, setColumns] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);
  const [minItemWidth, setMinItemWidth] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(150);
  const [gap, setGap] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(1);
  const gridProps = columns > 0 ? `columns="${columns}"` : `minItemWidth="${minItemWidth}px"`;
  const code = `<Grid ${gridProps} gap="${gap}rem">
    <Grid.Item colSpan="${columns > 2 ? 2 : 1}"><Card><Text>Item A</Text></Card></Grid.Item>
    <Grid.Item><Card><Text>Item B</Text></Card></Grid.Item>
    <Grid.Item><Card><Text>Item C</Text></Card></Grid.Item>
    <Grid.Item><Card><Text>Item D</Text></Card></Grid.Item>
</Grid>`;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_2__.DemoSection, {
    title: "Grid",
    description: "A responsive grid layout with support for fixed columns, auto-fit columns, and spanning.",
    initialCode: code,
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(GridConfigurator, {
      columns: columns,
      setColumns: setColumns,
      minItemWidth: minItemWidth,
      setMinItemWidth: setMinItemWidth,
      gap: gap,
      setGap: setGap
    }),
    documentation: documentation,
    fullSourceCode: fullSourceCode
  });
};

/***/ }),

/***/ "./demo/Header.tsx":
/*!*************************!*\
  !*** ./demo/Header.tsx ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   HeaderDemo: () => (/* binding */ HeaderDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");



const HeaderConfigurator = ({
  height,
  setHeight
}) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Input, {
  label: "Height Prop (e.g., 60px)",
  value: height,
  onChange: e => setHeight(e.target.value)
});
const documentation = `# Header

A semantic container component for the top section of a page, typically containing branding, navigation, and primary actions. It uses sub-components for layout.

## Components

*   **Header**: The main container.
*   **Header.Left**: A wrapper for content aligned to the left (e.g., logo, title).
*   **Header.Right**: A wrapper for content aligned to the right (e.g., actions, user menu).

## Usage

\`\`\`tsx
import { Header, Text, Button } from './src/components';

<Header>
  <Header.Left>
    <Text as="h1" size="1.25rem" weight="600">My App</Text>
  </Header.Left>
  <Header.Right>
    <Button>Log In</Button>
  </Header.Right>
</Header>
\`\`\``;
const sourceCode = `import React from 'react';
import { useStyles } from '../../core/hooks/useStyles';
import { useTheme } from '../../core/theme/ThemeProvider';
import { Container } from '../Container/Container';

interface HeaderProps extends React.HTMLAttributes<HTMLElement> {
    children: React.ReactNode;
    height?: string;
}

const HeaderLeft: React.FC<{ children: React.ReactNode; className?: string }> = ({ children, className }) => {
    const createStyle = useStyles('header-left');
    const class_ = createStyle({
        display: 'flex',
        alignItems: 'center',
        gap: '1rem',
        justifySelf: 'start',
        '@media': {
            "(maxWidth: 'md')": {
                justifySelf: 'center',
            },
        },
    });

    return <div className={\`\${class_} \${className}\`}>{children}</div>;
};
HeaderLeft.displayName = 'Header.Left';

const HeaderRight: React.FC<{ children: React.ReactNode; className?: string }> = ({ children, className }) => {
    const createStyle = useStyles('header-right');
    const class_ = createStyle({
        display: 'flex',
        alignItems: 'center',
        gap: '1rem',
        justifySelf: 'end',
        '@media': {
            "(maxWidth: 'md')": {
                justifySelf: 'center',
            },
             "(maxWidth: 'sm')": {
                display: 'none',
            },
        },
    });

    return <div className={\`\${class_} \${className}\`}>{children}</div>;
};
HeaderRight.displayName = 'Header.Right';


export const Header: React.FC<HeaderProps> & {
    Left: typeof HeaderLeft;
    Right: typeof HeaderRight;
} = ({ children, className = '', height, ...props }) => {
    const { theme } = useTheme();
    const createStyle = useStyles('header');

    const headerClass = createStyle({
        padding: height ? '0' : '10px 0',
        backgroundColor: theme.colors.backgroundSecondary,
        borderBottom: \`1px solid \${theme.colors.border}\`,
        position: 'sticky',
        top: 0,
        zIndex: 50,
        height: height,
        display: height ? 'flex' : 'block',
        alignItems: height ? 'center' : undefined,
        '@supports (backdrop-filter: none) or (-webkit-backdrop-filter: none)': {
            backdropFilter: 'blur(16px)',
            backgroundColor: theme.colors.backgroundSecondary.replace(/, ?\\d+\\.?\\d*\\)$/, ', 0.5)'),
        },
        '@media': {
            "(maxWidth: 'sm')": {
                padding: height ? '0' : \`\${theme.spacing.sm} 0\`,
            }
        },
    });
    
    const containerClass = createStyle({
        display: 'grid',
        gridTemplateColumns: '1fr auto',
        alignItems: 'center',
        padding: 0,
        width: height ? '100%' : undefined,
        '@media': {
            "(maxWidth: 'md')": {
                gridTemplateColumns: '1fr',
                gap: theme.spacing.sm,
            },
        },
    });

    return (
        <header className={\`\${headerClass} \${className}\`} {...props}>
            <Container className={containerClass}>
                {children}
            </Container>
        </header>
    );
};

Header.Left = HeaderLeft;
Header.Right = HeaderRight;`;
const HeaderDemo = () => {
  const [height, setHeight] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('60px');
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_2__.DemoSection, {
    title: "Header",
    description: "A semantic container for the top of a page layout. Use Header.Left and Header.Right to align content.",
    livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Header, {
      height: height
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Header.Left, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
      weight: "600"
    }, "My Application")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Header.Right, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
      variant: "secondary"
    }, "Login"))),
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(HeaderConfigurator, {
      height: height,
      setHeight: setHeight
    }),
    documentation: documentation,
    fullSourceCode: sourceCode
  });
};

/***/ }),

/***/ "./demo/HoverCard.tsx":
/*!****************************!*\
  !*** ./demo/HoverCard.tsx ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   HoverCardDemo: () => (/* binding */ HoverCardDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");



const documentation = `# Hover Card

A popover that appears when a user hovers their mouse over a trigger element.

## Components

*   **HoverCard**: The main wrapper that manages the hover state.
*   **HoverCardTrigger**: The element that triggers the popover on hover.
*   **HoverCardContent**: The content that appears in the popover.

## Usage

\`\`\`tsx
import { HoverCard, HoverCardTrigger, HoverCardContent, Link, Text } from './src/components';

<p>
    Hover over the <HoverCard>
        <HoverCardTrigger>
            <Link href="#">@username</Link>
        </HoverCardTrigger>
        <HoverCardContent>
            <Text>User profile information goes here.</Text>
        </HoverCardContent>
    </HoverCard> profile link.
</p>
\`\`\``;
const sourceCode = `import React, { useState, useRef } from 'react';
import { Popper, PopperContent, PopperTrigger } from '../Popper/Popper';
import { PopoverContent as StyledContent } from '../Popover/Popover';

interface HoverCardContextType {
    isOpen: boolean;
    setIsOpen: React.Dispatch<React.SetStateAction<boolean>>;
}

export const HoverCard: React.FC<{ children: React.ReactNode }> = ({ children }) => {
    const [isOpen, setIsOpen] = useState(false);
    const timeoutRef = useRef<ReturnType<typeof setTimeout> | undefined>(undefined);

    const handleOpen = () => {
        clearTimeout(timeoutRef.current);
        setIsOpen(true);
    };

    const handleClose = () => {
        timeoutRef.current = setTimeout(() => {
            setIsOpen(false);
        }, 100); // Small delay to allow moving mouse into card
    };
    
    const contextValue = { isOpen, setIsOpen, handleOpen, handleClose };

    return (
        <Popper isOpen={isOpen} setIsOpen={setIsOpen}>
            <div onMouseEnter={handleOpen} onMouseLeave={handleClose}>
                {children}
            </div>
        </Popper>
    );
};

export const HoverCardTrigger: React.FC<{ children: React.ReactNode }> = ({ children }) => {
    return <PopperTrigger>{children}</PopperTrigger>;
};

export const HoverCardContent: React.FC<{ children: React.ReactNode, className?: string }> = ({ children, className }) => {
    return <StyledContent className={className}>{children}</StyledContent>;
};`;
const HoverCardDemo = () => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_2__.DemoSection, {
  title: "Hover Card",
  description: "A popover that appears when a user hovers over a trigger element.",
  livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, null, "Hover over the", ' ', /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.HoverCard, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.HoverCardTrigger, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Link, {
    href: "#",
    onClick: e => e.preventDefault()
  }, "@zwhe")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.HoverCardContent, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
    direction: "row",
    gap: "1rem",
    align: "center"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Avatar, {
    fallback: "ZW",
    src: "https://i.pravatar.cc/150?u=a042581f4e29026704d"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
    gap: "0.25rem"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    weight: "600"
  }, "Zwhe UI"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    size: "14px",
    color: "textSecondary"
  }, "The component library you're looking at."))))), ' ', "profile link."),
  propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    color: "textSecondary"
  }, "This is an interactive demo. No props are available to configure."),
  documentation: documentation,
  fullSourceCode: sourceCode
});

/***/ }),

/***/ "./demo/Icon.tsx":
/*!***********************!*\
  !*** ./demo/Icon.tsx ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   IconDemo: () => (/* binding */ IconDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _src_icons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../src/icons */ "./src/icons/index.ts");
/* harmony import */ var _src_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../src/core */ "./src/core/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");





const IconConfigurator = ({
  size,
  setSize,
  color,
  setColor
}) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "1.5rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "0.5rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
  as: "label",
  size: "sm",
  weight: "medium",
  color: "textSecondary"
}, "Size (", size, "px)"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Slider, {
  value: size,
  onChange: setSize,
  min: 12,
  max: 48
})), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Input, {
  label: "Color",
  value: color,
  onChange: e => setColor(e.target.value)
}));
const documentation = `# Icon

A flexible component for rendering SVG icons, allowing for consistent sizing and coloring across the application.

## Props

*   \`as\` (React.ElementType, required): The SVG icon component to render (e.g., \`HomeIcon\`).
*   \`size\` (number | string, optional, default: '1em'): The width and height of the icon.
*   \`className\` (string, optional): Additional CSS classes for custom styling.
*   All other standard SVG attributes are supported (e.g., \`color\`, \`strokeWidth\`).

## Usage

First, import the \`Icon\` component and the specific icon you want to use.

\`\`\`tsx
import { Icon } from './src/components';
import { HomeIcon, SettingsIcon } from './src/icons';

// Basic usage
<Icon as={HomeIcon} />

// With custom size and color
<Icon as={SettingsIcon} size={24} color="#60a5fa" />

// Inside another component, like a Button
<Button>
  <Icon as={HomeIcon} size={16} />
  <span>Dashboard</span>
</Button>
\`\`\``;
const sourceCode = `import React from 'react';
import { useStyles } from '../../core/hooks/useStyles';
import { useTheme } from '../../core/theme/ThemeProvider';

interface IconProps extends React.SVGAttributes<SVGElement> {
    as: React.ElementType;
    size?: number | string;
    className?: string;
}

export const Icon: React.FC<IconProps> = ({ as, size = '1em', className = '', ...props }) => {
    const createStyle = useStyles('icon');
    const { theme } = useTheme();

    const iconClass = createStyle({
        display: 'inline-flex',
        alignItems: 'center',
        justifyContent: 'center',
        color: 'inherit', // Inherit color by default
    });

    const IconComponent = as;
    
    const combinedClassName = \`\${iconClass} \${className}\`;

    const style = {
        width: size,
        height: size,
    };

    return (
        <span className={combinedClassName} style={style}>
            <IconComponent {...props} />
        </span>
    );
};`;
const IconDemo = () => {
  const {
    theme
  } = (0,_src_core__WEBPACK_IMPORTED_MODULE_3__.useTheme)();
  const [size, setSize] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(24);
  const [color, setColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(theme.colors.primary);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_4__.DemoSection, {
    title: "Icon",
    description: "A flexible component for rendering SVG icons with consistent sizing and coloring.",
    livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
      direction: "row",
      gap: "1.5rem",
      align: "center"
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Icon, {
      as: _src_icons__WEBPACK_IMPORTED_MODULE_2__.HomeIcon,
      size: size,
      color: color
    }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Icon, {
      as: _src_icons__WEBPACK_IMPORTED_MODULE_2__.SettingsIcon,
      size: size,
      color: color
    }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Icon, {
      as: _src_icons__WEBPACK_IMPORTED_MODULE_2__.UserIcon,
      size: size,
      color: color
    }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Icon, {
      as: _src_icons__WEBPACK_IMPORTED_MODULE_2__.LoginIcon,
      size: size,
      color: color
    }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Icon, {
      as: _src_icons__WEBPACK_IMPORTED_MODULE_2__.SendIcon,
      size: size,
      color: color
    })),
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(IconConfigurator, {
      size: size,
      setSize: setSize,
      color: color,
      setColor: setColor
    }),
    documentation: documentation,
    fullSourceCode: sourceCode
  });
};

/***/ }),

/***/ "./demo/IconButton.tsx":
/*!*****************************!*\
  !*** ./demo/IconButton.tsx ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   IconButtonDemo: () => (/* binding */ IconButtonDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _src_icons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../src/icons */ "./src/icons/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");




const IconButtonConfigurator = ({
  variant,
  setVariant,
  isRound,
  setIsRound
}) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "1.5rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "0.5rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
  as: "label",
  size: "sm",
  weight: "medium",
  color: "textSecondary"
}, "Variant Prop"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.SegmentedControl, {
  value: variant,
  onChange: setVariant,
  options: [{
    label: 'Primary',
    value: 'primary'
  }, {
    label: 'Secondary',
    value: 'secondary'
  }, {
    label: 'Accent',
    value: 'accent'
  }]
})), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Checkbox, {
  label: "Is Round Prop",
  checked: isRound,
  onChange: e => setIsRound(e.target.checked)
}));
const documentation = `# IconButton

A button variant for rendering only an icon. It's crucial to provide an \`aria-label\` for accessibility.

## Props

*   \`icon\` (React.ElementType, required): The icon component to render.
*   \`aria-label\` (string, required): A label for accessibility, as the button has no visible text.
*   \`isRound\` (boolean, optional): If true, the button will be circular.
*   All other \`Button\` props (except \`children\`) are supported.

## Usage

\`\`\`tsx
import { IconButton } from './src/components';
import { SettingsIcon } from './src/icons';

<IconButton
  icon={SettingsIcon}
  aria-label="Settings"
  onClick={() => alert('Settings clicked')}
/>

<IconButton
  icon={SettingsIcon}
  aria-label="Settings"
  isRound
/>
\`\`\``;
const sourceCode = `import React from 'react';
import { Button, ButtonProps } from '../Button';
import { Icon } from '../Icon/Icon';
import { useStyles } from '../../core';

interface IconButtonProps extends Omit<ButtonProps, 'children'> {
    icon: React.ElementType;
    'aria-label': string;
    isRound?: boolean;
}

export const IconButton: React.FC<IconButtonProps> = ({ icon, 'aria-label': ariaLabel, isRound, className = '', ...props }) => {
    const createStyle = useStyles('icon-button');
    
    const iconButtonClass = createStyle({
        padding: '0.5rem',
        borderRadius: isRound ? '50%' : undefined,
    });

    return (
        <Button className={\`\${iconButtonClass} \${className}\`} aria-label={ariaLabel} {...props}>
            <Icon as={icon} size="1.25em" />
        </Button>
    );
};`;
const IconButtonDemo = () => {
  const [variant, setVariant] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('primary');
  const [isRound, setIsRound] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_3__.DemoSection, {
    title: "Icon Button",
    description: "A button for rendering a single icon.",
    livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.IconButton, {
      icon: _src_icons__WEBPACK_IMPORTED_MODULE_2__.SettingsIcon,
      "aria-label": "Settings",
      variant: variant,
      isRound: isRound
    }),
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(IconButtonConfigurator, {
      variant: variant,
      setVariant: setVariant,
      isRound: isRound,
      setIsRound: setIsRound
    }),
    documentation: documentation,
    fullSourceCode: sourceCode
  });
};

/***/ }),

/***/ "./demo/Image.tsx":
/*!************************!*\
  !*** ./demo/Image.tsx ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ImageDemo: () => (/* binding */ ImageDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _src_icons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../src/icons */ "./src/icons/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");




const ImageConfigurator = ({
  src,
  setSrc,
  fit,
  setFit,
  radius,
  setRadius
}) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "1.5rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Input, {
  label: "Src Prop (URL)",
  value: src,
  onChange: e => setSrc(e.target.value),
  placeholder: "Enter image URL"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "0.5rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
  as: "label",
  size: "sm",
  weight: "medium",
  color: "textSecondary"
}, "Fit Prop"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.SegmentedControl, {
  value: fit,
  onChange: setFit,
  options: [{
    label: 'Cover',
    value: 'cover'
  }, {
    label: 'Contain',
    value: 'contain'
  }, {
    label: 'Fill',
    value: 'fill'
  }]
})), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Input, {
  label: "Radius Prop (e.g., 8px, 50%)",
  value: radius,
  onChange: e => setRadius(e.target.value)
}));
const documentation = `# Image

A component for displaying images with support for loading skeletons and fallback content.

## Props

*   \`fallbackSrc\` (string, optional): A fallback image URL to use if the primary \`src\` fails to load.
*   \`fallback\` (React.ReactNode, optional): A React node to display if the image fails to load and no \`fallbackSrc\` is provided.
*   \`fit\` (string, optional): The \`object-fit\` CSS property. Defaults to \`cover\`.
*   \`radius\` (string, optional): The \`border-radius\` of the image. Defaults to \`8px\`.
*   All other standard \`<img>\` attributes are supported.

## Usage

\`\`\`tsx
import { Image, Text } from './src/components';

<Image 
  src="https://example.com/image.jpg"
  alt="An example image"
  fallback={<Text>Image not available</Text>}
/>
\`\`\``;
const sourceCode = `import React, { useState } from 'react';
import { Box } from '../Box/Box';
import { Center } from '../Center/Center';
import { Skeleton } from '../Skeleton/Skeleton';
import { useStyles, useTheme } from '../../core';

interface ImageProps extends React.ImgHTMLAttributes<HTMLImageElement> {
    fallbackSrc?: string;
    fallback?: React.ReactNode;
    fit?: React.CSSProperties['objectFit'];
    radius?: string;
}

export const Image: React.FC<ImageProps> = ({ src, fallbackSrc, fallback, fit = 'cover', radius = '8px', className, ...props }) => {
    const { theme } = useTheme();
    const createStyle = useStyles('image');
    const [status, setStatus] = useState<'loading' | 'loaded' | 'error'>('loading');

    const handleLoad = () => setStatus('loaded');
    const handleError = () => setStatus('error');

    const imageClass = createStyle({
        width: '100%',
        height: '100%',
        objectFit: fit,
        borderRadius: radius,
    });
    
    const finalSrc = status === 'error' && fallbackSrc ? fallbackSrc : src;

    return (
        <Box style={{ position: 'relative', width: '100%', height: '100%' }}>
            {status === 'loading' && <Skeleton variant="rect" width="100%" height="100%" style={{ position: 'absolute', borderRadius: radius }} />}
            
            <img
                src={finalSrc}
                onLoad={handleLoad}
                onError={handleError}
                className={\`\${imageClass} \${className}\`}
                style={{ opacity: status === 'loading' ? 0 : 1 }}
                {...props}
            />
            
            {status === 'error' && !fallbackSrc && fallback && (
                <Center style={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '100%', backgroundColor: theme.colors.border, borderRadius: radius }}>
                    {fallback}
                </Center>
            )}
        </Box>
    );
};`;
const ImageDemo = () => {
  const [src, setSrc] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)("https://images.pexels.com/photos/167699/pexels-photo-167699.jpeg?auto=compress&cs=tinysrgb&w=400");
  const [fit, setFit] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('cover');
  const [radius, setRadius] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('8px');

  // Remount image when src changes to reset loading state
  const imageKey = src + fit + radius;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_3__.DemoSection, {
    title: "Image",
    description: "A component for displaying images with loading states and fallbacks.",
    livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
      style: {
        width: '200px',
        height: '200px'
      }
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Image, {
      key: imageKey,
      src: src,
      alt: "Configurable image",
      fit: fit,
      radius: radius,
      fallback: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Icon, {
        as: _src_icons__WEBPACK_IMPORTED_MODULE_2__.ImageIcon,
        size: 48
      })
    })),
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ImageConfigurator, {
      src: src,
      setSrc: setSrc,
      fit: fit,
      setFit: setFit,
      radius: radius,
      setRadius: setRadius
    }),
    documentation: documentation,
    fullSourceCode: sourceCode
  });
};

/***/ }),

/***/ "./demo/Input.tsx":
/*!************************!*\
  !*** ./demo/Input.tsx ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   InputDemo: () => (/* binding */ InputDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");



const InputConfigurator = ({
  label,
  setLabel,
  placeholder,
  setPlaceholder,
  error,
  setError,
  isDisabled,
  setIsDisabled
}) => {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
    gap: "1.5rem"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Input, {
    label: "Label Prop",
    value: label,
    onChange: e => setLabel(e.target.value)
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Input, {
    label: "Placeholder Prop",
    value: placeholder,
    onChange: e => setPlaceholder(e.target.value)
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Input, {
    label: "Error Prop",
    value: error,
    onChange: e => setError(e.target.value)
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Checkbox, {
    label: "Disabled Prop",
    checked: isDisabled,
    onChange: e => setIsDisabled(e.target.checked)
  }));
};
const documentation = `# Input

A complete form input component that wraps \`TextInput\` to include a label and an error message display.

## Props

*   \`label\` (string, optional): The text label displayed above the input field.
*   \`error\` (string, optional): An error message to display below the input field.
*   \`id\` (string, optional): A unique identifier for associating the label with the input.
*   All other props are passed down to the \`TextInput\` component.

## Usage

\`\`\`tsx
<Input label="Email Address" placeholder="you@example.com" error="Email is required." />
\`\`\``;
const fullSourceCode = `import React from 'react';
import { TextInput, TextInputProps } from '../TextInput/TextInput';
import { Error } from '../Error/Error';
import { Text } from '../Text/Text';
import { useTheme } from '../../core/theme/ThemeProvider';
import { useStyles } from '../../core/hooks/useStyles';

interface InputProps extends TextInputProps {
    label?: string;
    error?: string;
}

export const Input: React.FC<InputProps> = ({ label, id, error, className = '', ...props }) => {
    const { theme } = useTheme();
    const createStyle = useStyles('input-wrapper');

    const containerClass = createStyle({
        display: 'grid',
        gap: '4px',
        width: '100%',
    });

    return (
        <div className={\`\${containerClass} \${className}\`}>
            {label && (
                <label htmlFor={id}>
                    <Text as="span" size={theme.typography.fontSizes.sm} weight={theme.typography.fontWeights.medium} color={theme.colors.textSecondary}>
                        {label}
                    </Text>
                </label>
            )}
            <TextInput id={id} {...props} />
            <Error>{error}</Error>
        </div>
    );
};`;
const InputDemo = () => {
  const [label, setLabel] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('Email Address');
  const [placeholder, setPlaceholder] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('you@example.com');
  const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');
  const [isDisabled, setIsDisabled] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const code = `<Input 
    label="${label}" 
    placeholder="${placeholder}" 
    error="${error}" 
    disabled="${isDisabled}" 
/>`;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_2__.DemoSection, {
    title: "Input",
    description: "A wrapper for TextInput that includes a label and an error message display area.",
    initialCode: code,
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(InputConfigurator, {
      label: label,
      setLabel: setLabel,
      placeholder: placeholder,
      setPlaceholder: setPlaceholder,
      error: error,
      setError: setError,
      isDisabled: isDisabled,
      setIsDisabled: setIsDisabled
    }),
    documentation: documentation,
    fullSourceCode: fullSourceCode
  });
};

/***/ }),

/***/ "./demo/Kbd.tsx":
/*!**********************!*\
  !*** ./demo/Kbd.tsx ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   KbdDemo: () => (/* binding */ KbdDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");



const KbdConfigurator = ({
  key1,
  setKey1,
  key2,
  setKey2
}) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  direction: "row",
  gap: "1rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Input, {
  label: "Key 1",
  value: key1,
  onChange: e => setKey1(e.target.value)
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Input, {
  label: "Key 2",
  value: key2,
  onChange: e => setKey2(e.target.value)
}));
const documentation = `# Kbd

A component for displaying keyboard shortcuts in a visually distinct style, mimicking the appearance of a physical key.

## Props

*   \`children\` (React.ReactNode, required): The key or symbol to display (e.g., 'âŒ˜', 'Shift', 'K').
*   \`className\` (string, optional): Additional CSS classes for custom styling.

## Usage

\`\`\`tsx
import { Kbd, Text } from './src/components';

<Text>
  Press <Kbd>âŒ˜</Kbd> + <Kbd>K</Kbd> to open the command palette.
</Text>
\`\`\``;
const sourceCode = `import React from 'react';
import { useStyles } from '../../core/hooks/useStyles';
import { useTheme } from '../../core/theme/ThemeProvider';

export const Kbd: React.FC<{ children: React.ReactNode; className?: string }> = ({ children, className }) => {
    const { theme } = useTheme();
    const createStyle = useStyles('kbd');

    const kbdClass = createStyle({
        display: 'inline-block',
        padding: '2px 6px',
        fontFamily: 'monospace',
        fontSize: '12px',
        color: theme.colors.textSecondary,
        backgroundColor: theme.colors.border,
        border: \`1px solid rgba(255, 255, 255, 0.1)\`,
        borderBottomWidth: '2px',
        borderRadius: '4px',
        '@supports (backdrop-filter: none) or (-webkit-backdrop-filter: none)': {
            backdropFilter: 'blur(4px)',
        },
    });

    return (
        <kbd className={\`\${kbdClass} \${className}\`}>
            {children}
        </kbd>
    );
};`;
const KbdDemo = () => {
  const [key1, setKey1] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('âŒ˜');
  const [key2, setKey2] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('K');
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_2__.DemoSection, {
    title: "Kbd",
    description: "A component for displaying keyboard shortcuts.",
    livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, null, "Press ", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Kbd, null, key1), " + ", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Kbd, null, key2), " to open the command palette."),
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(KbdConfigurator, {
      key1: key1,
      setKey1: setKey1,
      key2: key2,
      setKey2: setKey2
    }),
    documentation: documentation,
    fullSourceCode: sourceCode
  });
};

/***/ }),

/***/ "./demo/Link.tsx":
/*!***********************!*\
  !*** ./demo/Link.tsx ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   LinkDemo: () => (/* binding */ LinkDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");



const LinkConfigurator = ({
  href,
  setHref,
  childrenText,
  setChildrenText
}) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "1.5rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Input, {
  label: "Href Prop",
  value: href,
  onChange: e => setHref(e.target.value)
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Input, {
  label: "Children Prop (Text)",
  value: childrenText,
  onChange: e => setChildrenText(e.target.value)
}));
const documentation = `# Link

A styled anchor (\`<a>\`) tag for navigation, consistent with the application's theme. It seamlessly integrates with \`react-router-dom\` for client-side routing.

## Props

*   \`to\` (string, optional): The path for client-side navigation. If this prop is provided, the component will render a \`react-router-dom\` \`Link\`.
*   \`href\` (string, optional): The URL for a standard anchor tag. This is used for external links or when not using a router.
*   All other standard \`<a>\` attributes are supported (e.g., \`target\`, \`onClick\`).
*   \`className\` (string, optional): Additional CSS classes for custom styling.

## Usage

### Standard External Link
\`\`\`tsx
import { Link } from './src/components';

<Link href="https://example.com" target="_blank">
  Visit Example
</Link>
\`\`\`

### Client-Side Routing Link
\`\`\`tsx
import { Link } from './src/components';

// This will render a <Link> from react-router-dom
<Link to="/profile">
  View Profile
</Link>
\`\`\``;
const sourceCode = `import React from 'react';
import { useStyles } from '../../core/hooks/useStyles';
import { useTheme } from '../../core/theme/ThemeProvider';

interface LinkProps extends React.AnchorHTMLAttributes<HTMLAnchorElement> {
    to?: string;
}

export const Link: React.FC<LinkProps> = ({ children, className = '', to, ...props }) => {
    const { theme } = useTheme();
    const createStyle = useStyles('link');

    const linkClass = createStyle({
        color: theme.colors.primary,
        textDecoration: 'none',
        transition: 'color 0.2s',
        '&:hover': {
            color: '#93c5fd', // Lighter blue
            textDecoration: 'underline',
        },
    });

    const combinedClassName = \`\${linkClass} \${className}\`;

    if (to) {
        return (
            <a href={to} className={combinedClassName} {...props}>
                {children}
            </a>
        );
    }

    return (
        <a className={combinedClassName} {...props}>
            {children}
        </a>
    );
};`;
const LinkDemo = () => {
  const [href, setHref] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('https://example.com');
  const [childrenText, setChildrenText] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('example.com');
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_2__.DemoSection, {
    title: "Link",
    description: "A styled anchor tag for navigation. Supports standard `href` for external links and `to` for client-side routing.",
    livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, null, "This is a standard external link to ", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Link, {
      href: href,
      target: "_blank",
      rel: "noopener noreferrer"
    }, childrenText), "."),
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(LinkConfigurator, {
      href: href,
      setHref: setHref,
      childrenText: childrenText,
      setChildrenText: setChildrenText
    }),
    documentation: documentation,
    fullSourceCode: sourceCode
  });
};

/***/ }),

/***/ "./demo/List.tsx":
/*!***********************!*\
  !*** ./demo/List.tsx ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ListDemo: () => (/* binding */ ListDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");



const documentation = `# List

A set of components for displaying structured lists of items.

## Components

*   **List**: The main \`<ul>\` wrapper with styling for the container.
*   **ListItem**: A \`<li>\` element representing a single row in the list.
*   **ListItemBody**: A \`<div>\` wrapper for the main content area of a ListItem, useful for complex layouts.
*   **ListItemText**: A component for displaying primary and optional secondary text in a standard format.
*   **Divider**: A \`<hr>\` element for visually separating \`ListItem\` components.

## Usage

\`\`\`tsx
import { List, ListItem, ListItemText, Divider, Button } from './src/components';

<List>
  <ListItem>
    <ListItemText primary="Profile" secondary="Update your personal details" />
  </ListItem>
  <Divider />
  <ListItem>
    <ListItemText primary="Billing" />
    <Button variant="secondary">Manage</Button>
  </ListItem>
</List>
\`\`\``;
const sourceCode = `import React from 'react';
import { useStyles } from '../../core/hooks/useStyles';
import { useTheme } from '../../core/theme/ThemeProvider';
import { Text } from '../Text/Text';

interface ListProps extends React.HTMLAttributes<HTMLUListElement> {
    children: React.ReactNode;
}

export const List: React.FC<ListProps> = ({ children, className = '', ...props }) => {
    const { theme } = useTheme();
    const createStyle = useStyles('list');
    const listClass = createStyle({
        listStyle: 'none',
        padding: 0,
        margin: 0,
        display: 'grid',
        backgroundColor: 'rgba(28, 28, 28, 0.5)',
        backdropFilter: 'blur(8px)',
        borderRadius: '8px',
        border: \`1px solid \${theme.colors.border}\`,
        overflow: 'hidden',
    });
    return <ul className={\`\${listClass} \${className}\`} {...props}>{children}</ul>;
};

interface ListItemProps extends React.LiHTMLAttributes<HTMLLIElement> {
    children: React.ReactNode;
}

export const ListItem: React.FC<ListItemProps> = ({ children, className = '', ...props }) => {
    const { theme } = useTheme();
    const createStyle = useStyles('list-item');
    const itemClass = createStyle({
        display: 'grid',
        alignItems: 'center',
        gridTemplateColumns: '1fr auto',
        gap: theme.spacing.md,
        padding: \`\${theme.spacing.sm} \${theme.spacing.md}\`,
        color: theme.colors.text,
        transition: 'background-color 0.2s',
        '&:hover': {
            backgroundColor: 'rgba(255, 255, 255, 0.05)',
        }
    });
    return <li className={\`\${itemClass} \${className}\`} {...props}>{children}</li>;
};

interface ListItemBodyProps extends React.HTMLAttributes<HTMLDivElement> {
    children: React.ReactNode;
}
export const ListItemBody: React.FC<ListItemBodyProps> = ({ children, className, ...props }) => {
    const createStyle = useStyles('list-item-body');
    const bodyClass = createStyle({
        minWidth: 0,
    });
    return <div className={\`\${bodyClass} \${className}\`} {...props}>{children}</div>;
}

interface ListItemTextProps {
    primary: React.ReactNode;
    secondary?: React.ReactNode;
}
export const ListItemText: React.FC<ListItemTextProps> = ({ primary, secondary }) => {
    const { theme } = useTheme();
    return (
        <div>
            <Text weight="500">{primary}</Text>
            {secondary && <Text size="0.875rem" color={theme.colors.textSecondary}>{secondary}</Text>}
        </div>
    );
};`;
const ListDemo = () => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_2__.DemoSection, {
  title: "List",
  description: "A set of components for displaying structured lists of items with optional dividers and rich content.",
  livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.List, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.ListItem, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.ListItemText, {
    primary: "Profile",
    secondary: "Update your personal details"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Divider, null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.ListItem, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.ListItemText, {
    primary: "Billing",
    secondary: "Manage your subscription"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Divider, null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.ListItem, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.ListItemText, {
    primary: "Log Out"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
    variant: "secondary"
  }, "Action"))),
  propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    color: "textSecondary"
  }, "This is a standard implementation of the List component. No props are available to configure in this demo."),
  documentation: documentation,
  fullSourceCode: sourceCode
});

/***/ }),

/***/ "./demo/Menu.tsx":
/*!***********************!*\
  !*** ./demo/Menu.tsx ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MenuDemo: () => (/* binding */ MenuDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _src_icons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../src/icons */ "./src/icons/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");




const documentation = `# Menu & StyledMenu

Components for creating dropdown menus. \`Menu\` provides the core logic and structure, while \`StyledMenu\` is a pre-styled, opinionated implementation for common use cases.

## StyledMenu

A quick and easy way to create a styled dropdown menu with icons, shortcuts, groups, and dividers.

### Props
*   \`label\` (string, required): The text for the trigger button.
*   \`items\` (array of \`MenuItemData\` or \`MenuGroupData\`, required): The list of menu items.

### Data Structure
\`\`\`ts
// A clickable menu item
interface MenuAction {
    label: string;
    onClick: () => void;
    icon?: React.ReactNode;
    shortcut?: string;
    disabled?: boolean;
}

// A visual separator
interface MenuDivider {
    type: 'divider';
}

type MenuItemData = MenuAction | MenuDivider;

// A group of menu items
interface MenuGroupData {
    title?: string;
    items: MenuItemData[];
    divider?: 'after'; // Adds a divider after this group
}
\`\`\``;
const fullSourceCode = `/* This file contains the implementation for the high-level StyledMenu. */
import React from 'react'
import { Menu, MenuButton, MenuItems, MenuItem } from './Menu'
import { useStyles } from '../../core/hooks/useStyles'
import { useTheme } from '../../core/theme/ThemeProvider'

interface MenuAction { label: string; onClick: () => void; icon?: React.ReactNode; shortcut?: string; disabled?: boolean; }
interface MenuDivider { type: 'divider'; }
type MenuItemData = MenuAction | MenuDivider;
interface MenuGroupData { title?: string; items: MenuItemData[]; divider?: 'after'; }

export interface StyledMenuProps {
    label: string;
    items: Array<MenuItemData | MenuGroupData>;
    className?: string;
}

function isAction(item: MenuItemData): item is MenuAction { return 'label' in item; }

export const StyledMenu: React.FC<StyledMenuProps> = ({ label, items, className = '' }) => {
    const { theme } = useTheme();
    // ... styles ...

    const isGrouped = items.length > 0 && 'items' in items[0] && Array.isArray((items[0] as any).items);
    const normalizedItems: MenuGroupData[] = isGrouped 
        ? items as MenuGroupData[] 
        : [{ items: items as MenuItemData[] }];

    return (
        <Menu className={\`\${menuClass} \${className}\`}>
            <MenuButton className={buttonClass}>{label}</MenuButton>
            <MenuItems className={itemsClass}>
                {normalizedItems.map((group, groupIndex) => (
                    <React.Fragment key={groupIndex}>
                        {group.title && <div className={groupTitleClass}>{group.title}</div>}
                        {group.items.map((item, itemIndex) => {
                            if (isAction(item)) {
                                return (
                                    <MenuItem key={\`\${groupIndex}-\${itemIndex}\`} className={itemClass} onClick={item.onClick} disabled={item.disabled}>
                                        {item.icon}
                                        <span>{item.label}</span>
                                        {item.shortcut && <span className={shortcutClass}>{item.shortcut}</span>}
                                    </MenuItem>
                                );
                            } else {
                                return <hr key={\`\${groupIndex}-\${itemIndex}\`} className={dividerClass} />;
                            }
                        })}
                        {group.divider === 'after' && groupIndex < normalizedItems.length - 1 && (<hr className={dividerClass} />)}
                    </React.Fragment>
                ))}
            </MenuItems>
        </Menu>
    )
}`;
const initialCode = `<StyledMenu 
    label="Actions" 
    items={[
        {
            items: [
                { label: 'Edit', icon: '<PencilIcon/>', shortcut: 'âŒ˜E' },
                { type: 'divider' },
                { label: 'Archive', icon: '<ArchiveIcon/>', disabled: true },
            ],
            divider: 'after'
        },
        {
            title: 'Destructive',
            items: [
                { label: 'Delete', icon: '<TrashIcon/>', shortcut: 'âŒ˜âŒ«' },
            ]
        }
    ]}
/>`;
const MenuDemo = () => {
  const menuItems = [{
    divider: 'after',
    items: [{
      label: 'Edit',
      onClick: () => alert('Edit'),
      shortcut: 'âŒ˜E',
      icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Icon, {
        as: _src_icons__WEBPACK_IMPORTED_MODULE_2__.PencilIcon,
        size: 16
      })
    }, {
      label: 'Duplicate',
      onClick: () => alert('Duplicate'),
      shortcut: 'âŒ˜D',
      icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Icon, {
        as: _src_icons__WEBPACK_IMPORTED_MODULE_2__.CopyIcon,
        size: 16
      })
    }, {
      type: 'divider'
    }, {
      label: 'Archive',
      onClick: () => alert('Archive'),
      icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Icon, {
        as: _src_icons__WEBPACK_IMPORTED_MODULE_2__.ArchiveIcon,
        size: 16
      }),
      disabled: true
    }]
  }, {
    title: 'Destructive Actions',
    items: [{
      label: 'Delete',
      onClick: () => alert('Delete'),
      shortcut: 'âŒ˜âŒ«',
      icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Icon, {
        as: _src_icons__WEBPACK_IMPORTED_MODULE_2__.TrashIcon,
        size: 16
      })
    }]
  }];
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_3__.DemoSection, {
    title: "Menu",
    description: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", null, "A styled dropdown menu. Dividers can be added within a group using ", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Kbd, null, `{ type: 'divider' }`), " or between groups using the `divider: 'after'` prop."),
    livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.StyledMenu, {
      label: "Actions",
      items: menuItems
    }),
    initialCode: initialCode,
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
      color: "textSecondary"
    }, "This is a standard implementation of the StyledMenu component. The `items` prop is a complex object not suitable for simple controls."),
    documentation: documentation,
    fullSourceCode: fullSourceCode
  });
};

/***/ }),

/***/ "./demo/Modal.tsx":
/*!************************!*\
  !*** ./demo/Modal.tsx ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ModalDemo: () => (/* binding */ ModalDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");



const ModalConfigurator = ({
  title,
  setTitle,
  setIsOpen
}) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "1.5rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Input, {
  label: "Title Prop",
  value: title,
  onChange: e => setTitle(e.target.value)
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
  onClick: () => setIsOpen(true)
}, "Open Modal"));
const documentation = `# Modal

A dialog window that appears on top of the main content, disabling page interaction until it is dismissed. It renders in a portal attached to the document body.

## Props

*   \`isOpen\` (boolean, required): Controls the visibility of the modal.
*   \`onClose\` (function, required): A callback function to close the modal. This is triggered by clicking the close button or the backdrop.
*   \`children\` (React.ReactNode, required): The content to be displayed inside the modal.
*   \`title\` (string, optional): A title to display in the modal's header.
*   \`className\` (string, optional): Additional CSS classes for the modal's content panel.

## Usage

\`\`\`tsx
import { Modal, Button, Text } from './src/components';
import { useState } from 'react';

const [isOpen, setIsOpen] = useState(false);

<>
    <Button onClick={() => setIsOpen(true)}>Open Modal</Button>
    <Modal
      isOpen={isOpen}
      onClose={() => setIsOpen(false)}
      title="Basic Modal"
    >
      <Text>This is the content of the modal.</Text>
    </Modal>
</>
\`\`\``;
const sourceCode = `import React, { useRef, useEffect } from 'react';
import { useStyles } from '../../core/hooks/useStyles';
import { useTheme } from '../../core/theme/ThemeProvider';
import { useFade } from '../../core/hooks/useAnimation';

export interface ModalProps {
    isOpen: boolean;
    onClose: () => void;
    children: React.ReactNode;
    title?: string;
    className?: string;
}

export const Modal: React.FC<ModalProps> = ({
    isOpen,
    onClose,
    children,
    title,
    className = ''
}) => {
    const { theme } = useTheme();
    const createStyle = useStyles('modal');
    const { isRendered, style: fadeStyle } = useFade(isOpen, 200);

    const modalRef = useRef<HTMLDivElement>(null);
    /* ... more internal logic for focus trapping and accessibility ... */

    if (!isRendered) return null;

    const containerClass = createStyle({ /* ... styles ... */ });
    const modalClass = createStyle({ /* ... styles ... */ });
    
    return (
        <div className={containerClass} style={fadeStyle} onClick={handleContainerClick}>
            <div
                ref={modalRef}
                className={\`\${modalClass} \${className}\`}
                role="dialog"
                aria-modal="true"
                aria-labelledby={title ? titleId : undefined}
                tabIndex={-1}
            >
                {title && <h2 id={titleId}>{title}</h2>}
                <button onClick={onClose}>&times;</button>
                {children}
            </div>
        </div>
    );
}`;
const ModalDemo = () => {
  const [isOpen, setIsOpen] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [title, setTitle] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('Basic Modal');
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_2__.DemoSection, {
    title: "Modal",
    description: "A modal dialog that appears on top of the main content, disabling page interaction until dismissed.",
    livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
      color: "textSecondary"
    }, "Use the 'Props' tab to configure and open the modal."),
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ModalConfigurator, {
      title: title,
      setTitle: setTitle,
      setIsOpen: setIsOpen
    }),
    documentation: documentation,
    fullSourceCode: sourceCode
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Modal, {
    isOpen: isOpen,
    onClose: () => setIsOpen(false),
    title: title
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, null, "This is the content of the modal. You can put any React components here.")));
};

/***/ }),

/***/ "./demo/Nav.tsx":
/*!**********************!*\
  !*** ./demo/Nav.tsx ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   NavDemo: () => (/* binding */ NavDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _src_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../src/core */ "./src/core/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");




const NavConfigurator = ({
  useContainer,
  setUseContainer
}) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Checkbox, {
  label: "Use Container Prop",
  checked: useContainer,
  onChange: e => setUseContainer(e.target.checked)
});
const documentation = `# Nav

A flexible navigation component for building horizontal navigation bars.

## Components

*   **Nav**: The main \`<nav>\` wrapper.
*   **Nav.List**: A container for a list of navigation items.
*   **Nav.Item**: A single, clickable navigation link.

## Props

### Nav
*   \`container\` (boolean, optional, default: false): If true, the navigation content will be wrapped in a \`Container\` component to center it and constrain its width.

### Nav.Item
*   \`to\` (string, optional): The path for client-side navigation (uses \`react-router-dom\`).
*   \`href\` (string, optional): The URL for a standard link.
*   \`isActive\` (boolean, optional): Applies an active style to the item.
*   All other standard \`<a>\` attributes are supported.

## Usage

\`\`\`tsx
import { Nav } from './src/components';

<Nav container={true}>
  <Nav.List>
    <Nav.Item href="#">Home</Nav.Item>
    <Nav.Item href="#" isActive>About</Nav.Item>
  </Nav.List>
</Nav>
\`\`\``;
const sourceCode = `import React from 'react';
import { useStyles } from '../../core/hooks/useStyles';
import { useTheme } from '../../core/theme/ThemeProvider';
import { Link } from '../Link/Link';
import { Container } from '../Container/Container';

interface NavProps extends React.HTMLAttributes<HTMLElement> {
    container?: boolean;
    height?: string;
}

const NavList: React.FC<{ children: React.ReactNode; className?: string }> = ({ children, className }) => { /* ... */ };
const NavItem: React.FC<NavItemProps> = ({ children, className, isActive, ...props }) => { /* ... */ };

export const Nav: React.FC<NavProps> & {
    List: typeof NavList;
    Item: typeof NavItem;
} = ({ children, className, container = false, height, ...props }) => {
    const createStyle = useStyles('nav');
    const navClass = createStyle({ /* ... */ });

    const content = container ? <Container>{children}</Container> : children;

    return (
        <nav className={\`\${navClass} \${className}\`} {...props}>
            {content}
        </nav>
    );
};

Nav.List = NavList;
Nav.Item = NavItem;`;
const NavDemo = () => {
  const [active, setActive] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('home');
  const [useContainer, setUseContainer] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const {
    theme
  } = (0,_src_core__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const handleClick = (e, item) => {
    e.preventDefault();
    setActive(item);
  };
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_3__.DemoSection, {
    title: "Nav",
    description: "A horizontal navigation component for links.",
    livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
      style: {
        backgroundColor: theme.colors.background,
        border: `1px solid ${theme.colors.border}`,
        borderRadius: '8px',
        width: '100%'
      }
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Nav, {
      container: useContainer
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Nav.List, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Nav.Item, {
      href: "#",
      isActive: active === 'home',
      onClick: e => handleClick(e, 'home')
    }, "Home"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Nav.Item, {
      href: "#",
      isActive: active === 'about',
      onClick: e => handleClick(e, 'about')
    }, "About"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Nav.Item, {
      href: "#",
      isActive: active === 'contact',
      onClick: e => handleClick(e, 'contact')
    }, "Contact")))),
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(NavConfigurator, {
      useContainer: useContainer,
      setUseContainer: setUseContainer
    }),
    documentation: documentation,
    fullSourceCode: sourceCode
  });
};

/***/ }),

/***/ "./demo/NumberInput.tsx":
/*!******************************!*\
  !*** ./demo/NumberInput.tsx ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   NumberInputDemo: () => (/* binding */ NumberInputDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");



const NumberInputConfigurator = ({
  min,
  setMin,
  max,
  setMax,
  step,
  setStep
}) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "1.5rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Input, {
  label: "Min Prop",
  type: "number",
  value: min,
  onChange: e => setMin(Number(e.target.value))
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Input, {
  label: "Max Prop",
  type: "number",
  value: max,
  onChange: e => setMax(Number(e.target.value))
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Input, {
  label: "Step Prop",
  type: "number",
  value: step,
  onChange: e => setStep(Number(e.target.value))
}));
const documentation = `# Number Input

An input component specifically for numbers, which includes stepper controls to increment and decrement the value.

## Props

*   \`value\` (number, required): The current value of the input.
*   \`onChange\` (function, required): A callback function triggered when the value changes.
*   \`min\` (number, optional): The minimum allowed value.
*   \`max\` (number, optional): The maximum allowed value.
*   \`step\` (number, optional, default: 1): The amount to increment or decrement by.
*   \`className\` (string, optional): Additional CSS classes for the container.

## Usage

\`\`\`tsx
import { NumberInput } from './src/components';
import { useState } from 'react';

const [quantity, setQuantity] = useState(1);

<NumberInput
  value={quantity}
  onChange={setQuantity}
  min={1}
  max={10}
/>
\`\`\``;
const sourceCode = `import React from 'react';
import { TextInput } from '../TextInput/TextInput';
import { Button } from '../Button';
import { Stack } from '../Stack/Stack';
import { useStyles } from '../../core/hooks/useStyles';

interface NumberInputProps {
    value: number;
    onChange: (value: number) => void;
    min?: number;
    max?: number;
    step?: number;
    className?: string;
}

export const NumberInput: React.FC<NumberInputProps> = ({ value, onChange, min, max, step = 1, className }) => {
    const createStyle = useStyles('number-input');

    const handleStep = (direction: 'up' | 'down') => {
        const newValue = value + (direction === 'up' ? step : -step);
        if (min !== undefined && newValue < min) return;
        if (max !== undefined && newValue > max) return;
        onChange(newValue);
    };

    const containerClass = createStyle({ /* ... styles ... */ });
    const stepperButtonClass = createStyle({ /* ... styles ... */ });

    return (
        <div className={\`\${containerClass} \${className}\`}>
            <TextInput
                type="number"
                value={value}
                onChange={(e) => onChange(parseInt(e.target.value, 10))}
                min={min}
                max={max}
                step={step}
                style={{ borderRadius: '0.375rem 0 0 0.375rem', borderRight: 0 }}
            />
            <Stack direction="column" gap="2px" style={{height: '100%'}}>
                <Button variant="secondary" onClick={() => handleStep('up')} className={stepperButtonClass} style={{borderRadius: '0 0.375rem 0 0', height: '50%'}}>+</Button>
                <Button variant="secondary" onClick={() => handleStep('down')} className={stepperButtonClass} style={{borderRadius: '0 0 0.375rem 0', height: '50%'}}>-</Button>
            </Stack>
        </div>
    );
};`;
const NumberInputDemo = () => {
  const [value, setValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(1);
  const [min, setMin] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);
  const [max, setMax] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(10);
  const [step, setStep] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(1);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_2__.DemoSection, {
    title: "Number Input",
    description: "An input for numbers with stepper controls.",
    livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
      style: {
        width: '150px'
      }
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.NumberInput, {
      value: value,
      onChange: setValue,
      min: min,
      max: max,
      step: step
    })),
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(NumberInputConfigurator, {
      min: min,
      setMin: setMin,
      max: max,
      setMax: setMax,
      step: step,
      setStep: setStep
    }),
    documentation: documentation,
    fullSourceCode: sourceCode
  });
};

/***/ }),

/***/ "./demo/Pagination.tsx":
/*!*****************************!*\
  !*** ./demo/Pagination.tsx ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   PaginationDemo: () => (/* binding */ PaginationDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");



const PaginationConfigurator = ({
  count,
  setCount
}) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "1rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
  as: "label",
  size: "sm",
  weight: "medium",
  color: "textSecondary"
}, "Count Prop (Total Pages)"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Slider, {
  value: count,
  onChange: setCount,
  min: 1,
  max: 50,
  showValue: true
}));
const documentation = `# Pagination

A component to control navigation between a set of pages, often used with tables or lists of data.

## Props

*   \`count\` (number, required): The total number of pages.
*   \`page\` (number, required): The current active page (1-based index).
*   \`onChange\` (function, required): A callback function triggered when the page is changed. It receives the new page number.
*   \`className\` (string, optional): Additional CSS classes for the container.

## Usage

\`\`\`tsx
import { Pagination } from './src/components';
import { useState } from 'react';

const [currentPage, setCurrentPage] = useState(5);

<Pagination count={20} page={currentPage} onChange={setCurrentPage} />
\`\`\``;
const sourceCode = `import React from 'react';
import { Button } from '../Button';
import { Text } from '../Text/Text';
import { useTheme } from '../../core/theme/ThemeProvider';
import { useStyles } from '../../core/hooks/useStyles';

interface PaginationProps {
    count: number;
    page: number;
    onChange: (page: number) => void;
    className?: string;
}

export const Pagination: React.FC<PaginationProps> = ({ count, page, onChange, className = '' }) => {
    /* ... internal logic for rendering page numbers and ellipsis ... */

    return (
        <nav className={\`\${containerClass} \${className}\`} aria-label="Pagination">
            <Button onClick={() => handlePageChange(page - 1)} disabled={page <= 1}>&lt;</Button>
            {renderPageNumbers()}
            <Button onClick={() => handlePageChange(page + 1)} disabled={page >= count}>&gt;</Button>
        </nav>
    );
};`;
const PaginationDemo = () => {
  const [count, setCount] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(20);
  const [page, setPage] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(5);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_2__.DemoSection, {
    title: "Pagination",
    description: "A component to control navigation between a set of pages.",
    livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Pagination, {
      count: count,
      page: page,
      onChange: setPage
    }),
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(PaginationConfigurator, {
      count: count,
      setCount: setCount
    }),
    documentation: documentation,
    fullSourceCode: sourceCode
  });
};

/***/ }),

/***/ "./demo/PhotoEditor.tsx":
/*!******************************!*\
  !*** ./demo/PhotoEditor.tsx ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   PhotoEditorDemo: () => (/* binding */ PhotoEditorDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _examples_ExamplePhotoEditor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../examples/ExamplePhotoEditor */ "./examples/ExamplePhotoEditor.tsx");


const PhotoEditorDemo = () => {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_examples_ExamplePhotoEditor__WEBPACK_IMPORTED_MODULE_1__.ExamplePhotoEditor, null);
};

/***/ }),

/***/ "./demo/PinInput.tsx":
/*!***************************!*\
  !*** ./demo/PinInput.tsx ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   PinInputDemo: () => (/* binding */ PinInputDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");



const PinInputConfigurator = ({
  length,
  setLength
}) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "1rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
  as: "label",
  size: "sm",
  weight: "medium",
  color: "textSecondary"
}, "Length Prop"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Slider, {
  value: length,
  onChange: setLength,
  min: 3,
  max: 8,
  showValue: true
}));
const documentation = `# PinInput

A component for entering PINs or one-time codes. It provides a set of styled inputs that automatically handle focus shifting, backspace, and pasting.

## Props

*   \`length\` (number, optional): The number of characters in the PIN. Defaults to \`4\`.
*   \`value\` (string, optional): The current value of the input.
*   \`onChange\` (function, optional): A callback function triggered when the value changes.

## Usage

\`\`\`tsx
import { PinInput } from './src/components';
import { useState } from 'react';

const [pin, setPin] = useState('');

<PinInput length={6} value={pin} onChange={setPin} />
\`\`\``;
const sourceCode = `import React, { useState, useRef, ChangeEvent, KeyboardEvent } from 'react';
import { useStyles, useTheme } from '../../core';
import { Flex } from '../Flex/Flex';

interface PinInputProps {
    length?: number;
    value?: string;
    onChange?: (value: string) => void;
}

export const PinInput: React.FC<PinInputProps> = ({ length = 4, value = '', onChange }) => {
    const { theme } = useTheme();
    const createStyle = useStyles('pin-input');
    const [localValue, setLocalValue] = useState(value);
    const inputRefs = useRef<(HTMLInputElement | null)[]>([]);

    const handleChange = (e: ChangeEvent<HTMLInputElement>, index: number) => { /* ... */ };
    const handleKeyDown = (e: KeyboardEvent<HTMLInputElement>, index: number) => { /* ... */ };
    const handlePaste = (e: React.ClipboardEvent<HTMLInputElement>) => { /* ... */ };

    const inputClass = createStyle({ /* ... styles ... */ });

    return (
        <Flex gap="0.5rem">
            {Array.from({ length }).map((_, index) => (
                <input
                    key={index}
                    ref={el => { inputRefs.current[index] = el; }}
                    className={inputClass}
                    type="text"
                    maxLength={1}
                    value={localValue[index] || ''}
                    onChange={e => handleChange(e, index)}
                    onKeyDown={e => handleKeyDown(e, index)}
                    onPaste={index === 0 ? handlePaste : undefined}
                />
            ))}
        </Flex>
    );
};`;
const PinInputDemo = () => {
  const [pin, setPin] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');
  const [length, setLength] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(6);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_2__.DemoSection, {
    title: "Pin Input",
    description: "For entering PINs or one-time codes.",
    livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
      gap: "1rem",
      align: "center"
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.PinInput, {
      length: length,
      value: pin,
      onChange: setPin
    }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
      size: "sm"
    }, "Current Value: ", pin)),
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(PinInputConfigurator, {
      length: length,
      setLength: setLength
    }),
    documentation: documentation,
    fullSourceCode: sourceCode
  });
};

/***/ }),

/***/ "./demo/Popover.tsx":
/*!**************************!*\
  !*** ./demo/Popover.tsx ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   PopoverDemo: () => (/* binding */ PopoverDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");



const documentation = `# Popover

A floating panel that appears in relation to a trigger element. It's a styled implementation of the \`Popper\` utility.

## Components

*   **Popover**: The main wrapper component.
*   **PopoverTrigger**: The element that, when clicked, toggles the popover's visibility. It must wrap a single child.
*   **PopoverContent**: The styled container for the popover's content.

## Usage

\`\`\`tsx
import { Popover, PopoverTrigger, PopoverContent, Button, Text } from './src/components';

<Popover>
    <PopoverTrigger>
        <Button>Show Popover</Button>
    </PopoverTrigger>
    <PopoverContent>
         <Text style={{ padding: '8px' }}>
            This is the content of the popover.
         </Text>
    </PopoverContent>
</Popover>
\`\`\``;
const sourceCode = `import React from 'react';
import { Popper, PopperTrigger as PopperTriggerInternal, PopperContent as PopperContentInternal } from '../Popper/Popper';
import { useStyles } from '../../core/hooks/useStyles';
import { useTheme } from '../../core/theme/ThemeProvider';

export const Popover: React.FC<{ children: React.ReactNode }> = ({ children }) => <Popper>{children}</Popper>;

export const PopoverTrigger: React.FC<{ children: React.ReactNode }> = ({ children }) => <PopperTriggerInternal>{children}</PopperTriggerInternal>;

export const PopoverContent: React.FC<{ children: React.ReactNode; className?: string }> = ({ children, className = '' }) => {
    const { theme } = useTheme();
    const createStyle = useStyles('popover-content');
    /* ... styles ... */

    return <PopperContentInternal className={\`\${contentClass} \${className}\`}>{children}</PopperContentInternal>;
};`;
const PopoverDemo = () => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_2__.DemoSection, {
  title: "Popover",
  description: "A floating panel that appears in relation to a trigger element. Built using the Popper utility.",
  livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Popover, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.PopoverTrigger, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Button, null, "Show Popover")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.PopoverContent, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.List, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.ListItem, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.ListItemText, {
    primary: "Account Settings"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.ListItem, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.ListItemText, {
    primary: "Support"
  }))))),
  propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    color: "textSecondary"
  }, "This is a standard implementation of the Popover component. No props are available to configure in this demo."),
  documentation: documentation,
  fullSourceCode: sourceCode
});

/***/ }),

/***/ "./demo/Progress.tsx":
/*!***************************!*\
  !*** ./demo/Progress.tsx ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ProgressDemo: () => (/* binding */ ProgressDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");



const ProgressConfigurator = ({
  value,
  setValue,
  isIndeterminate,
  setIsIndeterminate
}) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "1.5rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Checkbox, {
  label: "Indeterminate",
  checked: isIndeterminate,
  onChange: e => setIsIndeterminate(e.target.checked)
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "0.5rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
  as: "label",
  size: "sm",
  weight: "medium",
  color: "textSecondary"
}, "Value Prop"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Slider, {
  value: value,
  onChange: setValue,
  min: 0,
  max: 100,
  disabled: isIndeterminate,
  showValue: true
})));
const documentation = `# Progress Indicators

Components to indicate loading or the progress of an operation.

## CircularProgress

A circular "spinner" style progress indicator.

### Props
*   \`value\` (number, optional): A value from 0 to 100 to show determinate progress. If omitted, the indicator will be indeterminate.
*   \`size\` (number, optional, default: 48): The width and height of the component in pixels.
*   \`strokeWidth\` (number, optional, default: 4): The thickness of the progress ring.

### Usage
\`\`\`tsx
import { CircularProgress } from './src/components';

// Indeterminate
<CircularProgress />

// Determinate
<CircularProgress value={75} />
\`\`\`

---

## LinearProgress

A horizontal bar style progress indicator.

### Props
*   \`value\` (number, optional): A value from 0 to 100 to show determinate progress. If omitted, the indicator will be indeterminate.
*   \`height\` (string, optional, default: '4px'): The thickness of the progress bar.

### Usage
\`\`\`tsx
import { LinearProgress } from './src/components';

// Indeterminate
<LinearProgress />

// Determinate
<LinearProgress value={50} />
\`\`\``;
const sourceCode = `/* Showing CircularProgress source. LinearProgress is similar. */
import React from 'react';
import { useStyles } from '../../core/hooks/useStyles';
import { useTheme } from '../../core/theme/ThemeProvider';

interface CircularProgressProps {
    value?: number; // 0 to 100
    size?: number;
    strokeWidth?: number;
    className?: string;
    'aria-label'?: string;
}

export const CircularProgress: React.FC<CircularProgressProps> = ({
    value,
    size = 48,
    strokeWidth = 4,
    className = '',
    'aria-label': ariaLabel = 'Loading progress'
}) => {
    const { theme } = useTheme();
    const createStyle = useStyles('circular-progress');
    const isIndeterminate = value === undefined;

    /* ... internal logic and styles ... */

    return (
        <div className={\`\${containerClass} \${className}\`} role="progressbar" /* ...aria props... */>
            <svg>
                {/* ... circle elements ... */}
            </svg>
        </div>
    );
};`;
const ProgressDemo = () => {
  const [progress, setProgress] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(60);
  const [isIndeterminate, setIsIndeterminate] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_2__.DemoSection, {
    title: "Progress",
    description: "Components to indicate loading or the progress of an operation, available in circular and linear styles.",
    livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
      gap: "1.5rem",
      style: {
        width: '100%'
      }
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
      gap: "1rem",
      align: "center"
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
      weight: "600"
    }, "Linear"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.LinearProgress, {
      value: isIndeterminate ? undefined : progress
    })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
      gap: "1rem",
      direction: "row",
      align: "center",
      justify: "center"
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
      weight: "600"
    }, "Circular"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.CircularProgress, {
      value: isIndeterminate ? undefined : progress
    }))),
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ProgressConfigurator, {
      value: progress,
      setValue: setProgress,
      isIndeterminate: isIndeterminate,
      setIsIndeterminate: setIsIndeterminate
    }),
    documentation: documentation,
    fullSourceCode: sourceCode
  });
};

/***/ }),

/***/ "./demo/RadioGroup.tsx":
/*!*****************************!*\
  !*** ./demo/RadioGroup.tsx ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   RadioGroupDemo: () => (/* binding */ RadioGroupDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");



const RadioGroupConfigurator = ({
  label,
  setLabel,
  value
}) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "1.5rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Input, {
  label: "Label Prop",
  value: label,
  onChange: e => setLabel(e.target.value)
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, null, "Selected value: ", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("code", {
  style: {
    background: 'rgba(255,255,255,0.1)',
    padding: '2px 4px',
    borderRadius: '4px'
  }
}, value)));
const documentation = `# Radio Group

A set of checkable buttons where only one option can be selected at a time.

## Components

*   **RadioGroup**: The main wrapper that manages state and provides context.
*   **RadioGroupItem**: A single radio button option with a label.

## Props

### RadioGroup
*   \`value\` (string, required): The \`value\` of the currently selected \`RadioGroupItem\`.
*   \`onChange\` (function, required): A callback function triggered when the selection changes.
*   \`name\` (string, required): A name for the group, passed to the underlying radio inputs for accessibility.
*   \`label\` (string, optional): An accessible label for the entire group.

### RadioGroupItem
*   \`value\` (string, required): A unique value for this option.
*   \`label\` (string, required): The text label for this option.

## Usage

\`\`\`tsx
import { RadioGroup, RadioGroupItem } from './src/components';
import { useState } from 'react';

const [plan, setPlan] = useState('free');

<RadioGroup
  value={plan}
  onChange={setPlan}
  name="subscription-plan"
  label="Select a Plan"
>
    <RadioGroupItem value="free" label="Free Tier" />
    <RadioGroupItem value="pro" label="Pro Tier" />
</RadioGroup>
\`\`\``;
const sourceCode = `import React, { createContext, useContext } from 'react';
import { useStyles } from '../../core/hooks/useStyles';
import { useTheme } from '../../core/theme/ThemeProvider';
import { Text } from '../Text/Text';

interface RadioGroupContextType { /* ... */ }
const RadioGroupContext = createContext<RadioGroupContextType | null>(null);
const useRadioGroup = () => { /* ... */ };

interface RadioGroupProps { /* ... */ }

export const RadioGroup: React.FC<RadioGroupProps> = ({ children, value, onChange, name, label, className }) => {
    return (
        <RadioGroupContext.Provider value={{ value, onChange, name }}>
            <div role="radiogroup" aria-label={label} className={className}>
                {label && <Text as="span">{label}</Text>}
                {children}
            </div>
        </RadioGroupContext.Provider>
    );
};

interface RadioGroupItemProps { /* ... */ }

export const RadioGroupItem: React.FC<RadioGroupItemProps> = ({ value, label, className }) => {
    /* ... internal logic and styles ... */

    return (
        <label className={\`\${containerClass} \${className}\`}>
            <input 
                type="radio" 
                name={name} 
                value={value} 
                checked={isChecked} 
                onChange={() => onChange(value)}
                className={inputClass}
            />
            <span className={radioClass}>
                <span className={indicatorClass}></span>
            </span>
            <Text as="span">{label}</Text>
        </label>
    );
};`;
const RadioGroupDemo = () => {
  const [plan, setPlan] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('free');
  const [label, setLabel] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('Select a Plan');
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_2__.DemoSection, {
    title: "Radio Group",
    description: "A set of checkable buttons, where only one can be selected at a time.",
    livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.RadioGroup, {
      value: plan,
      onChange: setPlan,
      name: "subscription-plan",
      label: label
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.RadioGroupItem, {
      value: "free",
      label: "Free Tier"
    }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.RadioGroupItem, {
      value: "pro",
      label: "Pro Tier"
    }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.RadioGroupItem, {
      value: "enterprise",
      label: "Enterprise Tier"
    })),
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(RadioGroupConfigurator, {
      label: label,
      setLabel: setLabel,
      value: plan
    }),
    documentation: documentation,
    fullSourceCode: sourceCode
  });
};

/***/ }),

/***/ "./demo/Rating.tsx":
/*!*************************!*\
  !*** ./demo/Rating.tsx ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   RatingDemo: () => (/* binding */ RatingDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");



const RatingConfigurator = ({
  max,
  setMax,
  size,
  setSize,
  isReadonly,
  setIsReadonly,
  value
}) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "1.5rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "0.5rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
  as: "label",
  size: "sm",
  weight: "medium",
  color: "textSecondary"
}, "Max Prop (Total Stars)"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Slider, {
  value: max,
  onChange: setMax,
  min: 3,
  max: 10,
  showValue: true
})), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "0.5rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
  as: "label",
  size: "sm",
  weight: "medium",
  color: "textSecondary"
}, "Size Prop"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.SegmentedControl, {
  value: size,
  onChange: setSize,
  options: [{
    label: 'Small',
    value: 'small'
  }, {
    label: 'Medium',
    value: 'medium'
  }, {
    label: 'Large',
    value: 'large'
  }]
})), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Checkbox, {
  label: "Readonly Prop",
  checked: isReadonly,
  onChange: e => setIsReadonly(e.target.checked)
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, null, "Current value: ", value));
const documentation = `# Rating

A star rating component to display and collect user ratings.

## Props

*   \`value\` (number, required): The current rating value (number of filled stars).
*   \`onChange\` (function, optional): A callback function triggered when the rating is changed by the user.
*   \`max\` (number, optional, default: 5): The total number of stars to display.
*   \`readonly\` (boolean, optional, default: false): If true, the rating is display-only and cannot be changed.
*   \`size\` (enum: 'small' | 'medium' | 'large', optional, default: 'medium'): The size of the stars.
*   \`className\` (string, optional): Additional CSS classes for the container.

## Usage

\`\`\`tsx
import { Rating } from './src/components';
import { useState } from 'react';

const [rating, setRating] = useState(3);

// Interactive rating
<Rating value={rating} onChange={setRating} max={5} />

// Read-only rating
<Rating value={4} readonly />
\`\`\``;
const sourceCode = `import React from 'react'
import { useStyles } from '../../core/hooks/useStyles'
import { useTheme } from '../../core/theme/ThemeProvider'

export interface RatingProps {
    value: number;
    onChange?: (value: number) => void;
    max?: number;
    readonly?: boolean;
    size?: 'small' | 'medium' | 'large';
    className?: string;
}

export const Rating: React.FC<RatingProps> = ({ value, onChange, max = 5, readonly = false, size = 'medium', className = '' }) => {
    /* ... internal logic and styles ... */

    const handleClick = (index: number) => {
        if (!readonly && onChange) {
            onChange(index + 1)
        }
    }
    
    return (
        <div className={\`\${containerClass} \${className}\`} {...interactiveProps} >
            {Array.from({ length: max }, (_, i) => (
                <span key={i} className={starClass} data-filled={i < value} onClick={() => handleClick(i)} />
            ))}
        </div>
    )
}`;
const RatingDemo = () => {
  const [value, setValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(3);
  const [max, setMax] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(5);
  const [size, setSize] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('medium');
  const [isReadonly, setIsReadonly] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_2__.DemoSection, {
    title: "Rating",
    description: "A star rating component to display and collect user ratings.",
    livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Rating, {
      value: value,
      onChange: setValue,
      max: max,
      size: size,
      readonly: isReadonly
    }),
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(RatingConfigurator, {
      max: max,
      setMax: setMax,
      size: size,
      setSize: setSize,
      isReadonly: isReadonly,
      setIsReadonly: setIsReadonly,
      value: value
    }),
    documentation: documentation,
    fullSourceCode: sourceCode
  });
};

/***/ }),

/***/ "./demo/Search.tsx":
/*!*************************!*\
  !*** ./demo/Search.tsx ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SearchDemo: () => (/* binding */ SearchDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");



const SearchConfigurator = ({
  placeholder,
  setPlaceholder
}) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Input, {
  label: "Placeholder Prop",
  value: placeholder,
  onChange: e => setPlaceholder(e.target.value)
});
const documentation = `# Search

A styled text input component specifically designed for search queries, featuring a leading search icon. It is built upon the \`TextInput\` component.

## Props

*   All props from \`TextInput\` are supported (e.g., \`placeholder\`, \`value\`, \`onChange\`).
*   \`className\` (string, optional): Additional CSS classes for the container \`div\`.

## Usage

\`\`\`tsx
import { Search } from './src/components';

<Search placeholder="Search documentation..." />
\`\`\``;
const sourceCode = `import React from 'react';
import { TextInput, TextInputProps } from '../TextInput/TextInput';
import { useStyles } from '../../core/hooks/useStyles';
import { useTheme } from '../../core/theme/ThemeProvider';

const SearchIcon = () => ( /* ... svg ... */ );

export interface SearchProps extends TextInputProps {}

export const Search: React.FC<SearchProps> = ({ className = '', ...props }) => {
    const { theme } = useTheme();
    const createStyle = useStyles('search');
    
    const containerClass = createStyle({ /* ... styles ... */ });
    const iconClass = createStyle({ /* ... styles ... */ });
    const inputClass = createStyle({ paddingLeft: '36px' });

    return (
        <div className={\`\${containerClass} \${className}\`}>
            <span className={iconClass}>
                <SearchIcon />
            </span>
            <TextInput className={inputClass} {...props} />
        </div>
    );
};

export default Search;`;
const SearchDemo = () => {
  const [placeholder, setPlaceholder] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)("Search documentation...");
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_2__.DemoSection, {
    title: "Search",
    description: "A styled text input component specifically designed for search queries, featuring a leading search icon.",
    livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Search, {
      placeholder: placeholder,
      style: {
        width: '300px'
      }
    }),
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(SearchConfigurator, {
      placeholder: placeholder,
      setPlaceholder: setPlaceholder
    }),
    documentation: documentation,
    fullSourceCode: sourceCode
  });
};

/***/ }),

/***/ "./demo/Select.tsx":
/*!*************************!*\
  !*** ./demo/Select.tsx ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SelectDemo: () => (/* binding */ SelectDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");



const initialOptions = [{
  value: 'grid',
  label: 'Data Grid Pro'
}, {
  value: 'suite',
  label: 'Component Suite'
}, {
  value: 'headless',
  label: 'Headless Components'
}];
const SelectConfigurator = ({
  optionsString,
  setOptionsString,
  error,
  value
}) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "1rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "0.5rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
  as: "label",
  size: "sm",
  weight: "medium",
  color: "textSecondary"
}, "Options Prop (JSON Array)"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Textarea, {
  value: optionsString,
  onChange: e => setOptionsString(e.target.value),
  rows: 5,
  style: {
    fontFamily: 'monospace'
  }
}), error && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Error, null, error)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, null, "Selected value: ", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("code", {
  style: {
    background: 'rgba(255,255,255,0.1)',
    padding: '2px 4px',
    borderRadius: '4px'
  }
}, value)));
const documentation = `# Select

A custom-styled dropdown component for selecting a single option from a list.

## Props

*   \`value\` (string, required): The \`value\` of the currently selected option.
*   \`onChange\` (function, required): A callback function triggered when the selection changes.
*   \`options\` (array of objects, required): The list of options to display. Each object must have \`value\` and \`label\` properties.
*   \`disabled\` (boolean, optional): If true, the select is not interactive.
*   \`className\` (string, optional): Additional CSS classes for the container.

## Usage

\`\`\`tsx
import { Select } from './src/components';
import { useState } from 'react';

const selectOptions = [
    { value: 'grid', label: 'Data Grid' },
    { value: 'suite', label: 'Component Suite' },
];

const [selection, setSelection] = useState('grid');

<Select value={selection} onChange={setSelection} options={selectOptions} />
\`\`\``;
const sourceCode = `import React, { useState, useRef } from 'react'
import { useStyles } from '../../core/hooks/useStyles'
import { useTheme } from '../../core/theme/ThemeProvider'
import { useClickOutside } from '../../core/hooks/useInteractions'
import { Popper, PopperContent, PopperTrigger } from '../Popper/Popper'

export interface SelectProps { /* ... */ }

export const Select: React.FC<SelectProps> = ({ value, onChange, options, disabled = false, className = '' }) => {
    const { theme } = useTheme();
    const createStyle = useStyles('select');
    const [isOpen, setIsOpen] = useState(false);
    
    const selectedOption = options.find(opt => opt.value === value);

    const triggerClass = createStyle({ /* ... styles ... */ });
    const dropdownClass = createStyle({ /* ... styles ... */ });
    const optionClass = createStyle({ /* ... styles ... */ });

    const handleSelect = (optionValue: string) => { /* ... */ };

    return (
       <Popper isOpen={isOpen} setIsOpen={setIsOpen}>
            <PopperTrigger>
                 <button className={triggerClass} disabled={disabled}>
                    {selectedOption?.label}
                </button>
            </PopperTrigger>
            <PopperContent className={dropdownClass}>
                 {options.map((option) => (
                    <div
                        key={option.value}
                        className={optionClass}
                        onClick={() => handleSelect(option.value)}
                        data-selected={option.value === value}
                    >
                        {option.label}
                    </div>
                ))}
            </PopperContent>
       </Popper>
    );
}`;
const SelectDemo = () => {
  const [optionsString, setOptionsString] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(JSON.stringify(initialOptions, null, 2));
  const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');
  let options = initialOptions;
  try {
    const parsed = JSON.parse(optionsString);
    if (Array.isArray(parsed)) {
      options = parsed;
      if (error) setError('');
    } else {
      if (!error) setError('Options must be a valid JSON array.');
    }
  } catch (e) {
    if (!error) setError('Invalid JSON format');
  }
  const [value, setValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(options[0]?.value || '');
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_2__.DemoSection, {
    title: "Select",
    description: "A custom-styled dropdown component for selecting a single option from a list.",
    livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Select, {
      value: value,
      onChange: setValue,
      options: options
    }),
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(SelectConfigurator, {
      optionsString: optionsString,
      setOptionsString: setOptionsString,
      error: error,
      value: value
    }),
    documentation: documentation,
    fullSourceCode: sourceCode
  });
};

/***/ }),

/***/ "./demo/Sidebar.tsx":
/*!**************************!*\
  !*** ./demo/Sidebar.tsx ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SidebarDemo: () => (/* binding */ SidebarDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _src_icons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../src/icons */ "./src/icons/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");




const SidebarConfigurator = ({
  width,
  setWidth
}) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Input, {
  label: "Width Prop",
  value: width,
  onChange: e => setWidth(e.target.value)
});
const documentation = `# Sidebar

A set of components for creating a vertical navigation sidebar, commonly used for main application navigation.

## Components

*   **Sidebar**: The main container for the sidebar content.
*   **SidebarNav**: A wrapper for a navigation section, which can include a title.
*   **SidebarNavItem**: A single, clickable navigation link, with support for an icon and an active state.

## Props

### Sidebar
*   \`width\` (string, optional, default: '250px'): The width of the sidebar.
*   \`children\` (React.ReactNode): The content of the sidebar.

### SidebarNav
*   \`title\` (string, optional): A title for the navigation section.
*   \`children\` (React.ReactNode): A collection of \`SidebarNavItem\` components.

### SidebarNavItem
*   \`icon\` (React.ReactNode, optional): An icon to display next to the text.
*   \`isActive\` (boolean, optional): If true, applies an active style to the item.
*   All other props are passed to the underlying \`<a>\` tag (e.g., \`href\`, \`onClick\`).

## Usage

\`\`\`tsx
import { Sidebar, SidebarNav, SidebarNavItem } from './src/components';

<Sidebar>
    <SidebarNav title="Main Menu">
        <SidebarNavItem href="/dashboard" isActive>
            Dashboard
        </SidebarNavItem>
        <SidebarNavItem href="/settings">
            Settings
        </SidebarNavItem>
    </SidebarNav>
</Sidebar>
\`\`\``;
const sourceCode = `import React from 'react';
import { useStyles } from '../../core/hooks/useStyles';
import { useTheme } from '../../core/theme/ThemeProvider';
import { Icon } from '../Icon/Icon';

interface SidebarProps { /* ... */ }

export const Sidebar: React.FC<SidebarProps> = ({ children, width = '250px', height = '100%', className }) => {
    /* ... styles ... */
    return <aside className={\`\${sidebarClass} \${className}\`}>{children}</aside>;
};

interface SidebarNavProps { /* ... */ }
export const SidebarNav: React.FC<SidebarNavProps> = ({ children, title }) => { /* ... */ };

interface SidebarNavItemProps extends React.AnchorHTMLAttributes<HTMLAnchorElement> { /* ... */ }
export const SidebarNavItem: React.FC<SidebarNavItemProps> = ({ children, icon, isActive, className, ...props }) => {
    /* ... styles ... */
    return (
        <a className={\`\${itemClass} \${className}\`} {...props}>
            {icon && <Icon as={icon} size={16} />}
            <span>{children}</span>
        </a>
    );
};`;
const SidebarDemo = () => {
  const [width, setWidth] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('250px');
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_3__.DemoSection, {
    title: "Sidebar",
    description: "A vertical navigation component, typically used for main application navigation.",
    livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
      direction: "row",
      style: {
        height: '300px',
        width: '100%',
        backgroundColor: 'rgba(0,0,0,0.2)',
        borderRadius: '8px'
      }
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Sidebar, {
      width: width
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
      size: "1.25rem",
      weight: "600"
    }, "App"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.SidebarNav, {
      title: "Menu"
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.SidebarNavItem, {
      href: "#",
      icon: _src_icons__WEBPACK_IMPORTED_MODULE_2__.HomeIcon,
      isActive: true
    }, "Dashboard"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.SidebarNavItem, {
      href: "#",
      icon: _src_icons__WEBPACK_IMPORTED_MODULE_2__.SettingsIcon
    }, "Settings"))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
      style: {
        padding: '1rem',
        flex: 1
      }
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, null, "Main content area"))),
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(SidebarConfigurator, {
      width: width,
      setWidth: setWidth
    }),
    documentation: documentation,
    fullSourceCode: sourceCode
  });
};

/***/ }),

/***/ "./demo/Skeleton.tsx":
/*!***************************!*\
  !*** ./demo/Skeleton.tsx ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SkeletonDemo: () => (/* binding */ SkeletonDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");



const SkeletonConfigurator = ({
  variant,
  setVariant,
  width,
  setWidth,
  height,
  setHeight
}) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "1.5rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "0.5rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
  as: "label",
  size: "sm",
  weight: "medium",
  color: "textSecondary"
}, "Variant Prop"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.SegmentedControl, {
  value: variant,
  onChange: setVariant,
  options: [{
    label: 'Text',
    value: 'text'
  }, {
    label: 'Rect',
    value: 'rect'
  }, {
    label: 'Circle',
    value: 'circle'
  }]
})), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Input, {
  label: "Width Prop",
  value: width,
  onChange: e => setWidth(e.target.value)
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Input, {
  label: "Height Prop",
  value: height,
  onChange: e => setHeight(e.target.value)
}));
const documentation = `# Skeleton

A placeholder component used to indicate that content is loading. It shows a shimmering shape that mimics the final content's structure, improving perceived performance.

## Props

*   \`width\` (string, optional, default: '100%'): The width of the skeleton shape.
*   \`height\` (string, optional, default: '1rem'): The height of the skeleton shape.
*   \`variant\` (enum: 'text' | 'rect' | 'circle', optional, default: 'text'): The shape of the skeleton placeholder.
*   All other standard \`<div>\` attributes are supported.

## Usage

\`\`\`tsx
import { Skeleton, Stack } from './src/components';

<Stack gap="0.5rem">
    <Skeleton width="80%" height="1.2rem" />
    <Skeleton variant="circle" width="40px" height="40px" />
    <Skeleton variant="rect" height="100px" />
</Stack>
\`\`\``;
const sourceCode = `import React from 'react';
import { useStyles } from '../../core/hooks/useStyles';
import { useTheme } from '../../core/theme/ThemeProvider';

interface SkeletonProps extends React.HTMLAttributes<HTMLDivElement> {
    width?: string;
    height?: string;
    variant?: 'text' | 'rect' | 'circle';
}

export const Skeleton: React.FC<SkeletonProps> = ({
    width = '100%',
    height = '1rem',
    variant = 'text',
    className = '',
    style,
    ...props
}) => {
    const { theme } = useTheme();
    const createStyle = useStyles('skeleton');

    const animationClass = createStyle({
        '@keyframes shimmer': {
            '0%': { backgroundPosition: '-1000px 0' },
            '100%': { backgroundPosition: '1000px 0' },
        },
        animation: 'shimmer 2s infinite linear',
        backgroundImage: \`linear-gradient(90deg, \${theme.colors.border} 25%, rgba(255,255,255,0.1) 50%, \${theme.colors.border} 75%)\`,
        backgroundSize: '2000px 100%',
    });

    const baseClass = createStyle({
        backgroundColor: theme.colors.border,
        width,
        height,
        borderRadius: variant === 'circle' ? '50%' : (variant === 'text' ? '4px' : '8px'),
    });

    return (
        <div
            className={\`\${baseClass} \${animationClass} \${className}\`}
            style={style}
            {...props}
        />
    );
};`;
const SkeletonDemo = () => {
  const [variant, setVariant] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('text');
  const [width, setWidth] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('80%');
  const [height, setHeight] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('1rem');
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_2__.DemoSection, {
    title: "Skeleton",
    description: "A placeholder component to indicate that content is loading, improving perceived performance.",
    livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Skeleton, {
      variant: variant,
      width: width,
      height: height
    }),
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(SkeletonConfigurator, {
      variant: variant,
      setVariant: setVariant,
      width: width,
      setWidth: setWidth,
      height: height,
      setHeight: setHeight
    }),
    documentation: documentation,
    fullSourceCode: sourceCode
  });
};

/***/ }),

/***/ "./demo/Slider.tsx":
/*!*************************!*\
  !*** ./demo/Slider.tsx ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SliderDemo: () => (/* binding */ SliderDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");



const SliderConfigurator = ({
  min,
  setMin,
  max,
  setMax,
  step,
  setStep,
  showValue,
  setShowValue,
  isDisabled,
  setIsDisabled
}) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "1.5rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Input, {
  label: "Min Prop",
  type: "number",
  value: min,
  onChange: e => setMin(Number(e.target.value))
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Input, {
  label: "Max Prop",
  type: "number",
  value: max,
  onChange: e => setMax(Number(e.target.value))
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Input, {
  label: "Step Prop",
  type: "number",
  value: step,
  onChange: e => setStep(Number(e.target.value))
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Checkbox, {
  label: "Show Value Prop",
  checked: showValue,
  onChange: e => setShowValue(e.target.checked)
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Checkbox, {
  label: "Disabled Prop",
  checked: isDisabled,
  onChange: e => setIsDisabled(e.target.checked)
}));
const documentation = `# Slider

An input component that allows the user to select a value from a continuous or discrete range by dragging a thumb along a track.

## Props

*   \`value\` (number, required): The current value of the slider.
*   \`onChange\` (function, required): A callback function triggered when the value changes.
*   \`min\` (number, optional, default: 0): The minimum value of the range.
*   \`max\` (number, optional, default: 100): The maximum value of the range.
*   \`step\` (number, optional, default: 1): The increment value.
*   \`disabled\` (boolean, optional): If true, the slider is not interactive.
*   \`showValue\` (boolean, optional): If true, the current value is always displayed above the thumb.
*   \`color\` (string, optional): A custom color for the slider's track and thumb.

## Usage

\`\`\`tsx
import { Slider } from './src/components';
import { useState } from 'react';

const [volume, setVolume] = useState(50);

<Slider value={volume} onChange={setVolume} min={0} max={100} />
\`\`\``;
const sourceCode = `import React, { useState, useRef, useEffect, useCallback } from 'react';
import { useStyles } from '../../core/hooks/useStyles';
import { useTheme } from '../../core/theme/ThemeProvider';

export interface SliderProps { /* ... */ }

export const Slider: React.FC<SliderProps> = ({
    value, onChange, min = 0, max = 100, step = 1, disabled = false, showValue = false, className = '', color,
}) => {
    /* ... internal logic for dragging, keyboard events, and styles ... */

    return (
        <div className={\`\${containerClass} \${className}\`}>
            <div ref={trackRef} className={trackClass} onMouseDown={handleInteractionStart} onTouchStart={handleInteractionStart}>
                <div className={progressClass} />
                <div
                    className={thumbClass}
                    onKeyDown={handleKeyDown}
                    tabIndex={disabled ? -1 : 0}
                    role="slider"
                    /* ... aria props ... */
                />
                {(showValue || isDragging) && (
                    <div className={valueClass}>{value}</div>
                )}
            </div>
        </div>
    );
}`;
const SliderDemo = () => {
  const [value, setValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(50);
  const [min, setMin] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);
  const [max, setMax] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(100);
  const [step, setStep] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(1);
  const [showValue, setShowValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [isDisabled, setIsDisabled] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_2__.DemoSection, {
    title: "Slider",
    description: "An input component that allows selecting a value from a continuous or discrete range.",
    livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Slider, {
      value: value,
      onChange: setValue,
      min: min,
      max: max,
      step: step,
      showValue: showValue,
      disabled: isDisabled
    }),
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(SliderConfigurator, {
      min: min,
      setMin: setMin,
      max: max,
      setMax: setMax,
      step: step,
      setStep: setStep,
      showValue: showValue,
      setShowValue: setShowValue,
      isDisabled: isDisabled,
      setIsDisabled: setIsDisabled
    }),
    documentation: documentation,
    fullSourceCode: sourceCode
  });
};

/***/ }),

/***/ "./demo/Snackbar.tsx":
/*!***************************!*\
  !*** ./demo/Snackbar.tsx ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SnackbarDemo: () => (/* binding */ SnackbarDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _src_components_Snackbar_useSnackbar__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../src/components/Snackbar/useSnackbar */ "./src/components/Snackbar/useSnackbar.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");




const SnackbarConfigurator = () => {
  const {
    addSnackbar
  } = (0,_src_components_Snackbar_useSnackbar__WEBPACK_IMPORTED_MODULE_2__.useSnackbar)();
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
    gap: "1rem"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, null, "Use the buttons below to trigger snackbars with different configurations. They will appear at the bottom of the screen."), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
    direction: "row",
    gap: "1rem",
    wrap: true
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
    onClick: () => addSnackbar({
      message: 'This is a simple snackbar.'
    })
  }, "Show Snackbar"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
    variant: "secondary",
    onClick: () => {
      addSnackbar({
        message: 'An action was performed.',
        action: {
          label: 'Undo',
          onClick: () => alert('Undo action clicked!')
        }
      });
    }
  }, "Show with Action")));
};
const documentation = `# Snackbar Notification System

A system for dispatching brief, temporary notifications that appear at the bottom of the screen. Snackbars can also include an optional action.

## Components & Hooks

*   **SnackbarProvider**: A context provider that manages the state and rendering of all snackbars. It should wrap your entire application.
*   **useSnackbar**: A hook that provides access to the \`addSnackbar\` function.

## Usage

1.  **Wrap your app in \`SnackbarProvider\`:**
    \`\`\`tsx
    import { SnackbarProvider } from './src/components';
    const App = () => (
        <SnackbarProvider>
            {/* ... Your app ... */}
        </SnackbarProvider>
    );
    \`\`\`

2.  **Use the \`useSnackbar\` hook:**
    \`\`\`tsx
    import { useSnackbar, Button } from './src/components';
    const MyComponent = () => {
        const { addSnackbar } = useSnackbar();
        return <Button onClick={() => addSnackbar({ message: 'Hello!' })}>Show</Button>;
    };
    \`\`\`

## \`addSnackbar\` Options
*   \`message\` (string, required): The text to display.
*   \`action\` (object, optional): An action button with \`label\` and \`onClick\` properties.
*   \`duration\` (number, optional, default: 5000): Time in milliseconds before auto-dismiss.
`;
const sourceCode = `/* This file shows the Snackbar component. The provider and hook are also part of the system. */
import React, { useEffect } from 'react';
import { useStyles } from '../../core/hooks/useStyles';
import { useTheme } from '../../core/theme/ThemeProvider';
import { useFade } from '../../core/hooks/useAnimation';
import { SnackbarData } from './useSnackbar';
import { Text } from '../Text/Text';
import { Button } from '../Button';

interface SnackbarProps {
    snackbar: SnackbarData;
    onDismiss: (id: string) => void;
}

export const Snackbar: React.FC<SnackbarProps> = ({ snackbar, onDismiss }) => {
    /* ... internal logic for animations and dismissal ... */

    const containerClass = createStyle({ /* ... styles ... */ });

    return (
        <div 
            className={containerClass} 
            style={{ 
                opacity: isVisible ? 1 : 0, 
                transition: 'opacity 0.2s, transform 0.2s',
                transform: isVisible ? 'translateY(0)' : 'translateY(20px)',
            }}
            role="alert"
        >
            <Text size="14px" color="inherit">{snackbar.message}</Text>
            {snackbar.action && (
                <Button onClick={handleActionClick}>
                    {snackbar.action.label}
                </Button>
            )}
        </div>
    );
};`;
const SnackbarDemo = () => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_3__.DemoSection, {
  title: "Snackbar",
  description: "A component for brief, temporary notifications displayed at the bottom of the screen.",
  livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    color: "textSecondary"
  }, "Use the 'Props' tab to trigger snackbars."),
  propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(SnackbarConfigurator, null),
  documentation: documentation,
  fullSourceCode: sourceCode
});

/***/ }),

/***/ "./demo/Sofa.tsx":
/*!***********************!*\
  !*** ./demo/Sofa.tsx ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SofaDemo: () => (/* binding */ SofaDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");



const SofaConfigurator = ({
  title,
  setTitle,
  description,
  setDescription
}) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "1.5rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Input, {
  label: "Title Prop",
  value: title,
  onChange: e => setTitle(e.target.value)
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Input, {
  label: "Description Prop",
  value: description,
  onChange: e => setDescription(e.target.value)
}));
const documentation = `# Sofa

A styled container component used throughout the component showcase application. It provides a consistent bordered and padded box for wrapping component demonstrations and can now include a title and description.

## Props

*   \`children\` (React.ReactNode, required): The content to be displayed inside the container.
*   \`title\` (string, optional): A title to render in a heading style above the children.
*   \`description\` (string, optional): A descriptive text to render below the title.
*   All other standard HTML \`<div>\` attributes are supported.

## Usage

\`\`\`tsx
<Sofa
  title="Component Demo"
  description="This is a demonstration of another component."
>
  {/* ... other components ... */}
</Sofa>
\`\`\``;
const fullSourceCode = `import React from 'react';
import { useStyles } from '../../core/hooks/useStyles';
import { useTheme } from '../../core/theme/ThemeProvider';
import { Stack } from '../Stack/Stack';
import { Text } from '../Text/Text';

interface SofaProps extends React.HTMLAttributes<HTMLDivElement> {
    children: React.ReactNode;
    title?: string;
    description?: string;
}

export const Sofa: React.FC<SofaProps> = ({ children, className = '', title, description, ...props }) => {
    const { theme } = useTheme();
    const createStyle = useStyles('sofa');
    
    const sofaClass = createStyle({ 
        padding: '24px',
        backgroundColor: theme.colors.backgroundSecondary,
        borderRadius: '8px',
        border: \`1px solid \${theme.colors.border}\`,
        transition: 'background-color 0.3s, border-color 0.3s',
        '@supports (backdrop-filter: none) or (-webkit-backdrop-filter: none)': {
            backdropFilter: 'blur(16px)',
        },
    });
    
    return (
        <div className={\`\${sofaClass} \${className}\`} {...props}>
            {(title || description) ? (
                <Stack gap="1rem">
                    {title && <Text as="h2" size="1.5rem" weight="600">{title}</Text>}
                    {description && <Text>{description}</Text>}
                    <div>{children}</div>
                </Stack>
            ) : (
                children
            )}
        </div>
    );
};`;
const SofaDemo = () => {
  const [title, setTitle] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('Sofa Container');
  const [description, setDescription] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('This is a styled container component used throughout the showcase.');
  const code = `<Sofa title="${title}" description="${description}">
    <Text>This is the main content area.</Text>
</Sofa>`;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_2__.DemoSection, {
    title: "Sofa",
    description: "A styled container component for wrapping content sections. It can include an optional title and description.",
    initialCode: code,
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(SofaConfigurator, {
      title: title,
      setTitle: setTitle,
      description: description,
      setDescription: setDescription
    }),
    documentation: documentation,
    fullSourceCode: fullSourceCode
  });
};

/***/ }),

/***/ "./demo/Sparkline.tsx":
/*!****************************!*\
  !*** ./demo/Sparkline.tsx ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SparklineDemo: () => (/* binding */ SparklineDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _src_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../src/core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");




const sparklineData1 = Array.from({
  length: 20
}, (_, i) => ({
  x: i,
  y: Math.random() * 30 + 10
}));
const sparklineData2 = Array.from({
  length: 20
}, (_, i) => ({
  x: i,
  y: 40 - Math.random() * 20
}));
const flatData = Array.from({
  length: 20
}, (_, i) => ({
  x: i,
  y: 25
}));
const documentation = `# ChartSparkline

A small, lightweight, standalone chart. It's typically used inline to show a trend at a glance, without axes or coordinates.

## Props

*   \`data\` (array, required): The dataset to be visualized.
*   \`xAccessor\` (function, required): A function to access the x-value from a data point.
*   \`yAccessor\` (function, required): A function to access the y-value from a data point.
*   \`width\` (number | string, optional): The width of the SVG element.
*   \`height\` (number | string, optional): The height of the SVG element.
*   \`color\` (string, optional): The color of the line and area fill. Defaults to the theme's primary color.

## Usage

\`\`\`tsx
import { ChartSparkline } from './src/components';

const data = Array.from({ length: 20 }, (_, i) => ({ x: i, y: Math.random() * 30 }));

<ChartSparkline
  data={data}
  xAccessor={d => d.x}
  yAccessor={d => d.y}
  height={40}
/>
\`\`\``;
const sourceCode = `import React from 'react';
import { useTheme } from '../../core/theme/ThemeProvider';
import { createLinearScale } from '../../core/utils/scale';
import { hexToRgba } from '../../core/color/utils';

interface ChartSparklineProps { /*...*/ }

export const ChartSparkline: React.FC<ChartSparklineProps> = (props) => {
    /* ... internal logic for calculating path and scales ... */

    return (
        <svg 
            width={width} 
            height={height} 
            viewBox={\`0 0 \${viewBoxWidth} \${viewBoxHeight}\`} 
            preserveAspectRatio="none"
        >
            <path d={areaPath} fill={hexToRgba(lineColor, 0.1)} />
            <path d={linePath} fill="none" stroke={lineColor} />
            <circle cx={lastPoint.x} cy={lastPoint.y} r={strokeWidth * 1.2} fill={lineColor} />
        </svg>
    );
};`;
const SparklineDemo = () => {
  const {
    theme
  } = (0,_src_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_3__.DemoSection, {
    title: "Sparkline",
    description: "A small, lightweight chart, typically used inline to show a trend at a glance.",
    livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Grid, {
      minItemWidth: "150px",
      gap: "1rem"
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Card, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
      gap: "0.5rem"
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
      size: "0.875rem",
      color: theme.colors.textSecondary
    }, "Revenue"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
      size: "1.25rem",
      weight: "600"
    }, "$1,420"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.ChartSparkline, {
      data: sparklineData1,
      xAccessor: d => d.x,
      yAccessor: d => d.y,
      height: 40
    }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Card, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
      gap: "0.5rem"
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
      size: "0.875rem",
      color: theme.colors.textSecondary
    }, "Subscriptions"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
      size: "1.25rem",
      weight: "600"
    }, "2,312"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.ChartSparkline, {
      data: sparklineData2,
      xAccessor: d => d.x,
      yAccessor: d => d.y,
      height: 40,
      color: theme.colors.accent
    }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Card, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
      gap: "0.5rem"
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
      size: "0.875rem",
      color: theme.colors.textSecondary
    }, "Latency"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
      size: "1.25rem",
      weight: "600"
    }, "25ms"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.ChartSparkline, {
      data: flatData,
      xAccessor: d => d.x,
      yAccessor: d => d.y,
      height: 40,
      color: theme.colors.secondary
    })))),
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
      color: "textSecondary"
    }, "This is a presentational component. Its props are demonstrated in the preview."),
    documentation: documentation,
    fullSourceCode: sourceCode
  });
};

/***/ }),

/***/ "./demo/SpeedDial.tsx":
/*!****************************!*\
  !*** ./demo/SpeedDial.tsx ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SpeedDialDemo: () => (/* binding */ SpeedDialDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _src_icons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../src/icons */ "./src/icons/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");




const speedDialActions = [{
  icon: _src_icons__WEBPACK_IMPORTED_MODULE_2__.CopyIcon,
  label: 'Copy',
  onClick: () => alert('Copy clicked')
}, {
  icon: _src_icons__WEBPACK_IMPORTED_MODULE_2__.ShareIcon,
  label: 'Share',
  onClick: () => alert('Share clicked')
}, {
  icon: _src_icons__WEBPACK_IMPORTED_MODULE_2__.PrintIcon,
  label: 'Print',
  onClick: () => alert('Print clicked')
}];
const documentation = `# Speed Dial

A component that displays a floating action button (FAB) which, upon being clicked, animates to reveal a set of related, secondary actions.

## Props

*   \`actions\` (array of objects, required): An array of action objects to display. Each object must have:
    *   \`icon\` (React.ElementType): The icon for the action's button.
    *   \`label\` (string): The text label for the action (appears next to the button).
    *   \`onClick\` (function): The callback function to execute when the action is clicked.
*   \`position\` (object, optional): An object with \`top\`, \`bottom\`, \`left\`, \`right\` properties to position the Speed Dial. Defaults to \`{ bottom: '2rem', right: '2rem' }\`.

## Usage

\`\`\`tsx
import { SpeedDial } from './src/components';
import { ShareIcon, PrintIcon, CopyIcon } from './src/icons';

const actions = [
  { icon: CopyIcon, label: 'Copy', onClick: () => alert('Copy') },
  { icon: ShareIcon, label: 'Share', onClick: () => alert('Share') },
  { icon: PrintIcon, label: 'Print', onClick: () => alert('Print') },
];

<SpeedDial actions={actions} />
\`\`\``;
const sourceCode = `import React, { useState } from 'react';
import { FloatingActionButton } from '../FloatingActionButton/FloatingActionButton';
import { PlusIcon, TimesIcon } from '../../icons';
import { useStyles, useTheme } from '../../core';
import { useClickOutside } from '../../core/hooks/useInteractions';
import { Stack } from '../Stack/Stack';
import { Text } from '../Text/Text';

interface SpeedDialAction {
    icon: React.ElementType;
    label: string;
    onClick: () => void;
}

interface SpeedDialProps {
    actions: SpeedDialAction[];
    position?: { bottom?: string; right?: string; top?: string; left?: string };
}

export const SpeedDial: React.FC<SpeedDialProps> = ({ actions, position = { bottom: '2rem', right: '2rem' } }) => {
    const [isOpen, setIsOpen] = useState(false);
    const { theme } = useTheme();
    const createStyle = useStyles('speed-dial');
    const containerRef = useClickOutside<HTMLDivElement>(() => setIsOpen(false));

    const containerClass = createStyle({
        position: 'fixed',
        ...position,
        zIndex: 45,
        display: 'flex',
        flexDirection: 'column-reverse',
        alignItems: 'center',
        gap: '1rem',
    });

    const actionClass = (index: number) => createStyle({
        display: 'flex',
        alignItems: 'center',
        gap: '1rem',
        transition: \`all 0.3s ease \${index * 0.05}s\`,
        opacity: isOpen ? 1 : 0,
        transform: isOpen ? 'translateY(0)' : 'translateY(10px)',
    });

    const labelClass = createStyle({
        backgroundColor: theme.colors.backgroundSecondary,
        color: theme.colors.text,
        padding: '0.25rem 0.75rem',
        borderRadius: '4px',
        boxShadow: '0 2px 8px rgba(0,0,0,0.3)',
        whiteSpace: 'nowrap',
    });

    return (
        <div ref={containerRef} className={containerClass}>
            <FloatingActionButton
                icon={isOpen ? TimesIcon : PlusIcon}
                label={isOpen ? "Close actions" : "Open actions"}
                onClick={() => setIsOpen(!isOpen)}
            />
            <Stack direction="column-reverse" align="end" gap="1.5rem">
                {actions.map((action, index) => (
                    <div key={action.label} className={actionClass(index)}>
                        <div className={labelClass}>
                            <Text size={theme.typography.fontSizes.sm}>{action.label}</Text>
                        </div>
                        <FloatingActionButton
                            icon={action.icon}
                            label={action.label}
                            onClick={() => {
                                action.onClick();
                                setIsOpen(false);
                            }}
                            size="small"
                            position={{}}
                            style={{ position: 'relative' }}
                        />
                    </div>
                ))}
            </Stack>
        </div>
    );
};`;
const SpeedDialDemo = () => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_3__.DemoSection, {
  title: "Speed Dial",
  description: "A FAB that displays a list of related actions when clicked. The button is fixed to the viewport, not this container.",
  livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    color: "textSecondary"
  }, "The Speed Dial is positioned at the bottom right of the screen. Click it to see the actions."),
  propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    color: "textSecondary"
  }, "The `actions` prop is a complex object not suitable for simple controls. The `position` prop is also demonstrated with a fixed value."),
  documentation: documentation,
  fullSourceCode: sourceCode
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.SpeedDial, {
  actions: speedDialActions
}));

/***/ }),

/***/ "./demo/Spinner.tsx":
/*!**************************!*\
  !*** ./demo/Spinner.tsx ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SpinnerDemo: () => (/* binding */ SpinnerDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");



const SpinnerConfigurator = ({
  size,
  setSize
}) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "1rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
  as: "label",
  size: "sm",
  weight: "medium",
  color: "textSecondary"
}, "Size Prop"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Slider, {
  value: size,
  onChange: setSize,
  min: 12,
  max: 48,
  showValue: true
}));
const documentation = `# Spinner

A simple, circular loading indicator that uses a spinning animation. It is an alternative to \`CircularProgress\` for when a simpler visual is needed.

## Props

*   \`size\` (number, optional, default: 24): The width and height of the spinner in pixels.
*   \`className\` (string, optional): Additional CSS classes for custom styling.

## Usage

\`\`\`tsx
import { Spinner } from './src/components';

<Spinner size={32} />
\`\`\``;
const sourceCode = `import React from 'react';
import { useStyles } from '../../core/hooks/useStyles';
import { useTheme } from '../../core/theme/ThemeProvider';

interface SpinnerProps {
    size?: number;
    className?: string;
}

export const Spinner: React.FC<SpinnerProps> = ({ size = 24, className }) => {
    const { theme } = useTheme();
    const createStyle = useStyles('spinner');

    const spinnerClass = createStyle({
        width: \`\${size}px\`,
        height: \`\${size}px\`,
        border: '2px solid transparent',
        borderTopColor: theme.colors.primary,
        borderRadius: '50%',
        animation: 'spin 0.8s linear infinite',
        '@keyframes spin': {
            '0%': { transform: 'rotate(0deg)' },
            '100%': { transform: 'rotate(360deg)' },
        },
    });

    return <div className={\`\${spinnerClass} \${className}\`} role="status" aria-label="Loading"></div>;
};`;
const SpinnerDemo = () => {
  const [size, setSize] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(24);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_2__.DemoSection, {
    title: "Spinner",
    description: "A simple loading indicator.",
    livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Spinner, {
      size: size
    }),
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(SpinnerConfigurator, {
      size: size,
      setSize: setSize
    }),
    documentation: documentation,
    fullSourceCode: sourceCode
  });
};

/***/ }),

/***/ "./demo/Stack.tsx":
/*!************************!*\
  !*** ./demo/Stack.tsx ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   StackDemo: () => (/* binding */ StackDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");
/* harmony import */ var _src_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../src/core */ "./src/core/index.ts");




const StackConfigurator = ({
  direction,
  setDirection,
  gap,
  setGap,
  align,
  setAlign,
  justify,
  setJustify,
  wrap,
  setWrap
}) => {
  const {
    theme
  } = (0,_src_core__WEBPACK_IMPORTED_MODULE_3__.useTheme)();
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
    gap: "1.5rem"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
    gap: "4px"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    as: "label",
    size: "sm",
    weight: "medium",
    color: "textSecondary"
  }, "Direction"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.SegmentedControl, {
    value: direction,
    onChange: setDirection,
    options: [{
      label: 'row',
      value: 'row'
    }, {
      label: 'column',
      value: 'column'
    }, {
      label: 'row-reverse',
      value: 'row-reverse'
    }, {
      label: 'column-reverse',
      value: 'column-reverse'
    }]
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Input, {
    label: "Gap",
    value: gap,
    onChange: e => setGap(e.target.value)
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
    gap: "4px"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    as: "label",
    size: "sm",
    weight: "medium",
    color: "textSecondary"
  }, "Align Items"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.SegmentedControl, {
    value: align,
    onChange: setAlign,
    options: [{
      label: 'start',
      value: 'start'
    }, {
      label: 'center',
      value: 'center'
    }, {
      label: 'end',
      value: 'end'
    }, {
      label: 'stretch',
      value: 'stretch'
    }]
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
    gap: "4px"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    as: "label",
    size: "sm",
    weight: "medium",
    color: "textSecondary"
  }, "Justify Content"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.SegmentedControl, {
    value: justify,
    onChange: setJustify,
    options: [{
      label: 'start',
      value: 'start'
    }, {
      label: 'center',
      value: 'center'
    }, {
      label: 'end',
      value: 'end'
    }, {
      label: 'space-between',
      value: 'space-between'
    }]
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Checkbox, {
    label: "Wrap",
    checked: wrap,
    onChange: e => setWrap(e.target.checked)
  }));
};
const documentation = `# Stack

A layout component for arranging items in a vertical or horizontal stack with a consistent gap between them. It is built on \`flexbox\`.

## Props

*   \`direction\` (enum: 'row' | 'column' | 'row-reverse' | 'column-reverse', optional): The \`flex-direction\`.
*   \`gap\` (string, optional): The space between items.
*   \`align\` (string, optional): The \`align-items\`.
*   \`justify\` (string, optional): The \`justify-content\`.
*   \`wrap\` (boolean, optional): Whether to wrap items to the next line (\`flex-wrap\`).

## Usage

\`\`\`tsx
<Stack direction="row" gap="1rem" align="center" wrap={true}>
  <Card>Item A</Card>
  <Card>Item B</Card>
</Stack>
\`\`\``;
const fullSourceCode = `import React from 'react';
import { useStyles } from '../../core/hooks/useStyles';

interface StackProps extends React.HTMLAttributes<HTMLDivElement> {
    direction?: 'row' | 'column' | 'row-reverse' | 'column-reverse';
    gap?: string;
    align?: 'start' | 'center' | 'end' | 'stretch' | 'baseline';
    justify?: 'start' | 'center' | 'end' | 'space-between' | 'space-around' | 'space-evenly';
    wrap?: boolean;
}

export const Stack: React.FC<StackProps> = ({ 
    direction = 'column', 
    gap = '1rem', 
    align, 
    justify, 
    wrap = false,
    className = '', 
    children, 
    ...props 
}) => {
    const createStyle = useStyles('stack');
    
    const stackClass = createStyle({
        display: 'flex',
        flexDirection: direction,
        gap: gap,
        alignItems: align,
        justifyContent: justify,
        flexWrap: wrap ? 'wrap' : 'nowrap',
    });

    return (
        <div className={\`\${stackClass} \${className}\`} {...props}>
            {children}
        </div>
    );
};`;
const StackDemo = () => {
  const [direction, setDirection] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('row');
  const [gap, setGap] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('1rem');
  const [align, setAlign] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('center');
  const [justify, setJustify] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('start');
  const [wrap, setWrap] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);
  const code = `<Stack direction="${direction}" gap="${gap}" align="${align}" justify="${justify}" wrap="${wrap}">
    <Card><Text>Item 1</Text></Card>
    <Card><Text>Item 2</Text></Card>
    <Card><Text>Item 3</Text></Card>
</Stack>`;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_2__.DemoSection, {
    title: "Stack",
    description: "A layout component for arranging items with consistent spacing, powered by Flexbox.",
    initialCode: code,
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(StackConfigurator, {
      direction: direction,
      setDirection: setDirection,
      gap: gap,
      setGap: setGap,
      align: align,
      setAlign: setAlign,
      justify: justify,
      setJustify: setJustify,
      wrap: wrap,
      setWrap: setWrap
    }),
    documentation: documentation,
    fullSourceCode: fullSourceCode
  });
};

/***/ }),

/***/ "./demo/Stepper.tsx":
/*!**************************!*\
  !*** ./demo/Stepper.tsx ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   StepperDemo: () => (/* binding */ StepperDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");



const steps = [{
  label: 'Shipping'
}, {
  label: 'Payment'
}, {
  label: 'Review'
}];
const StepperConfigurator = ({
  activeStep,
  setActiveStep
}) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  direction: "row",
  justify: "center",
  gap: "1rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
  onClick: () => setActiveStep(p => Math.max(0, p - 1)),
  disabled: activeStep === 0
}, "Back"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
  onClick: () => setActiveStep(p => Math.min(steps.length - 1, p + 1)),
  disabled: activeStep === steps.length - 1
}, "Next"));
const documentation = `# Stepper

A component that displays progress through a sequence of logical, numbered steps. It is ideal for guiding users through a multi-step process like a checkout or setup wizard.

## Props

*   \`activeStep\` (number, required): The index of the current active step (0-based).
*   \`steps\` (array of objects, required): An array describing the steps. Each object should have:
    *   \`label\` (string, required): The title of the step.
    *   \`description\` (string, optional): A short description of the step.
*   \`className\` (string, optional): Additional CSS classes for the container.

## Usage

\`\`\`tsx
import { Stepper, Button } from './src/components';
import { useState } from 'react';

const steps = [
    { label: 'Shipping' },
    { label: 'Payment' },
    { label: 'Review' },
];

const [activeStep, setActiveStep] = useState(1);

<>
    <Stepper steps={steps} activeStep={activeStep} />
    <Button onClick={() => setActiveStep(p => p + 1)}>Next</Button>
</>
\`\`\``;
const sourceCode = `import React from 'react';
import { useStyles } from '../../core/hooks/useStyles';
import { useTheme } from '../../core/theme/ThemeProvider';
import { Text } from '../Text/Text';

interface StepperProps {
    activeStep: number;
    steps: { label: string; description?: string }[];
    className?: string;
}

export const Stepper: React.FC<StepperProps> = ({ activeStep, steps, className }) => {
    const { theme } = useTheme();
    const createStyle = useStyles('stepper');

    const containerClass = createStyle({ /* ...styles... */ });
    
    return (
        <div className={\`\${containerClass} \${className}\`}>
            {steps.map((step, index) => (
                <div key={index} className={stepClass}>
                    <div className={stepContentClass}>
                        <div className={circleClass(index)}>{index + 1}</div>
                        <Text size="14px" weight={index === activeStep ? 600 : 400}>
                            {step.label}
                        </Text>
                    </div>
                    <div className={connectorClass(index)} />
                </div>
            ))}
        </div>
    );
};`;
const StepperDemo = () => {
  const [activeStep, setActiveStep] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(1);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_2__.DemoSection, {
    title: "Stepper",
    description: "A component that displays progress through a sequence of logical and numbered steps.",
    livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stepper, {
      steps: steps,
      activeStep: activeStep
    }),
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(StepperConfigurator, {
      activeStep: activeStep,
      setActiveStep: setActiveStep
    }),
    documentation: documentation,
    fullSourceCode: sourceCode
  });
};

/***/ }),

/***/ "./demo/Switch.tsx":
/*!*************************!*\
  !*** ./demo/Switch.tsx ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SwitchDemo: () => (/* binding */ SwitchDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");



const SwitchConfigurator = ({
  label,
  setLabel,
  isChecked,
  setIsChecked,
  isDisabled,
  setIsDisabled
}) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "1.5rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Input, {
  label: "Label Prop",
  value: label,
  onChange: e => setLabel(e.target.value)
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Checkbox, {
  label: "Checked Prop",
  checked: isChecked,
  onChange: e => setIsChecked(e.target.checked)
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Checkbox, {
  label: "Disabled Prop",
  checked: isDisabled,
  onChange: e => setIsDisabled(e.target.checked)
}));
const documentation = `# Switch

A control that allows the user to toggle between two states, typically "on" and "off". It's a visually distinct alternative to a \`Checkbox\`.

## Props

*   \`label\` (string, optional): A text label displayed next to the switch.
*   \`id\` (string, optional): A unique identifier for associating the label with the input.
*   \`checked\` (boolean): The current state of the switch.
*   \`disabled\` (boolean, optional): If true, the switch will be un-interactive.
*   All other standard HTML \`<input type="checkbox">\` attributes are supported (e.g., \`onChange\`).

## Usage

\`\`\`tsx
import { Switch } from './src/components';
import { useState } from 'react';

const [notifications, setNotifications] = useState(true);

<Switch
  label="Enable Notifications"
  checked={notifications}
  onChange={(e) => setNotifications(e.target.checked)}
/>
\`\`\``;
const sourceCode = `import React from 'react';
import { useStyles } from '../../core/hooks/useStyles';
import { useTheme } from '../../core/theme/ThemeProvider';

interface SwitchProps extends React.InputHTMLAttributes<HTMLInputElement> {
    label?: string;
}

export const Switch: React.FC<SwitchProps> = ({ label, id, checked, disabled, ...props }) => {
    const { theme } = useTheme();
    const createStyle = useStyles('switch');

    const containerClass = createStyle({ /* ...styles... */ });
    const trackClass = createStyle({ /* ...styles... */ });
    const thumbClass = createStyle({ /* ...styles... */ });
    const inputClass = createStyle({ /* ...styles... */ });

    return (
        <label htmlFor={id} className={containerClass}>
            <input
                type="checkbox"
                id={id}
                checked={checked}
                disabled={disabled}
                role="switch"
                aria-checked={checked}
                {...props}
                className={inputClass}
            />
            <div className={trackClass}>
                <div className={thumbClass}></div>
            </div>
            {label && <span>{label}</span>}
        </label>
    );
};`;
const SwitchDemo = () => {
  const [isChecked, setIsChecked] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);
  const [label, setLabel] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('Enable Notifications');
  const [isDisabled, setIsDisabled] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_2__.DemoSection, {
    title: "Switch",
    description: "A control that allows the user to toggle between two states.",
    livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Switch, {
      label: label,
      checked: isChecked,
      onChange: e => setIsChecked(e.target.checked),
      disabled: isDisabled
    }),
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(SwitchConfigurator, {
      label: label,
      setLabel: setLabel,
      isChecked: isChecked,
      setIsChecked: setIsChecked,
      isDisabled: isDisabled,
      setIsDisabled: setIsDisabled
    }),
    documentation: documentation,
    fullSourceCode: sourceCode
  });
};

/***/ }),

/***/ "./demo/Table.tsx":
/*!************************!*\
  !*** ./demo/Table.tsx ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TableDemo: () => (/* binding */ TableDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");



const invoices = [{
  invoice: 'INV-2024-001',
  status: 'Paid',
  amount: '$250.00'
}, {
  invoice: 'INV-2024-002',
  status: 'Pending',
  amount: '$150.00'
}, {
  invoice: 'INV-2024-003',
  status: 'Overdue',
  amount: '$350.00'
}];
const documentation = `# Table

A set of components for displaying sets of data in rows and columns.

## Components

*   **Table**: The main \`<table>\` wrapper.
*   **TableHeader**: The \`<thead>\` element for column headers.
*   **TableBody**: The \`<tbody>\` element for data rows.
*   **TableRow**: The \`<tr>\` element for a single row.
*   **TableHead**: The \`<th>\` element for a header cell.
*   **TableCell**: The \`<td>\` element for a data cell.

## Usage

\`\`\`tsx
import { Table, TableHeader, TableBody, TableRow, TableHead, TableCell } from './src/components';

const data = [
    { id: 1, name: 'Product A', price: '$50' },
    { id: 2, name: 'Product B', price: '$75' },
];

<Table>
    <TableHeader>
        <TableRow>
            <TableHead>ID</TableHead>
            <TableHead>Product Name</TableHead>
            <TableHead>Price</TableHead>
        </TableRow>
    </TableHeader>
    <TableBody>
        {data.map((item) => (
            <TableRow key={item.id}>
                <TableCell>{item.id}</TableCell>
                <TableCell>{item.name}</TableCell>
                <TableCell>{item.price}</TableCell>
            </TableRow>
        ))}
    </TableBody>
</Table>
\`\`\``;
const sourceCode = `import React from 'react';
import { useStyles } from '../../core/hooks/useStyles';
import { useTheme } from '../../core/theme/ThemeProvider';

export const Table: React.FC<React.TableHTMLAttributes<HTMLTableElement>> = (props) => { /* ... */ };
export const TableHeader: React.FC<React.HTMLAttributes<HTMLTableSectionElement>> = (props) => <thead {...props} />;
export const TableBody: React.FC<React.HTMLAttributes<HTMLTableSectionElement>> = (props) => <tbody {...props} />;
export const TableRow: React.FC<React.HTMLAttributes<HTMLTableRowElement>> = (props) => { /* ... */ };
export const TableHead: React.FC<React.HTMLAttributes<HTMLTableCellElement>> = (props) => { /* ... */ };
export const TableCell: React.FC<React.HTMLAttributes<HTMLTableCellElement>> = (props) => { /* ... */ };`;
const TableDemo = () => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_2__.DemoSection, {
  title: "Table",
  description: "A component for displaying sets of data in rows and columns.",
  livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Table, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.TableHeader, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.TableRow, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.TableHead, null, "Invoice"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.TableHead, null, "Status"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.TableHead, null, "Amount"))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.TableBody, null, invoices.map(item => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.TableRow, {
    key: item.invoice
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.TableCell, null, item.invoice), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.TableCell, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Badge, {
    colorScheme: item.status === 'Paid' ? 'success' : item.status === 'Pending' ? 'accent' : 'error'
  }, item.status)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.TableCell, null, item.amount))))),
  propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    color: "textSecondary"
  }, "These are presentational table components. For a more feature-rich experience with sorting and filtering, see the `DataTable` component."),
  documentation: documentation,
  fullSourceCode: sourceCode
});

/***/ }),

/***/ "./demo/Tabs.tsx":
/*!***********************!*\
  !*** ./demo/Tabs.tsx ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TabsDemo: () => (/* binding */ TabsDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");



const documentation = `# Tabs

A component for organizing and navigating between different views of content.

## Components

*   **Tabs**: The main wrapper that manages the active tab state.
*   **TabList**: The container for the tab buttons.
*   **Tab**: A single, clickable tab button.
*   **TabPanels**: The container for all tab content panels.
*   **TabPanel**: The content for a single tab, which is only visible when its corresponding \`Tab\` is active.

## Props

### Tabs
*   \`defaultValue\` (string, required): The \`value\` of the \`Tab\` that should be active by default.
*   \`children\` (React.ReactNode): Should contain a \`TabList\` and \`TabPanels\`.

### Tab & TabPanel
*   \`value\` (string, required): A unique identifier that links a \`Tab\` to its \`TabPanel\`.

## Usage

\`\`\`tsx
import { Tabs, TabList, Tab, TabPanels, TabPanel } from './src/components';

<Tabs defaultValue="account">
    <TabList>
        <Tab value="account">Account</Tab>
        <Tab value="password">Password</Tab>
    </TabList>
    <TabPanels>
        <TabPanel value="account">
            <p>Account settings content goes here.</p>
        </TabPanel>
        <TabPanel value="password">
            <p>Password settings content goes here.</p>
        </TabPanel>
    </TabPanels>
</Tabs>
\`\`\``;
const sourceCode = `import React, { createContext, useContext, useState, useRef, useEffect } from 'react';
import { useStyles } from '../../core/hooks/useStyles';
import { useTheme } from '../../core/theme/ThemeProvider';

// --- Context Setup ---
interface TabsContextType {
    activeTab: string;
    setActiveTab: (value: string) => void;
    baseId: string;
}

const TabsContext = createContext<TabsContextType | null>(null);

const useTabs = () => {
    const context = useContext(TabsContext);
    if (!context) {
        throw new Error('Tab components must be used within a <Tabs> component.');
    }
    return context;
};


// --- Main Tabs Wrapper ---
export const Tabs: React.FC<{ defaultValue: string; children: React.ReactNode; className?: string }> = ({ defaultValue, children, className }) => {
    const [activeTab, setActiveTab] = useState(defaultValue);
    const baseId = useRef(\`tabs-\${Math.random().toString(36).substring(2, 9)}\`).current;
    return (
        <TabsContext.Provider value={{ activeTab, setActiveTab, baseId }}>
            <div className={className}>{children}</div>
        </TabsContext.Provider>
    );
};


// --- TabList: Container for the tab buttons ---
export const TabList: React.FC<{ children: React.ReactNode; className?: string }> = ({ children, className }) => {
    const { theme } = useTheme();
    const createStyle = useStyles('tabs-list');
    const tabRefs = useRef<(HTMLButtonElement | null)[]>([]);

    useEffect(() => {
        tabRefs.current = tabRefs.current.slice(0, React.Children.count(children));
    }, [children]);

    const containerClass = createStyle({
        backgroundColor: 'rgba(28, 28, 28, 0.5)',
        borderRadius: '8px',
        padding: '4px',
        display: 'inline-flex',
        gap: '4px',
        border: \`1px solid \${theme.colors.border}\`,
        marginBottom: theme.spacing.lg,
        '@supports (backdrop-filter: none) or (-webkit-backdrop-filter: none)': {
            backdropFilter: 'blur(12px)',
        },
    });
    
    const handleKeyDown = (event: React.KeyboardEvent) => {
        if (event.key === 'ArrowRight' || event.key === 'ArrowLeft') {
            event.preventDefault();
            const focusedIndex = tabRefs.current.findIndex(tab => tab === document.activeElement);
            if (focusedIndex === -1) return;

            const direction = event.key === 'ArrowRight' ? 1 : -1;
            const nextIndex = (focusedIndex + direction + tabRefs.current.length) % tabRefs.current.length;
            
            tabRefs.current[nextIndex]?.focus();
        }
    };

    return (
        <div role="tablist" aria-orientation="horizontal" className={\`\${containerClass} \${className}\`} onKeyDown={handleKeyDown}>
            {React.Children.map(children, (child, index) => 
                React.isValidElement(child) 
                ? React.cloneElement(child as React.ReactElement<any>, { ref: (el: HTMLButtonElement) => tabRefs.current[index] = el }) 
                : child
            )}
        </div>
    );
};


// --- Tab: A single tab button ---
export const Tab = React.forwardRef<HTMLButtonElement, { value: string; children: React.ReactNode; className?: string }>(({ value, children, className }, ref) => {
    const { activeTab, setActiveTab, baseId } = useTabs();
    const { theme } = useTheme();
    const createStyle = useStyles('tab');
    const isActive = activeTab === value;
    
    const tabClass = createStyle({
        padding: '6px 16px',
        borderRadius: '6px',
        background: 'none',
        border: 'none',
        color: theme.colors.textSecondary,
        cursor: 'pointer',
        fontSize: '14px',
        fontWeight: '500',
        transition: 'color 0.3s, background-color 0.3s',
        '&[data-active="true"]': {
            color: theme.colors.text,
            backgroundColor: theme.colors.backgroundSecondary,
        },
        '&:hover:not([data-active="true"])': {
            color: theme.colors.text,
        },
        '&:focus-visible': {
             outline: \`2px solid \${theme.colors.primary}\`,
             outlineOffset: '2px',
        }
    });

    return (
        <button
            ref={ref}
            id={\`\${baseId}-tab-\${value}\`}
            onClick={() => setActiveTab(value)}
            className={\`\${tabClass} \${className}\`}
            role="tab"
            aria-selected={isActive}
            aria-controls={\`\${baseId}-panel-\${value}\`}
            data-active={isActive}
            tabIndex={isActive ? 0 : -1}
        >
            {children}
        </button>
    );
});


// --- TabPanels: Wrapper for the content panels ---
export const TabPanels: React.FC<{ children: React.ReactNode; className?: string }> = ({ children, className }) => {
    return <div className={className}>{children}</div>;
};


// --- TabPanel: A single content panel, conditionally rendered ---
export const TabPanel: React.FC<{ value: string; children: React.ReactNode; className?: string }> = ({ value, children, className }) => {
    const { activeTab, baseId } = useTabs();
    return activeTab === value ? (
        <div 
            id={\`\${baseId}-panel-\${value}\`}
            role="tabpanel" 
            aria-labelledby={\`\${baseId}-tab-\${value}\`}
            className={className}
        >
            {children}
        </div>
    ) : null;
};`;
const TabsDemo = () => {
  const [defaultValue, setDefaultValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('account');
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_2__.DemoSection, {
    title: "Tabs",
    description: "A component for organizing content into switchable views.",
    livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Tabs, {
      defaultValue: defaultValue,
      key: defaultValue
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.TabList, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Tab, {
      value: "account"
    }, "Account"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Tab, {
      value: "password"
    }, "Password")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.TabPanels, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.TabPanel, {
      value: "account"
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
      gap: "1rem",
      style: {
        padding: '1rem 0'
      }
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
      weight: "600"
    }, "Account Settings"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
      size: "14px"
    }, "Make changes to your account here. Click save when you're done."), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Input, {
      label: "Name",
      defaultValue: "Zwhe UI"
    }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.TabPanel, {
      value: "password"
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
      gap: "1rem",
      style: {
        padding: '1rem 0'
      }
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
      weight: "600"
    }, "Password Settings"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
      size: "14px"
    }, "Change your password here. After saving, you'll be logged out."), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Input, {
      label: "Current Password",
      type: "password"
    }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Input, {
      label: "New Password",
      type: "password"
    }))))),
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
      gap: "1rem"
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
      as: "label",
      size: "sm",
      weight: "medium",
      color: "textSecondary"
    }, "DefaultValue Prop"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
      size: "sm"
    }, "This control remounts the component with a new default value."), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.SegmentedControl, {
      value: defaultValue,
      onChange: setDefaultValue,
      options: [{
        label: 'Account',
        value: 'account'
      }, {
        label: 'Password',
        value: 'password'
      }]
    })),
    documentation: documentation,
    fullSourceCode: sourceCode
  });
};

/***/ }),

/***/ "./demo/Tag.tsx":
/*!**********************!*\
  !*** ./demo/Tag.tsx ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TagDemo: () => (/* binding */ TagDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");



const TagConfigurator = ({
  variant,
  setVariant,
  colorScheme,
  setColorScheme,
  size,
  setSize,
  childrenText,
  setChildrenText,
  showClose,
  setShowClose
}) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "1.5rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Input, {
  label: "Children Prop (Text)",
  value: childrenText,
  onChange: e => setChildrenText(e.target.value)
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "0.5rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
  as: "label",
  size: "sm",
  weight: "medium",
  color: "textSecondary"
}, "Variant Prop"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.SegmentedControl, {
  value: variant,
  onChange: setVariant,
  options: [{
    label: 'Solid',
    value: 'solid'
  }, {
    label: 'Outline',
    value: 'outline'
  }]
})), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "0.5rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
  as: "label",
  size: "sm",
  weight: "medium",
  color: "textSecondary"
}, "Color Scheme Prop"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.SegmentedControl, {
  value: colorScheme,
  onChange: setColorScheme,
  options: [{
    label: 'Primary',
    value: 'primary'
  }, {
    label: 'Accent',
    value: 'accent'
  }, {
    label: 'Success',
    value: 'success'
  }, {
    label: 'Error',
    value: 'error'
  }]
})), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "0.5rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
  as: "label",
  size: "sm",
  weight: "medium",
  color: "textSecondary"
}, "Size Prop"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.SegmentedControl, {
  value: size,
  onChange: setSize,
  options: [{
    label: 'Small',
    value: 'sm'
  }, {
    label: 'Medium',
    value: 'md'
  }, {
    label: 'Large',
    value: 'lg'
  }]
})), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Checkbox, {
  label: "Show Close Button",
  checked: showClose,
  onChange: e => setShowClose(e.target.checked)
}));
const documentation = `# Tag

A component for labeling and categorizing content. It's similar to a \`Badge\` but supports different sizes and can include an optional close button.

## Props

*   \`variant\` (enum: 'solid' | 'outline', optional): The visual style.
*   \`colorScheme\` (enum: 'primary' | 'accent' | 'success' | 'error', optional): The color theme.
*   \`size\` (enum: 'sm' | 'md' | 'lg', optional): The size of the tag.

## Components

*   **Tag.CloseButton**: An optional button to render inside the tag, typically for removal.

## Usage

\`\`\`tsx
import { Tag } from './src/components';

<Tag colorScheme="success" size="lg">
  Completed
  <Tag.CloseButton onClick={() => alert('Closing!')} />
</Tag>
\`\`\``;
const sourceCode = `import React from 'react';
import { useStyles, useTheme } from '../../core';
import { hexToRgba } from '../../core/color/utils';
import { Icon } from '../Icon/Icon';
import { TimesIcon } from '../../icons';

interface TagProps extends React.HTMLAttributes<HTMLSpanElement> { /* ... */ }

const Tag: React.FC<TagProps> = ({ children, variant = 'solid', colorScheme = 'primary', size = 'md', className = '', ...props }) => {
    /* ...styles... */
    return <span className={\`\${tagClass} \${className}\`} {...props}>{children}</span>;
};

const TagCloseButton: React.FC<React.ButtonHTMLAttributes<HTMLButtonElement>> = (props) => {
    /* ...styles... */
    return (
        <button className={buttonClass} aria-label="Remove tag" {...props}>
            <Icon as={TimesIcon} size="0.8em" />
        </button>
    );
};

interface CompoundTag { (props: TagProps): React.ReactElement; CloseButton: typeof TagCloseButton; }
const CompoundTag = Tag as CompoundTag;
CompoundTag.CloseButton = TagCloseButton;
export { CompoundTag as Tag };`;
const TagDemo = () => {
  const [variant, setVariant] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('solid');
  const [colorScheme, setColorScheme] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('primary');
  const [size, setSize] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('md');
  const [childrenText, setChildrenText] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('React');
  const [showClose, setShowClose] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_2__.DemoSection, {
    title: "Tag",
    description: "A label for categorizing content, with sizes and an optional close button.",
    livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Tag, {
      variant: variant,
      colorScheme: colorScheme,
      size: size
    }, childrenText, showClose && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Tag.CloseButton, null)),
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(TagConfigurator, {
      variant: variant,
      setVariant: setVariant,
      colorScheme: colorScheme,
      setColorScheme: setColorScheme,
      size: size,
      setSize: setSize,
      childrenText: childrenText,
      setChildrenText: setChildrenText,
      showClose: showClose,
      setShowClose: setShowClose
    }),
    documentation: documentation,
    fullSourceCode: sourceCode
  });
};

/***/ }),

/***/ "./demo/Text.tsx":
/*!***********************!*\
  !*** ./demo/Text.tsx ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TextDemo: () => (/* binding */ TextDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _src_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../src/core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");




const TextConfigurator = ({
  as,
  setAs,
  size,
  setSize,
  weight,
  setWeight,
  color,
  setColor
}) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "1.5rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "0.5rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
  as: "label",
  size: "sm",
  weight: "medium",
  color: "textSecondary"
}, "As Prop"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.SegmentedControl, {
  value: as,
  onChange: setAs,
  options: [{
    label: 'p',
    value: 'p'
  }, {
    label: 'span',
    value: 'span'
  }, {
    label: 'h1',
    value: 'h1'
  }, {
    label: 'h2',
    value: 'h2'
  }]
})), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Input, {
  label: "Size Prop",
  value: size,
  onChange: e => setSize(e.target.value)
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Input, {
  label: "Weight Prop",
  value: weight,
  onChange: e => setWeight(e.target.value)
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Input, {
  label: "Color Prop",
  value: color,
  onChange: e => setColor(e.target.value)
}));
const documentation = `# Text

A versatile and polymorphic component for rendering text with consistent, theme-based typography styles. It can be rendered as different HTML elements using the \`as\` prop.

## Props

*   \`as\` (enum: 'p' | 'span' | 'h1' ... , optional): The underlying HTML element.
*   \`size\` (string, optional): The font size (e.g., '1rem', '14px').
*   \`weight\` (string | number, optional): The font weight.
*   \`color\` (string, optional): The text color.

## Usage

\`\`\`tsx
<Text as="h2" size="1.5rem" weight="600">
  Section Title
</Text>
\`\`\``;
const fullSourceCode = `import React from 'react';
import { useStyles } from '../../core/hooks/useStyles';
import { useTheme } from '../../core/theme/ThemeProvider';

type TextProps<C extends React.ElementType> = {
    as?: C;
    size?: string;
    weight?: string | number;
    color?: string;
} & Omit<React.ComponentPropsWithoutRef<C>, 'as' | 'size' | 'weight' | 'color'>;

type AllowedTags = 'p' | 'span' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'pre' | 'label';

export const Text = <C extends AllowedTags = 'p'>({
    as: Component = 'p' as C,
    size,
    weight,
    color,
    className = '',
    style,
    ...props
}: TextProps<C>) => {
    const { theme } = useTheme();
    const createStyle = useStyles('text');

    const textClass = createStyle({
        fontSize: size || theme.typography.fontSizes.base,
        fontWeight: String(weight || theme.typography.fontWeights.normal),
        color: color || theme.colors.text,
        lineHeight: theme.typography.lineHeights.normal,
    });

    return React.createElement(Component, {
        className: \`\${textClass} \${className}\`,
        style,
        ...props,
    });
};`;
const TextDemo = () => {
  const {
    theme
  } = (0,_src_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const [as, setAs] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('p');
  const [size, setSize] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('1rem');
  const [weight, setWeight] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('400');
  const [color, setColor] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(theme.colors.text);
  const code = `<Text as="${as}" size="${size}" weight="${weight}" color="${color}">
    This is a configurable Text component.
</Text>`;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_3__.DemoSection, {
    title: "Text",
    description: "A versatile component for rendering text with consistent typography styles.",
    initialCode: code,
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(TextConfigurator, {
      as: as,
      setAs: setAs,
      size: size,
      setSize: setSize,
      weight: weight,
      setWeight: setWeight,
      color: color,
      setColor: setColor
    }),
    documentation: documentation,
    fullSourceCode: fullSourceCode
  });
};

/***/ }),

/***/ "./demo/TextInput.tsx":
/*!****************************!*\
  !*** ./demo/TextInput.tsx ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TextInputDemo: () => (/* binding */ TextInputDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");



const TextInputConfigurator = ({
  placeholder,
  setPlaceholder,
  isDisabled,
  setIsDisabled
}) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "1.5rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Input, {
  label: "Placeholder Prop",
  value: placeholder,
  onChange: e => setPlaceholder(e.target.value)
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Checkbox, {
  label: "Disabled Prop",
  checked: isDisabled,
  onChange: e => setIsDisabled(e.target.checked)
}));
const documentation = `# Text Input

The base styled text input component. It serves as the foundation for other form elements like \`Input\`, \`Search\`, and \`Combobox\`.

## Props

*   All standard HTML \`<input>\` attributes are supported (e.g., \`placeholder\`, \`type\`, \`disabled\`).
*   \`className\` (string, optional): Additional CSS classes for custom styling.

## Usage

\`\`\`tsx
<TextInput placeholder="Enter your name..." />
\`\`\``;
const fullSourceCode = `import React from 'react';
import { useStyles } from '../../core/hooks/useStyles';
import { useTheme } from '../../core/theme/ThemeProvider';

export interface TextInputProps extends React.InputHTMLAttributes<HTMLInputElement> {}

export const TextInput = React.forwardRef<HTMLInputElement, TextInputProps>(({ className = '', ...props }, ref) => {
    const { theme } = useTheme();
    const createStyle = useStyles('text-input');
    const isDark = theme.colors.background.startsWith('#1');

    const baseClasses = createStyle({
        display: 'block',
        width: '100%',
        backgroundColor: theme.colors.backgroundSecondary,
        border: \`1px solid \${theme.colors.border}\`,
        borderRadius: '0.375rem',
        padding: '0.5rem 0.75rem',
        color: theme.colors.text,
        transition: 'all 0.2s',
        '@supports (backdrop-filter: none) or (-webkit-backdrop-filter: none)': {
            backdropFilter: 'blur(8px)',
        },
        '&::placeholder': {
            color: theme.colors.textSecondary,
        },
        '&:focus': {
            outline: 'none',
            boxShadow: \`0 0 0 2px \${isDark ? theme.colors.background : '#fff'}, 0 0 0 4px \${theme.colors.primary}\`
        }
    });

    return <input type="text" ref={ref} className={\`\${baseClasses} \${className}\`} {...props} />;
});

TextInput.displayName = 'TextInput';`;
const TextInputDemo = () => {
  const [placeholder, setPlaceholder] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('Enter your name...');
  const [isDisabled, setIsDisabled] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const code = `<TextInput placeholder="${placeholder}" disabled="${isDisabled}" />`;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_2__.DemoSection, {
    title: "Text Input",
    description: "The base styled text input component used in other form elements.",
    initialCode: code,
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(TextInputConfigurator, {
      placeholder: placeholder,
      setPlaceholder: setPlaceholder,
      isDisabled: isDisabled,
      setIsDisabled: setIsDisabled
    }),
    documentation: documentation,
    fullSourceCode: fullSourceCode
  });
};

/***/ }),

/***/ "./demo/Textarea.tsx":
/*!***************************!*\
  !*** ./demo/Textarea.tsx ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TextareaDemo: () => (/* binding */ TextareaDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");



const TextareaConfigurator = ({
  placeholder,
  setPlaceholder,
  isDisabled,
  setIsDisabled
}) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "1.5rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Input, {
  label: "Placeholder Prop",
  value: placeholder,
  onChange: e => setPlaceholder(e.target.value)
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Checkbox, {
  label: "Disabled Prop",
  checked: isDisabled,
  onChange: e => setIsDisabled(e.target.checked)
}));
const documentation = `# Textarea

A styled multi-line text input field, ideal for longer form content like comments or descriptions.

## Props

*   All standard HTML \`<textarea>\` attributes are supported (e.g., \`placeholder\`, \`rows\`, \`disabled\`).
*   \`className\` (string, optional): Additional CSS classes for custom styling.

## Usage

\`\`\`tsx
<Textarea
  placeholder="Enter your comments here..."
  rows={4}
/>
\`\`\``;
const fullSourceCode = `import React from 'react';
import { useStyles } from '../../core/hooks/useStyles';
import { useTheme } from '../../core/theme/ThemeProvider';

export interface TextareaProps extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}

export const Textarea: React.FC<TextareaProps> = ({ className = '', ...props }) => {
    const { theme } = useTheme();
    const createStyle = useStyles('textarea');
    const isDark = theme.colors.background.startsWith('#1');

    const baseClasses = createStyle({
        display: 'block',
        width: '100%',
        backgroundColor: theme.colors.backgroundSecondary,
        border: \`1px solid \${theme.colors.border}\`,
        borderRadius: '0.375rem',
        padding: '0.5rem 0.75rem',
        color: theme.colors.text,
        transition: 'all 0.2s',
        '@supports (backdrop-filter: none) or (-webkit-backdrop-filter: none)': {
            backdropFilter: 'blur(8px)',
        },
        '&::placeholder': {
            color: theme.colors.textSecondary,
        },
        '&:focus': {
            outline: 'none',
            boxShadow: \`0 0 0 2px \${isDark ? theme.colors.background : '#fff'}, 0 0 0 4px \${theme.colors.primary}\`
        }
    });

    return <textarea className={\`\${baseClasses} \${className}\`} {...props} />;
};`;
const TextareaDemo = () => {
  const [placeholder, setPlaceholder] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('Enter your comments here...');
  const [isDisabled, setIsDisabled] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const code = `<Textarea placeholder="${placeholder}" disabled="${isDisabled}" rows="4" />`;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_2__.DemoSection, {
    title: "Textarea",
    description: "A styled multi-line text input field for longer form content.",
    initialCode: code,
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(TextareaConfigurator, {
      placeholder: placeholder,
      setPlaceholder: setPlaceholder,
      isDisabled: isDisabled,
      setIsDisabled: setIsDisabled
    }),
    documentation: documentation,
    fullSourceCode: fullSourceCode
  });
};

/***/ }),

/***/ "./demo/Timeline.tsx":
/*!***************************!*\
  !*** ./demo/Timeline.tsx ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TimelineDemo: () => (/* binding */ TimelineDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");



const documentation = `# Timeline

A component for displaying a list of events in chronological order.

## Components

*   **Timeline**: The main container for the timeline.
*   **TimelineItem**: A wrapper for a single event in the timeline.
*   **TimelineConnector**: The vertical line that connects the timeline dots.
*   **TimelineDot**: The circular marker for an event. Can contain an icon or text.
*   **TimelineContent**: A container for the event's details (title, description, etc.).

## Props

### TimelineItem
*   \`isLast\` (boolean, optional): If true, removes the padding at the bottom of the item to properly terminate the timeline.

## Usage

\`\`\`tsx
import { Timeline, TimelineItem, TimelineConnector, TimelineDot, TimelineContent } from './src/components';

<Timeline>
    <TimelineItem>
        <TimelineConnector />
        <TimelineDot>ðŸš€</TimelineDot>
        <TimelineContent>
            <p><strong>Launch</strong></p>
            <p>Project kickoff and team alignment.</p>
        </TimelineContent>
    </TimelineItem>
    <TimelineItem isLast>
        <TimelineDot>ðŸŽ‰</TimelineDot>
        <TimelineContent>
            <p><strong>Deployment</strong></p>
            <p>First version deployed to production.</p>
        </TimelineContent>
    </TimelineItem>
</Timeline>
\`\`\``;
const sourceCode = `import React from 'react';
import { useStyles } from '../../core/hooks/useStyles';
import { useTheme } from '../../core/theme/ThemeProvider';

export const Timeline: React.FC<{ children: React.ReactNode, className?: string }> = (props) => { /*...*/ };
export const TimelineItem: React.FC<{ children: React.ReactNode, isLast?: boolean }> = (props) => { /*...*/ };
export const TimelineConnector: React.FC = () => { /*...*/ };
export const TimelineDot: React.FC<{ children?: React.ReactNode, className?: string }> = (props) => { /*...*/ };
export const TimelineContent: React.FC<{ children: React.ReactNode, className?: string }> = (props) => { /*...*/ };
`;
const TimelineDemo = () => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_2__.DemoSection, {
  title: "Timeline",
  description: "Displays a list of events in chronological order.",
  livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Timeline, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.TimelineItem, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.TimelineConnector, null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.TimelineDot, null, "\uD83D\uDE80"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.TimelineContent, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    weight: "600"
  }, "Launch"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    size: "14px",
    color: "textSecondary"
  }, "Project kickoff and team alignment."))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.TimelineItem, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.TimelineConnector, null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.TimelineDot, null, "\uD83D\uDCBB"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.TimelineContent, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    weight: "600"
  }, "Development"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    size: "14px",
    color: "textSecondary"
  }, "Component library development in progress."))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.TimelineItem, {
    isLast: true
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.TimelineDot, null, "\uD83C\uDF89"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.TimelineContent, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    weight: "600"
  }, "Deployment"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    size: "14px",
    color: "textSecondary"
  }, "First version deployed to production.")))),
  propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    color: "textSecondary"
  }, "This is a presentational component with no configurable props."),
  documentation: documentation,
  fullSourceCode: sourceCode
});

/***/ }),

/***/ "./demo/Toast.tsx":
/*!************************!*\
  !*** ./demo/Toast.tsx ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ToastDemo: () => (/* binding */ ToastDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");



const ToastConfigurator = () => {
  const {
    addToast
  } = (0,_src_components__WEBPACK_IMPORTED_MODULE_1__.useToast)();
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
    gap: "1rem"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, null, "Use the buttons below to trigger toasts with different variants. They will appear at the top-right of the screen."), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
    direction: "row",
    gap: "1rem",
    wrap: true
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
    onClick: () => addToast({
      title: 'Event has been created.',
      description: 'Anyone with the link can now view it.'
    })
  }, "Show Info"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
    onClick: () => addToast({
      title: 'Success!',
      description: 'Your profile was updated.',
      variant: 'success'
    })
  }, "Show Success"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
    onClick: () => addToast({
      title: 'Warning',
      description: 'Please check your connection.',
      variant: 'warning'
    })
  }, "Show Warning"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
    onClick: () => addToast({
      title: 'Error',
      description: 'Failed to save changes.',
      variant: 'error'
    })
  }, "Show Error")));
};
const documentation = `# Toast Notification System

A system for dispatching ephemeral, non-intrusive notifications that appear at the corner of the screen.

## Components & Hooks

*   **ToastProvider**: A context provider that manages the state and rendering of all toasts. It should wrap your entire application.
*   **useToast**: A hook that provides access to the \`addToast\` function.

## Usage

1.  **Wrap your app in \`ToastProvider\`:**
    \`\`\`tsx
    import { ToastProvider } from './src/components';
    const App = () => (
        <ToastProvider>
            {/* ... Your app ... */}
        </ToastProvider>
    );
    \`\`\`

2.  **Use the \`useToast\` hook:**
    \`\`\`tsx
    import { useToast, Button } from './src/components';
    const MyComponent = () => {
        const { addToast } = useToast();
        return <Button onClick={() => addToast({ title: 'Hello!' })}>Show</Button>;
    };
    \`\`\``;
const sourceCode = `/* This file shows the Toast component. The provider and hook are also part of the system. */
import React, { useEffect } from 'react';
import { ToastData } from './useToast';

interface ToastProps {
    toast: ToastData;
    onDismiss: (id: string) => void;
}

export const Toast: React.FC<ToastProps> = ({ toast, onDismiss }) => {
    /* ... internal logic for animations and dismissal ... */

    return (
        <div role="alert" aria-live="assertive">
            <div>
                <IconComponent />
            </div>
            <div>
                <Text weight="600">{toast.title}</Text>
                {toast.description && <Text size="14px">{toast.description}</Text>}
            </div>
        </div>
    );
};`;
const ToastDemo = () => {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_2__.DemoSection, {
    title: "Toast",
    description: "A system for dispatching ephemeral, non-intrusive notifications.",
    livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
      color: "textSecondary"
    }, "Use the 'Props' tab to trigger toasts."),
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ToastConfigurator, null),
    documentation: documentation,
    fullSourceCode: sourceCode
  });
};

/***/ }),

/***/ "./demo/ToggleButton.tsx":
/*!*******************************!*\
  !*** ./demo/ToggleButton.tsx ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ToggleButtonDemo: () => (/* binding */ ToggleButtonDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");



const documentation = `# Toggle Button

A set of components for creating a group of buttons that can be toggled on or off, similar to a checkbox or radio group but with a button-like appearance.

## Components

*   **ToggleButtonGroup**: The main wrapper that manages the state for a group of toggle buttons.
*   **ToggleButton**: A single button within the group.

## Props

### ToggleButtonGroup
*   \`value\` (string | string[] | null, required): The value of the currently selected button(s). Use a string for \`single\` type and an array of strings for \`multiple\`.
*   \`onChange\` (function, required): A callback function that is triggered when the selection changes.
*   \`type\` (enum: 'single' | 'multiple', optional, default: 'single'): The selection behavior of the group.

### ToggleButton
*   \`value\` (string, required): A unique value for the button.
*   All other standard \`<button>\` attributes are supported.

## Usage

\`\`\`tsx
import { ToggleButtonGroup, ToggleButton } from './src/components';

// Single selection
const [align, setAlign] = useState('left');
<ToggleButtonGroup value={align} onChange={setAlign} type="single">
  <ToggleButton value="left">Left</ToggleButton>
</ToggleButtonGroup>
\`\`\``;
const sourceCode = `import React, { createContext, useContext } from 'react';
import { useStyles } from '../../core/hooks/useStyles';
import { useTheme } from '../../core/theme/ThemeProvider';

interface ToggleButtonGroupContextType { /*...*/ }
const ToggleButtonGroupContext = createContext<ToggleButtonGroupContextType | null>(null);
export const useToggleButtonGroup = () => { /*...*/ };

interface ToggleButtonGroupProps { /*...*/ }
export const ToggleButtonGroup: React.FC<ToggleButtonGroupProps> = (props) => { /*...*/ };

interface ToggleButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> { value: string; }
export const ToggleButton: React.FC<ToggleButtonProps> = (props) => { /*...*/ };
`;
const ToggleButtonDemo = () => {
  const [alignment, setAlignment] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('left');
  const [formats, setFormats] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(['bold']);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_2__.DemoSection, {
    title: "Toggle Button",
    description: "A group of buttons that can be toggled, supporting single or multiple selections.",
    livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
      gap: "1.5rem"
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
      gap: "0.5rem"
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
      weight: "600"
    }, "Single Selection"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.ToggleButtonGroup, {
      value: alignment,
      onChange: val => setAlignment(val),
      type: "single"
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.ToggleButton, {
      value: "left"
    }, "Left"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.ToggleButton, {
      value: "center"
    }, "Center"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.ToggleButton, {
      value: "right"
    }, "Right"))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
      gap: "0.5rem"
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
      weight: "600"
    }, "Multiple Selection"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.ToggleButtonGroup, {
      value: formats,
      onChange: val => setFormats(val),
      type: "multiple"
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.ToggleButton, {
      value: "bold"
    }, "Bold"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.ToggleButton, {
      value: "italic"
    }, "Italic"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.ToggleButton, {
      value: "underline"
    }, "Underline")))),
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
      color: "textSecondary"
    }, "This component's main props (`value`, `onChange`, `type`) are demonstrated in the preview."),
    documentation: documentation,
    fullSourceCode: sourceCode
  });
};

/***/ }),

/***/ "./demo/TransferList.tsx":
/*!*******************************!*\
  !*** ./demo/TransferList.tsx ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TransferListDemo: () => (/* binding */ TransferListDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");



const initialItems = [{
  id: 'item-1',
  label: 'React'
}, {
  id: 'item-2',
  label: 'Vue'
}, {
  id: 'item-3',
  label: 'Angular'
}, {
  id: 'item-4',
  label: 'Svelte'
}];
const documentation = `# Transfer List

A component that allows users to move items between two lists. It's useful for scenarios like selecting a subset of options from a larger pool.

## Props

*   \`initialLeft\` (array of objects, required): The initial set of items for the left list. Each object must have \`id\` and \`label\` properties.
*   \`initialRight\` (array of objects, required): The initial set of items for the right list.
*   \`leftTitle\` (string, optional, default: 'Choices'): The title for the left list.
*   \`rightTitle\` (string, optional, default: 'Chosen'): The title for the right list.

## Usage

\`\`\`tsx
import { TransferList } from './src/components';

const items = [
  { id: '1', label: 'Option 1' },
  { id: '2', label: 'Option 2' },
];

<TransferList initialLeft={items} initialRight={[]} />
\`\`\``;
const sourceCode = `import React, { useState, useEffect } from 'react';
import { Card } from '../Card/Card';
import { List, ListItem } from '../List/List';
import { Checkbox } from '../Checkbox/Checkbox';
import { Button } from '../Button';
import { Stack } from '../Stack/Stack';
import { useTheme } from '../../core';

interface Item { id: string; label: string; }

interface TransferListProps {
    initialLeft: Item[];
    initialRight: Item[];
    leftTitle?: string;
    rightTitle?: string;
}

export const TransferList: React.FC<TransferListProps> = (props) => {
    /* ... internal logic for state and moving items ... */
    
    const CustomList = ({ title, items }: { title: string, items: Item[] }) => (
        <Card title={title} style={{ height: '300px', display: 'flex', flexDirection: 'column' }}>
            <List style={{ flex: 1, overflowY: 'auto' }}>
                {items.map(item => (
                    <ListItem key={item.id} onClick={() => handleToggle(item)}>
                        <Checkbox checked={checked.has(item.id)} label={item.label} readOnly />
                    </ListItem>
                ))}
            </List>
        </Card>
    );

    return (
        <Stack direction="row" align="center" gap="1rem">
            <div style={{ flex: 1 }}>
                <CustomList title={leftTitle} items={left} />
            </div>
            <Stack direction="column" gap="0.5rem">
                <Button onClick={moveRight} disabled={leftChecked.length === 0}>&gt;</Button>
                <Button onClick={moveLeft} disabled={rightChecked.length === 0}>&lt;</Button>
            </Stack>
            <div style={{ flex: 1 }}>
                <CustomList title={rightTitle} items={right} />
            </div>
        </Stack>
    );
};`;
const TransferListDemo = () => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_2__.DemoSection, {
  title: "Transfer List",
  description: "A component for moving items between two lists.",
  livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.TransferList, {
    initialLeft: initialItems,
    initialRight: [],
    leftTitle: "Available Frameworks",
    rightTitle: "Selected Frameworks"
  }),
  propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    color: "textSecondary"
  }, "The main props for this component (`initialLeft`, `initialRight`) are complex arrays. The preview demonstrates the component's functionality."),
  documentation: documentation,
  fullSourceCode: sourceCode
});

/***/ }),

/***/ "./demo/TreeView.tsx":
/*!***************************!*\
  !*** ./demo/TreeView.tsx ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TreeViewDemo: () => (/* binding */ TreeViewDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _src_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../src/core */ "./src/core/index.ts");
/* harmony import */ var _src_icons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../src/icons */ "./src/icons/index.ts");


// FIX: `useTheme` is not exported from `../src/components`. It should be imported from `../src/core`.


const treeData = [{
  id: 'root',
  label: 'Project Root',
  icon: _src_icons__WEBPACK_IMPORTED_MODULE_3__.FolderIcon,
  children: [{
    id: 'src',
    label: 'src',
    icon: _src_icons__WEBPACK_IMPORTED_MODULE_3__.FolderIcon,
    children: [{
      id: 'components',
      label: 'components',
      icon: _src_icons__WEBPACK_IMPORTED_MODULE_3__.FolderIcon
    }, {
      id: 'hooks',
      label: 'hooks',
      icon: _src_icons__WEBPACK_IMPORTED_MODULE_3__.FolderIcon
    }]
  }, {
    id: 'public',
    label: 'public',
    icon: _src_icons__WEBPACK_IMPORTED_MODULE_3__.FolderIcon,
    children: [{
      id: 'index.html',
      label: 'index.html',
      icon: _src_icons__WEBPACK_IMPORTED_MODULE_3__.FileIcon
    }]
  }, {
    id: 'package.json',
    label: 'package.json',
    icon: _src_icons__WEBPACK_IMPORTED_MODULE_3__.FileIcon
  }]
}];
const CustomTreeItem = props => {
  const {
    node,
    isExpanded,
    isExpandable,
    isSelected,
    level,
    getTreeItemProps,
    getToggleProps
  } = props;
  const {
    theme
  } = (0,_src_core__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const chevronClass = `transition-transform ${isExpanded ? 'rotate-90' : 'rotate-0'}`;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", getTreeItemProps({
    className: `flex items-center p-1 rounded-md transition-colors ${isSelected ? 'bg-blue-500/20 text-white' : 'text-gray-400 hover:bg-white/5 hover:text-white'}`,
    style: {
      paddingLeft: `calc(${level} * 1.5rem)`
    },
    // Make item focusable for programmatic focus
    tabIndex: -1
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", getToggleProps({
    className: 'w-5 h-5 flex-shrink-0 flex items-center justify-center'
  }), isExpandable && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Icon, {
    as: _src_icons__WEBPACK_IMPORTED_MODULE_3__.ChevronRightIcon,
    size: 16,
    className: chevronClass
  })), node.icon && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Icon, {
    as: node.icon,
    size: 16,
    className: "mr-2 flex-shrink-0"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", {
    className: "truncate"
  }, node.label));
};
const TreeViewDemo = () => {
  const customTreeRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const handleFocusClick = () => {
    customTreeRef.current?.focusItem('index.html');
  };
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Sofa, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
    gap: "1.5rem"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    as: "h2",
    size: "1.5rem",
    weight: "600"
  }, "Tree View"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, null, "A component for displaying hierarchical data. Now supports custom item rendering via the `item` prop and `useTreeItem` hook, plus single/multi-selection and programmatic focus."), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    weight: "600"
  }, "Custom Tree Item, Multi-Selection & Programmatic Focus"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    size: "sm"
  }, "This example uses a custom component to render each item in a file-explorer style. Use Ctrl/Cmd-click to select multiple items."), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
    direction: "row",
    gap: "1rem"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
    onClick: handleFocusClick
  }, "Focus 'index.html'")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Card, {
    style: {
      padding: '1rem'
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.TreeView, {
    ref: customTreeRef,
    data: treeData,
    item: CustomTreeItem,
    groupTransition: _src_components__WEBPACK_IMPORTED_MODULE_1__.Collapse,
    selectionMode: "multiple",
    defaultExpandedIds: ['root', 'src', 'public']
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    weight: "600",
    style: {
      marginTop: '1rem'
    }
  }, "Custom Icons & Single Selection"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    size: "sm"
  }, "This example uses the default item renderer but provides custom icons for expand, collapse, and end nodes. It also uses the `Collapse` component for animations."), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Card, {
    style: {
      padding: '1rem'
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.TreeView, {
    data: treeData,
    expandIcon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Icon, {
      as: _src_icons__WEBPACK_IMPORTED_MODULE_3__.PlusSquareIcon
    }),
    collapseIcon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Icon, {
      as: _src_icons__WEBPACK_IMPORTED_MODULE_3__.MinusSquareIcon
    }),
    defaultEndIcon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Icon, {
      as: _src_icons__WEBPACK_IMPORTED_MODULE_3__.FileIcon,
      size: 16
    }),
    groupTransition: _src_components__WEBPACK_IMPORTED_MODULE_1__.Collapse
  }))));
};

/***/ }),

/***/ "./demo/Video.tsx":
/*!************************!*\
  !*** ./demo/Video.tsx ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   VideoDemo: () => (/* binding */ VideoDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");


const VideoDemo = () => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Sofa, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "1rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
  as: "h2",
  size: "1.5rem",
  weight: "600"
}, "Video Player"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, null, "A composable video player. This example shows custom controls built from sub-components."), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Video, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.VideoView, {
  poster: "https://images.pexels.com/videos/3209828/free-video-3209828.jpg?auto=compress&cs=tinysrgb&dpr=1&w=500"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.VideoFile, {
  src: "https://videos.pexels.com/video-files/3209828/3209828-hd_1280_720_25fps.mp4",
  type: "video/mp4"
})), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.VideoControls, null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.VideoMetadata, {
  style: {
    padding: '0 1rem 0.5rem'
  }
}))));

/***/ }),

/***/ "./demo/Welcome.tsx":
/*!**************************!*\
  !*** ./demo/Welcome.tsx ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Welcome: () => (/* binding */ Welcome)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _src_icons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../src/icons */ "./src/icons/index.ts");
/* harmony import */ var _src_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../src/core */ "./src/core/index.ts");




const Welcome = ({
  onNavigate
}) => {
  const {
    theme
  } = (0,_src_core__WEBPACK_IMPORTED_MODULE_3__.useTheme)();
  const featured = [{
    id: 'grid',
    label: 'Grid System',
    icon: _src_icons__WEBPACK_IMPORTED_MODULE_2__.LayoutIcon
  }, {
    id: 'text',
    label: 'Typography',
    icon: _src_icons__WEBPACK_IMPORTED_MODULE_2__.TypeIcon
  }, {
    id: 'button',
    label: 'Buttons',
    icon: _src_icons__WEBPACK_IMPORTED_MODULE_2__.DiamondIcon
  }, {
    id: 'charts',
    label: 'Charts',
    icon: _src_icons__WEBPACK_IMPORTED_MODULE_2__.ShareIcon
  }, {
    id: 'graphics-node-editor',
    label: 'Node Editor',
    icon: _src_icons__WEBPACK_IMPORTED_MODULE_2__.ShareIcon
  }, {
    id: 'photo-editor',
    label: 'Photo Editor',
    icon: _src_icons__WEBPACK_IMPORTED_MODULE_2__.ImageIcon
  }];
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Center, {
    style: {
      width: '100%',
      padding: '2rem'
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
    gap: "2rem",
    align: "center",
    style: {
      maxWidth: '800px',
      textAlign: 'center'
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
    gap: "0.5rem"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    as: "h1",
    size: "3rem",
    weight: "700",
    style: {
      letterSpacing: '-0.05em'
    }
  }, "Welcome to ZwheUI"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    size: "1.125rem",
    color: theme.colors.textSecondary
  }, "A showcase of a modern, reusable, and aesthetically pleasing React component library. Select a component from the sidebar to begin exploring.")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Grid, {
    minItemWidth: "200px",
    gap: "4rem",
    style: {
      width: '100%'
    }
  }, featured.map(item => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Card, {
    key: item.id,
    onClick: () => onNavigate(item.id)
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
    direction: "row",
    gap: "1rem",
    align: "center"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Icon, {
    as: item.icon,
    size: 20,
    color: theme.colors.primary
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    weight: "500"
  }, item.label))))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    size: "0.875rem",
    color: theme.colors.textSecondary,
    style: {
      marginTop: '2rem'
    }
  }, "This entire showcase is built with the ZwheUI components themselves.")));
};

/***/ }),

/***/ "./demo/XNodeTree.tsx":
/*!****************************!*\
  !*** ./demo/XNodeTree.tsx ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   XNodeTreeDemo: () => (/* binding */ XNodeTreeDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");
/* harmony import */ var _src_icons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../src/icons */ "./src/icons/index.ts");




const demoData = [{
  id: 'paper',
  label: 'Paper',
  icon: _src_icons__WEBPACK_IMPORTED_MODULE_3__.DocumentIcon,
  children: [{
    id: 'header-container',
    label: 'Header container',
    icon: _src_icons__WEBPACK_IMPORTED_MODULE_3__.LayoutIcon,
    children: [{
      id: 'avatar',
      label: 'Avatar',
      icon: _src_icons__WEBPACK_IMPORTED_MODULE_3__.UserIcon,
      children: [{
        id: 'text-content-1',
        label: 'Text Content',
        icon: _src_icons__WEBPACK_IMPORTED_MODULE_3__.TypeIcon
      }, {
        id: 'header-title',
        label: 'Header Title',
        icon: _src_icons__WEBPACK_IMPORTED_MODULE_3__.TypeIcon
      }, {
        id: 'header-caption',
        label: 'Header Caption',
        icon: _src_icons__WEBPACK_IMPORTED_MODULE_3__.TypeIcon
      }]
    }, {
      id: 'action-button-1',
      label: 'Action Button',
      icon: _src_icons__WEBPACK_IMPORTED_MODULE_3__.SquareIcon
    }, {
      id: 'image',
      label: 'Image',
      icon: _src_icons__WEBPACK_IMPORTED_MODULE_3__.ImageIcon
    }]
  }, {
    id: 'content',
    label: 'Content',
    icon: _src_icons__WEBPACK_IMPORTED_MODULE_3__.LayoutIcon,
    children: [{
      id: 'text-content-2',
      label: 'Text Content',
      icon: _src_icons__WEBPACK_IMPORTED_MODULE_3__.TypeIcon
    }]
  }, {
    id: 'action-bar',
    label: 'Action Bar',
    icon: _src_icons__WEBPACK_IMPORTED_MODULE_3__.LayoutIcon,
    children: [{
      id: 'icon-button-1',
      label: 'Icon Button',
      icon: _src_icons__WEBPACK_IMPORTED_MODULE_3__.DiamondIcon
    }, {
      id: 'icon-button-2',
      label: 'Icon Button',
      icon: _src_icons__WEBPACK_IMPORTED_MODULE_3__.DiamondIcon
    }]
  }]
}];
const documentation = `# XNodeTree

A component for displaying hierarchical data in a tree-like structure, such as a file system, scene graph, or component tree. Users can expand and collapse nodes to navigate the hierarchy and toggle a "locked" state for each item.

## Props

*   \`data\` (array of \`XNodeTreeData\`, required): An array of root nodes for the tree.
*   \`initialExpandedIds\` (string[], optional): An array of node IDs that should be expanded by default.
*   \`initialLockedIds\` (string[], optional): An array of node IDs that should be locked by default.

## Data Structure

\`\`\`ts
interface XNodeTreeData {
    id: string;
    label: string;
    icon?: React.ElementType; // An icon component to display
    children?: XNodeTreeData[];
}
\`\`\``;
const sourceCode = `import React, { useState } from 'react';
import { useStyles, useTheme } from '../../core';
import { Icon } from '../Icon/Icon';
import { ChevronRightIcon, LockIcon } from '../../icons';
import { LockOpenIcon } from '../../icons/LockOpenIcon';

export interface XNodeTreeData { /*...*/ }

interface XNodeTreeProps {
    data: XNodeTreeData[];
    initialExpandedIds?: string[];
    initialLockedIds?: string[];
}

export const XNodeTree: React.FC<XNodeTreeProps> = (props) => {
    /* ... internal state and logic ... */

    const renderNode = (node: XNodeTreeData, level: number) => {
        /* ... recursive rendering logic ... */
    };

    return <div className={treeClass}>{data.map(node => renderNode(node, 0))}</div>;
};`;
const XNodeTreeDemo = () => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_2__.DemoSection, {
  title: "XNodeTree",
  description: "A component for displaying hierarchical data, like a scene graph or component tree.",
  livePreview: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Card, {
    style: {
      padding: '0.5rem',
      minWidth: '300px'
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.XNodeTree, {
    data: demoData,
    initialExpandedIds: ['paper', 'header-container', 'avatar', 'content', 'action-bar']
  })),
  propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    color: "textSecondary"
  }, "The main props (`data`, `initialExpandedIds`) are complex arrays. The preview demonstrates the component's interactive features."),
  documentation: documentation,
  fullSourceCode: sourceCode
});

/***/ }),

/***/ "./demo/XmlRenderer.tsx":
/*!******************************!*\
  !*** ./demo/XmlRenderer.tsx ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   XmlRendererDemo: () => (/* binding */ XmlRendererDemo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _DemoSection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DemoSection */ "./demo/DemoSection.tsx");



const sampleXml = `<Stack gap="1rem">
  <Card title="From XML">
    <Text>This is a Card inside a Stack.</Text>
  </Card>
  <Layer z="10">
    <Card variant="glass">
      <Text>This Card is in a Layer component rendered from XML.</Text>
    </Card>
  </Layer>
</Stack>
`;
const XmlRendererConfigurator = ({
  xml,
  setXml
}) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "1rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
  as: "label",
  size: "sm",
  weight: "medium",
  color: "textSecondary"
}, "XML Prop"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Textarea, {
  value: xml,
  onChange: e => setXml(e.target.value),
  rows: 8,
  style: {
    fontFamily: 'monospace'
  }
}));
const documentation = `# XML Renderer

A component that parses an XML-like string and renders it into corresponding React components from the library. It's a powerful tool for dynamic layout generation.

## Props

*   \`xml\` (string, required): The XML string to be parsed and rendered.
*   \`components\` (object, optional): A map of tag names to React components.

## Default Mapped Components
*   \`layer\` -> \`Layer\`
*   \`layout\` -> \`Stack\`
*   \`div\`, \`span\`, \`p\` -> standard HTML tags`;
const fullSourceCode = `import React from 'react'
import { Layer } from '../Layer/Layer'
import { Stack } from '../Stack/Stack'

export type ComponentMap = { [tag: string]: React.ElementType; };
export interface XmlRendererProps { xml: string; components?: ComponentMap; }

const defaultMap: ComponentMap = { /* ... */ };
function parseAttributes(node: Element) { /* ... */ }
function nodeToElement(node: Node, map: ComponentMap): React.ReactNode { /* ... */ }

export const XmlRenderer: React.FC<XmlRendererProps> = ({ xml, components = {} }) => {
    const map = { ...defaultMap, ...components };
    try {
        const parser = new DOMParser();
        const doc = parser.parseFromString(xml, 'text/xml');
        const result = Array.from(doc.childNodes).map(/*...*/);
        return <>{result}</>;
    } catch (err) {
        return <div>{xml}</div>;
    }
};`;
const XmlRendererDemo = () => {
  const [xml, setXml] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(sampleXml);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DemoSection__WEBPACK_IMPORTED_MODULE_2__.DemoSection, {
    title: "XML Renderer",
    description: "A component that parses an XML-like string and renders it into corresponding React components.",
    initialCode: xml,
    propControls: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
      color: "textSecondary"
    }, "The XML for this component is directly editable in the 'Editable Code' panel."),
    documentation: documentation,
    fullSourceCode: fullSourceCode
  });
};

/***/ }),

/***/ "./examples/ExampleAudio.tsx":
/*!***********************************!*\
  !*** ./examples/ExampleAudio.tsx ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ExampleAudio: () => (/* binding */ ExampleAudio)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");


const ExampleAudio = () => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Sofa, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "1rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
  as: "h2",
  size: "1.5rem",
  weight: "600"
}, "Example: Audio Player"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, null, "A demonstration of a styled, composable audio player with custom controls and a real-time visualizer."), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Audio, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.AudioView, {
  crossOrigin: "anonymous"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.AudioFile, {
  src: "https://cdn.pixabay.com/audio/2022/08/03/audio_51f6922b13.mp3",
  type: "audio/mpeg"
})), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.AudioVisualizer, null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.AudioControls, null))));

/***/ }),

/***/ "./examples/ExampleFileBrowser.tsx":
/*!*****************************************!*\
  !*** ./examples/ExampleFileBrowser.tsx ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ExampleFileBrowser: () => (/* binding */ ExampleFileBrowser)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");


const FolderIcon = () => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", {
  width: "20",
  height: "20",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "#f59e0b",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"
}));
const FileIcon = () => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", {
  width: "20",
  height: "20",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("polyline", {
  points: "13 2 13 9 20 9"
}));
const files = [{
  type: 'folder',
  name: 'Documents',
  modified: 'Yesterday'
}, {
  type: 'folder',
  name: 'Photos',
  modified: 'June 5, 2024'
}, {
  type: 'file',
  name: 'project-brief.pdf',
  modified: 'June 3, 2024'
}, {
  type: 'file',
  name: 'logo-final.svg',
  modified: 'May 28, 2024'
}];
const ExampleFileBrowser = () => {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Sofa, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
    gap: "1rem"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    as: "h2",
    size: "1.5rem",
    weight: "600"
  }, "Example: File Browser"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, null, "A showcase of how components like Card, List, and Stack can be combined to build a common UI pattern."), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Card, {
    title: "My Files"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.List, null, files.map((file, index) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), {
    key: file.name
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.ListItem, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
    direction: "row",
    gap: "1rem",
    align: "center"
  }, file.type === 'folder' ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(FolderIcon, null) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(FileIcon, null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.ListItemText, {
    primary: file.name,
    secondary: file.modified
  }))), index < files.length - 1 && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Divider, null)))))));
};

/***/ }),

/***/ "./examples/ExamplePhotoEditor.tsx":
/*!*****************************************!*\
  !*** ./examples/ExamplePhotoEditor.tsx ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ExamplePhotoEditor: () => (/* binding */ ExamplePhotoEditor)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _src_components_GraphicsNodeEditor_imageNodeTypes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../src/components/GraphicsNodeEditor/imageNodeTypes */ "./src/components/GraphicsNodeEditor/imageNodeTypes.tsx");
/* harmony import */ var _src_components_GraphicsNodeEditor_plugins_GZoom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../src/components/GraphicsNodeEditor/plugins/GZoom */ "./src/components/GraphicsNodeEditor/plugins/GZoom.tsx");
/* harmony import */ var _src_components_GraphicsNodeEditor_plugins_GMenu__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../src/components/GraphicsNodeEditor/plugins/GMenu */ "./src/components/GraphicsNodeEditor/plugins/GMenu.tsx");





const initialNodes = [{
  ..._src_components_GraphicsNodeEditor_imageNodeTypes__WEBPACK_IMPORTED_MODULE_2__.loadImageNodeType,
  id: 'load1',
  position: {
    x: 50,
    y: 150
  }
}, {
  ..._src_components_GraphicsNodeEditor_imageNodeTypes__WEBPACK_IMPORTED_MODULE_2__.grayscaleNodeType,
  id: 'grayscale1',
  position: {
    x: 400,
    y: 150
  }
}, {
  ..._src_components_GraphicsNodeEditor_imageNodeTypes__WEBPACK_IMPORTED_MODULE_2__.displayImageNodeType,
  id: 'display1',
  position: {
    x: 750,
    y: 150
  }
}];
const initialConnections = [{
  id: 'conn-1',
  sourceNodeId: 'load1',
  sourceSocketId: 'image',
  targetNodeId: 'grayscale1',
  targetSocketId: 'image'
}, {
  id: 'conn-2',
  sourceNodeId: 'grayscale1',
  sourceSocketId: 'image',
  targetNodeId: 'display1',
  targetSocketId: 'value'
}];
const EditorWithControls = () => {
  const {
    processGraph
  } = (0,_src_components__WEBPACK_IMPORTED_MODULE_1__.useGraphicsContext)();
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
    gap: "1rem"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
    direction: "row",
    justify: "space-between",
    align: "center"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, null, "Upload an image, connect nodes to apply effects, and click \"Process Graph\" to see the result."), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
    onClick: processGraph
  }, "Process Graph")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    style: {
      height: '600px',
      width: '100%',
      borderRadius: '8px',
      overflow: 'hidden'
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.GraphicsNodeEditorView, {
    plugins: [_src_components_GraphicsNodeEditor_plugins_GZoom__WEBPACK_IMPORTED_MODULE_3__.GZoom, _src_components_GraphicsNodeEditor_plugins_GMenu__WEBPACK_IMPORTED_MODULE_4__.GMenu]
  })));
};
const ExamplePhotoEditor = () => {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Sofa, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
    gap: "1rem"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    as: "h2",
    size: "1.5rem",
    weight: "600"
  }, "Example: Photo Editor"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.GraphicsProvider, {
    initialNodes: initialNodes,
    initialConnections: initialConnections,
    creatableNodeTypes: _src_components_GraphicsNodeEditor_imageNodeTypes__WEBPACK_IMPORTED_MODULE_2__.creatableImageNodeTypes
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(EditorWithControls, null))));
};

/***/ }),

/***/ "./examples/ExampleSignInPage.tsx":
/*!****************************************!*\
  !*** ./examples/ExampleSignInPage.tsx ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ExampleSignInPage: () => (/* binding */ ExampleSignInPage)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");
/* harmony import */ var _src_core_auth_SignInPage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../src/core/auth/SignInPage */ "./src/core/auth/SignInPage.tsx");


// Import the NEW SignInPage and its types from the core auth module

const allProviders = [{
  id: 'google',
  name: 'Google',
  type: 'oauth'
}, {
  id: 'github',
  name: 'GitHub',
  type: 'oauth'
}, {
  id: 'credentials',
  name: 'Email',
  type: 'credentials',
  // This config is used by CredentialsForm to generate inputs
  credentials: {
    email: {
      label: "Email Address",
      type: "email",
      placeholder: "you@example.com"
    },
    password: {
      label: "Password",
      type: "password",
      placeholder: "â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢"
    }
  }
}, {
  id: 'magiclink',
  name: 'Magic Link',
  type: 'magiclink'
}];
const mockSignIn = async (providerId, formData) => {
  console.log('Attempting sign in with:', providerId, formData);
  // Simulate API call
  await new Promise(resolve => setTimeout(resolve, 1000));
  if (providerId === 'credentials' && formData?.password !== 'password123') {
    return {
      error: 'Invalid password. Hint: the password is "password123".'
    };
  }
  if (providerId === 'magiclink') {
    return {
      success: `Check your email at ${formData?.email} for a magic link!`
    };
  }

  // On success (e.g., for OAuth), we would typically redirect.
  // For this demo, a toast will be shown by the caller.
  return Promise.resolve();
};
const ExampleSignInPage = () => {
  const {
    addToast
  } = (0,_src_components__WEBPACK_IMPORTED_MODULE_1__.useToast)();
  const [mode, setMode] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('all');

  // Filter providers based on the selected demo mode
  const providers = {
    all: allProviders,
    credentials: allProviders.filter(p => p.type === 'oauth' || p.type === 'credentials'),
    magiclink: allProviders.filter(p => p.type === 'oauth' || p.type === 'magiclink')
  }[mode];
  const handleSignIn = async (providerId, formData) => {
    const response = await mockSignIn(providerId, formData);
    // If the sign-in function returns an error or success message, display it.
    if (response) {
      return response;
    }
    // Otherwise, assume success and show a toast.
    addToast({
      title: 'Sign In Successful!',
      description: `You are now signed in with ${providerId}.`,
      variant: 'success'
    });
  };
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Sofa, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
    gap: "1rem"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    as: "h2",
    size: "1.5rem",
    weight: "600"
  }, "Example: Advanced Sign-In Page"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, null, "A showcase of the new, extensible authentication UI. Use the controls to switch between different provider configurations."), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.SegmentedControl, {
    value: mode,
    onChange: v => setMode(v),
    options: [{
      label: 'All Providers',
      value: 'all'
    }, {
      label: 'Credentials',
      value: 'credentials'
    }, {
      label: 'Magic Link',
      value: 'magiclink'
    }]
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_core_auth_SignInPage__WEBPACK_IMPORTED_MODULE_2__.SignInPage, {
    key: mode // Re-mount component to reset state on mode change
    ,
    providers: providers,
    signIn: handleSignIn,
    title: "Welcome Back",
    subtitle: "Sign in to continue to ZwheUI"
  })));
};

/***/ }),

/***/ "./examples/ExampleVideo.tsx":
/*!***********************************!*\
  !*** ./examples/ExampleVideo.tsx ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ExampleVideo: () => (/* binding */ ExampleVideo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _src_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/components */ "./src/components/index.ts");


const ExampleVideo = () => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Sofa, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
  gap: "1rem"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
  as: "h2",
  size: "1.5rem",
  weight: "600"
}, "Example: Video Player"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Text, null, "A simple demonstration of the styled video player component using the browser's native controls."), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.Video, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_src_components__WEBPACK_IMPORTED_MODULE_1__.VideoView, {
  src: "https://videos.pexels.com/video-files/3209828/3209828-hd_1280_720_25fps.mp4",
  poster: "https://images.pexels.com/videos/3209828/free-video-3209828.jpg?auto=compress&cs=tinysrgb&dpr=1&w=500",
  controls: true
}))));

/***/ }),

/***/ "./examples/index.ts":
/*!***************************!*\
  !*** ./examples/index.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ExampleAudio: () => (/* reexport safe */ _ExampleAudio__WEBPACK_IMPORTED_MODULE_0__.ExampleAudio),
/* harmony export */   ExampleFileBrowser: () => (/* reexport safe */ _ExampleFileBrowser__WEBPACK_IMPORTED_MODULE_1__.ExampleFileBrowser),
/* harmony export */   ExamplePhotoEditor: () => (/* reexport safe */ _ExamplePhotoEditor__WEBPACK_IMPORTED_MODULE_3__.ExamplePhotoEditor),
/* harmony export */   ExampleSignInPage: () => (/* reexport safe */ _ExampleSignInPage__WEBPACK_IMPORTED_MODULE_4__.ExampleSignInPage),
/* harmony export */   ExampleVideo: () => (/* reexport safe */ _ExampleVideo__WEBPACK_IMPORTED_MODULE_2__.ExampleVideo)
/* harmony export */ });
/* harmony import */ var _ExampleAudio__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ExampleAudio */ "./examples/ExampleAudio.tsx");
/* harmony import */ var _ExampleFileBrowser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ExampleFileBrowser */ "./examples/ExampleFileBrowser.tsx");
/* harmony import */ var _ExampleVideo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ExampleVideo */ "./examples/ExampleVideo.tsx");
/* harmony import */ var _ExamplePhotoEditor__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ExamplePhotoEditor */ "./examples/ExamplePhotoEditor.tsx");
/* harmony import */ var _ExampleSignInPage__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ExampleSignInPage */ "./examples/ExampleSignInPage.tsx");






/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./src/styles.css":
/*!********************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./src/styles.css ***!
  \********************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/sourceMaps.js */ "./node_modules/css-loader/dist/runtime/sourceMaps.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, `*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}/*
! tailwindcss v3.4.18 | MIT License | https://tailwindcss.com
*//*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box; /* 1 */
  border-width: 0; /* 2 */
  border-style: solid; /* 2 */
  border-color: #e5e7eb; /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured \`sans\` font-family by default.
5. Use the user's configured \`sans\` font-feature-settings by default.
6. Use the user's configured \`sans\` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
  -moz-tab-size: 4; /* 3 */
  -o-tab-size: 4;
     tab-size: 4; /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; /* 4 */
  font-feature-settings: normal; /* 5 */
  font-variation-settings: normal; /* 6 */
  -webkit-tap-highlight-color: transparent; /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from \`html\` so users can set them as a class directly on the \`html\` element.
*/

body {
  margin: 0; /* 1 */
  line-height: inherit; /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0; /* 1 */
  color: inherit; /* 2 */
  border-top-width: 1px; /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured \`mono\` font-family by default.
2. Use the user's configured \`mono\` font-feature-settings by default.
3. Use the user's configured \`mono\` font-variation-settings by default.
4. Correct the odd \`em\` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace; /* 1 */
  font-feature-settings: normal; /* 2 */
  font-variation-settings: normal; /* 3 */
  font-size: 1em; /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent \`sub\` and \`sup\` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0; /* 1 */
  border-color: inherit; /* 2 */
  border-collapse: collapse; /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-feature-settings: inherit; /* 1 */
  font-variation-settings: inherit; /* 1 */
  font-size: 100%; /* 1 */
  font-weight: inherit; /* 1 */
  line-height: inherit; /* 1 */
  letter-spacing: inherit; /* 1 */
  color: inherit; /* 1 */
  margin: 0; /* 2 */
  padding: 0; /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
input:where([type='button']),
input:where([type='reset']),
input:where([type='submit']) {
  -webkit-appearance: button; /* 1 */
  background-color: transparent; /* 2 */
  background-image: none; /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional \`:invalid\` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to \`inherit\` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/
dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1; /* 1 */
  color: #9ca3af; /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1; /* 1 */
  color: #9ca3af; /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/
:disabled {
  cursor: default;
}

/*
1. Make replaced elements \`display: block\` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add \`vertical-align: middle\` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block; /* 1 */
  vertical-align: middle; /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */
[hidden]:where(:not([hidden="until-found"])) {
  display: none;
}
  html, body, #root {
    height: 100%;
    overflow: hidden; /* Prevent body scroll with new layout */
  }
  
  #root {
    display: flex;
    flex-direction: column;
  }

  body {
    background-color: #0a0a0a;
    background-image: radial-gradient(circle at top left, rgba(67, 56, 202, 0.3), transparent 40%),
                      radial-gradient(circle at bottom right, rgba(219, 39, 119, 0.3), transparent 40%);
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
    color: #e6edf3;
  }
.container {
  width: 100%;
}
@media (min-width: 640px) {

  .container {
    max-width: 640px;
  }
}
@media (min-width: 768px) {

  .container {
    max-width: 768px;
  }
}
@media (min-width: 1024px) {

  .container {
    max-width: 1024px;
  }
}
@media (min-width: 1280px) {

  .container {
    max-width: 1280px;
  }
}
@media (min-width: 1536px) {

  .container {
    max-width: 1536px;
  }
}
.visible {
  visibility: visible;
}
.collapse {
  visibility: collapse;
}
.static {
  position: static;
}
.fixed {
  position: fixed;
}
.absolute {
  position: absolute;
}
.relative {
  position: relative;
}
.sticky {
  position: sticky;
}
.mt-1 {
  margin-top: 0.25rem;
}
.block {
  display: block;
}
.inline-block {
  display: inline-block;
}
.inline {
  display: inline;
}
.flex {
  display: flex;
}
.inline-flex {
  display: inline-flex;
}
.table {
  display: table;
}
.table-cell {
  display: table-cell;
}
.table-row {
  display: table-row;
}
.grid {
  display: grid;
}
.inline-grid {
  display: inline-grid;
}
.list-item {
  display: list-item;
}
.hidden {
  display: none;
}
.h-5 {
  height: 1.25rem;
}
.w-5 {
  width: 1.25rem;
}
.transform {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.resize {
  resize: both;
}
.border {
  border-width: 1px;
}
.text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
}
.uppercase {
  text-transform: uppercase;
}
.text-red-400 {
  --tw-text-opacity: 1;
  color: rgb(248 113 113 / var(--tw-text-opacity, 1));
}
.underline {
  text-decoration-line: underline;
}
.outline {
  outline-style: solid;
}
.blur {
  --tw-blur: blur(8px);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}
.invert {
  --tw-invert: invert(100%);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}
.\\!filter {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow) !important;
}
.filter {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}
.backdrop-filter {
  backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}
.transition {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.ease-in-out {
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}
.ease-out {
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
}

/* Library-level utilities / resets can go here */
* {
  scrollbar-width: thin;
  scrollbar-color: #4b5563 #1f2937;
}

*::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

*::-webkit-scrollbar-track {
  background: #1f2937;
}

*::-webkit-scrollbar-thumb {
  background-color: #4b5563;
  border-radius: 10px;
  border: 2px solid #1f2937;
}
`, "",{"version":3,"sources":["webpack://./src/styles.css"],"names":[],"mappings":"AAAA;EAAA,wBAAc;EAAd,wBAAc;EAAd,mBAAc;EAAd,mBAAc;EAAd,cAAc;EAAd,cAAc;EAAd,cAAc;EAAd,eAAc;EAAd,eAAc;EAAd,aAAc;EAAd,aAAc;EAAd,kBAAc;EAAd,sCAAc;EAAd,8BAAc;EAAd,6BAAc;EAAd,4BAAc;EAAd,eAAc;EAAd,oBAAc;EAAd,sBAAc;EAAd,uBAAc;EAAd,wBAAc;EAAd,kBAAc;EAAd,2BAAc;EAAd,4BAAc;EAAd,sCAAc;EAAd,kCAAc;EAAd,2BAAc;EAAd,sBAAc;EAAd,8BAAc;EAAd,YAAc;EAAd,kBAAc;EAAd,gBAAc;EAAd,iBAAc;EAAd,kBAAc;EAAd,cAAc;EAAd,gBAAc;EAAd,aAAc;EAAd,mBAAc;EAAd,qBAAc;EAAd,2BAAc;EAAd,yBAAc;EAAd,0BAAc;EAAd,2BAAc;EAAd,uBAAc;EAAd,wBAAc;EAAd,yBAAc;EAAd,sBAAc;EAAd,oBAAc;EAAd,sBAAc;EAAd,qBAAc;EAAd;AAAc;;AAAd;EAAA,wBAAc;EAAd,wBAAc;EAAd,mBAAc;EAAd,mBAAc;EAAd,cAAc;EAAd,cAAc;EAAd,cAAc;EAAd,eAAc;EAAd,eAAc;EAAd,aAAc;EAAd,aAAc;EAAd,kBAAc;EAAd,sCAAc;EAAd,8BAAc;EAAd,6BAAc;EAAd,4BAAc;EAAd,eAAc;EAAd,oBAAc;EAAd,sBAAc;EAAd,uBAAc;EAAd,wBAAc;EAAd,kBAAc;EAAd,2BAAc;EAAd,4BAAc;EAAd,sCAAc;EAAd,kCAAc;EAAd,2BAAc;EAAd,sBAAc;EAAd,8BAAc;EAAd,YAAc;EAAd,kBAAc;EAAd,gBAAc;EAAd,iBAAc;EAAd,kBAAc;EAAd,cAAc;EAAd,gBAAc;EAAd,aAAc;EAAd,mBAAc;EAAd,qBAAc;EAAd,2BAAc;EAAd,yBAAc;EAAd,0BAAc;EAAd,2BAAc;EAAd,uBAAc;EAAd,wBAAc;EAAd,yBAAc;EAAd,sBAAc;EAAd,oBAAc;EAAd,sBAAc;EAAd,qBAAc;EAAd;AAAc,CAAd;;CAAc,CAAd;;;CAAc;;AAAd;;;EAAA,sBAAc,EAAd,MAAc;EAAd,eAAc,EAAd,MAAc;EAAd,mBAAc,EAAd,MAAc;EAAd,qBAAc,EAAd,MAAc;AAAA;;AAAd;;EAAA,gBAAc;AAAA;;AAAd;;;;;;;;CAAc;;AAAd;;EAAA,gBAAc,EAAd,MAAc;EAAd,8BAAc,EAAd,MAAc;EAAd,gBAAc,EAAd,MAAc;EAAd,cAAc;KAAd,WAAc,EAAd,MAAc;EAAd,+HAAc,EAAd,MAAc;EAAd,6BAAc,EAAd,MAAc;EAAd,+BAAc,EAAd,MAAc;EAAd,wCAAc,EAAd,MAAc;AAAA;;AAAd;;;CAAc;;AAAd;EAAA,SAAc,EAAd,MAAc;EAAd,oBAAc,EAAd,MAAc;AAAA;;AAAd;;;;CAAc;;AAAd;EAAA,SAAc,EAAd,MAAc;EAAd,cAAc,EAAd,MAAc;EAAd,qBAAc,EAAd,MAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,yCAAc;UAAd,iCAAc;AAAA;;AAAd;;CAAc;;AAAd;;;;;;EAAA,kBAAc;EAAd,oBAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,cAAc;EAAd,wBAAc;AAAA;;AAAd;;CAAc;;AAAd;;EAAA,mBAAc;AAAA;;AAAd;;;;;CAAc;;AAAd;;;;EAAA,+GAAc,EAAd,MAAc;EAAd,6BAAc,EAAd,MAAc;EAAd,+BAAc,EAAd,MAAc;EAAd,cAAc,EAAd,MAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,cAAc;AAAA;;AAAd;;CAAc;;AAAd;;EAAA,cAAc;EAAd,cAAc;EAAd,kBAAc;EAAd,wBAAc;AAAA;;AAAd;EAAA,eAAc;AAAA;;AAAd;EAAA,WAAc;AAAA;;AAAd;;;;CAAc;;AAAd;EAAA,cAAc,EAAd,MAAc;EAAd,qBAAc,EAAd,MAAc;EAAd,yBAAc,EAAd,MAAc;AAAA;;AAAd;;;;CAAc;;AAAd;;;;;EAAA,oBAAc,EAAd,MAAc;EAAd,8BAAc,EAAd,MAAc;EAAd,gCAAc,EAAd,MAAc;EAAd,eAAc,EAAd,MAAc;EAAd,oBAAc,EAAd,MAAc;EAAd,oBAAc,EAAd,MAAc;EAAd,uBAAc,EAAd,MAAc;EAAd,cAAc,EAAd,MAAc;EAAd,SAAc,EAAd,MAAc;EAAd,UAAc,EAAd,MAAc;AAAA;;AAAd;;CAAc;;AAAd;;EAAA,oBAAc;AAAA;;AAAd;;;CAAc;;AAAd;;;;EAAA,0BAAc,EAAd,MAAc;EAAd,6BAAc,EAAd,MAAc;EAAd,sBAAc,EAAd,MAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,aAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,gBAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,wBAAc;AAAA;;AAAd;;CAAc;;AAAd;;EAAA,YAAc;AAAA;;AAAd;;;CAAc;;AAAd;EAAA,6BAAc,EAAd,MAAc;EAAd,oBAAc,EAAd,MAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,wBAAc;AAAA;;AAAd;;;CAAc;;AAAd;EAAA,0BAAc,EAAd,MAAc;EAAd,aAAc,EAAd,MAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,kBAAc;AAAA;;AAAd;;CAAc;;AAAd;;;;;;;;;;;;;EAAA,SAAc;AAAA;;AAAd;EAAA,SAAc;EAAd,UAAc;AAAA;;AAAd;EAAA,UAAc;AAAA;;AAAd;;;EAAA,gBAAc;EAAd,SAAc;EAAd,UAAc;AAAA;;AAAd;;CAAc;AAAd;EAAA,UAAc;AAAA;;AAAd;;CAAc;;AAAd;EAAA,gBAAc;AAAA;;AAAd;;;CAAc;;AAAd;EAAA,UAAc,EAAd,MAAc;EAAd,cAAc,EAAd,MAAc;AAAA;;AAAd;;EAAA,UAAc,EAAd,MAAc;EAAd,cAAc,EAAd,MAAc;AAAA;;AAAd;;CAAc;;AAAd;;EAAA,eAAc;AAAA;;AAAd;;CAAc;AAAd;EAAA,eAAc;AAAA;;AAAd;;;;CAAc;;AAAd;;;;;;;;EAAA,cAAc,EAAd,MAAc;EAAd,sBAAc,EAAd,MAAc;AAAA;;AAAd;;CAAc;;AAAd;;EAAA,eAAc;EAAd,YAAc;AAAA;;AAAd,wEAAc;AAAd;EAAA,aAAc;AAAA;EAAd;IAAA,YAAc;IAAd,gBAAc,EAAd,wCAAc;EAAA;;EAAd;IAAA,aAAc;IAAd,sBAAc;EAAA;;EAAd;IAAA,yBAAc;IAAd;uGAAc;IAAd,0JAAc;IAAd,cAAc;EAAA;AACd;EAAA;AAAoB;AAApB;;EAAA;IAAA;EAAoB;AAAA;AAApB;;EAAA;IAAA;EAAoB;AAAA;AAApB;;EAAA;IAAA;EAAoB;AAAA;AAApB;;EAAA;IAAA;EAAoB;AAAA;AAApB;;EAAA;IAAA;EAAoB;AAAA;AACpB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,mBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,oBAAmB;EAAnB;AAAmB;AAAnB;EAAA,yBAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA,wJAAmB;EAAnB,wDAAmB;EAAnB;AAAmB;AAAnB;EAAA;AAAmB;AAAnB;EAAA;AAAmB;;AAsBnB,iDAAiD;AACjD;EACE,qBAAqB;EACrB,gCAAgC;AAClC;;AAEA;EACE,UAAU;EACV,WAAW;AACb;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,yBAAyB;EACzB,mBAAmB;EACnB,yBAAyB;AAC3B","sourcesContent":["@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n@layer base {\n  html, body, #root {\n    height: 100%;\n    overflow: hidden; /* Prevent body scroll with new layout */\n  }\n  \n  #root {\n    display: flex;\n    flex-direction: column;\n  }\n\n  body {\n    background-color: #0a0a0a;\n    background-image: radial-gradient(circle at top left, rgba(67, 56, 202, 0.3), transparent 40%),\n                      radial-gradient(circle at bottom right, rgba(219, 39, 119, 0.3), transparent 40%);\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';\n    color: #e6edf3;\n  }\n}\n\n/* Library-level utilities / resets can go here */\n* {\n  scrollbar-width: thin;\n  scrollbar-color: #4b5563 #1f2937;\n}\n\n*::-webkit-scrollbar {\n  width: 8px;\n  height: 8px;\n}\n\n*::-webkit-scrollbar-track {\n  background: #1f2937;\n}\n\n*::-webkit-scrollbar-thumb {\n  background-color: #4b5563;\n  border-radius: 10px;\n  border: 2px solid #1f2937;\n}\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {



/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
module.exports = function (cssWithMappingToString) {
  var list = [];

  // return the list of modules as css string
  list.toString = function toString() {
    return this.map(function (item) {
      var content = "";
      var needLayer = typeof item[5] !== "undefined";
      if (item[4]) {
        content += "@supports (".concat(item[4], ") {");
      }
      if (item[2]) {
        content += "@media ".concat(item[2], " {");
      }
      if (needLayer) {
        content += "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {");
      }
      content += cssWithMappingToString(item);
      if (needLayer) {
        content += "}";
      }
      if (item[2]) {
        content += "}";
      }
      if (item[4]) {
        content += "}";
      }
      return content;
    }).join("");
  };

  // import a list of modules into the list
  list.i = function i(modules, media, dedupe, supports, layer) {
    if (typeof modules === "string") {
      modules = [[null, modules, undefined]];
    }
    var alreadyImportedModules = {};
    if (dedupe) {
      for (var k = 0; k < this.length; k++) {
        var id = this[k][0];
        if (id != null) {
          alreadyImportedModules[id] = true;
        }
      }
    }
    for (var _k = 0; _k < modules.length; _k++) {
      var item = [].concat(modules[_k]);
      if (dedupe && alreadyImportedModules[item[0]]) {
        continue;
      }
      if (typeof layer !== "undefined") {
        if (typeof item[5] === "undefined") {
          item[5] = layer;
        } else {
          item[1] = "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {").concat(item[1], "}");
          item[5] = layer;
        }
      }
      if (media) {
        if (!item[2]) {
          item[2] = media;
        } else {
          item[1] = "@media ".concat(item[2], " {").concat(item[1], "}");
          item[2] = media;
        }
      }
      if (supports) {
        if (!item[4]) {
          item[4] = "".concat(supports);
        } else {
          item[1] = "@supports (".concat(item[4], ") {").concat(item[1], "}");
          item[4] = supports;
        }
      }
      list.push(item);
    }
  };
  return list;
};

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/sourceMaps.js":
/*!************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/sourceMaps.js ***!
  \************************************************************/
/***/ ((module) => {



module.exports = function (item) {
  var content = item[1];
  var cssMapping = item[3];
  if (!cssMapping) {
    return content;
  }
  if (typeof btoa === "function") {
    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));
    var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);
    var sourceMapping = "/*# ".concat(data, " */");
    return [content].concat([sourceMapping]).join("\n");
  }
  return [content].join("\n");
};

/***/ }),

/***/ "./node_modules/react-dom/cjs/react-dom-client.development.js":
/*!********************************************************************!*\
  !*** ./node_modules/react-dom/cjs/react-dom-client.development.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

/**
 * @license React
 * react-dom-client.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/*
 Modernizr 3.0.0pre (Custom Build) | MIT
*/

 true &&
  (function () {
    function findHook(fiber, id) {
      for (fiber = fiber.memoizedState; null !== fiber && 0 < id; )
        (fiber = fiber.next), id--;
      return fiber;
    }
    function copyWithSetImpl(obj, path, index, value) {
      if (index >= path.length) return value;
      var key = path[index],
        updated = isArrayImpl(obj) ? obj.slice() : assign({}, obj);
      updated[key] = copyWithSetImpl(obj[key], path, index + 1, value);
      return updated;
    }
    function copyWithRename(obj, oldPath, newPath) {
      if (oldPath.length !== newPath.length)
        console.warn("copyWithRename() expects paths of the same length");
      else {
        for (var i = 0; i < newPath.length - 1; i++)
          if (oldPath[i] !== newPath[i]) {
            console.warn(
              "copyWithRename() expects paths to be the same except for the deepest key"
            );
            return;
          }
        return copyWithRenameImpl(obj, oldPath, newPath, 0);
      }
    }
    function copyWithRenameImpl(obj, oldPath, newPath, index) {
      var oldKey = oldPath[index],
        updated = isArrayImpl(obj) ? obj.slice() : assign({}, obj);
      index + 1 === oldPath.length
        ? ((updated[newPath[index]] = updated[oldKey]),
          isArrayImpl(updated)
            ? updated.splice(oldKey, 1)
            : delete updated[oldKey])
        : (updated[oldKey] = copyWithRenameImpl(
            obj[oldKey],
            oldPath,
            newPath,
            index + 1
          ));
      return updated;
    }
    function copyWithDeleteImpl(obj, path, index) {
      var key = path[index],
        updated = isArrayImpl(obj) ? obj.slice() : assign({}, obj);
      if (index + 1 === path.length)
        return (
          isArrayImpl(updated) ? updated.splice(key, 1) : delete updated[key],
          updated
        );
      updated[key] = copyWithDeleteImpl(obj[key], path, index + 1);
      return updated;
    }
    function shouldSuspendImpl() {
      return !1;
    }
    function shouldErrorImpl() {
      return null;
    }
    function warnInvalidHookAccess() {
      console.error(
        "Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. You can only call Hooks at the top level of your React function. For more information, see https://react.dev/link/rules-of-hooks"
      );
    }
    function warnInvalidContextAccess() {
      console.error(
        "Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo()."
      );
    }
    function noop() {}
    function warnForMissingKey() {}
    function setToSortedString(set) {
      var array = [];
      set.forEach(function (value) {
        array.push(value);
      });
      return array.sort().join(", ");
    }
    function createFiber(tag, pendingProps, key, mode) {
      return new FiberNode(tag, pendingProps, key, mode);
    }
    function scheduleRoot(root, element) {
      root.context === emptyContextObject &&
        (updateContainerImpl(root.current, 2, element, root, null, null),
        flushSyncWork$1());
    }
    function scheduleRefresh(root, update) {
      if (null !== resolveFamily) {
        var staleFamilies = update.staleFamilies;
        update = update.updatedFamilies;
        flushPendingEffects();
        scheduleFibersWithFamiliesRecursively(
          root.current,
          update,
          staleFamilies
        );
        flushSyncWork$1();
      }
    }
    function setRefreshHandler(handler) {
      resolveFamily = handler;
    }
    function isValidContainer(node) {
      return !(
        !node ||
        (1 !== node.nodeType && 9 !== node.nodeType && 11 !== node.nodeType)
      );
    }
    function getNearestMountedFiber(fiber) {
      var node = fiber,
        nearestMounted = fiber;
      if (fiber.alternate) for (; node.return; ) node = node.return;
      else {
        fiber = node;
        do
          (node = fiber),
            0 !== (node.flags & 4098) && (nearestMounted = node.return),
            (fiber = node.return);
        while (fiber);
      }
      return 3 === node.tag ? nearestMounted : null;
    }
    function getSuspenseInstanceFromFiber(fiber) {
      if (13 === fiber.tag) {
        var suspenseState = fiber.memoizedState;
        null === suspenseState &&
          ((fiber = fiber.alternate),
          null !== fiber && (suspenseState = fiber.memoizedState));
        if (null !== suspenseState) return suspenseState.dehydrated;
      }
      return null;
    }
    function getActivityInstanceFromFiber(fiber) {
      if (31 === fiber.tag) {
        var activityState = fiber.memoizedState;
        null === activityState &&
          ((fiber = fiber.alternate),
          null !== fiber && (activityState = fiber.memoizedState));
        if (null !== activityState) return activityState.dehydrated;
      }
      return null;
    }
    function assertIsMounted(fiber) {
      if (getNearestMountedFiber(fiber) !== fiber)
        throw Error("Unable to find node on an unmounted component.");
    }
    function findCurrentFiberUsingSlowPath(fiber) {
      var alternate = fiber.alternate;
      if (!alternate) {
        alternate = getNearestMountedFiber(fiber);
        if (null === alternate)
          throw Error("Unable to find node on an unmounted component.");
        return alternate !== fiber ? null : fiber;
      }
      for (var a = fiber, b = alternate; ; ) {
        var parentA = a.return;
        if (null === parentA) break;
        var parentB = parentA.alternate;
        if (null === parentB) {
          b = parentA.return;
          if (null !== b) {
            a = b;
            continue;
          }
          break;
        }
        if (parentA.child === parentB.child) {
          for (parentB = parentA.child; parentB; ) {
            if (parentB === a) return assertIsMounted(parentA), fiber;
            if (parentB === b) return assertIsMounted(parentA), alternate;
            parentB = parentB.sibling;
          }
          throw Error("Unable to find node on an unmounted component.");
        }
        if (a.return !== b.return) (a = parentA), (b = parentB);
        else {
          for (var didFindChild = !1, _child = parentA.child; _child; ) {
            if (_child === a) {
              didFindChild = !0;
              a = parentA;
              b = parentB;
              break;
            }
            if (_child === b) {
              didFindChild = !0;
              b = parentA;
              a = parentB;
              break;
            }
            _child = _child.sibling;
          }
          if (!didFindChild) {
            for (_child = parentB.child; _child; ) {
              if (_child === a) {
                didFindChild = !0;
                a = parentB;
                b = parentA;
                break;
              }
              if (_child === b) {
                didFindChild = !0;
                b = parentB;
                a = parentA;
                break;
              }
              _child = _child.sibling;
            }
            if (!didFindChild)
              throw Error(
                "Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue."
              );
          }
        }
        if (a.alternate !== b)
          throw Error(
            "Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue."
          );
      }
      if (3 !== a.tag)
        throw Error("Unable to find node on an unmounted component.");
      return a.stateNode.current === a ? fiber : alternate;
    }
    function findCurrentHostFiberImpl(node) {
      var tag = node.tag;
      if (5 === tag || 26 === tag || 27 === tag || 6 === tag) return node;
      for (node = node.child; null !== node; ) {
        tag = findCurrentHostFiberImpl(node);
        if (null !== tag) return tag;
        node = node.sibling;
      }
      return null;
    }
    function getIteratorFn(maybeIterable) {
      if (null === maybeIterable || "object" !== typeof maybeIterable)
        return null;
      maybeIterable =
        (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||
        maybeIterable["@@iterator"];
      return "function" === typeof maybeIterable ? maybeIterable : null;
    }
    function getComponentNameFromType(type) {
      if (null == type) return null;
      if ("function" === typeof type)
        return type.$$typeof === REACT_CLIENT_REFERENCE
          ? null
          : type.displayName || type.name || null;
      if ("string" === typeof type) return type;
      switch (type) {
        case REACT_FRAGMENT_TYPE:
          return "Fragment";
        case REACT_PROFILER_TYPE:
          return "Profiler";
        case REACT_STRICT_MODE_TYPE:
          return "StrictMode";
        case REACT_SUSPENSE_TYPE:
          return "Suspense";
        case REACT_SUSPENSE_LIST_TYPE:
          return "SuspenseList";
        case REACT_ACTIVITY_TYPE:
          return "Activity";
      }
      if ("object" === typeof type)
        switch (
          ("number" === typeof type.tag &&
            console.error(
              "Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."
            ),
          type.$$typeof)
        ) {
          case REACT_PORTAL_TYPE:
            return "Portal";
          case REACT_CONTEXT_TYPE:
            return type.displayName || "Context";
          case REACT_CONSUMER_TYPE:
            return (type._context.displayName || "Context") + ".Consumer";
          case REACT_FORWARD_REF_TYPE:
            var innerType = type.render;
            type = type.displayName;
            type ||
              ((type = innerType.displayName || innerType.name || ""),
              (type = "" !== type ? "ForwardRef(" + type + ")" : "ForwardRef"));
            return type;
          case REACT_MEMO_TYPE:
            return (
              (innerType = type.displayName || null),
              null !== innerType
                ? innerType
                : getComponentNameFromType(type.type) || "Memo"
            );
          case REACT_LAZY_TYPE:
            innerType = type._payload;
            type = type._init;
            try {
              return getComponentNameFromType(type(innerType));
            } catch (x) {}
        }
      return null;
    }
    function getComponentNameFromOwner(owner) {
      return "number" === typeof owner.tag
        ? getComponentNameFromFiber(owner)
        : "string" === typeof owner.name
          ? owner.name
          : null;
    }
    function getComponentNameFromFiber(fiber) {
      var type = fiber.type;
      switch (fiber.tag) {
        case 31:
          return "Activity";
        case 24:
          return "Cache";
        case 9:
          return (type._context.displayName || "Context") + ".Consumer";
        case 10:
          return type.displayName || "Context";
        case 18:
          return "DehydratedFragment";
        case 11:
          return (
            (fiber = type.render),
            (fiber = fiber.displayName || fiber.name || ""),
            type.displayName ||
              ("" !== fiber ? "ForwardRef(" + fiber + ")" : "ForwardRef")
          );
        case 7:
          return "Fragment";
        case 26:
        case 27:
        case 5:
          return type;
        case 4:
          return "Portal";
        case 3:
          return "Root";
        case 6:
          return "Text";
        case 16:
          return getComponentNameFromType(type);
        case 8:
          return type === REACT_STRICT_MODE_TYPE ? "StrictMode" : "Mode";
        case 22:
          return "Offscreen";
        case 12:
          return "Profiler";
        case 21:
          return "Scope";
        case 13:
          return "Suspense";
        case 19:
          return "SuspenseList";
        case 25:
          return "TracingMarker";
        case 1:
        case 0:
        case 14:
        case 15:
          if ("function" === typeof type)
            return type.displayName || type.name || null;
          if ("string" === typeof type) return type;
          break;
        case 29:
          type = fiber._debugInfo;
          if (null != type)
            for (var i = type.length - 1; 0 <= i; i--)
              if ("string" === typeof type[i].name) return type[i].name;
          if (null !== fiber.return)
            return getComponentNameFromFiber(fiber.return);
      }
      return null;
    }
    function createCursor(defaultValue) {
      return { current: defaultValue };
    }
    function pop(cursor, fiber) {
      0 > index$jscomp$0
        ? console.error("Unexpected pop.")
        : (fiber !== fiberStack[index$jscomp$0] &&
            console.error("Unexpected Fiber popped."),
          (cursor.current = valueStack[index$jscomp$0]),
          (valueStack[index$jscomp$0] = null),
          (fiberStack[index$jscomp$0] = null),
          index$jscomp$0--);
    }
    function push(cursor, value, fiber) {
      index$jscomp$0++;
      valueStack[index$jscomp$0] = cursor.current;
      fiberStack[index$jscomp$0] = fiber;
      cursor.current = value;
    }
    function requiredContext(c) {
      null === c &&
        console.error(
          "Expected host context to exist. This error is likely caused by a bug in React. Please file an issue."
        );
      return c;
    }
    function pushHostContainer(fiber, nextRootInstance) {
      push(rootInstanceStackCursor, nextRootInstance, fiber);
      push(contextFiberStackCursor, fiber, fiber);
      push(contextStackCursor, null, fiber);
      var nextRootContext = nextRootInstance.nodeType;
      switch (nextRootContext) {
        case 9:
        case 11:
          nextRootContext = 9 === nextRootContext ? "#document" : "#fragment";
          nextRootInstance = (nextRootInstance =
            nextRootInstance.documentElement)
            ? (nextRootInstance = nextRootInstance.namespaceURI)
              ? getOwnHostContext(nextRootInstance)
              : HostContextNamespaceNone
            : HostContextNamespaceNone;
          break;
        default:
          if (
            ((nextRootContext = nextRootInstance.tagName),
            (nextRootInstance = nextRootInstance.namespaceURI))
          )
            (nextRootInstance = getOwnHostContext(nextRootInstance)),
              (nextRootInstance = getChildHostContextProd(
                nextRootInstance,
                nextRootContext
              ));
          else
            switch (nextRootContext) {
              case "svg":
                nextRootInstance = HostContextNamespaceSvg;
                break;
              case "math":
                nextRootInstance = HostContextNamespaceMath;
                break;
              default:
                nextRootInstance = HostContextNamespaceNone;
            }
      }
      nextRootContext = nextRootContext.toLowerCase();
      nextRootContext = updatedAncestorInfoDev(null, nextRootContext);
      nextRootContext = {
        context: nextRootInstance,
        ancestorInfo: nextRootContext
      };
      pop(contextStackCursor, fiber);
      push(contextStackCursor, nextRootContext, fiber);
    }
    function popHostContainer(fiber) {
      pop(contextStackCursor, fiber);
      pop(contextFiberStackCursor, fiber);
      pop(rootInstanceStackCursor, fiber);
    }
    function getHostContext() {
      return requiredContext(contextStackCursor.current);
    }
    function pushHostContext(fiber) {
      null !== fiber.memoizedState &&
        push(hostTransitionProviderCursor, fiber, fiber);
      var context = requiredContext(contextStackCursor.current);
      var type = fiber.type;
      var nextContext = getChildHostContextProd(context.context, type);
      type = updatedAncestorInfoDev(context.ancestorInfo, type);
      nextContext = { context: nextContext, ancestorInfo: type };
      context !== nextContext &&
        (push(contextFiberStackCursor, fiber, fiber),
        push(contextStackCursor, nextContext, fiber));
    }
    function popHostContext(fiber) {
      contextFiberStackCursor.current === fiber &&
        (pop(contextStackCursor, fiber), pop(contextFiberStackCursor, fiber));
      hostTransitionProviderCursor.current === fiber &&
        (pop(hostTransitionProviderCursor, fiber),
        (HostTransitionContext._currentValue = NotPendingTransition));
    }
    function disabledLog() {}
    function disableLogs() {
      if (0 === disabledDepth) {
        prevLog = console.log;
        prevInfo = console.info;
        prevWarn = console.warn;
        prevError = console.error;
        prevGroup = console.group;
        prevGroupCollapsed = console.groupCollapsed;
        prevGroupEnd = console.groupEnd;
        var props = {
          configurable: !0,
          enumerable: !0,
          value: disabledLog,
          writable: !0
        };
        Object.defineProperties(console, {
          info: props,
          log: props,
          warn: props,
          error: props,
          group: props,
          groupCollapsed: props,
          groupEnd: props
        });
      }
      disabledDepth++;
    }
    function reenableLogs() {
      disabledDepth--;
      if (0 === disabledDepth) {
        var props = { configurable: !0, enumerable: !0, writable: !0 };
        Object.defineProperties(console, {
          log: assign({}, props, { value: prevLog }),
          info: assign({}, props, { value: prevInfo }),
          warn: assign({}, props, { value: prevWarn }),
          error: assign({}, props, { value: prevError }),
          group: assign({}, props, { value: prevGroup }),
          groupCollapsed: assign({}, props, { value: prevGroupCollapsed }),
          groupEnd: assign({}, props, { value: prevGroupEnd })
        });
      }
      0 > disabledDepth &&
        console.error(
          "disabledDepth fell below zero. This is a bug in React. Please file an issue."
        );
    }
    function formatOwnerStack(error) {
      var prevPrepareStackTrace = Error.prepareStackTrace;
      Error.prepareStackTrace = void 0;
      error = error.stack;
      Error.prepareStackTrace = prevPrepareStackTrace;
      error.startsWith("Error: react-stack-top-frame\n") &&
        (error = error.slice(29));
      prevPrepareStackTrace = error.indexOf("\n");
      -1 !== prevPrepareStackTrace &&
        (error = error.slice(prevPrepareStackTrace + 1));
      prevPrepareStackTrace = error.indexOf("react_stack_bottom_frame");
      -1 !== prevPrepareStackTrace &&
        (prevPrepareStackTrace = error.lastIndexOf(
          "\n",
          prevPrepareStackTrace
        ));
      if (-1 !== prevPrepareStackTrace)
        error = error.slice(0, prevPrepareStackTrace);
      else return "";
      return error;
    }
    function describeBuiltInComponentFrame(name) {
      if (void 0 === prefix)
        try {
          throw Error();
        } catch (x) {
          var match = x.stack.trim().match(/\n( *(at )?)/);
          prefix = (match && match[1]) || "";
          suffix =
            -1 < x.stack.indexOf("\n    at")
              ? " (<anonymous>)"
              : -1 < x.stack.indexOf("@")
                ? "@unknown:0:0"
                : "";
        }
      return "\n" + prefix + name + suffix;
    }
    function describeNativeComponentFrame(fn, construct) {
      if (!fn || reentry) return "";
      var frame = componentFrameCache.get(fn);
      if (void 0 !== frame) return frame;
      reentry = !0;
      frame = Error.prepareStackTrace;
      Error.prepareStackTrace = void 0;
      var previousDispatcher = null;
      previousDispatcher = ReactSharedInternals.H;
      ReactSharedInternals.H = null;
      disableLogs();
      try {
        var RunInRootFrame = {
          DetermineComponentFrameRoot: function () {
            try {
              if (construct) {
                var Fake = function () {
                  throw Error();
                };
                Object.defineProperty(Fake.prototype, "props", {
                  set: function () {
                    throw Error();
                  }
                });
                if ("object" === typeof Reflect && Reflect.construct) {
                  try {
                    Reflect.construct(Fake, []);
                  } catch (x) {
                    var control = x;
                  }
                  Reflect.construct(fn, [], Fake);
                } else {
                  try {
                    Fake.call();
                  } catch (x$0) {
                    control = x$0;
                  }
                  fn.call(Fake.prototype);
                }
              } else {
                try {
                  throw Error();
                } catch (x$1) {
                  control = x$1;
                }
                (Fake = fn()) &&
                  "function" === typeof Fake.catch &&
                  Fake.catch(function () {});
              }
            } catch (sample) {
              if (sample && control && "string" === typeof sample.stack)
                return [sample.stack, control.stack];
            }
            return [null, null];
          }
        };
        RunInRootFrame.DetermineComponentFrameRoot.displayName =
          "DetermineComponentFrameRoot";
        var namePropDescriptor = Object.getOwnPropertyDescriptor(
          RunInRootFrame.DetermineComponentFrameRoot,
          "name"
        );
        namePropDescriptor &&
          namePropDescriptor.configurable &&
          Object.defineProperty(
            RunInRootFrame.DetermineComponentFrameRoot,
            "name",
            { value: "DetermineComponentFrameRoot" }
          );
        var _RunInRootFrame$Deter =
            RunInRootFrame.DetermineComponentFrameRoot(),
          sampleStack = _RunInRootFrame$Deter[0],
          controlStack = _RunInRootFrame$Deter[1];
        if (sampleStack && controlStack) {
          var sampleLines = sampleStack.split("\n"),
            controlLines = controlStack.split("\n");
          for (
            _RunInRootFrame$Deter = namePropDescriptor = 0;
            namePropDescriptor < sampleLines.length &&
            !sampleLines[namePropDescriptor].includes(
              "DetermineComponentFrameRoot"
            );

          )
            namePropDescriptor++;
          for (
            ;
            _RunInRootFrame$Deter < controlLines.length &&
            !controlLines[_RunInRootFrame$Deter].includes(
              "DetermineComponentFrameRoot"
            );

          )
            _RunInRootFrame$Deter++;
          if (
            namePropDescriptor === sampleLines.length ||
            _RunInRootFrame$Deter === controlLines.length
          )
            for (
              namePropDescriptor = sampleLines.length - 1,
                _RunInRootFrame$Deter = controlLines.length - 1;
              1 <= namePropDescriptor &&
              0 <= _RunInRootFrame$Deter &&
              sampleLines[namePropDescriptor] !==
                controlLines[_RunInRootFrame$Deter];

            )
              _RunInRootFrame$Deter--;
          for (
            ;
            1 <= namePropDescriptor && 0 <= _RunInRootFrame$Deter;
            namePropDescriptor--, _RunInRootFrame$Deter--
          )
            if (
              sampleLines[namePropDescriptor] !==
              controlLines[_RunInRootFrame$Deter]
            ) {
              if (1 !== namePropDescriptor || 1 !== _RunInRootFrame$Deter) {
                do
                  if (
                    (namePropDescriptor--,
                    _RunInRootFrame$Deter--,
                    0 > _RunInRootFrame$Deter ||
                      sampleLines[namePropDescriptor] !==
                        controlLines[_RunInRootFrame$Deter])
                  ) {
                    var _frame =
                      "\n" +
                      sampleLines[namePropDescriptor].replace(
                        " at new ",
                        " at "
                      );
                    fn.displayName &&
                      _frame.includes("<anonymous>") &&
                      (_frame = _frame.replace("<anonymous>", fn.displayName));
                    "function" === typeof fn &&
                      componentFrameCache.set(fn, _frame);
                    return _frame;
                  }
                while (1 <= namePropDescriptor && 0 <= _RunInRootFrame$Deter);
              }
              break;
            }
        }
      } finally {
        (reentry = !1),
          (ReactSharedInternals.H = previousDispatcher),
          reenableLogs(),
          (Error.prepareStackTrace = frame);
      }
      sampleLines = (sampleLines = fn ? fn.displayName || fn.name : "")
        ? describeBuiltInComponentFrame(sampleLines)
        : "";
      "function" === typeof fn && componentFrameCache.set(fn, sampleLines);
      return sampleLines;
    }
    function describeFiber(fiber, childFiber) {
      switch (fiber.tag) {
        case 26:
        case 27:
        case 5:
          return describeBuiltInComponentFrame(fiber.type);
        case 16:
          return describeBuiltInComponentFrame("Lazy");
        case 13:
          return fiber.child !== childFiber && null !== childFiber
            ? describeBuiltInComponentFrame("Suspense Fallback")
            : describeBuiltInComponentFrame("Suspense");
        case 19:
          return describeBuiltInComponentFrame("SuspenseList");
        case 0:
        case 15:
          return describeNativeComponentFrame(fiber.type, !1);
        case 11:
          return describeNativeComponentFrame(fiber.type.render, !1);
        case 1:
          return describeNativeComponentFrame(fiber.type, !0);
        case 31:
          return describeBuiltInComponentFrame("Activity");
        default:
          return "";
      }
    }
    function getStackByFiberInDevAndProd(workInProgress) {
      try {
        var info = "",
          previous = null;
        do {
          info += describeFiber(workInProgress, previous);
          var debugInfo = workInProgress._debugInfo;
          if (debugInfo)
            for (var i = debugInfo.length - 1; 0 <= i; i--) {
              var entry = debugInfo[i];
              if ("string" === typeof entry.name) {
                var JSCompiler_temp_const = info;
                a: {
                  var name = entry.name,
                    env = entry.env,
                    location = entry.debugLocation;
                  if (null != location) {
                    var childStack = formatOwnerStack(location),
                      idx = childStack.lastIndexOf("\n"),
                      lastLine =
                        -1 === idx ? childStack : childStack.slice(idx + 1);
                    if (-1 !== lastLine.indexOf(name)) {
                      var JSCompiler_inline_result = "\n" + lastLine;
                      break a;
                    }
                  }
                  JSCompiler_inline_result = describeBuiltInComponentFrame(
                    name + (env ? " [" + env + "]" : "")
                  );
                }
                info = JSCompiler_temp_const + JSCompiler_inline_result;
              }
            }
          previous = workInProgress;
          workInProgress = workInProgress.return;
        } while (workInProgress);
        return info;
      } catch (x) {
        return "\nError generating stack: " + x.message + "\n" + x.stack;
      }
    }
    function describeFunctionComponentFrameWithoutLineNumber(fn) {
      return (fn = fn ? fn.displayName || fn.name : "")
        ? describeBuiltInComponentFrame(fn)
        : "";
    }
    function getCurrentFiberOwnerNameInDevOrNull() {
      if (null === current) return null;
      var owner = current._debugOwner;
      return null != owner ? getComponentNameFromOwner(owner) : null;
    }
    function getCurrentFiberStackInDev() {
      if (null === current) return "";
      var workInProgress = current;
      try {
        var info = "";
        6 === workInProgress.tag && (workInProgress = workInProgress.return);
        switch (workInProgress.tag) {
          case 26:
          case 27:
          case 5:
            info += describeBuiltInComponentFrame(workInProgress.type);
            break;
          case 13:
            info += describeBuiltInComponentFrame("Suspense");
            break;
          case 19:
            info += describeBuiltInComponentFrame("SuspenseList");
            break;
          case 31:
            info += describeBuiltInComponentFrame("Activity");
            break;
          case 30:
          case 0:
          case 15:
          case 1:
            workInProgress._debugOwner ||
              "" !== info ||
              (info += describeFunctionComponentFrameWithoutLineNumber(
                workInProgress.type
              ));
            break;
          case 11:
            workInProgress._debugOwner ||
              "" !== info ||
              (info += describeFunctionComponentFrameWithoutLineNumber(
                workInProgress.type.render
              ));
        }
        for (; workInProgress; )
          if ("number" === typeof workInProgress.tag) {
            var fiber = workInProgress;
            workInProgress = fiber._debugOwner;
            var debugStack = fiber._debugStack;
            if (workInProgress && debugStack) {
              var formattedStack = formatOwnerStack(debugStack);
              "" !== formattedStack && (info += "\n" + formattedStack);
            }
          } else if (null != workInProgress.debugStack) {
            var ownerStack = workInProgress.debugStack;
            (workInProgress = workInProgress.owner) &&
              ownerStack &&
              (info += "\n" + formatOwnerStack(ownerStack));
          } else break;
        var JSCompiler_inline_result = info;
      } catch (x) {
        JSCompiler_inline_result =
          "\nError generating stack: " + x.message + "\n" + x.stack;
      }
      return JSCompiler_inline_result;
    }
    function runWithFiberInDEV(fiber, callback, arg0, arg1, arg2, arg3, arg4) {
      var previousFiber = current;
      setCurrentFiber(fiber);
      try {
        return null !== fiber && fiber._debugTask
          ? fiber._debugTask.run(
              callback.bind(null, arg0, arg1, arg2, arg3, arg4)
            )
          : callback(arg0, arg1, arg2, arg3, arg4);
      } finally {
        setCurrentFiber(previousFiber);
      }
      // removed by dead control flow

    }
    function setCurrentFiber(fiber) {
      ReactSharedInternals.getCurrentStack =
        null === fiber ? null : getCurrentFiberStackInDev;
      isRendering = !1;
      current = fiber;
    }
    function typeName(value) {
      return (
        ("function" === typeof Symbol &&
          Symbol.toStringTag &&
          value[Symbol.toStringTag]) ||
        value.constructor.name ||
        "Object"
      );
    }
    function willCoercionThrow(value) {
      try {
        return testStringCoercion(value), !1;
      } catch (e) {
        return !0;
      }
    }
    function testStringCoercion(value) {
      return "" + value;
    }
    function checkAttributeStringCoercion(value, attributeName) {
      if (willCoercionThrow(value))
        return (
          console.error(
            "The provided `%s` attribute is an unsupported type %s. This value must be coerced to a string before using it here.",
            attributeName,
            typeName(value)
          ),
          testStringCoercion(value)
        );
    }
    function checkCSSPropertyStringCoercion(value, propName) {
      if (willCoercionThrow(value))
        return (
          console.error(
            "The provided `%s` CSS property is an unsupported type %s. This value must be coerced to a string before using it here.",
            propName,
            typeName(value)
          ),
          testStringCoercion(value)
        );
    }
    function checkFormFieldValueStringCoercion(value) {
      if (willCoercionThrow(value))
        return (
          console.error(
            "Form field values (value, checked, defaultValue, or defaultChecked props) must be strings, not %s. This value must be coerced to a string before using it here.",
            typeName(value)
          ),
          testStringCoercion(value)
        );
    }
    function injectInternals(internals) {
      if ("undefined" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) return !1;
      var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
      if (hook.isDisabled) return !0;
      if (!hook.supportsFiber)
        return (
          console.error(
            "The installed version of React DevTools is too old and will not work with the current version of React. Please update React DevTools. https://react.dev/link/react-devtools"
          ),
          !0
        );
      try {
        (rendererID = hook.inject(internals)), (injectedHook = hook);
      } catch (err) {
        console.error("React instrumentation encountered an error: %o.", err);
      }
      return hook.checkDCE ? !0 : !1;
    }
    function setIsStrictModeForDevtools(newIsStrictMode) {
      "function" === typeof log$1 &&
        unstable_setDisableYieldValue(newIsStrictMode);
      if (injectedHook && "function" === typeof injectedHook.setStrictMode)
        try {
          injectedHook.setStrictMode(rendererID, newIsStrictMode);
        } catch (err) {
          hasLoggedError ||
            ((hasLoggedError = !0),
            console.error(
              "React instrumentation encountered an error: %o",
              err
            ));
        }
    }
    function clz32Fallback(x) {
      x >>>= 0;
      return 0 === x ? 32 : (31 - ((log(x) / LN2) | 0)) | 0;
    }
    function getHighestPriorityLanes(lanes) {
      var pendingSyncLanes = lanes & 42;
      if (0 !== pendingSyncLanes) return pendingSyncLanes;
      switch (lanes & -lanes) {
        case 1:
          return 1;
        case 2:
          return 2;
        case 4:
          return 4;
        case 8:
          return 8;
        case 16:
          return 16;
        case 32:
          return 32;
        case 64:
          return 64;
        case 128:
          return 128;
        case 256:
        case 512:
        case 1024:
        case 2048:
        case 4096:
        case 8192:
        case 16384:
        case 32768:
        case 65536:
        case 131072:
          return lanes & 261888;
        case 262144:
        case 524288:
        case 1048576:
        case 2097152:
          return lanes & 3932160;
        case 4194304:
        case 8388608:
        case 16777216:
        case 33554432:
          return lanes & 62914560;
        case 67108864:
          return 67108864;
        case 134217728:
          return 134217728;
        case 268435456:
          return 268435456;
        case 536870912:
          return 536870912;
        case 1073741824:
          return 0;
        default:
          return (
            console.error(
              "Should have found matching lanes. This is a bug in React."
            ),
            lanes
          );
      }
    }
    function getNextLanes(root, wipLanes, rootHasPendingCommit) {
      var pendingLanes = root.pendingLanes;
      if (0 === pendingLanes) return 0;
      var nextLanes = 0,
        suspendedLanes = root.suspendedLanes,
        pingedLanes = root.pingedLanes;
      root = root.warmLanes;
      var nonIdlePendingLanes = pendingLanes & 134217727;
      0 !== nonIdlePendingLanes
        ? ((pendingLanes = nonIdlePendingLanes & ~suspendedLanes),
          0 !== pendingLanes
            ? (nextLanes = getHighestPriorityLanes(pendingLanes))
            : ((pingedLanes &= nonIdlePendingLanes),
              0 !== pingedLanes
                ? (nextLanes = getHighestPriorityLanes(pingedLanes))
                : rootHasPendingCommit ||
                  ((rootHasPendingCommit = nonIdlePendingLanes & ~root),
                  0 !== rootHasPendingCommit &&
                    (nextLanes =
                      getHighestPriorityLanes(rootHasPendingCommit)))))
        : ((nonIdlePendingLanes = pendingLanes & ~suspendedLanes),
          0 !== nonIdlePendingLanes
            ? (nextLanes = getHighestPriorityLanes(nonIdlePendingLanes))
            : 0 !== pingedLanes
              ? (nextLanes = getHighestPriorityLanes(pingedLanes))
              : rootHasPendingCommit ||
                ((rootHasPendingCommit = pendingLanes & ~root),
                0 !== rootHasPendingCommit &&
                  (nextLanes = getHighestPriorityLanes(rootHasPendingCommit))));
      return 0 === nextLanes
        ? 0
        : 0 !== wipLanes &&
            wipLanes !== nextLanes &&
            0 === (wipLanes & suspendedLanes) &&
            ((suspendedLanes = nextLanes & -nextLanes),
            (rootHasPendingCommit = wipLanes & -wipLanes),
            suspendedLanes >= rootHasPendingCommit ||
              (32 === suspendedLanes && 0 !== (rootHasPendingCommit & 4194048)))
          ? wipLanes
          : nextLanes;
    }
    function checkIfRootIsPrerendering(root, renderLanes) {
      return (
        0 ===
        (root.pendingLanes &
          ~(root.suspendedLanes & ~root.pingedLanes) &
          renderLanes)
      );
    }
    function computeExpirationTime(lane, currentTime) {
      switch (lane) {
        case 1:
        case 2:
        case 4:
        case 8:
        case 64:
          return currentTime + 250;
        case 16:
        case 32:
        case 128:
        case 256:
        case 512:
        case 1024:
        case 2048:
        case 4096:
        case 8192:
        case 16384:
        case 32768:
        case 65536:
        case 131072:
        case 262144:
        case 524288:
        case 1048576:
        case 2097152:
          return currentTime + 5e3;
        case 4194304:
        case 8388608:
        case 16777216:
        case 33554432:
          return -1;
        case 67108864:
        case 134217728:
        case 268435456:
        case 536870912:
        case 1073741824:
          return -1;
        default:
          return (
            console.error(
              "Should have found matching lanes. This is a bug in React."
            ),
            -1
          );
      }
    }
    function claimNextRetryLane() {
      var lane = nextRetryLane;
      nextRetryLane <<= 1;
      0 === (nextRetryLane & 62914560) && (nextRetryLane = 4194304);
      return lane;
    }
    function createLaneMap(initial) {
      for (var laneMap = [], i = 0; 31 > i; i++) laneMap.push(initial);
      return laneMap;
    }
    function markRootUpdated$1(root, updateLane) {
      root.pendingLanes |= updateLane;
      268435456 !== updateLane &&
        ((root.suspendedLanes = 0),
        (root.pingedLanes = 0),
        (root.warmLanes = 0));
    }
    function markRootFinished(
      root,
      finishedLanes,
      remainingLanes,
      spawnedLane,
      updatedLanes,
      suspendedRetryLanes
    ) {
      var previouslyPendingLanes = root.pendingLanes;
      root.pendingLanes = remainingLanes;
      root.suspendedLanes = 0;
      root.pingedLanes = 0;
      root.warmLanes = 0;
      root.expiredLanes &= remainingLanes;
      root.entangledLanes &= remainingLanes;
      root.errorRecoveryDisabledLanes &= remainingLanes;
      root.shellSuspendCounter = 0;
      var entanglements = root.entanglements,
        expirationTimes = root.expirationTimes,
        hiddenUpdates = root.hiddenUpdates;
      for (
        remainingLanes = previouslyPendingLanes & ~remainingLanes;
        0 < remainingLanes;

      ) {
        var index = 31 - clz32(remainingLanes),
          lane = 1 << index;
        entanglements[index] = 0;
        expirationTimes[index] = -1;
        var hiddenUpdatesForLane = hiddenUpdates[index];
        if (null !== hiddenUpdatesForLane)
          for (
            hiddenUpdates[index] = null, index = 0;
            index < hiddenUpdatesForLane.length;
            index++
          ) {
            var update = hiddenUpdatesForLane[index];
            null !== update && (update.lane &= -536870913);
          }
        remainingLanes &= ~lane;
      }
      0 !== spawnedLane && markSpawnedDeferredLane(root, spawnedLane, 0);
      0 !== suspendedRetryLanes &&
        0 === updatedLanes &&
        0 !== root.tag &&
        (root.suspendedLanes |=
          suspendedRetryLanes & ~(previouslyPendingLanes & ~finishedLanes));
    }
    function markSpawnedDeferredLane(root, spawnedLane, entangledLanes) {
      root.pendingLanes |= spawnedLane;
      root.suspendedLanes &= ~spawnedLane;
      var spawnedLaneIndex = 31 - clz32(spawnedLane);
      root.entangledLanes |= spawnedLane;
      root.entanglements[spawnedLaneIndex] =
        root.entanglements[spawnedLaneIndex] |
        1073741824 |
        (entangledLanes & 261930);
    }
    function markRootEntangled(root, entangledLanes) {
      var rootEntangledLanes = (root.entangledLanes |= entangledLanes);
      for (root = root.entanglements; rootEntangledLanes; ) {
        var index = 31 - clz32(rootEntangledLanes),
          lane = 1 << index;
        (lane & entangledLanes) | (root[index] & entangledLanes) &&
          (root[index] |= entangledLanes);
        rootEntangledLanes &= ~lane;
      }
    }
    function getBumpedLaneForHydration(root, renderLanes) {
      var renderLane = renderLanes & -renderLanes;
      renderLane =
        0 !== (renderLane & 42)
          ? 1
          : getBumpedLaneForHydrationByLane(renderLane);
      return 0 !== (renderLane & (root.suspendedLanes | renderLanes))
        ? 0
        : renderLane;
    }
    function getBumpedLaneForHydrationByLane(lane) {
      switch (lane) {
        case 2:
          lane = 1;
          break;
        case 8:
          lane = 4;
          break;
        case 32:
          lane = 16;
          break;
        case 256:
        case 512:
        case 1024:
        case 2048:
        case 4096:
        case 8192:
        case 16384:
        case 32768:
        case 65536:
        case 131072:
        case 262144:
        case 524288:
        case 1048576:
        case 2097152:
        case 4194304:
        case 8388608:
        case 16777216:
        case 33554432:
          lane = 128;
          break;
        case 268435456:
          lane = 134217728;
          break;
        default:
          lane = 0;
      }
      return lane;
    }
    function addFiberToLanesMap(root, fiber, lanes) {
      if (isDevToolsPresent)
        for (root = root.pendingUpdatersLaneMap; 0 < lanes; ) {
          var index = 31 - clz32(lanes),
            lane = 1 << index;
          root[index].add(fiber);
          lanes &= ~lane;
        }
    }
    function movePendingFibersToMemoized(root, lanes) {
      if (isDevToolsPresent)
        for (
          var pendingUpdatersLaneMap = root.pendingUpdatersLaneMap,
            memoizedUpdaters = root.memoizedUpdaters;
          0 < lanes;

        ) {
          var index = 31 - clz32(lanes);
          root = 1 << index;
          index = pendingUpdatersLaneMap[index];
          0 < index.size &&
            (index.forEach(function (fiber) {
              var alternate = fiber.alternate;
              (null !== alternate && memoizedUpdaters.has(alternate)) ||
                memoizedUpdaters.add(fiber);
            }),
            index.clear());
          lanes &= ~root;
        }
    }
    function lanesToEventPriority(lanes) {
      lanes &= -lanes;
      return 0 !== DiscreteEventPriority && DiscreteEventPriority < lanes
        ? 0 !== ContinuousEventPriority && ContinuousEventPriority < lanes
          ? 0 !== (lanes & 134217727)
            ? DefaultEventPriority
            : IdleEventPriority
          : ContinuousEventPriority
        : DiscreteEventPriority;
    }
    function resolveUpdatePriority() {
      var updatePriority = ReactDOMSharedInternals.p;
      if (0 !== updatePriority) return updatePriority;
      updatePriority = window.event;
      return void 0 === updatePriority
        ? DefaultEventPriority
        : getEventPriority(updatePriority.type);
    }
    function runWithPriority(priority, fn) {
      var previousPriority = ReactDOMSharedInternals.p;
      try {
        return (ReactDOMSharedInternals.p = priority), fn();
      } finally {
        ReactDOMSharedInternals.p = previousPriority;
      }
    }
    function detachDeletedInstance(node) {
      delete node[internalInstanceKey];
      delete node[internalPropsKey];
      delete node[internalEventHandlersKey];
      delete node[internalEventHandlerListenersKey];
      delete node[internalEventHandlesSetKey];
    }
    function getClosestInstanceFromNode(targetNode) {
      var targetInst = targetNode[internalInstanceKey];
      if (targetInst) return targetInst;
      for (var parentNode = targetNode.parentNode; parentNode; ) {
        if (
          (targetInst =
            parentNode[internalContainerInstanceKey] ||
            parentNode[internalInstanceKey])
        ) {
          parentNode = targetInst.alternate;
          if (
            null !== targetInst.child ||
            (null !== parentNode && null !== parentNode.child)
          )
            for (
              targetNode = getParentHydrationBoundary(targetNode);
              null !== targetNode;

            ) {
              if ((parentNode = targetNode[internalInstanceKey]))
                return parentNode;
              targetNode = getParentHydrationBoundary(targetNode);
            }
          return targetInst;
        }
        targetNode = parentNode;
        parentNode = targetNode.parentNode;
      }
      return null;
    }
    function getInstanceFromNode(node) {
      if (
        (node = node[internalInstanceKey] || node[internalContainerInstanceKey])
      ) {
        var tag = node.tag;
        if (
          5 === tag ||
          6 === tag ||
          13 === tag ||
          31 === tag ||
          26 === tag ||
          27 === tag ||
          3 === tag
        )
          return node;
      }
      return null;
    }
    function getNodeFromInstance(inst) {
      var tag = inst.tag;
      if (5 === tag || 26 === tag || 27 === tag || 6 === tag)
        return inst.stateNode;
      throw Error("getNodeFromInstance: Invalid argument.");
    }
    function getResourcesFromRoot(root) {
      var resources = root[internalRootNodeResourcesKey];
      resources ||
        (resources = root[internalRootNodeResourcesKey] =
          { hoistableStyles: new Map(), hoistableScripts: new Map() });
      return resources;
    }
    function markNodeAsHoistable(node) {
      node[internalHoistableMarker] = !0;
    }
    function registerTwoPhaseEvent(registrationName, dependencies) {
      registerDirectEvent(registrationName, dependencies);
      registerDirectEvent(registrationName + "Capture", dependencies);
    }
    function registerDirectEvent(registrationName, dependencies) {
      registrationNameDependencies[registrationName] &&
        console.error(
          "EventRegistry: More than one plugin attempted to publish the same registration name, `%s`.",
          registrationName
        );
      registrationNameDependencies[registrationName] = dependencies;
      var lowerCasedName = registrationName.toLowerCase();
      possibleRegistrationNames[lowerCasedName] = registrationName;
      "onDoubleClick" === registrationName &&
        (possibleRegistrationNames.ondblclick = registrationName);
      for (
        registrationName = 0;
        registrationName < dependencies.length;
        registrationName++
      )
        allNativeEvents.add(dependencies[registrationName]);
    }
    function checkControlledValueProps(tagName, props) {
      hasReadOnlyValue[props.type] ||
        props.onChange ||
        props.onInput ||
        props.readOnly ||
        props.disabled ||
        null == props.value ||
        ("select" === tagName
          ? console.error(
              "You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set `onChange`."
            )
          : console.error(
              "You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`."
            ));
      props.onChange ||
        props.readOnly ||
        props.disabled ||
        null == props.checked ||
        console.error(
          "You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`."
        );
    }
    function isAttributeNameSafe(attributeName) {
      if (hasOwnProperty.call(validatedAttributeNameCache, attributeName))
        return !0;
      if (hasOwnProperty.call(illegalAttributeNameCache, attributeName))
        return !1;
      if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName))
        return (validatedAttributeNameCache[attributeName] = !0);
      illegalAttributeNameCache[attributeName] = !0;
      console.error("Invalid attribute name: `%s`", attributeName);
      return !1;
    }
    function getValueForAttributeOnCustomComponent(node, name, expected) {
      if (isAttributeNameSafe(name)) {
        if (!node.hasAttribute(name)) {
          switch (typeof expected) {
            case "symbol":
            case "object":
              return expected;
            case "function":
              return expected;
            case "boolean":
              if (!1 === expected) return expected;
          }
          return void 0 === expected ? void 0 : null;
        }
        node = node.getAttribute(name);
        if ("" === node && !0 === expected) return !0;
        checkAttributeStringCoercion(expected, name);
        return node === "" + expected ? expected : node;
      }
    }
    function setValueForAttribute(node, name, value) {
      if (isAttributeNameSafe(name))
        if (null === value) node.removeAttribute(name);
        else {
          switch (typeof value) {
            case "undefined":
            case "function":
            case "symbol":
              node.removeAttribute(name);
              return;
            case "boolean":
              var prefix = name.toLowerCase().slice(0, 5);
              if ("data-" !== prefix && "aria-" !== prefix) {
                node.removeAttribute(name);
                return;
              }
          }
          checkAttributeStringCoercion(value, name);
          node.setAttribute(name, "" + value);
        }
    }
    function setValueForKnownAttribute(node, name, value) {
      if (null === value) node.removeAttribute(name);
      else {
        switch (typeof value) {
          case "undefined":
          case "function":
          case "symbol":
          case "boolean":
            node.removeAttribute(name);
            return;
        }
        checkAttributeStringCoercion(value, name);
        node.setAttribute(name, "" + value);
      }
    }
    function setValueForNamespacedAttribute(node, namespace, name, value) {
      if (null === value) node.removeAttribute(name);
      else {
        switch (typeof value) {
          case "undefined":
          case "function":
          case "symbol":
          case "boolean":
            node.removeAttribute(name);
            return;
        }
        checkAttributeStringCoercion(value, name);
        node.setAttributeNS(namespace, name, "" + value);
      }
    }
    function getToStringValue(value) {
      switch (typeof value) {
        case "bigint":
        case "boolean":
        case "number":
        case "string":
        case "undefined":
          return value;
        case "object":
          return checkFormFieldValueStringCoercion(value), value;
        default:
          return "";
      }
    }
    function isCheckable(elem) {
      var type = elem.type;
      return (
        (elem = elem.nodeName) &&
        "input" === elem.toLowerCase() &&
        ("checkbox" === type || "radio" === type)
      );
    }
    function trackValueOnNode(node, valueField, currentValue) {
      var descriptor = Object.getOwnPropertyDescriptor(
        node.constructor.prototype,
        valueField
      );
      if (
        !node.hasOwnProperty(valueField) &&
        "undefined" !== typeof descriptor &&
        "function" === typeof descriptor.get &&
        "function" === typeof descriptor.set
      ) {
        var get = descriptor.get,
          set = descriptor.set;
        Object.defineProperty(node, valueField, {
          configurable: !0,
          get: function () {
            return get.call(this);
          },
          set: function (value) {
            checkFormFieldValueStringCoercion(value);
            currentValue = "" + value;
            set.call(this, value);
          }
        });
        Object.defineProperty(node, valueField, {
          enumerable: descriptor.enumerable
        });
        return {
          getValue: function () {
            return currentValue;
          },
          setValue: function (value) {
            checkFormFieldValueStringCoercion(value);
            currentValue = "" + value;
          },
          stopTracking: function () {
            node._valueTracker = null;
            delete node[valueField];
          }
        };
      }
    }
    function track(node) {
      if (!node._valueTracker) {
        var valueField = isCheckable(node) ? "checked" : "value";
        node._valueTracker = trackValueOnNode(
          node,
          valueField,
          "" + node[valueField]
        );
      }
    }
    function updateValueIfChanged(node) {
      if (!node) return !1;
      var tracker = node._valueTracker;
      if (!tracker) return !0;
      var lastValue = tracker.getValue();
      var value = "";
      node &&
        (value = isCheckable(node)
          ? node.checked
            ? "true"
            : "false"
          : node.value);
      node = value;
      return node !== lastValue ? (tracker.setValue(node), !0) : !1;
    }
    function getActiveElement(doc) {
      doc = doc || ("undefined" !== typeof document ? document : void 0);
      if ("undefined" === typeof doc) return null;
      try {
        return doc.activeElement || doc.body;
      } catch (e) {
        return doc.body;
      }
    }
    function escapeSelectorAttributeValueInsideDoubleQuotes(value) {
      return value.replace(
        escapeSelectorAttributeValueInsideDoubleQuotesRegex,
        function (ch) {
          return "\\" + ch.charCodeAt(0).toString(16) + " ";
        }
      );
    }
    function validateInputProps(element, props) {
      void 0 === props.checked ||
        void 0 === props.defaultChecked ||
        didWarnCheckedDefaultChecked ||
        (console.error(
          "%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://react.dev/link/controlled-components",
          getCurrentFiberOwnerNameInDevOrNull() || "A component",
          props.type
        ),
        (didWarnCheckedDefaultChecked = !0));
      void 0 === props.value ||
        void 0 === props.defaultValue ||
        didWarnValueDefaultValue$1 ||
        (console.error(
          "%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://react.dev/link/controlled-components",
          getCurrentFiberOwnerNameInDevOrNull() || "A component",
          props.type
        ),
        (didWarnValueDefaultValue$1 = !0));
    }
    function updateInput(
      element,
      value,
      defaultValue,
      lastDefaultValue,
      checked,
      defaultChecked,
      type,
      name
    ) {
      element.name = "";
      null != type &&
      "function" !== typeof type &&
      "symbol" !== typeof type &&
      "boolean" !== typeof type
        ? (checkAttributeStringCoercion(type, "type"), (element.type = type))
        : element.removeAttribute("type");
      if (null != value)
        if ("number" === type) {
          if ((0 === value && "" === element.value) || element.value != value)
            element.value = "" + getToStringValue(value);
        } else
          element.value !== "" + getToStringValue(value) &&
            (element.value = "" + getToStringValue(value));
      else
        ("submit" !== type && "reset" !== type) ||
          element.removeAttribute("value");
      null != value
        ? setDefaultValue(element, type, getToStringValue(value))
        : null != defaultValue
          ? setDefaultValue(element, type, getToStringValue(defaultValue))
          : null != lastDefaultValue && element.removeAttribute("value");
      null == checked &&
        null != defaultChecked &&
        (element.defaultChecked = !!defaultChecked);
      null != checked &&
        (element.checked =
          checked &&
          "function" !== typeof checked &&
          "symbol" !== typeof checked);
      null != name &&
      "function" !== typeof name &&
      "symbol" !== typeof name &&
      "boolean" !== typeof name
        ? (checkAttributeStringCoercion(name, "name"),
          (element.name = "" + getToStringValue(name)))
        : element.removeAttribute("name");
    }
    function initInput(
      element,
      value,
      defaultValue,
      checked,
      defaultChecked,
      type,
      name,
      isHydrating
    ) {
      null != type &&
        "function" !== typeof type &&
        "symbol" !== typeof type &&
        "boolean" !== typeof type &&
        (checkAttributeStringCoercion(type, "type"), (element.type = type));
      if (null != value || null != defaultValue) {
        if (
          !(
            ("submit" !== type && "reset" !== type) ||
            (void 0 !== value && null !== value)
          )
        ) {
          track(element);
          return;
        }
        defaultValue =
          null != defaultValue ? "" + getToStringValue(defaultValue) : "";
        value = null != value ? "" + getToStringValue(value) : defaultValue;
        isHydrating || value === element.value || (element.value = value);
        element.defaultValue = value;
      }
      checked = null != checked ? checked : defaultChecked;
      checked =
        "function" !== typeof checked &&
        "symbol" !== typeof checked &&
        !!checked;
      element.checked = isHydrating ? element.checked : !!checked;
      element.defaultChecked = !!checked;
      null != name &&
        "function" !== typeof name &&
        "symbol" !== typeof name &&
        "boolean" !== typeof name &&
        (checkAttributeStringCoercion(name, "name"), (element.name = name));
      track(element);
    }
    function setDefaultValue(node, type, value) {
      ("number" === type && getActiveElement(node.ownerDocument) === node) ||
        node.defaultValue === "" + value ||
        (node.defaultValue = "" + value);
    }
    function validateOptionProps(element, props) {
      null == props.value &&
        ("object" === typeof props.children && null !== props.children
          ? React.Children.forEach(props.children, function (child) {
              null == child ||
                "string" === typeof child ||
                "number" === typeof child ||
                "bigint" === typeof child ||
                didWarnInvalidChild ||
                ((didWarnInvalidChild = !0),
                console.error(
                  "Cannot infer the option value of complex children. Pass a `value` prop or use a plain string as children to <option>."
                ));
            })
          : null == props.dangerouslySetInnerHTML ||
            didWarnInvalidInnerHTML ||
            ((didWarnInvalidInnerHTML = !0),
            console.error(
              "Pass a `value` prop if you set dangerouslyInnerHTML so React knows which value should be selected."
            )));
      null == props.selected ||
        didWarnSelectedSetOnOption ||
        (console.error(
          "Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>."
        ),
        (didWarnSelectedSetOnOption = !0));
    }
    function getDeclarationErrorAddendum() {
      var ownerName = getCurrentFiberOwnerNameInDevOrNull();
      return ownerName
        ? "\n\nCheck the render method of `" + ownerName + "`."
        : "";
    }
    function updateOptions(node, multiple, propValue, setDefaultSelected) {
      node = node.options;
      if (multiple) {
        multiple = {};
        for (var i = 0; i < propValue.length; i++)
          multiple["$" + propValue[i]] = !0;
        for (propValue = 0; propValue < node.length; propValue++)
          (i = multiple.hasOwnProperty("$" + node[propValue].value)),
            node[propValue].selected !== i && (node[propValue].selected = i),
            i && setDefaultSelected && (node[propValue].defaultSelected = !0);
      } else {
        propValue = "" + getToStringValue(propValue);
        multiple = null;
        for (i = 0; i < node.length; i++) {
          if (node[i].value === propValue) {
            node[i].selected = !0;
            setDefaultSelected && (node[i].defaultSelected = !0);
            return;
          }
          null !== multiple || node[i].disabled || (multiple = node[i]);
        }
        null !== multiple && (multiple.selected = !0);
      }
    }
    function validateSelectProps(element, props) {
      for (element = 0; element < valuePropNames.length; element++) {
        var propName = valuePropNames[element];
        if (null != props[propName]) {
          var propNameIsArray = isArrayImpl(props[propName]);
          props.multiple && !propNameIsArray
            ? console.error(
                "The `%s` prop supplied to <select> must be an array if `multiple` is true.%s",
                propName,
                getDeclarationErrorAddendum()
              )
            : !props.multiple &&
              propNameIsArray &&
              console.error(
                "The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.%s",
                propName,
                getDeclarationErrorAddendum()
              );
        }
      }
      void 0 === props.value ||
        void 0 === props.defaultValue ||
        didWarnValueDefaultValue ||
        (console.error(
          "Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled select element and remove one of these props. More info: https://react.dev/link/controlled-components"
        ),
        (didWarnValueDefaultValue = !0));
    }
    function validateTextareaProps(element, props) {
      void 0 === props.value ||
        void 0 === props.defaultValue ||
        didWarnValDefaultVal ||
        (console.error(
          "%s contains a textarea with both value and defaultValue props. Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled textarea and remove one of these props. More info: https://react.dev/link/controlled-components",
          getCurrentFiberOwnerNameInDevOrNull() || "A component"
        ),
        (didWarnValDefaultVal = !0));
      null != props.children &&
        null == props.value &&
        console.error(
          "Use the `defaultValue` or `value` props instead of setting children on <textarea>."
        );
    }
    function updateTextarea(element, value, defaultValue) {
      if (
        null != value &&
        ((value = "" + getToStringValue(value)),
        value !== element.value && (element.value = value),
        null == defaultValue)
      ) {
        element.defaultValue !== value && (element.defaultValue = value);
        return;
      }
      element.defaultValue =
        null != defaultValue ? "" + getToStringValue(defaultValue) : "";
    }
    function initTextarea(element, value, defaultValue, children) {
      if (null == value) {
        if (null != children) {
          if (null != defaultValue)
            throw Error(
              "If you supply `defaultValue` on a <textarea>, do not pass children."
            );
          if (isArrayImpl(children)) {
            if (1 < children.length)
              throw Error("<textarea> can only have at most one child.");
            children = children[0];
          }
          defaultValue = children;
        }
        null == defaultValue && (defaultValue = "");
        value = defaultValue;
      }
      defaultValue = getToStringValue(value);
      element.defaultValue = defaultValue;
      children = element.textContent;
      children === defaultValue &&
        "" !== children &&
        null !== children &&
        (element.value = children);
      track(element);
    }
    function findNotableNode(node, indent) {
      return void 0 === node.serverProps &&
        0 === node.serverTail.length &&
        1 === node.children.length &&
        3 < node.distanceFromLeaf &&
        node.distanceFromLeaf > 15 - indent
        ? findNotableNode(node.children[0], indent)
        : node;
    }
    function indentation(indent) {
      return "  " + "  ".repeat(indent);
    }
    function added(indent) {
      return "+ " + "  ".repeat(indent);
    }
    function removed(indent) {
      return "- " + "  ".repeat(indent);
    }
    function describeFiberType(fiber) {
      switch (fiber.tag) {
        case 26:
        case 27:
        case 5:
          return fiber.type;
        case 16:
          return "Lazy";
        case 31:
          return "Activity";
        case 13:
          return "Suspense";
        case 19:
          return "SuspenseList";
        case 0:
        case 15:
          return (fiber = fiber.type), fiber.displayName || fiber.name || null;
        case 11:
          return (
            (fiber = fiber.type.render), fiber.displayName || fiber.name || null
          );
        case 1:
          return (fiber = fiber.type), fiber.displayName || fiber.name || null;
        default:
          return null;
      }
    }
    function describeTextNode(content, maxLength) {
      return needsEscaping.test(content)
        ? ((content = JSON.stringify(content)),
          content.length > maxLength - 2
            ? 8 > maxLength
              ? '{"..."}'
              : "{" + content.slice(0, maxLength - 7) + '..."}'
            : "{" + content + "}")
        : content.length > maxLength
          ? 5 > maxLength
            ? '{"..."}'
            : content.slice(0, maxLength - 3) + "..."
          : content;
    }
    function describeTextDiff(clientText, serverProps, indent) {
      var maxLength = 120 - 2 * indent;
      if (null === serverProps)
        return added(indent) + describeTextNode(clientText, maxLength) + "\n";
      if ("string" === typeof serverProps) {
        for (
          var firstDiff = 0;
          firstDiff < serverProps.length &&
          firstDiff < clientText.length &&
          serverProps.charCodeAt(firstDiff) ===
            clientText.charCodeAt(firstDiff);
          firstDiff++
        );
        firstDiff > maxLength - 8 &&
          10 < firstDiff &&
          ((clientText = "..." + clientText.slice(firstDiff - 8)),
          (serverProps = "..." + serverProps.slice(firstDiff - 8)));
        return (
          added(indent) +
          describeTextNode(clientText, maxLength) +
          "\n" +
          removed(indent) +
          describeTextNode(serverProps, maxLength) +
          "\n"
        );
      }
      return (
        indentation(indent) + describeTextNode(clientText, maxLength) + "\n"
      );
    }
    function objectName(object) {
      return Object.prototype.toString
        .call(object)
        .replace(/^\[object (.*)\]$/, function (m, p0) {
          return p0;
        });
    }
    function describeValue(value, maxLength) {
      switch (typeof value) {
        case "string":
          return (
            (value = JSON.stringify(value)),
            value.length > maxLength
              ? 5 > maxLength
                ? '"..."'
                : value.slice(0, maxLength - 4) + '..."'
              : value
          );
        case "object":
          if (null === value) return "null";
          if (isArrayImpl(value)) return "[...]";
          if (value.$$typeof === REACT_ELEMENT_TYPE)
            return (maxLength = getComponentNameFromType(value.type))
              ? "<" + maxLength + ">"
              : "<...>";
          var name = objectName(value);
          if ("Object" === name) {
            name = "";
            maxLength -= 2;
            for (var propName in value)
              if (value.hasOwnProperty(propName)) {
                var jsonPropName = JSON.stringify(propName);
                jsonPropName !== '"' + propName + '"' &&
                  (propName = jsonPropName);
                maxLength -= propName.length - 2;
                jsonPropName = describeValue(
                  value[propName],
                  15 > maxLength ? maxLength : 15
                );
                maxLength -= jsonPropName.length;
                if (0 > maxLength) {
                  name += "" === name ? "..." : ", ...";
                  break;
                }
                name +=
                  ("" === name ? "" : ",") + propName + ":" + jsonPropName;
              }
            return "{" + name + "}";
          }
          return name;
        case "function":
          return (maxLength = value.displayName || value.name)
            ? "function " + maxLength
            : "function";
        default:
          return String(value);
      }
    }
    function describePropValue(value, maxLength) {
      return "string" !== typeof value || needsEscaping.test(value)
        ? "{" + describeValue(value, maxLength - 2) + "}"
        : value.length > maxLength - 2
          ? 5 > maxLength
            ? '"..."'
            : '"' + value.slice(0, maxLength - 5) + '..."'
          : '"' + value + '"';
    }
    function describeExpandedElement(type, props, rowPrefix) {
      var remainingRowLength = 120 - rowPrefix.length - type.length,
        properties = [],
        propName;
      for (propName in props)
        if (props.hasOwnProperty(propName) && "children" !== propName) {
          var propValue = describePropValue(
            props[propName],
            120 - rowPrefix.length - propName.length - 1
          );
          remainingRowLength -= propName.length + propValue.length + 2;
          properties.push(propName + "=" + propValue);
        }
      return 0 === properties.length
        ? rowPrefix + "<" + type + ">\n"
        : 0 < remainingRowLength
          ? rowPrefix + "<" + type + " " + properties.join(" ") + ">\n"
          : rowPrefix +
            "<" +
            type +
            "\n" +
            rowPrefix +
            "  " +
            properties.join("\n" + rowPrefix + "  ") +
            "\n" +
            rowPrefix +
            ">\n";
    }
    function describePropertiesDiff(clientObject, serverObject, indent) {
      var properties = "",
        remainingServerProperties = assign({}, serverObject),
        propName;
      for (propName in clientObject)
        if (clientObject.hasOwnProperty(propName)) {
          delete remainingServerProperties[propName];
          var maxLength = 120 - 2 * indent - propName.length - 2,
            clientPropValue = describeValue(clientObject[propName], maxLength);
          serverObject.hasOwnProperty(propName)
            ? ((maxLength = describeValue(serverObject[propName], maxLength)),
              (properties +=
                added(indent) + propName + ": " + clientPropValue + "\n"),
              (properties +=
                removed(indent) + propName + ": " + maxLength + "\n"))
            : (properties +=
                added(indent) + propName + ": " + clientPropValue + "\n");
        }
      for (var _propName in remainingServerProperties)
        remainingServerProperties.hasOwnProperty(_propName) &&
          ((clientObject = describeValue(
            remainingServerProperties[_propName],
            120 - 2 * indent - _propName.length - 2
          )),
          (properties +=
            removed(indent) + _propName + ": " + clientObject + "\n"));
      return properties;
    }
    function describeElementDiff(type, clientProps, serverProps, indent) {
      var content = "",
        serverPropNames = new Map();
      for (propName$jscomp$0 in serverProps)
        serverProps.hasOwnProperty(propName$jscomp$0) &&
          serverPropNames.set(
            propName$jscomp$0.toLowerCase(),
            propName$jscomp$0
          );
      if (1 === serverPropNames.size && serverPropNames.has("children"))
        content += describeExpandedElement(
          type,
          clientProps,
          indentation(indent)
        );
      else {
        for (var _propName2 in clientProps)
          if (
            clientProps.hasOwnProperty(_propName2) &&
            "children" !== _propName2
          ) {
            var maxLength$jscomp$0 =
                120 - 2 * (indent + 1) - _propName2.length - 1,
              serverPropName = serverPropNames.get(_propName2.toLowerCase());
            if (void 0 !== serverPropName) {
              serverPropNames.delete(_propName2.toLowerCase());
              var propName$jscomp$0 = clientProps[_propName2];
              serverPropName = serverProps[serverPropName];
              var clientPropValue = describePropValue(
                propName$jscomp$0,
                maxLength$jscomp$0
              );
              maxLength$jscomp$0 = describePropValue(
                serverPropName,
                maxLength$jscomp$0
              );
              "object" === typeof propName$jscomp$0 &&
              null !== propName$jscomp$0 &&
              "object" === typeof serverPropName &&
              null !== serverPropName &&
              "Object" === objectName(propName$jscomp$0) &&
              "Object" === objectName(serverPropName) &&
              (2 < Object.keys(propName$jscomp$0).length ||
                2 < Object.keys(serverPropName).length ||
                -1 < clientPropValue.indexOf("...") ||
                -1 < maxLength$jscomp$0.indexOf("..."))
                ? (content +=
                    indentation(indent + 1) +
                    _propName2 +
                    "={{\n" +
                    describePropertiesDiff(
                      propName$jscomp$0,
                      serverPropName,
                      indent + 2
                    ) +
                    indentation(indent + 1) +
                    "}}\n")
                : ((content +=
                    added(indent + 1) +
                    _propName2 +
                    "=" +
                    clientPropValue +
                    "\n"),
                  (content +=
                    removed(indent + 1) +
                    _propName2 +
                    "=" +
                    maxLength$jscomp$0 +
                    "\n"));
            } else
              content +=
                indentation(indent + 1) +
                _propName2 +
                "=" +
                describePropValue(clientProps[_propName2], maxLength$jscomp$0) +
                "\n";
          }
        serverPropNames.forEach(function (propName) {
          if ("children" !== propName) {
            var maxLength = 120 - 2 * (indent + 1) - propName.length - 1;
            content +=
              removed(indent + 1) +
              propName +
              "=" +
              describePropValue(serverProps[propName], maxLength) +
              "\n";
          }
        });
        content =
          "" === content
            ? indentation(indent) + "<" + type + ">\n"
            : indentation(indent) +
              "<" +
              type +
              "\n" +
              content +
              indentation(indent) +
              ">\n";
      }
      type = serverProps.children;
      clientProps = clientProps.children;
      if (
        "string" === typeof type ||
        "number" === typeof type ||
        "bigint" === typeof type
      ) {
        serverPropNames = "";
        if (
          "string" === typeof clientProps ||
          "number" === typeof clientProps ||
          "bigint" === typeof clientProps
        )
          serverPropNames = "" + clientProps;
        content += describeTextDiff(serverPropNames, "" + type, indent + 1);
      } else if (
        "string" === typeof clientProps ||
        "number" === typeof clientProps ||
        "bigint" === typeof clientProps
      )
        content =
          null == type
            ? content + describeTextDiff("" + clientProps, null, indent + 1)
            : content + describeTextDiff("" + clientProps, void 0, indent + 1);
      return content;
    }
    function describeSiblingFiber(fiber, indent) {
      var type = describeFiberType(fiber);
      if (null === type) {
        type = "";
        for (fiber = fiber.child; fiber; )
          (type += describeSiblingFiber(fiber, indent)),
            (fiber = fiber.sibling);
        return type;
      }
      return indentation(indent) + "<" + type + ">\n";
    }
    function describeNode(node, indent) {
      var skipToNode = findNotableNode(node, indent);
      if (
        skipToNode !== node &&
        (1 !== node.children.length || node.children[0] !== skipToNode)
      )
        return (
          indentation(indent) + "...\n" + describeNode(skipToNode, indent + 1)
        );
      skipToNode = "";
      var debugInfo = node.fiber._debugInfo;
      if (debugInfo)
        for (var i = 0; i < debugInfo.length; i++) {
          var serverComponentName = debugInfo[i].name;
          "string" === typeof serverComponentName &&
            ((skipToNode +=
              indentation(indent) + "<" + serverComponentName + ">\n"),
            indent++);
        }
      debugInfo = "";
      i = node.fiber.pendingProps;
      if (6 === node.fiber.tag)
        (debugInfo = describeTextDiff(i, node.serverProps, indent)), indent++;
      else if (
        ((serverComponentName = describeFiberType(node.fiber)),
        null !== serverComponentName)
      )
        if (void 0 === node.serverProps) {
          debugInfo = indent;
          var maxLength = 120 - 2 * debugInfo - serverComponentName.length - 2,
            content = "";
          for (propName in i)
            if (i.hasOwnProperty(propName) && "children" !== propName) {
              var propValue = describePropValue(i[propName], 15);
              maxLength -= propName.length + propValue.length + 2;
              if (0 > maxLength) {
                content += " ...";
                break;
              }
              content += " " + propName + "=" + propValue;
            }
          debugInfo =
            indentation(debugInfo) +
            "<" +
            serverComponentName +
            content +
            ">\n";
          indent++;
        } else
          null === node.serverProps
            ? ((debugInfo = describeExpandedElement(
                serverComponentName,
                i,
                added(indent)
              )),
              indent++)
            : "string" === typeof node.serverProps
              ? console.error(
                  "Should not have matched a non HostText fiber to a Text node. This is a bug in React."
                )
              : ((debugInfo = describeElementDiff(
                  serverComponentName,
                  i,
                  node.serverProps,
                  indent
                )),
                indent++);
      var propName = "";
      i = node.fiber.child;
      for (
        serverComponentName = 0;
        i && serverComponentName < node.children.length;

      )
        (maxLength = node.children[serverComponentName]),
          maxLength.fiber === i
            ? ((propName += describeNode(maxLength, indent)),
              serverComponentName++)
            : (propName += describeSiblingFiber(i, indent)),
          (i = i.sibling);
      i &&
        0 < node.children.length &&
        (propName += indentation(indent) + "...\n");
      i = node.serverTail;
      null === node.serverProps && indent--;
      for (node = 0; node < i.length; node++)
        (serverComponentName = i[node]),
          (propName =
            "string" === typeof serverComponentName
              ? propName +
                (removed(indent) +
                  describeTextNode(serverComponentName, 120 - 2 * indent) +
                  "\n")
              : propName +
                describeExpandedElement(
                  serverComponentName.type,
                  serverComponentName.props,
                  removed(indent)
                ));
      return skipToNode + debugInfo + propName;
    }
    function describeDiff(rootNode) {
      try {
        return "\n\n" + describeNode(rootNode, 0);
      } catch (x) {
        return "";
      }
    }
    function describeAncestors(ancestor, child, props) {
      for (var fiber = child, node = null, distanceFromLeaf = 0; fiber; )
        fiber === ancestor && (distanceFromLeaf = 0),
          (node = {
            fiber: fiber,
            children: null !== node ? [node] : [],
            serverProps:
              fiber === child ? props : fiber === ancestor ? null : void 0,
            serverTail: [],
            distanceFromLeaf: distanceFromLeaf
          }),
          distanceFromLeaf++,
          (fiber = fiber.return);
      return null !== node ? describeDiff(node).replaceAll(/^[+-]/gm, ">") : "";
    }
    function updatedAncestorInfoDev(oldInfo, tag) {
      var ancestorInfo = assign({}, oldInfo || emptyAncestorInfoDev),
        info = { tag: tag };
      -1 !== inScopeTags.indexOf(tag) &&
        ((ancestorInfo.aTagInScope = null),
        (ancestorInfo.buttonTagInScope = null),
        (ancestorInfo.nobrTagInScope = null));
      -1 !== buttonScopeTags.indexOf(tag) &&
        (ancestorInfo.pTagInButtonScope = null);
      -1 !== specialTags.indexOf(tag) &&
        "address" !== tag &&
        "div" !== tag &&
        "p" !== tag &&
        ((ancestorInfo.listItemTagAutoclosing = null),
        (ancestorInfo.dlItemTagAutoclosing = null));
      ancestorInfo.current = info;
      "form" === tag && (ancestorInfo.formTag = info);
      "a" === tag && (ancestorInfo.aTagInScope = info);
      "button" === tag && (ancestorInfo.buttonTagInScope = info);
      "nobr" === tag && (ancestorInfo.nobrTagInScope = info);
      "p" === tag && (ancestorInfo.pTagInButtonScope = info);
      "li" === tag && (ancestorInfo.listItemTagAutoclosing = info);
      if ("dd" === tag || "dt" === tag)
        ancestorInfo.dlItemTagAutoclosing = info;
      "#document" === tag || "html" === tag
        ? (ancestorInfo.containerTagInScope = null)
        : ancestorInfo.containerTagInScope ||
          (ancestorInfo.containerTagInScope = info);
      null !== oldInfo ||
      ("#document" !== tag && "html" !== tag && "body" !== tag)
        ? !0 === ancestorInfo.implicitRootScope &&
          (ancestorInfo.implicitRootScope = !1)
        : (ancestorInfo.implicitRootScope = !0);
      return ancestorInfo;
    }
    function isTagValidWithParent(tag, parentTag, implicitRootScope) {
      switch (parentTag) {
        case "select":
          return (
            "hr" === tag ||
            "option" === tag ||
            "optgroup" === tag ||
            "script" === tag ||
            "template" === tag ||
            "#text" === tag
          );
        case "optgroup":
          return "option" === tag || "#text" === tag;
        case "option":
          return "#text" === tag;
        case "tr":
          return (
            "th" === tag ||
            "td" === tag ||
            "style" === tag ||
            "script" === tag ||
            "template" === tag
          );
        case "tbody":
        case "thead":
        case "tfoot":
          return (
            "tr" === tag ||
            "style" === tag ||
            "script" === tag ||
            "template" === tag
          );
        case "colgroup":
          return "col" === tag || "template" === tag;
        case "table":
          return (
            "caption" === tag ||
            "colgroup" === tag ||
            "tbody" === tag ||
            "tfoot" === tag ||
            "thead" === tag ||
            "style" === tag ||
            "script" === tag ||
            "template" === tag
          );
        case "head":
          return (
            "base" === tag ||
            "basefont" === tag ||
            "bgsound" === tag ||
            "link" === tag ||
            "meta" === tag ||
            "title" === tag ||
            "noscript" === tag ||
            "noframes" === tag ||
            "style" === tag ||
            "script" === tag ||
            "template" === tag
          );
        case "html":
          if (implicitRootScope) break;
          return "head" === tag || "body" === tag || "frameset" === tag;
        case "frameset":
          return "frame" === tag;
        case "#document":
          if (!implicitRootScope) return "html" === tag;
      }
      switch (tag) {
        case "h1":
        case "h2":
        case "h3":
        case "h4":
        case "h5":
        case "h6":
          return (
            "h1" !== parentTag &&
            "h2" !== parentTag &&
            "h3" !== parentTag &&
            "h4" !== parentTag &&
            "h5" !== parentTag &&
            "h6" !== parentTag
          );
        case "rp":
        case "rt":
          return -1 === impliedEndTags.indexOf(parentTag);
        case "caption":
        case "col":
        case "colgroup":
        case "frameset":
        case "frame":
        case "tbody":
        case "td":
        case "tfoot":
        case "th":
        case "thead":
        case "tr":
          return null == parentTag;
        case "head":
          return implicitRootScope || null === parentTag;
        case "html":
          return (
            (implicitRootScope && "#document" === parentTag) ||
            null === parentTag
          );
        case "body":
          return (
            (implicitRootScope &&
              ("#document" === parentTag || "html" === parentTag)) ||
            null === parentTag
          );
      }
      return !0;
    }
    function findInvalidAncestorForTag(tag, ancestorInfo) {
      switch (tag) {
        case "address":
        case "article":
        case "aside":
        case "blockquote":
        case "center":
        case "details":
        case "dialog":
        case "dir":
        case "div":
        case "dl":
        case "fieldset":
        case "figcaption":
        case "figure":
        case "footer":
        case "header":
        case "hgroup":
        case "main":
        case "menu":
        case "nav":
        case "ol":
        case "p":
        case "section":
        case "summary":
        case "ul":
        case "pre":
        case "listing":
        case "table":
        case "hr":
        case "xmp":
        case "h1":
        case "h2":
        case "h3":
        case "h4":
        case "h5":
        case "h6":
          return ancestorInfo.pTagInButtonScope;
        case "form":
          return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;
        case "li":
          return ancestorInfo.listItemTagAutoclosing;
        case "dd":
        case "dt":
          return ancestorInfo.dlItemTagAutoclosing;
        case "button":
          return ancestorInfo.buttonTagInScope;
        case "a":
          return ancestorInfo.aTagInScope;
        case "nobr":
          return ancestorInfo.nobrTagInScope;
      }
      return null;
    }
    function findAncestor(parent, tagName) {
      for (; parent; ) {
        switch (parent.tag) {
          case 5:
          case 26:
          case 27:
            if (parent.type === tagName) return parent;
        }
        parent = parent.return;
      }
      return null;
    }
    function validateDOMNesting(childTag, ancestorInfo) {
      ancestorInfo = ancestorInfo || emptyAncestorInfoDev;
      var parentInfo = ancestorInfo.current;
      ancestorInfo = (parentInfo = isTagValidWithParent(
        childTag,
        parentInfo && parentInfo.tag,
        ancestorInfo.implicitRootScope
      )
        ? null
        : parentInfo)
        ? null
        : findInvalidAncestorForTag(childTag, ancestorInfo);
      ancestorInfo = parentInfo || ancestorInfo;
      if (!ancestorInfo) return !0;
      var ancestorTag = ancestorInfo.tag;
      ancestorInfo = String(!!parentInfo) + "|" + childTag + "|" + ancestorTag;
      if (didWarn[ancestorInfo]) return !1;
      didWarn[ancestorInfo] = !0;
      var ancestor = (ancestorInfo = current)
          ? findAncestor(ancestorInfo.return, ancestorTag)
          : null,
        ancestorDescription =
          null !== ancestorInfo && null !== ancestor
            ? describeAncestors(ancestor, ancestorInfo, null)
            : "",
        tagDisplayName = "<" + childTag + ">";
      parentInfo
        ? ((parentInfo = ""),
          "table" === ancestorTag &&
            "tr" === childTag &&
            (parentInfo +=
              " Add a <tbody>, <thead> or <tfoot> to your code to match the DOM tree generated by the browser."),
          console.error(
            "In HTML, %s cannot be a child of <%s>.%s\nThis will cause a hydration error.%s",
            tagDisplayName,
            ancestorTag,
            parentInfo,
            ancestorDescription
          ))
        : console.error(
            "In HTML, %s cannot be a descendant of <%s>.\nThis will cause a hydration error.%s",
            tagDisplayName,
            ancestorTag,
            ancestorDescription
          );
      ancestorInfo &&
        ((childTag = ancestorInfo.return),
        null === ancestor ||
          null === childTag ||
          (ancestor === childTag &&
            childTag._debugOwner === ancestorInfo._debugOwner) ||
          runWithFiberInDEV(ancestor, function () {
            console.error(
              "<%s> cannot contain a nested %s.\nSee this log for the ancestor stack trace.",
              ancestorTag,
              tagDisplayName
            );
          }));
      return !1;
    }
    function validateTextNesting(childText, parentTag, implicitRootScope) {
      if (implicitRootScope || isTagValidWithParent("#text", parentTag, !1))
        return !0;
      implicitRootScope = "#text|" + parentTag;
      if (didWarn[implicitRootScope]) return !1;
      didWarn[implicitRootScope] = !0;
      var ancestor = (implicitRootScope = current)
        ? findAncestor(implicitRootScope, parentTag)
        : null;
      implicitRootScope =
        null !== implicitRootScope && null !== ancestor
          ? describeAncestors(
              ancestor,
              implicitRootScope,
              6 !== implicitRootScope.tag ? { children: null } : null
            )
          : "";
      /\S/.test(childText)
        ? console.error(
            "In HTML, text nodes cannot be a child of <%s>.\nThis will cause a hydration error.%s",
            parentTag,
            implicitRootScope
          )
        : console.error(
            "In HTML, whitespace text nodes cannot be a child of <%s>. Make sure you don't have any extra whitespace between tags on each line of your source code.\nThis will cause a hydration error.%s",
            parentTag,
            implicitRootScope
          );
      return !1;
    }
    function setTextContent(node, text) {
      if (text) {
        var firstChild = node.firstChild;
        if (
          firstChild &&
          firstChild === node.lastChild &&
          3 === firstChild.nodeType
        ) {
          firstChild.nodeValue = text;
          return;
        }
      }
      node.textContent = text;
    }
    function camelize(string) {
      return string.replace(hyphenPattern, function (_, character) {
        return character.toUpperCase();
      });
    }
    function setValueForStyle(style, styleName, value) {
      var isCustomProperty = 0 === styleName.indexOf("--");
      isCustomProperty ||
        (-1 < styleName.indexOf("-")
          ? (warnedStyleNames.hasOwnProperty(styleName) &&
              warnedStyleNames[styleName]) ||
            ((warnedStyleNames[styleName] = !0),
            console.error(
              "Unsupported style property %s. Did you mean %s?",
              styleName,
              camelize(styleName.replace(msPattern, "ms-"))
            ))
          : badVendoredStyleNamePattern.test(styleName)
            ? (warnedStyleNames.hasOwnProperty(styleName) &&
                warnedStyleNames[styleName]) ||
              ((warnedStyleNames[styleName] = !0),
              console.error(
                "Unsupported vendor-prefixed style property %s. Did you mean %s?",
                styleName,
                styleName.charAt(0).toUpperCase() + styleName.slice(1)
              ))
            : !badStyleValueWithSemicolonPattern.test(value) ||
              (warnedStyleValues.hasOwnProperty(value) &&
                warnedStyleValues[value]) ||
              ((warnedStyleValues[value] = !0),
              console.error(
                'Style property values shouldn\'t contain a semicolon. Try "%s: %s" instead.',
                styleName,
                value.replace(badStyleValueWithSemicolonPattern, "")
              )),
        "number" === typeof value &&
          (isNaN(value)
            ? warnedForNaNValue ||
              ((warnedForNaNValue = !0),
              console.error(
                "`NaN` is an invalid value for the `%s` css style property.",
                styleName
              ))
            : isFinite(value) ||
              warnedForInfinityValue ||
              ((warnedForInfinityValue = !0),
              console.error(
                "`Infinity` is an invalid value for the `%s` css style property.",
                styleName
              ))));
      null == value || "boolean" === typeof value || "" === value
        ? isCustomProperty
          ? style.setProperty(styleName, "")
          : "float" === styleName
            ? (style.cssFloat = "")
            : (style[styleName] = "")
        : isCustomProperty
          ? style.setProperty(styleName, value)
          : "number" !== typeof value ||
              0 === value ||
              unitlessNumbers.has(styleName)
            ? "float" === styleName
              ? (style.cssFloat = value)
              : (checkCSSPropertyStringCoercion(value, styleName),
                (style[styleName] = ("" + value).trim()))
            : (style[styleName] = value + "px");
    }
    function setValueForStyles(node, styles, prevStyles) {
      if (null != styles && "object" !== typeof styles)
        throw Error(
          "The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX."
        );
      styles && Object.freeze(styles);
      node = node.style;
      if (null != prevStyles) {
        if (styles) {
          var expandedUpdates = {};
          if (prevStyles)
            for (var key in prevStyles)
              if (prevStyles.hasOwnProperty(key) && !styles.hasOwnProperty(key))
                for (
                  var longhands = shorthandToLonghand[key] || [key], i = 0;
                  i < longhands.length;
                  i++
                )
                  expandedUpdates[longhands[i]] = key;
          for (var _key in styles)
            if (
              styles.hasOwnProperty(_key) &&
              (!prevStyles || prevStyles[_key] !== styles[_key])
            )
              for (
                key = shorthandToLonghand[_key] || [_key], longhands = 0;
                longhands < key.length;
                longhands++
              )
                expandedUpdates[key[longhands]] = _key;
          _key = {};
          for (var key$jscomp$0 in styles)
            for (
              key = shorthandToLonghand[key$jscomp$0] || [key$jscomp$0],
                longhands = 0;
              longhands < key.length;
              longhands++
            )
              _key[key[longhands]] = key$jscomp$0;
          key$jscomp$0 = {};
          for (var _key2 in expandedUpdates)
            if (
              ((key = expandedUpdates[_key2]),
              (longhands = _key[_key2]) &&
                key !== longhands &&
                ((i = key + "," + longhands), !key$jscomp$0[i]))
            ) {
              key$jscomp$0[i] = !0;
              i = console;
              var value = styles[key];
              i.error.call(
                i,
                "%s a style property during rerender (%s) when a conflicting property is set (%s) can lead to styling bugs. To avoid this, don't mix shorthand and non-shorthand properties for the same value; instead, replace the shorthand with separate values.",
                null == value || "boolean" === typeof value || "" === value
                  ? "Removing"
                  : "Updating",
                key,
                longhands
              );
            }
        }
        for (var styleName in prevStyles)
          !prevStyles.hasOwnProperty(styleName) ||
            (null != styles && styles.hasOwnProperty(styleName)) ||
            (0 === styleName.indexOf("--")
              ? node.setProperty(styleName, "")
              : "float" === styleName
                ? (node.cssFloat = "")
                : (node[styleName] = ""));
        for (var _styleName in styles)
          (_key2 = styles[_styleName]),
            styles.hasOwnProperty(_styleName) &&
              prevStyles[_styleName] !== _key2 &&
              setValueForStyle(node, _styleName, _key2);
      } else
        for (expandedUpdates in styles)
          styles.hasOwnProperty(expandedUpdates) &&
            setValueForStyle(node, expandedUpdates, styles[expandedUpdates]);
    }
    function isCustomElement(tagName) {
      if (-1 === tagName.indexOf("-")) return !1;
      switch (tagName) {
        case "annotation-xml":
        case "color-profile":
        case "font-face":
        case "font-face-src":
        case "font-face-uri":
        case "font-face-format":
        case "font-face-name":
        case "missing-glyph":
          return !1;
        default:
          return !0;
      }
    }
    function getAttributeAlias(name) {
      return aliases.get(name) || name;
    }
    function validateProperty$1(tagName, name) {
      if (
        hasOwnProperty.call(warnedProperties$1, name) &&
        warnedProperties$1[name]
      )
        return !0;
      if (rARIACamel$1.test(name)) {
        tagName = "aria-" + name.slice(4).toLowerCase();
        tagName = ariaProperties.hasOwnProperty(tagName) ? tagName : null;
        if (null == tagName)
          return (
            console.error(
              "Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.",
              name
            ),
            (warnedProperties$1[name] = !0)
          );
        if (name !== tagName)
          return (
            console.error(
              "Invalid ARIA attribute `%s`. Did you mean `%s`?",
              name,
              tagName
            ),
            (warnedProperties$1[name] = !0)
          );
      }
      if (rARIA$1.test(name)) {
        tagName = name.toLowerCase();
        tagName = ariaProperties.hasOwnProperty(tagName) ? tagName : null;
        if (null == tagName) return (warnedProperties$1[name] = !0), !1;
        name !== tagName &&
          (console.error(
            "Unknown ARIA attribute `%s`. Did you mean `%s`?",
            name,
            tagName
          ),
          (warnedProperties$1[name] = !0));
      }
      return !0;
    }
    function validateProperties$2(type, props) {
      var invalidProps = [],
        key;
      for (key in props)
        validateProperty$1(type, key) || invalidProps.push(key);
      props = invalidProps
        .map(function (prop) {
          return "`" + prop + "`";
        })
        .join(", ");
      1 === invalidProps.length
        ? console.error(
            "Invalid aria prop %s on <%s> tag. For details, see https://react.dev/link/invalid-aria-props",
            props,
            type
          )
        : 1 < invalidProps.length &&
          console.error(
            "Invalid aria props %s on <%s> tag. For details, see https://react.dev/link/invalid-aria-props",
            props,
            type
          );
    }
    function validateProperty(tagName, name, value, eventRegistry) {
      if (hasOwnProperty.call(warnedProperties, name) && warnedProperties[name])
        return !0;
      var lowerCasedName = name.toLowerCase();
      if ("onfocusin" === lowerCasedName || "onfocusout" === lowerCasedName)
        return (
          console.error(
            "React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React."
          ),
          (warnedProperties[name] = !0)
        );
      if (
        "function" === typeof value &&
        (("form" === tagName && "action" === name) ||
          ("input" === tagName && "formAction" === name) ||
          ("button" === tagName && "formAction" === name))
      )
        return !0;
      if (null != eventRegistry) {
        tagName = eventRegistry.possibleRegistrationNames;
        if (eventRegistry.registrationNameDependencies.hasOwnProperty(name))
          return !0;
        eventRegistry = tagName.hasOwnProperty(lowerCasedName)
          ? tagName[lowerCasedName]
          : null;
        if (null != eventRegistry)
          return (
            console.error(
              "Invalid event handler property `%s`. Did you mean `%s`?",
              name,
              eventRegistry
            ),
            (warnedProperties[name] = !0)
          );
        if (EVENT_NAME_REGEX.test(name))
          return (
            console.error(
              "Unknown event handler property `%s`. It will be ignored.",
              name
            ),
            (warnedProperties[name] = !0)
          );
      } else if (EVENT_NAME_REGEX.test(name))
        return (
          INVALID_EVENT_NAME_REGEX.test(name) &&
            console.error(
              "Invalid event handler property `%s`. React events use the camelCase naming convention, for example `onClick`.",
              name
            ),
          (warnedProperties[name] = !0)
        );
      if (rARIA.test(name) || rARIACamel.test(name)) return !0;
      if ("innerhtml" === lowerCasedName)
        return (
          console.error(
            "Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`."
          ),
          (warnedProperties[name] = !0)
        );
      if ("aria" === lowerCasedName)
        return (
          console.error(
            "The `aria` attribute is reserved for future use in React. Pass individual `aria-` attributes instead."
          ),
          (warnedProperties[name] = !0)
        );
      if (
        "is" === lowerCasedName &&
        null !== value &&
        void 0 !== value &&
        "string" !== typeof value
      )
        return (
          console.error(
            "Received a `%s` for a string attribute `is`. If this is expected, cast the value to a string.",
            typeof value
          ),
          (warnedProperties[name] = !0)
        );
      if ("number" === typeof value && isNaN(value))
        return (
          console.error(
            "Received NaN for the `%s` attribute. If this is expected, cast the value to a string.",
            name
          ),
          (warnedProperties[name] = !0)
        );
      if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
        if (
          ((lowerCasedName = possibleStandardNames[lowerCasedName]),
          lowerCasedName !== name)
        )
          return (
            console.error(
              "Invalid DOM property `%s`. Did you mean `%s`?",
              name,
              lowerCasedName
            ),
            (warnedProperties[name] = !0)
          );
      } else if (name !== lowerCasedName)
        return (
          console.error(
            "React does not recognize the `%s` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `%s` instead. If you accidentally passed it from a parent component, remove it from the DOM element.",
            name,
            lowerCasedName
          ),
          (warnedProperties[name] = !0)
        );
      switch (name) {
        case "dangerouslySetInnerHTML":
        case "children":
        case "style":
        case "suppressContentEditableWarning":
        case "suppressHydrationWarning":
        case "defaultValue":
        case "defaultChecked":
        case "innerHTML":
        case "ref":
          return !0;
        case "innerText":
        case "textContent":
          return !0;
      }
      switch (typeof value) {
        case "boolean":
          switch (name) {
            case "autoFocus":
            case "checked":
            case "multiple":
            case "muted":
            case "selected":
            case "contentEditable":
            case "spellCheck":
            case "draggable":
            case "value":
            case "autoReverse":
            case "externalResourcesRequired":
            case "focusable":
            case "preserveAlpha":
            case "allowFullScreen":
            case "async":
            case "autoPlay":
            case "controls":
            case "default":
            case "defer":
            case "disabled":
            case "disablePictureInPicture":
            case "disableRemotePlayback":
            case "formNoValidate":
            case "hidden":
            case "loop":
            case "noModule":
            case "noValidate":
            case "open":
            case "playsInline":
            case "readOnly":
            case "required":
            case "reversed":
            case "scoped":
            case "seamless":
            case "itemScope":
            case "capture":
            case "download":
            case "inert":
              return !0;
            default:
              lowerCasedName = name.toLowerCase().slice(0, 5);
              if ("data-" === lowerCasedName || "aria-" === lowerCasedName)
                return !0;
              value
                ? console.error(
                    'Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.',
                    value,
                    name,
                    name,
                    value,
                    name
                  )
                : console.error(
                    'Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.',
                    value,
                    name,
                    name,
                    value,
                    name,
                    name,
                    name
                  );
              return (warnedProperties[name] = !0);
          }
        case "function":
        case "symbol":
          return (warnedProperties[name] = !0), !1;
        case "string":
          if ("false" === value || "true" === value) {
            switch (name) {
              case "checked":
              case "selected":
              case "multiple":
              case "muted":
              case "allowFullScreen":
              case "async":
              case "autoPlay":
              case "controls":
              case "default":
              case "defer":
              case "disabled":
              case "disablePictureInPicture":
              case "disableRemotePlayback":
              case "formNoValidate":
              case "hidden":
              case "loop":
              case "noModule":
              case "noValidate":
              case "open":
              case "playsInline":
              case "readOnly":
              case "required":
              case "reversed":
              case "scoped":
              case "seamless":
              case "itemScope":
              case "inert":
                break;
              default:
                return !0;
            }
            console.error(
              "Received the string `%s` for the boolean attribute `%s`. %s Did you mean %s={%s}?",
              value,
              name,
              "false" === value
                ? "The browser will interpret it as a truthy value."
                : 'Although this works, it will not work as expected if you pass the string "false".',
              name,
              value
            );
            warnedProperties[name] = !0;
          }
      }
      return !0;
    }
    function warnUnknownProperties(type, props, eventRegistry) {
      var unknownProps = [],
        key;
      for (key in props)
        validateProperty(type, key, props[key], eventRegistry) ||
          unknownProps.push(key);
      props = unknownProps
        .map(function (prop) {
          return "`" + prop + "`";
        })
        .join(", ");
      1 === unknownProps.length
        ? console.error(
            "Invalid value for prop %s on <%s> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://react.dev/link/attribute-behavior ",
            props,
            type
          )
        : 1 < unknownProps.length &&
          console.error(
            "Invalid values for props %s on <%s> tag. Either remove them from the element, or pass a string or number value to keep them in the DOM. For details, see https://react.dev/link/attribute-behavior ",
            props,
            type
          );
    }
    function sanitizeURL(url) {
      return isJavaScriptProtocol.test("" + url)
        ? "javascript:throw new Error('React has blocked a javascript: URL as a security precaution.')"
        : url;
    }
    function noop$1() {}
    function getEventTarget(nativeEvent) {
      nativeEvent = nativeEvent.target || nativeEvent.srcElement || window;
      nativeEvent.correspondingUseElement &&
        (nativeEvent = nativeEvent.correspondingUseElement);
      return 3 === nativeEvent.nodeType ? nativeEvent.parentNode : nativeEvent;
    }
    function restoreStateOfTarget(target) {
      var internalInstance = getInstanceFromNode(target);
      if (internalInstance && (target = internalInstance.stateNode)) {
        var props = target[internalPropsKey] || null;
        a: switch (
          ((target = internalInstance.stateNode), internalInstance.type)
        ) {
          case "input":
            updateInput(
              target,
              props.value,
              props.defaultValue,
              props.defaultValue,
              props.checked,
              props.defaultChecked,
              props.type,
              props.name
            );
            internalInstance = props.name;
            if ("radio" === props.type && null != internalInstance) {
              for (props = target; props.parentNode; ) props = props.parentNode;
              checkAttributeStringCoercion(internalInstance, "name");
              props = props.querySelectorAll(
                'input[name="' +
                  escapeSelectorAttributeValueInsideDoubleQuotes(
                    "" + internalInstance
                  ) +
                  '"][type="radio"]'
              );
              for (
                internalInstance = 0;
                internalInstance < props.length;
                internalInstance++
              ) {
                var otherNode = props[internalInstance];
                if (otherNode !== target && otherNode.form === target.form) {
                  var otherProps = otherNode[internalPropsKey] || null;
                  if (!otherProps)
                    throw Error(
                      "ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported."
                    );
                  updateInput(
                    otherNode,
                    otherProps.value,
                    otherProps.defaultValue,
                    otherProps.defaultValue,
                    otherProps.checked,
                    otherProps.defaultChecked,
                    otherProps.type,
                    otherProps.name
                  );
                }
              }
              for (
                internalInstance = 0;
                internalInstance < props.length;
                internalInstance++
              )
                (otherNode = props[internalInstance]),
                  otherNode.form === target.form &&
                    updateValueIfChanged(otherNode);
            }
            break a;
          case "textarea":
            updateTextarea(target, props.value, props.defaultValue);
            break a;
          case "select":
            (internalInstance = props.value),
              null != internalInstance &&
                updateOptions(target, !!props.multiple, internalInstance, !1);
        }
      }
    }
    function batchedUpdates$1(fn, a, b) {
      if (isInsideEventHandler) return fn(a, b);
      isInsideEventHandler = !0;
      try {
        var JSCompiler_inline_result = fn(a);
        return JSCompiler_inline_result;
      } finally {
        if (
          ((isInsideEventHandler = !1),
          null !== restoreTarget || null !== restoreQueue)
        )
          if (
            (flushSyncWork$1(),
            restoreTarget &&
              ((a = restoreTarget),
              (fn = restoreQueue),
              (restoreQueue = restoreTarget = null),
              restoreStateOfTarget(a),
              fn))
          )
            for (a = 0; a < fn.length; a++) restoreStateOfTarget(fn[a]);
      }
    }
    function getListener(inst, registrationName) {
      var stateNode = inst.stateNode;
      if (null === stateNode) return null;
      var props = stateNode[internalPropsKey] || null;
      if (null === props) return null;
      stateNode = props[registrationName];
      a: switch (registrationName) {
        case "onClick":
        case "onClickCapture":
        case "onDoubleClick":
        case "onDoubleClickCapture":
        case "onMouseDown":
        case "onMouseDownCapture":
        case "onMouseMove":
        case "onMouseMoveCapture":
        case "onMouseUp":
        case "onMouseUpCapture":
        case "onMouseEnter":
          (props = !props.disabled) ||
            ((inst = inst.type),
            (props = !(
              "button" === inst ||
              "input" === inst ||
              "select" === inst ||
              "textarea" === inst
            )));
          inst = !props;
          break a;
        default:
          inst = !1;
      }
      if (inst) return null;
      if (stateNode && "function" !== typeof stateNode)
        throw Error(
          "Expected `" +
            registrationName +
            "` listener to be a function, instead got a value of `" +
            typeof stateNode +
            "` type."
        );
      return stateNode;
    }
    function getData() {
      if (fallbackText) return fallbackText;
      var start,
        startValue = startText,
        startLength = startValue.length,
        end,
        endValue = "value" in root ? root.value : root.textContent,
        endLength = endValue.length;
      for (
        start = 0;
        start < startLength && startValue[start] === endValue[start];
        start++
      );
      var minEnd = startLength - start;
      for (
        end = 1;
        end <= minEnd &&
        startValue[startLength - end] === endValue[endLength - end];
        end++
      );
      return (fallbackText = endValue.slice(start, 1 < end ? 1 - end : void 0));
    }
    function getEventCharCode(nativeEvent) {
      var keyCode = nativeEvent.keyCode;
      "charCode" in nativeEvent
        ? ((nativeEvent = nativeEvent.charCode),
          0 === nativeEvent && 13 === keyCode && (nativeEvent = 13))
        : (nativeEvent = keyCode);
      10 === nativeEvent && (nativeEvent = 13);
      return 32 <= nativeEvent || 13 === nativeEvent ? nativeEvent : 0;
    }
    function functionThatReturnsTrue() {
      return !0;
    }
    function functionThatReturnsFalse() {
      return !1;
    }
    function createSyntheticEvent(Interface) {
      function SyntheticBaseEvent(
        reactName,
        reactEventType,
        targetInst,
        nativeEvent,
        nativeEventTarget
      ) {
        this._reactName = reactName;
        this._targetInst = targetInst;
        this.type = reactEventType;
        this.nativeEvent = nativeEvent;
        this.target = nativeEventTarget;
        this.currentTarget = null;
        for (var propName in Interface)
          Interface.hasOwnProperty(propName) &&
            ((reactName = Interface[propName]),
            (this[propName] = reactName
              ? reactName(nativeEvent)
              : nativeEvent[propName]));
        this.isDefaultPrevented = (
          null != nativeEvent.defaultPrevented
            ? nativeEvent.defaultPrevented
            : !1 === nativeEvent.returnValue
        )
          ? functionThatReturnsTrue
          : functionThatReturnsFalse;
        this.isPropagationStopped = functionThatReturnsFalse;
        return this;
      }
      assign(SyntheticBaseEvent.prototype, {
        preventDefault: function () {
          this.defaultPrevented = !0;
          var event = this.nativeEvent;
          event &&
            (event.preventDefault
              ? event.preventDefault()
              : "unknown" !== typeof event.returnValue &&
                (event.returnValue = !1),
            (this.isDefaultPrevented = functionThatReturnsTrue));
        },
        stopPropagation: function () {
          var event = this.nativeEvent;
          event &&
            (event.stopPropagation
              ? event.stopPropagation()
              : "unknown" !== typeof event.cancelBubble &&
                (event.cancelBubble = !0),
            (this.isPropagationStopped = functionThatReturnsTrue));
        },
        persist: function () {},
        isPersistent: functionThatReturnsTrue
      });
      return SyntheticBaseEvent;
    }
    function modifierStateGetter(keyArg) {
      var nativeEvent = this.nativeEvent;
      return nativeEvent.getModifierState
        ? nativeEvent.getModifierState(keyArg)
        : (keyArg = modifierKeyToProp[keyArg])
          ? !!nativeEvent[keyArg]
          : !1;
    }
    function getEventModifierState() {
      return modifierStateGetter;
    }
    function isFallbackCompositionEnd(domEventName, nativeEvent) {
      switch (domEventName) {
        case "keyup":
          return -1 !== END_KEYCODES.indexOf(nativeEvent.keyCode);
        case "keydown":
          return nativeEvent.keyCode !== START_KEYCODE;
        case "keypress":
        case "mousedown":
        case "focusout":
          return !0;
        default:
          return !1;
      }
    }
    function getDataFromCustomEvent(nativeEvent) {
      nativeEvent = nativeEvent.detail;
      return "object" === typeof nativeEvent && "data" in nativeEvent
        ? nativeEvent.data
        : null;
    }
    function getNativeBeforeInputChars(domEventName, nativeEvent) {
      switch (domEventName) {
        case "compositionend":
          return getDataFromCustomEvent(nativeEvent);
        case "keypress":
          if (nativeEvent.which !== SPACEBAR_CODE) return null;
          hasSpaceKeypress = !0;
          return SPACEBAR_CHAR;
        case "textInput":
          return (
            (domEventName = nativeEvent.data),
            domEventName === SPACEBAR_CHAR && hasSpaceKeypress
              ? null
              : domEventName
          );
        default:
          return null;
      }
    }
    function getFallbackBeforeInputChars(domEventName, nativeEvent) {
      if (isComposing)
        return "compositionend" === domEventName ||
          (!canUseCompositionEvent &&
            isFallbackCompositionEnd(domEventName, nativeEvent))
          ? ((domEventName = getData()),
            (fallbackText = startText = root = null),
            (isComposing = !1),
            domEventName)
          : null;
      switch (domEventName) {
        case "paste":
          return null;
        case "keypress":
          if (
            !(
              nativeEvent.ctrlKey ||
              nativeEvent.altKey ||
              nativeEvent.metaKey
            ) ||
            (nativeEvent.ctrlKey && nativeEvent.altKey)
          ) {
            if (nativeEvent.char && 1 < nativeEvent.char.length)
              return nativeEvent.char;
            if (nativeEvent.which)
              return String.fromCharCode(nativeEvent.which);
          }
          return null;
        case "compositionend":
          return useFallbackCompositionData && "ko" !== nativeEvent.locale
            ? null
            : nativeEvent.data;
        default:
          return null;
      }
    }
    function isTextInputElement(elem) {
      var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
      return "input" === nodeName
        ? !!supportedInputTypes[elem.type]
        : "textarea" === nodeName
          ? !0
          : !1;
    }
    function isEventSupported(eventNameSuffix) {
      if (!canUseDOM) return !1;
      eventNameSuffix = "on" + eventNameSuffix;
      var isSupported = eventNameSuffix in document;
      isSupported ||
        ((isSupported = document.createElement("div")),
        isSupported.setAttribute(eventNameSuffix, "return;"),
        (isSupported = "function" === typeof isSupported[eventNameSuffix]));
      return isSupported;
    }
    function createAndAccumulateChangeEvent(
      dispatchQueue,
      inst,
      nativeEvent,
      target
    ) {
      restoreTarget
        ? restoreQueue
          ? restoreQueue.push(target)
          : (restoreQueue = [target])
        : (restoreTarget = target);
      inst = accumulateTwoPhaseListeners(inst, "onChange");
      0 < inst.length &&
        ((nativeEvent = new SyntheticEvent(
          "onChange",
          "change",
          null,
          nativeEvent,
          target
        )),
        dispatchQueue.push({ event: nativeEvent, listeners: inst }));
    }
    function runEventInBatch(dispatchQueue) {
      processDispatchQueue(dispatchQueue, 0);
    }
    function getInstIfValueChanged(targetInst) {
      var targetNode = getNodeFromInstance(targetInst);
      if (updateValueIfChanged(targetNode)) return targetInst;
    }
    function getTargetInstForChangeEvent(domEventName, targetInst) {
      if ("change" === domEventName) return targetInst;
    }
    function stopWatchingForValueChange() {
      activeElement$1 &&
        (activeElement$1.detachEvent("onpropertychange", handlePropertyChange),
        (activeElementInst$1 = activeElement$1 = null));
    }
    function handlePropertyChange(nativeEvent) {
      if (
        "value" === nativeEvent.propertyName &&
        getInstIfValueChanged(activeElementInst$1)
      ) {
        var dispatchQueue = [];
        createAndAccumulateChangeEvent(
          dispatchQueue,
          activeElementInst$1,
          nativeEvent,
          getEventTarget(nativeEvent)
        );
        batchedUpdates$1(runEventInBatch, dispatchQueue);
      }
    }
    function handleEventsForInputEventPolyfill(
      domEventName,
      target,
      targetInst
    ) {
      "focusin" === domEventName
        ? (stopWatchingForValueChange(),
          (activeElement$1 = target),
          (activeElementInst$1 = targetInst),
          activeElement$1.attachEvent("onpropertychange", handlePropertyChange))
        : "focusout" === domEventName && stopWatchingForValueChange();
    }
    function getTargetInstForInputEventPolyfill(domEventName) {
      if (
        "selectionchange" === domEventName ||
        "keyup" === domEventName ||
        "keydown" === domEventName
      )
        return getInstIfValueChanged(activeElementInst$1);
    }
    function getTargetInstForClickEvent(domEventName, targetInst) {
      if ("click" === domEventName) return getInstIfValueChanged(targetInst);
    }
    function getTargetInstForInputOrChangeEvent(domEventName, targetInst) {
      if ("input" === domEventName || "change" === domEventName)
        return getInstIfValueChanged(targetInst);
    }
    function is(x, y) {
      return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);
    }
    function shallowEqual(objA, objB) {
      if (objectIs(objA, objB)) return !0;
      if (
        "object" !== typeof objA ||
        null === objA ||
        "object" !== typeof objB ||
        null === objB
      )
        return !1;
      var keysA = Object.keys(objA),
        keysB = Object.keys(objB);
      if (keysA.length !== keysB.length) return !1;
      for (keysB = 0; keysB < keysA.length; keysB++) {
        var currentKey = keysA[keysB];
        if (
          !hasOwnProperty.call(objB, currentKey) ||
          !objectIs(objA[currentKey], objB[currentKey])
        )
          return !1;
      }
      return !0;
    }
    function getLeafNode(node) {
      for (; node && node.firstChild; ) node = node.firstChild;
      return node;
    }
    function getNodeForCharacterOffset(root, offset) {
      var node = getLeafNode(root);
      root = 0;
      for (var nodeEnd; node; ) {
        if (3 === node.nodeType) {
          nodeEnd = root + node.textContent.length;
          if (root <= offset && nodeEnd >= offset)
            return { node: node, offset: offset - root };
          root = nodeEnd;
        }
        a: {
          for (; node; ) {
            if (node.nextSibling) {
              node = node.nextSibling;
              break a;
            }
            node = node.parentNode;
          }
          node = void 0;
        }
        node = getLeafNode(node);
      }
    }
    function containsNode(outerNode, innerNode) {
      return outerNode && innerNode
        ? outerNode === innerNode
          ? !0
          : outerNode && 3 === outerNode.nodeType
            ? !1
            : innerNode && 3 === innerNode.nodeType
              ? containsNode(outerNode, innerNode.parentNode)
              : "contains" in outerNode
                ? outerNode.contains(innerNode)
                : outerNode.compareDocumentPosition
                  ? !!(outerNode.compareDocumentPosition(innerNode) & 16)
                  : !1
        : !1;
    }
    function getActiveElementDeep(containerInfo) {
      containerInfo =
        null != containerInfo &&
        null != containerInfo.ownerDocument &&
        null != containerInfo.ownerDocument.defaultView
          ? containerInfo.ownerDocument.defaultView
          : window;
      for (
        var element = getActiveElement(containerInfo.document);
        element instanceof containerInfo.HTMLIFrameElement;

      ) {
        try {
          var JSCompiler_inline_result =
            "string" === typeof element.contentWindow.location.href;
        } catch (err) {
          JSCompiler_inline_result = !1;
        }
        if (JSCompiler_inline_result) containerInfo = element.contentWindow;
        else break;
        element = getActiveElement(containerInfo.document);
      }
      return element;
    }
    function hasSelectionCapabilities(elem) {
      var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
      return (
        nodeName &&
        (("input" === nodeName &&
          ("text" === elem.type ||
            "search" === elem.type ||
            "tel" === elem.type ||
            "url" === elem.type ||
            "password" === elem.type)) ||
          "textarea" === nodeName ||
          "true" === elem.contentEditable)
      );
    }
    function constructSelectEvent(
      dispatchQueue,
      nativeEvent,
      nativeEventTarget
    ) {
      var doc =
        nativeEventTarget.window === nativeEventTarget
          ? nativeEventTarget.document
          : 9 === nativeEventTarget.nodeType
            ? nativeEventTarget
            : nativeEventTarget.ownerDocument;
      mouseDown ||
        null == activeElement ||
        activeElement !== getActiveElement(doc) ||
        ((doc = activeElement),
        "selectionStart" in doc && hasSelectionCapabilities(doc)
          ? (doc = { start: doc.selectionStart, end: doc.selectionEnd })
          : ((doc = (
              (doc.ownerDocument && doc.ownerDocument.defaultView) ||
              window
            ).getSelection()),
            (doc = {
              anchorNode: doc.anchorNode,
              anchorOffset: doc.anchorOffset,
              focusNode: doc.focusNode,
              focusOffset: doc.focusOffset
            })),
        (lastSelection && shallowEqual(lastSelection, doc)) ||
          ((lastSelection = doc),
          (doc = accumulateTwoPhaseListeners(activeElementInst, "onSelect")),
          0 < doc.length &&
            ((nativeEvent = new SyntheticEvent(
              "onSelect",
              "select",
              null,
              nativeEvent,
              nativeEventTarget
            )),
            dispatchQueue.push({ event: nativeEvent, listeners: doc }),
            (nativeEvent.target = activeElement))));
    }
    function makePrefixMap(styleProp, eventName) {
      var prefixes = {};
      prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
      prefixes["Webkit" + styleProp] = "webkit" + eventName;
      prefixes["Moz" + styleProp] = "moz" + eventName;
      return prefixes;
    }
    function getVendorPrefixedEventName(eventName) {
      if (prefixedEventNames[eventName]) return prefixedEventNames[eventName];
      if (!vendorPrefixes[eventName]) return eventName;
      var prefixMap = vendorPrefixes[eventName],
        styleProp;
      for (styleProp in prefixMap)
        if (prefixMap.hasOwnProperty(styleProp) && styleProp in style)
          return (prefixedEventNames[eventName] = prefixMap[styleProp]);
      return eventName;
    }
    function registerSimpleEvent(domEventName, reactName) {
      topLevelEventsToReactNames.set(domEventName, reactName);
      registerTwoPhaseEvent(reactName, [domEventName]);
    }
    function getArrayKind(array) {
      for (var kind = EMPTY_ARRAY, i = 0; i < array.length; i++) {
        var value = array[i];
        if ("object" === typeof value && null !== value)
          if (
            isArrayImpl(value) &&
            2 === value.length &&
            "string" === typeof value[0]
          ) {
            if (kind !== EMPTY_ARRAY && kind !== ENTRIES_ARRAY)
              return COMPLEX_ARRAY;
            kind = ENTRIES_ARRAY;
          } else return COMPLEX_ARRAY;
        else {
          if (
            "function" === typeof value ||
            ("string" === typeof value && 50 < value.length) ||
            (kind !== EMPTY_ARRAY && kind !== PRIMITIVE_ARRAY)
          )
            return COMPLEX_ARRAY;
          kind = PRIMITIVE_ARRAY;
        }
      }
      return kind;
    }
    function addObjectToProperties(object, properties, indent, prefix) {
      for (var key in object)
        hasOwnProperty.call(object, key) &&
          "_" !== key[0] &&
          addValueToProperties(key, object[key], properties, indent, prefix);
    }
    function addValueToProperties(
      propertyName,
      value,
      properties,
      indent,
      prefix
    ) {
      switch (typeof value) {
        case "object":
          if (null === value) {
            value = "null";
            break;
          } else {
            if (value.$$typeof === REACT_ELEMENT_TYPE) {
              var typeName = getComponentNameFromType(value.type) || "\u2026",
                key = value.key;
              value = value.props;
              var propsKeys = Object.keys(value),
                propsLength = propsKeys.length;
              if (null == key && 0 === propsLength) {
                value = "<" + typeName + " />";
                break;
              }
              if (
                3 > indent ||
                (1 === propsLength &&
                  "children" === propsKeys[0] &&
                  null == key)
              ) {
                value = "<" + typeName + " \u2026 />";
                break;
              }
              properties.push([
                prefix + "\u00a0\u00a0".repeat(indent) + propertyName,
                "<" + typeName
              ]);
              null !== key &&
                addValueToProperties(
                  "key",
                  key,
                  properties,
                  indent + 1,
                  prefix
                );
              propertyName = !1;
              for (var propKey in value)
                "children" === propKey
                  ? null != value.children &&
                    (!isArrayImpl(value.children) ||
                      0 < value.children.length) &&
                    (propertyName = !0)
                  : hasOwnProperty.call(value, propKey) &&
                    "_" !== propKey[0] &&
                    addValueToProperties(
                      propKey,
                      value[propKey],
                      properties,
                      indent + 1,
                      prefix
                    );
              properties.push([
                "",
                propertyName ? ">\u2026</" + typeName + ">" : "/>"
              ]);
              return;
            }
            typeName = Object.prototype.toString.call(value);
            typeName = typeName.slice(8, typeName.length - 1);
            if ("Array" === typeName)
              if (
                ((propKey = getArrayKind(value)),
                propKey === PRIMITIVE_ARRAY || propKey === EMPTY_ARRAY)
              ) {
                value = JSON.stringify(value);
                break;
              } else if (propKey === ENTRIES_ARRAY) {
                properties.push([
                  prefix + "\u00a0\u00a0".repeat(indent) + propertyName,
                  ""
                ]);
                for (
                  propertyName = 0;
                  propertyName < value.length;
                  propertyName++
                )
                  (typeName = value[propertyName]),
                    addValueToProperties(
                      typeName[0],
                      typeName[1],
                      properties,
                      indent + 1,
                      prefix
                    );
                return;
              }
            if ("Promise" === typeName) {
              if ("fulfilled" === value.status) {
                if (
                  ((typeName = properties.length),
                  addValueToProperties(
                    propertyName,
                    value.value,
                    properties,
                    indent,
                    prefix
                  ),
                  properties.length > typeName)
                ) {
                  properties = properties[typeName];
                  properties[1] =
                    "Promise<" + (properties[1] || "Object") + ">";
                  return;
                }
              } else if (
                "rejected" === value.status &&
                ((typeName = properties.length),
                addValueToProperties(
                  propertyName,
                  value.reason,
                  properties,
                  indent,
                  prefix
                ),
                properties.length > typeName)
              ) {
                properties = properties[typeName];
                properties[1] = "Rejected Promise<" + properties[1] + ">";
                return;
              }
              properties.push([
                "\u00a0\u00a0".repeat(indent) + propertyName,
                "Promise"
              ]);
              return;
            }
            "Object" === typeName &&
              (propKey = Object.getPrototypeOf(value)) &&
              "function" === typeof propKey.constructor &&
              (typeName = propKey.constructor.name);
            properties.push([
              prefix + "\u00a0\u00a0".repeat(indent) + propertyName,
              "Object" === typeName ? (3 > indent ? "" : "\u2026") : typeName
            ]);
            3 > indent &&
              addObjectToProperties(value, properties, indent + 1, prefix);
            return;
          }
        case "function":
          value = "" === value.name ? "() => {}" : value.name + "() {}";
          break;
        case "string":
          value =
            value === OMITTED_PROP_ERROR ? "\u2026" : JSON.stringify(value);
          break;
        case "undefined":
          value = "undefined";
          break;
        case "boolean":
          value = value ? "true" : "false";
          break;
        default:
          value = String(value);
      }
      properties.push([
        prefix + "\u00a0\u00a0".repeat(indent) + propertyName,
        value
      ]);
    }
    function addObjectDiffToProperties(prev, next, properties, indent) {
      var isDeeplyEqual = !0;
      for (key in prev)
        key in next ||
          (properties.push([
            REMOVED + "\u00a0\u00a0".repeat(indent) + key,
            "\u2026"
          ]),
          (isDeeplyEqual = !1));
      for (var _key in next)
        if (_key in prev) {
          var key = prev[_key];
          var nextValue = next[_key];
          if (key !== nextValue) {
            if (0 === indent && "children" === _key)
              (isDeeplyEqual = "\u00a0\u00a0".repeat(indent) + _key),
                properties.push(
                  [REMOVED + isDeeplyEqual, "\u2026"],
                  [ADDED + isDeeplyEqual, "\u2026"]
                );
            else {
              if (!(3 <= indent))
                if (
                  "object" === typeof key &&
                  "object" === typeof nextValue &&
                  null !== key &&
                  null !== nextValue &&
                  key.$$typeof === nextValue.$$typeof
                )
                  if (nextValue.$$typeof === REACT_ELEMENT_TYPE) {
                    if (
                      key.type === nextValue.type &&
                      key.key === nextValue.key
                    ) {
                      key =
                        getComponentNameFromType(nextValue.type) || "\u2026";
                      isDeeplyEqual = "\u00a0\u00a0".repeat(indent) + _key;
                      key = "<" + key + " \u2026 />";
                      properties.push(
                        [REMOVED + isDeeplyEqual, key],
                        [ADDED + isDeeplyEqual, key]
                      );
                      isDeeplyEqual = !1;
                      continue;
                    }
                  } else {
                    var prevKind = Object.prototype.toString.call(key),
                      nextKind = Object.prototype.toString.call(nextValue);
                    if (
                      prevKind === nextKind &&
                      ("[object Object]" === nextKind ||
                        "[object Array]" === nextKind)
                    ) {
                      prevKind = [
                        UNCHANGED + "\u00a0\u00a0".repeat(indent) + _key,
                        "[object Array]" === nextKind ? "Array" : ""
                      ];
                      properties.push(prevKind);
                      nextKind = properties.length;
                      addObjectDiffToProperties(
                        key,
                        nextValue,
                        properties,
                        indent + 1
                      )
                        ? nextKind === properties.length &&
                          (prevKind[1] =
                            "Referentially unequal but deeply equal objects. Consider memoization.")
                        : (isDeeplyEqual = !1);
                      continue;
                    }
                  }
                else if (
                  "function" === typeof key &&
                  "function" === typeof nextValue &&
                  key.name === nextValue.name &&
                  key.length === nextValue.length &&
                  ((prevKind = Function.prototype.toString.call(key)),
                  (nextKind = Function.prototype.toString.call(nextValue)),
                  prevKind === nextKind)
                ) {
                  key =
                    "" === nextValue.name
                      ? "() => {}"
                      : nextValue.name + "() {}";
                  properties.push([
                    UNCHANGED + "\u00a0\u00a0".repeat(indent) + _key,
                    key +
                      " Referentially unequal function closure. Consider memoization."
                  ]);
                  continue;
                }
              addValueToProperties(_key, key, properties, indent, REMOVED);
              addValueToProperties(_key, nextValue, properties, indent, ADDED);
            }
            isDeeplyEqual = !1;
          }
        } else
          properties.push([
            ADDED + "\u00a0\u00a0".repeat(indent) + _key,
            "\u2026"
          ]),
            (isDeeplyEqual = !1);
      return isDeeplyEqual;
    }
    function setCurrentTrackFromLanes(lanes) {
      currentTrack =
        lanes & 63
          ? "Blocking"
          : lanes & 64
            ? "Gesture"
            : lanes & 4194176
              ? "Transition"
              : lanes & 62914560
                ? "Suspense"
                : lanes & 2080374784
                  ? "Idle"
                  : "Other";
    }
    function logComponentTrigger(fiber, startTime, endTime, trigger) {
      supportsUserTiming &&
        ((reusableComponentOptions.start = startTime),
        (reusableComponentOptions.end = endTime),
        (reusableComponentDevToolDetails.color = "warning"),
        (reusableComponentDevToolDetails.tooltipText = trigger),
        (reusableComponentDevToolDetails.properties = null),
        (fiber = fiber._debugTask)
          ? fiber.run(
              performance.measure.bind(
                performance,
                trigger,
                reusableComponentOptions
              )
            )
          : performance.measure(trigger, reusableComponentOptions));
    }
    function logComponentReappeared(fiber, startTime, endTime) {
      logComponentTrigger(fiber, startTime, endTime, "Reconnect");
    }
    function logComponentRender(
      fiber,
      startTime,
      endTime,
      wasHydrated,
      committedLanes
    ) {
      var name = getComponentNameFromFiber(fiber);
      if (null !== name && supportsUserTiming) {
        var alternate = fiber.alternate,
          selfTime = fiber.actualDuration;
        if (null === alternate || alternate.child !== fiber.child)
          for (var child = fiber.child; null !== child; child = child.sibling)
            selfTime -= child.actualDuration;
        wasHydrated =
          0.5 > selfTime
            ? wasHydrated
              ? "tertiary-light"
              : "primary-light"
            : 10 > selfTime
              ? wasHydrated
                ? "tertiary"
                : "primary"
              : 100 > selfTime
                ? wasHydrated
                  ? "tertiary-dark"
                  : "primary-dark"
                : "error";
        var props = fiber.memoizedProps;
        selfTime = fiber._debugTask;
        null !== props &&
        null !== alternate &&
        alternate.memoizedProps !== props
          ? ((child = [resuableChangedPropsEntry]),
            (props = addObjectDiffToProperties(
              alternate.memoizedProps,
              props,
              child,
              0
            )),
            1 < child.length &&
              (props &&
              !alreadyWarnedForDeepEquality &&
              0 === (alternate.lanes & committedLanes) &&
              100 < fiber.actualDuration
                ? ((alreadyWarnedForDeepEquality = !0),
                  (child[0] = reusableDeeplyEqualPropsEntry),
                  (reusableComponentDevToolDetails.color = "warning"),
                  (reusableComponentDevToolDetails.tooltipText =
                    DEEP_EQUALITY_WARNING))
                : ((reusableComponentDevToolDetails.color = wasHydrated),
                  (reusableComponentDevToolDetails.tooltipText = name)),
              (reusableComponentDevToolDetails.properties = child),
              (reusableComponentOptions.start = startTime),
              (reusableComponentOptions.end = endTime),
              null != selfTime
                ? selfTime.run(
                    performance.measure.bind(
                      performance,
                      "\u200b" + name,
                      reusableComponentOptions
                    )
                  )
                : performance.measure(
                    "\u200b" + name,
                    reusableComponentOptions
                  )))
          : null != selfTime
            ? selfTime.run(
                console.timeStamp.bind(
                  console,
                  name,
                  startTime,
                  endTime,
                  COMPONENTS_TRACK,
                  void 0,
                  wasHydrated
                )
              )
            : console.timeStamp(
                name,
                startTime,
                endTime,
                COMPONENTS_TRACK,
                void 0,
                wasHydrated
              );
      }
    }
    function logComponentErrored(fiber, startTime, endTime, errors) {
      if (supportsUserTiming) {
        var name = getComponentNameFromFiber(fiber);
        if (null !== name) {
          for (
            var debugTask = null, properties = [], i = 0;
            i < errors.length;
            i++
          ) {
            var capturedValue = errors[i];
            null == debugTask &&
              null !== capturedValue.source &&
              (debugTask = capturedValue.source._debugTask);
            capturedValue = capturedValue.value;
            properties.push([
              "Error",
              "object" === typeof capturedValue &&
              null !== capturedValue &&
              "string" === typeof capturedValue.message
                ? String(capturedValue.message)
                : String(capturedValue)
            ]);
          }
          null !== fiber.key &&
            addValueToProperties("key", fiber.key, properties, 0, "");
          null !== fiber.memoizedProps &&
            addObjectToProperties(fiber.memoizedProps, properties, 0, "");
          null == debugTask && (debugTask = fiber._debugTask);
          fiber = {
            start: startTime,
            end: endTime,
            detail: {
              devtools: {
                color: "error",
                track: COMPONENTS_TRACK,
                tooltipText:
                  13 === fiber.tag
                    ? "Hydration failed"
                    : "Error boundary caught an error",
                properties: properties
              }
            }
          };
          debugTask
            ? debugTask.run(
                performance.measure.bind(performance, "\u200b" + name, fiber)
              )
            : performance.measure("\u200b" + name, fiber);
        }
      }
    }
    function logComponentEffect(fiber, startTime, endTime, selfTime, errors) {
      if (null !== errors) {
        if (supportsUserTiming) {
          var name = getComponentNameFromFiber(fiber);
          if (null !== name) {
            selfTime = [];
            for (var i = 0; i < errors.length; i++) {
              var error = errors[i].value;
              selfTime.push([
                "Error",
                "object" === typeof error &&
                null !== error &&
                "string" === typeof error.message
                  ? String(error.message)
                  : String(error)
              ]);
            }
            null !== fiber.key &&
              addValueToProperties("key", fiber.key, selfTime, 0, "");
            null !== fiber.memoizedProps &&
              addObjectToProperties(fiber.memoizedProps, selfTime, 0, "");
            startTime = {
              start: startTime,
              end: endTime,
              detail: {
                devtools: {
                  color: "error",
                  track: COMPONENTS_TRACK,
                  tooltipText: "A lifecycle or effect errored",
                  properties: selfTime
                }
              }
            };
            (fiber = fiber._debugTask)
              ? fiber.run(
                  performance.measure.bind(
                    performance,
                    "\u200b" + name,
                    startTime
                  )
                )
              : performance.measure("\u200b" + name, startTime);
          }
        }
      } else
        (name = getComponentNameFromFiber(fiber)),
          null !== name &&
            supportsUserTiming &&
            ((errors =
              1 > selfTime
                ? "secondary-light"
                : 100 > selfTime
                  ? "secondary"
                  : 500 > selfTime
                    ? "secondary-dark"
                    : "error"),
            (fiber = fiber._debugTask)
              ? fiber.run(
                  console.timeStamp.bind(
                    console,
                    name,
                    startTime,
                    endTime,
                    COMPONENTS_TRACK,
                    void 0,
                    errors
                  )
                )
              : console.timeStamp(
                  name,
                  startTime,
                  endTime,
                  COMPONENTS_TRACK,
                  void 0,
                  errors
                ));
    }
    function logRenderPhase(startTime, endTime, lanes, debugTask) {
      if (supportsUserTiming && !(endTime <= startTime)) {
        var color =
          (lanes & 738197653) === lanes ? "tertiary-dark" : "primary-dark";
        lanes =
          (lanes & 536870912) === lanes
            ? "Prepared"
            : (lanes & 201326741) === lanes
              ? "Hydrated"
              : "Render";
        debugTask
          ? debugTask.run(
              console.timeStamp.bind(
                console,
                lanes,
                startTime,
                endTime,
                currentTrack,
                LANES_TRACK_GROUP,
                color
              )
            )
          : console.timeStamp(
              lanes,
              startTime,
              endTime,
              currentTrack,
              LANES_TRACK_GROUP,
              color
            );
      }
    }
    function logSuspendedRenderPhase(startTime, endTime, lanes, debugTask) {
      !supportsUserTiming ||
        endTime <= startTime ||
        ((lanes =
          (lanes & 738197653) === lanes ? "tertiary-dark" : "primary-dark"),
        debugTask
          ? debugTask.run(
              console.timeStamp.bind(
                console,
                "Prewarm",
                startTime,
                endTime,
                currentTrack,
                LANES_TRACK_GROUP,
                lanes
              )
            )
          : console.timeStamp(
              "Prewarm",
              startTime,
              endTime,
              currentTrack,
              LANES_TRACK_GROUP,
              lanes
            ));
    }
    function logSuspendedWithDelayPhase(startTime, endTime, lanes, debugTask) {
      !supportsUserTiming ||
        endTime <= startTime ||
        ((lanes =
          (lanes & 738197653) === lanes ? "tertiary-dark" : "primary-dark"),
        debugTask
          ? debugTask.run(
              console.timeStamp.bind(
                console,
                "Suspended",
                startTime,
                endTime,
                currentTrack,
                LANES_TRACK_GROUP,
                lanes
              )
            )
          : console.timeStamp(
              "Suspended",
              startTime,
              endTime,
              currentTrack,
              LANES_TRACK_GROUP,
              lanes
            ));
    }
    function logRecoveredRenderPhase(
      startTime,
      endTime,
      lanes,
      recoverableErrors,
      hydrationFailed,
      debugTask
    ) {
      if (supportsUserTiming && !(endTime <= startTime)) {
        lanes = [];
        for (var i = 0; i < recoverableErrors.length; i++) {
          var error = recoverableErrors[i].value;
          lanes.push([
            "Recoverable Error",
            "object" === typeof error &&
            null !== error &&
            "string" === typeof error.message
              ? String(error.message)
              : String(error)
          ]);
        }
        startTime = {
          start: startTime,
          end: endTime,
          detail: {
            devtools: {
              color: "primary-dark",
              track: currentTrack,
              trackGroup: LANES_TRACK_GROUP,
              tooltipText: hydrationFailed
                ? "Hydration Failed"
                : "Recovered after Error",
              properties: lanes
            }
          }
        };
        debugTask
          ? debugTask.run(
              performance.measure.bind(performance, "Recovered", startTime)
            )
          : performance.measure("Recovered", startTime);
      }
    }
    function logErroredRenderPhase(startTime, endTime, lanes, debugTask) {
      !supportsUserTiming ||
        endTime <= startTime ||
        (debugTask
          ? debugTask.run(
              console.timeStamp.bind(
                console,
                "Errored",
                startTime,
                endTime,
                currentTrack,
                LANES_TRACK_GROUP,
                "error"
              )
            )
          : console.timeStamp(
              "Errored",
              startTime,
              endTime,
              currentTrack,
              LANES_TRACK_GROUP,
              "error"
            ));
    }
    function logSuspendedCommitPhase(startTime, endTime, reason, debugTask) {
      !supportsUserTiming ||
        endTime <= startTime ||
        (debugTask
          ? debugTask.run(
              console.timeStamp.bind(
                console,
                reason,
                startTime,
                endTime,
                currentTrack,
                LANES_TRACK_GROUP,
                "secondary-light"
              )
            )
          : console.timeStamp(
              reason,
              startTime,
              endTime,
              currentTrack,
              LANES_TRACK_GROUP,
              "secondary-light"
            ));
    }
    function logCommitErrored(startTime, endTime, errors, passive, debugTask) {
      if (supportsUserTiming && !(endTime <= startTime)) {
        for (var properties = [], i = 0; i < errors.length; i++) {
          var error = errors[i].value;
          properties.push([
            "Error",
            "object" === typeof error &&
            null !== error &&
            "string" === typeof error.message
              ? String(error.message)
              : String(error)
          ]);
        }
        startTime = {
          start: startTime,
          end: endTime,
          detail: {
            devtools: {
              color: "error",
              track: currentTrack,
              trackGroup: LANES_TRACK_GROUP,
              tooltipText: passive
                ? "Remaining Effects Errored"
                : "Commit Errored",
              properties: properties
            }
          }
        };
        debugTask
          ? debugTask.run(
              performance.measure.bind(performance, "Errored", startTime)
            )
          : performance.measure("Errored", startTime);
      }
    }
    function logAnimatingPhase(startTime, endTime, debugTask) {
      !supportsUserTiming ||
        endTime <= startTime ||
        (debugTask
          ? debugTask.run(
              console.timeStamp.bind(
                console,
                "Animating",
                startTime,
                endTime,
                currentTrack,
                LANES_TRACK_GROUP,
                "secondary-dark"
              )
            )
          : console.timeStamp(
              "Animating",
              startTime,
              endTime,
              currentTrack,
              LANES_TRACK_GROUP,
              "secondary-dark"
            ));
    }
    function finishQueueingConcurrentUpdates() {
      for (
        var endIndex = concurrentQueuesIndex,
          i = (concurrentlyUpdatedLanes = concurrentQueuesIndex = 0);
        i < endIndex;

      ) {
        var fiber = concurrentQueues[i];
        concurrentQueues[i++] = null;
        var queue = concurrentQueues[i];
        concurrentQueues[i++] = null;
        var update = concurrentQueues[i];
        concurrentQueues[i++] = null;
        var lane = concurrentQueues[i];
        concurrentQueues[i++] = null;
        if (null !== queue && null !== update) {
          var pending = queue.pending;
          null === pending
            ? (update.next = update)
            : ((update.next = pending.next), (pending.next = update));
          queue.pending = update;
        }
        0 !== lane && markUpdateLaneFromFiberToRoot(fiber, update, lane);
      }
    }
    function enqueueUpdate$1(fiber, queue, update, lane) {
      concurrentQueues[concurrentQueuesIndex++] = fiber;
      concurrentQueues[concurrentQueuesIndex++] = queue;
      concurrentQueues[concurrentQueuesIndex++] = update;
      concurrentQueues[concurrentQueuesIndex++] = lane;
      concurrentlyUpdatedLanes |= lane;
      fiber.lanes |= lane;
      fiber = fiber.alternate;
      null !== fiber && (fiber.lanes |= lane);
    }
    function enqueueConcurrentHookUpdate(fiber, queue, update, lane) {
      enqueueUpdate$1(fiber, queue, update, lane);
      return getRootForUpdatedFiber(fiber);
    }
    function enqueueConcurrentRenderForLane(fiber, lane) {
      enqueueUpdate$1(fiber, null, null, lane);
      return getRootForUpdatedFiber(fiber);
    }
    function markUpdateLaneFromFiberToRoot(sourceFiber, update, lane) {
      sourceFiber.lanes |= lane;
      var alternate = sourceFiber.alternate;
      null !== alternate && (alternate.lanes |= lane);
      for (var isHidden = !1, parent = sourceFiber.return; null !== parent; )
        (parent.childLanes |= lane),
          (alternate = parent.alternate),
          null !== alternate && (alternate.childLanes |= lane),
          22 === parent.tag &&
            ((sourceFiber = parent.stateNode),
            null === sourceFiber ||
              sourceFiber._visibility & OffscreenVisible ||
              (isHidden = !0)),
          (sourceFiber = parent),
          (parent = parent.return);
      return 3 === sourceFiber.tag
        ? ((parent = sourceFiber.stateNode),
          isHidden &&
            null !== update &&
            ((isHidden = 31 - clz32(lane)),
            (sourceFiber = parent.hiddenUpdates),
            (alternate = sourceFiber[isHidden]),
            null === alternate
              ? (sourceFiber[isHidden] = [update])
              : alternate.push(update),
            (update.lane = lane | 536870912)),
          parent)
        : null;
    }
    function getRootForUpdatedFiber(sourceFiber) {
      if (nestedUpdateCount > NESTED_UPDATE_LIMIT)
        throw (
          ((nestedPassiveUpdateCount = nestedUpdateCount = 0),
          (rootWithPassiveNestedUpdates = rootWithNestedUpdates = null),
          Error(
            "Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops."
          ))
        );
      nestedPassiveUpdateCount > NESTED_PASSIVE_UPDATE_LIMIT &&
        ((nestedPassiveUpdateCount = 0),
        (rootWithPassiveNestedUpdates = null),
        console.error(
          "Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render."
        ));
      null === sourceFiber.alternate &&
        0 !== (sourceFiber.flags & 4098) &&
        warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);
      for (var node = sourceFiber, parent = node.return; null !== parent; )
        null === node.alternate &&
          0 !== (node.flags & 4098) &&
          warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber),
          (node = parent),
          (parent = node.return);
      return 3 === node.tag ? node.stateNode : null;
    }
    function resolveFunctionForHotReloading(type) {
      if (null === resolveFamily) return type;
      var family = resolveFamily(type);
      return void 0 === family ? type : family.current;
    }
    function resolveForwardRefForHotReloading(type) {
      if (null === resolveFamily) return type;
      var family = resolveFamily(type);
      return void 0 === family
        ? null !== type &&
          void 0 !== type &&
          "function" === typeof type.render &&
          ((family = resolveFunctionForHotReloading(type.render)),
          type.render !== family)
          ? ((family = { $$typeof: REACT_FORWARD_REF_TYPE, render: family }),
            void 0 !== type.displayName &&
              (family.displayName = type.displayName),
            family)
          : type
        : family.current;
    }
    function isCompatibleFamilyForHotReloading(fiber, element) {
      if (null === resolveFamily) return !1;
      var prevType = fiber.elementType;
      element = element.type;
      var needsCompareFamilies = !1,
        $$typeofNextType =
          "object" === typeof element && null !== element
            ? element.$$typeof
            : null;
      switch (fiber.tag) {
        case 1:
          "function" === typeof element && (needsCompareFamilies = !0);
          break;
        case 0:
          "function" === typeof element
            ? (needsCompareFamilies = !0)
            : $$typeofNextType === REACT_LAZY_TYPE &&
              (needsCompareFamilies = !0);
          break;
        case 11:
          $$typeofNextType === REACT_FORWARD_REF_TYPE
            ? (needsCompareFamilies = !0)
            : $$typeofNextType === REACT_LAZY_TYPE &&
              (needsCompareFamilies = !0);
          break;
        case 14:
        case 15:
          $$typeofNextType === REACT_MEMO_TYPE
            ? (needsCompareFamilies = !0)
            : $$typeofNextType === REACT_LAZY_TYPE &&
              (needsCompareFamilies = !0);
          break;
        default:
          return !1;
      }
      return needsCompareFamilies &&
        ((fiber = resolveFamily(prevType)),
        void 0 !== fiber && fiber === resolveFamily(element))
        ? !0
        : !1;
    }
    function markFailedErrorBoundaryForHotReloading(fiber) {
      null !== resolveFamily &&
        "function" === typeof WeakSet &&
        (null === failedBoundaries && (failedBoundaries = new WeakSet()),
        failedBoundaries.add(fiber));
    }
    function scheduleFibersWithFamiliesRecursively(
      fiber,
      updatedFamilies,
      staleFamilies
    ) {
      do {
        var _fiber = fiber,
          alternate = _fiber.alternate,
          child = _fiber.child,
          sibling = _fiber.sibling,
          tag = _fiber.tag;
        _fiber = _fiber.type;
        var candidateType = null;
        switch (tag) {
          case 0:
          case 15:
          case 1:
            candidateType = _fiber;
            break;
          case 11:
            candidateType = _fiber.render;
        }
        if (null === resolveFamily)
          throw Error("Expected resolveFamily to be set during hot reload.");
        var needsRender = !1;
        _fiber = !1;
        null !== candidateType &&
          ((candidateType = resolveFamily(candidateType)),
          void 0 !== candidateType &&
            (staleFamilies.has(candidateType)
              ? (_fiber = !0)
              : updatedFamilies.has(candidateType) &&
                (1 === tag ? (_fiber = !0) : (needsRender = !0))));
        null !== failedBoundaries &&
          (failedBoundaries.has(fiber) ||
            (null !== alternate && failedBoundaries.has(alternate))) &&
          (_fiber = !0);
        _fiber && (fiber._debugNeedsRemount = !0);
        if (_fiber || needsRender)
          (alternate = enqueueConcurrentRenderForLane(fiber, 2)),
            null !== alternate && scheduleUpdateOnFiber(alternate, fiber, 2);
        null === child ||
          _fiber ||
          scheduleFibersWithFamiliesRecursively(
            child,
            updatedFamilies,
            staleFamilies
          );
        if (null === sibling) break;
        fiber = sibling;
      } while (1);
    }
    function FiberNode(tag, pendingProps, key, mode) {
      this.tag = tag;
      this.key = key;
      this.sibling =
        this.child =
        this.return =
        this.stateNode =
        this.type =
        this.elementType =
          null;
      this.index = 0;
      this.refCleanup = this.ref = null;
      this.pendingProps = pendingProps;
      this.dependencies =
        this.memoizedState =
        this.updateQueue =
        this.memoizedProps =
          null;
      this.mode = mode;
      this.subtreeFlags = this.flags = 0;
      this.deletions = null;
      this.childLanes = this.lanes = 0;
      this.alternate = null;
      this.actualDuration = -0;
      this.actualStartTime = -1.1;
      this.treeBaseDuration = this.selfBaseDuration = -0;
      this._debugTask =
        this._debugStack =
        this._debugOwner =
        this._debugInfo =
          null;
      this._debugNeedsRemount = !1;
      this._debugHookTypes = null;
      hasBadMapPolyfill ||
        "function" !== typeof Object.preventExtensions ||
        Object.preventExtensions(this);
    }
    function shouldConstruct(Component) {
      Component = Component.prototype;
      return !(!Component || !Component.isReactComponent);
    }
    function createWorkInProgress(current, pendingProps) {
      var workInProgress = current.alternate;
      null === workInProgress
        ? ((workInProgress = createFiber(
            current.tag,
            pendingProps,
            current.key,
            current.mode
          )),
          (workInProgress.elementType = current.elementType),
          (workInProgress.type = current.type),
          (workInProgress.stateNode = current.stateNode),
          (workInProgress._debugOwner = current._debugOwner),
          (workInProgress._debugStack = current._debugStack),
          (workInProgress._debugTask = current._debugTask),
          (workInProgress._debugHookTypes = current._debugHookTypes),
          (workInProgress.alternate = current),
          (current.alternate = workInProgress))
        : ((workInProgress.pendingProps = pendingProps),
          (workInProgress.type = current.type),
          (workInProgress.flags = 0),
          (workInProgress.subtreeFlags = 0),
          (workInProgress.deletions = null),
          (workInProgress.actualDuration = -0),
          (workInProgress.actualStartTime = -1.1));
      workInProgress.flags = current.flags & 65011712;
      workInProgress.childLanes = current.childLanes;
      workInProgress.lanes = current.lanes;
      workInProgress.child = current.child;
      workInProgress.memoizedProps = current.memoizedProps;
      workInProgress.memoizedState = current.memoizedState;
      workInProgress.updateQueue = current.updateQueue;
      pendingProps = current.dependencies;
      workInProgress.dependencies =
        null === pendingProps
          ? null
          : {
              lanes: pendingProps.lanes,
              firstContext: pendingProps.firstContext,
              _debugThenableState: pendingProps._debugThenableState
            };
      workInProgress.sibling = current.sibling;
      workInProgress.index = current.index;
      workInProgress.ref = current.ref;
      workInProgress.refCleanup = current.refCleanup;
      workInProgress.selfBaseDuration = current.selfBaseDuration;
      workInProgress.treeBaseDuration = current.treeBaseDuration;
      workInProgress._debugInfo = current._debugInfo;
      workInProgress._debugNeedsRemount = current._debugNeedsRemount;
      switch (workInProgress.tag) {
        case 0:
        case 15:
          workInProgress.type = resolveFunctionForHotReloading(current.type);
          break;
        case 1:
          workInProgress.type = resolveFunctionForHotReloading(current.type);
          break;
        case 11:
          workInProgress.type = resolveForwardRefForHotReloading(current.type);
      }
      return workInProgress;
    }
    function resetWorkInProgress(workInProgress, renderLanes) {
      workInProgress.flags &= 65011714;
      var current = workInProgress.alternate;
      null === current
        ? ((workInProgress.childLanes = 0),
          (workInProgress.lanes = renderLanes),
          (workInProgress.child = null),
          (workInProgress.subtreeFlags = 0),
          (workInProgress.memoizedProps = null),
          (workInProgress.memoizedState = null),
          (workInProgress.updateQueue = null),
          (workInProgress.dependencies = null),
          (workInProgress.stateNode = null),
          (workInProgress.selfBaseDuration = 0),
          (workInProgress.treeBaseDuration = 0))
        : ((workInProgress.childLanes = current.childLanes),
          (workInProgress.lanes = current.lanes),
          (workInProgress.child = current.child),
          (workInProgress.subtreeFlags = 0),
          (workInProgress.deletions = null),
          (workInProgress.memoizedProps = current.memoizedProps),
          (workInProgress.memoizedState = current.memoizedState),
          (workInProgress.updateQueue = current.updateQueue),
          (workInProgress.type = current.type),
          (renderLanes = current.dependencies),
          (workInProgress.dependencies =
            null === renderLanes
              ? null
              : {
                  lanes: renderLanes.lanes,
                  firstContext: renderLanes.firstContext,
                  _debugThenableState: renderLanes._debugThenableState
                }),
          (workInProgress.selfBaseDuration = current.selfBaseDuration),
          (workInProgress.treeBaseDuration = current.treeBaseDuration));
      return workInProgress;
    }
    function createFiberFromTypeAndProps(
      type,
      key,
      pendingProps,
      owner,
      mode,
      lanes
    ) {
      var fiberTag = 0,
        resolvedType = type;
      if ("function" === typeof type)
        shouldConstruct(type) && (fiberTag = 1),
          (resolvedType = resolveFunctionForHotReloading(resolvedType));
      else if ("string" === typeof type)
        (fiberTag = getHostContext()),
          (fiberTag = isHostHoistableType(type, pendingProps, fiberTag)
            ? 26
            : "html" === type || "head" === type || "body" === type
              ? 27
              : 5);
      else
        a: switch (type) {
          case REACT_ACTIVITY_TYPE:
            return (
              (key = createFiber(31, pendingProps, key, mode)),
              (key.elementType = REACT_ACTIVITY_TYPE),
              (key.lanes = lanes),
              key
            );
          case REACT_FRAGMENT_TYPE:
            return createFiberFromFragment(
              pendingProps.children,
              mode,
              lanes,
              key
            );
          case REACT_STRICT_MODE_TYPE:
            fiberTag = 8;
            mode |= StrictLegacyMode;
            mode |= StrictEffectsMode;
            break;
          case REACT_PROFILER_TYPE:
            return (
              (type = pendingProps),
              (owner = mode),
              "string" !== typeof type.id &&
                console.error(
                  'Profiler must specify an "id" of type `string` as a prop. Received the type `%s` instead.',
                  typeof type.id
                ),
              (key = createFiber(12, type, key, owner | ProfileMode)),
              (key.elementType = REACT_PROFILER_TYPE),
              (key.lanes = lanes),
              (key.stateNode = { effectDuration: 0, passiveEffectDuration: 0 }),
              key
            );
          case REACT_SUSPENSE_TYPE:
            return (
              (key = createFiber(13, pendingProps, key, mode)),
              (key.elementType = REACT_SUSPENSE_TYPE),
              (key.lanes = lanes),
              key
            );
          case REACT_SUSPENSE_LIST_TYPE:
            return (
              (key = createFiber(19, pendingProps, key, mode)),
              (key.elementType = REACT_SUSPENSE_LIST_TYPE),
              (key.lanes = lanes),
              key
            );
          default:
            if ("object" === typeof type && null !== type)
              switch (type.$$typeof) {
                case REACT_CONTEXT_TYPE:
                  fiberTag = 10;
                  break a;
                case REACT_CONSUMER_TYPE:
                  fiberTag = 9;
                  break a;
                case REACT_FORWARD_REF_TYPE:
                  fiberTag = 11;
                  resolvedType = resolveForwardRefForHotReloading(resolvedType);
                  break a;
                case REACT_MEMO_TYPE:
                  fiberTag = 14;
                  break a;
                case REACT_LAZY_TYPE:
                  fiberTag = 16;
                  resolvedType = null;
                  break a;
              }
            resolvedType = "";
            if (
              void 0 === type ||
              ("object" === typeof type &&
                null !== type &&
                0 === Object.keys(type).length)
            )
              resolvedType +=
                " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
            null === type
              ? (pendingProps = "null")
              : isArrayImpl(type)
                ? (pendingProps = "array")
                : void 0 !== type && type.$$typeof === REACT_ELEMENT_TYPE
                  ? ((pendingProps =
                      "<" +
                      (getComponentNameFromType(type.type) || "Unknown") +
                      " />"),
                    (resolvedType =
                      " Did you accidentally export a JSX literal instead of a component?"))
                  : (pendingProps = typeof type);
            (fiberTag = owner ? getComponentNameFromOwner(owner) : null) &&
              (resolvedType +=
                "\n\nCheck the render method of `" + fiberTag + "`.");
            fiberTag = 29;
            pendingProps = Error(
              "Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: " +
                (pendingProps + "." + resolvedType)
            );
            resolvedType = null;
        }
      key = createFiber(fiberTag, pendingProps, key, mode);
      key.elementType = type;
      key.type = resolvedType;
      key.lanes = lanes;
      key._debugOwner = owner;
      return key;
    }
    function createFiberFromElement(element, mode, lanes) {
      mode = createFiberFromTypeAndProps(
        element.type,
        element.key,
        element.props,
        element._owner,
        mode,
        lanes
      );
      mode._debugOwner = element._owner;
      mode._debugStack = element._debugStack;
      mode._debugTask = element._debugTask;
      return mode;
    }
    function createFiberFromFragment(elements, mode, lanes, key) {
      elements = createFiber(7, elements, key, mode);
      elements.lanes = lanes;
      return elements;
    }
    function createFiberFromText(content, mode, lanes) {
      content = createFiber(6, content, null, mode);
      content.lanes = lanes;
      return content;
    }
    function createFiberFromDehydratedFragment(dehydratedNode) {
      var fiber = createFiber(18, null, null, NoMode);
      fiber.stateNode = dehydratedNode;
      return fiber;
    }
    function createFiberFromPortal(portal, mode, lanes) {
      mode = createFiber(
        4,
        null !== portal.children ? portal.children : [],
        portal.key,
        mode
      );
      mode.lanes = lanes;
      mode.stateNode = {
        containerInfo: portal.containerInfo,
        pendingChildren: null,
        implementation: portal.implementation
      };
      return mode;
    }
    function createCapturedValueAtFiber(value, source) {
      if ("object" === typeof value && null !== value) {
        var existing = CapturedStacks.get(value);
        if (void 0 !== existing) return existing;
        source = {
          value: value,
          source: source,
          stack: getStackByFiberInDevAndProd(source)
        };
        CapturedStacks.set(value, source);
        return source;
      }
      return {
        value: value,
        source: source,
        stack: getStackByFiberInDevAndProd(source)
      };
    }
    function pushTreeFork(workInProgress, totalChildren) {
      warnIfNotHydrating();
      forkStack[forkStackIndex++] = treeForkCount;
      forkStack[forkStackIndex++] = treeForkProvider;
      treeForkProvider = workInProgress;
      treeForkCount = totalChildren;
    }
    function pushTreeId(workInProgress, totalChildren, index) {
      warnIfNotHydrating();
      idStack[idStackIndex++] = treeContextId;
      idStack[idStackIndex++] = treeContextOverflow;
      idStack[idStackIndex++] = treeContextProvider;
      treeContextProvider = workInProgress;
      var baseIdWithLeadingBit = treeContextId;
      workInProgress = treeContextOverflow;
      var baseLength = 32 - clz32(baseIdWithLeadingBit) - 1;
      baseIdWithLeadingBit &= ~(1 << baseLength);
      index += 1;
      var length = 32 - clz32(totalChildren) + baseLength;
      if (30 < length) {
        var numberOfOverflowBits = baseLength - (baseLength % 5);
        length = (
          baseIdWithLeadingBit &
          ((1 << numberOfOverflowBits) - 1)
        ).toString(32);
        baseIdWithLeadingBit >>= numberOfOverflowBits;
        baseLength -= numberOfOverflowBits;
        treeContextId =
          (1 << (32 - clz32(totalChildren) + baseLength)) |
          (index << baseLength) |
          baseIdWithLeadingBit;
        treeContextOverflow = length + workInProgress;
      } else
        (treeContextId =
          (1 << length) | (index << baseLength) | baseIdWithLeadingBit),
          (treeContextOverflow = workInProgress);
    }
    function pushMaterializedTreeId(workInProgress) {
      warnIfNotHydrating();
      null !== workInProgress.return &&
        (pushTreeFork(workInProgress, 1), pushTreeId(workInProgress, 1, 0));
    }
    function popTreeContext(workInProgress) {
      for (; workInProgress === treeForkProvider; )
        (treeForkProvider = forkStack[--forkStackIndex]),
          (forkStack[forkStackIndex] = null),
          (treeForkCount = forkStack[--forkStackIndex]),
          (forkStack[forkStackIndex] = null);
      for (; workInProgress === treeContextProvider; )
        (treeContextProvider = idStack[--idStackIndex]),
          (idStack[idStackIndex] = null),
          (treeContextOverflow = idStack[--idStackIndex]),
          (idStack[idStackIndex] = null),
          (treeContextId = idStack[--idStackIndex]),
          (idStack[idStackIndex] = null);
    }
    function getSuspendedTreeContext() {
      warnIfNotHydrating();
      return null !== treeContextProvider
        ? { id: treeContextId, overflow: treeContextOverflow }
        : null;
    }
    function restoreSuspendedTreeContext(workInProgress, suspendedContext) {
      warnIfNotHydrating();
      idStack[idStackIndex++] = treeContextId;
      idStack[idStackIndex++] = treeContextOverflow;
      idStack[idStackIndex++] = treeContextProvider;
      treeContextId = suspendedContext.id;
      treeContextOverflow = suspendedContext.overflow;
      treeContextProvider = workInProgress;
    }
    function warnIfNotHydrating() {
      isHydrating ||
        console.error(
          "Expected to be hydrating. This is a bug in React. Please file an issue."
        );
    }
    function buildHydrationDiffNode(fiber, distanceFromLeaf) {
      if (null === fiber.return) {
        if (null === hydrationDiffRootDEV)
          hydrationDiffRootDEV = {
            fiber: fiber,
            children: [],
            serverProps: void 0,
            serverTail: [],
            distanceFromLeaf: distanceFromLeaf
          };
        else {
          if (hydrationDiffRootDEV.fiber !== fiber)
            throw Error(
              "Saw multiple hydration diff roots in a pass. This is a bug in React."
            );
          hydrationDiffRootDEV.distanceFromLeaf > distanceFromLeaf &&
            (hydrationDiffRootDEV.distanceFromLeaf = distanceFromLeaf);
        }
        return hydrationDiffRootDEV;
      }
      var siblings = buildHydrationDiffNode(
        fiber.return,
        distanceFromLeaf + 1
      ).children;
      if (0 < siblings.length && siblings[siblings.length - 1].fiber === fiber)
        return (
          (siblings = siblings[siblings.length - 1]),
          siblings.distanceFromLeaf > distanceFromLeaf &&
            (siblings.distanceFromLeaf = distanceFromLeaf),
          siblings
        );
      distanceFromLeaf = {
        fiber: fiber,
        children: [],
        serverProps: void 0,
        serverTail: [],
        distanceFromLeaf: distanceFromLeaf
      };
      siblings.push(distanceFromLeaf);
      return distanceFromLeaf;
    }
    function warnIfHydrating() {
      isHydrating &&
        console.error(
          "We should not be hydrating here. This is a bug in React. Please file a bug."
        );
    }
    function warnNonHydratedInstance(fiber, rejectedCandidate) {
      didSuspendOrErrorDEV ||
        ((fiber = buildHydrationDiffNode(fiber, 0)),
        (fiber.serverProps = null),
        null !== rejectedCandidate &&
          ((rejectedCandidate =
            describeHydratableInstanceForDevWarnings(rejectedCandidate)),
          fiber.serverTail.push(rejectedCandidate)));
    }
    function throwOnHydrationMismatch(fiber) {
      var fromText =
          1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : !1,
        diff = "",
        diffRoot = hydrationDiffRootDEV;
      null !== diffRoot &&
        ((hydrationDiffRootDEV = null), (diff = describeDiff(diffRoot)));
      queueHydrationError(
        createCapturedValueAtFiber(
          Error(
            "Hydration failed because the server rendered " +
              (fromText ? "text" : "HTML") +
              " didn't match the client. As a result this tree will be regenerated on the client. This can happen if a SSR-ed Client Component used:\n\n- A server/client branch `if (typeof window !== 'undefined')`.\n- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.\n- Date formatting in a user's locale which doesn't match the server.\n- External changing data without sending a snapshot of it along with the HTML.\n- Invalid HTML tag nesting.\n\nIt can also happen if the client has a browser extension installed which messes with the HTML before React loaded.\n\nhttps://react.dev/link/hydration-mismatch" +
              diff
          ),
          fiber
        )
      );
      throw HydrationMismatchException;
    }
    function prepareToHydrateHostInstance(fiber) {
      var didHydrate = fiber.stateNode;
      var type = fiber.type,
        props = fiber.memoizedProps;
      didHydrate[internalInstanceKey] = fiber;
      didHydrate[internalPropsKey] = props;
      validatePropertiesInDevelopment(type, props);
      switch (type) {
        case "dialog":
          listenToNonDelegatedEvent("cancel", didHydrate);
          listenToNonDelegatedEvent("close", didHydrate);
          break;
        case "iframe":
        case "object":
        case "embed":
          listenToNonDelegatedEvent("load", didHydrate);
          break;
        case "video":
        case "audio":
          for (type = 0; type < mediaEventTypes.length; type++)
            listenToNonDelegatedEvent(mediaEventTypes[type], didHydrate);
          break;
        case "source":
          listenToNonDelegatedEvent("error", didHydrate);
          break;
        case "img":
        case "image":
        case "link":
          listenToNonDelegatedEvent("error", didHydrate);
          listenToNonDelegatedEvent("load", didHydrate);
          break;
        case "details":
          listenToNonDelegatedEvent("toggle", didHydrate);
          break;
        case "input":
          checkControlledValueProps("input", props);
          listenToNonDelegatedEvent("invalid", didHydrate);
          validateInputProps(didHydrate, props);
          initInput(
            didHydrate,
            props.value,
            props.defaultValue,
            props.checked,
            props.defaultChecked,
            props.type,
            props.name,
            !0
          );
          break;
        case "option":
          validateOptionProps(didHydrate, props);
          break;
        case "select":
          checkControlledValueProps("select", props);
          listenToNonDelegatedEvent("invalid", didHydrate);
          validateSelectProps(didHydrate, props);
          break;
        case "textarea":
          checkControlledValueProps("textarea", props),
            listenToNonDelegatedEvent("invalid", didHydrate),
            validateTextareaProps(didHydrate, props),
            initTextarea(
              didHydrate,
              props.value,
              props.defaultValue,
              props.children
            );
      }
      type = props.children;
      ("string" !== typeof type &&
        "number" !== typeof type &&
        "bigint" !== typeof type) ||
      didHydrate.textContent === "" + type ||
      !0 === props.suppressHydrationWarning ||
      checkForUnmatchedText(didHydrate.textContent, type)
        ? (null != props.popover &&
            (listenToNonDelegatedEvent("beforetoggle", didHydrate),
            listenToNonDelegatedEvent("toggle", didHydrate)),
          null != props.onScroll &&
            listenToNonDelegatedEvent("scroll", didHydrate),
          null != props.onScrollEnd &&
            listenToNonDelegatedEvent("scrollend", didHydrate),
          null != props.onClick && (didHydrate.onclick = noop$1),
          (didHydrate = !0))
        : (didHydrate = !1);
      didHydrate || throwOnHydrationMismatch(fiber, !0);
    }
    function popToNextHostParent(fiber) {
      for (hydrationParentFiber = fiber.return; hydrationParentFiber; )
        switch (hydrationParentFiber.tag) {
          case 5:
          case 31:
          case 13:
            rootOrSingletonContext = !1;
            return;
          case 27:
          case 3:
            rootOrSingletonContext = !0;
            return;
          default:
            hydrationParentFiber = hydrationParentFiber.return;
        }
    }
    function popHydrationState(fiber) {
      if (fiber !== hydrationParentFiber) return !1;
      if (!isHydrating)
        return popToNextHostParent(fiber), (isHydrating = !0), !1;
      var tag = fiber.tag,
        JSCompiler_temp;
      if ((JSCompiler_temp = 3 !== tag && 27 !== tag)) {
        if ((JSCompiler_temp = 5 === tag))
          (JSCompiler_temp = fiber.type),
            (JSCompiler_temp =
              !("form" !== JSCompiler_temp && "button" !== JSCompiler_temp) ||
              shouldSetTextContent(fiber.type, fiber.memoizedProps));
        JSCompiler_temp = !JSCompiler_temp;
      }
      if (JSCompiler_temp && nextHydratableInstance) {
        for (JSCompiler_temp = nextHydratableInstance; JSCompiler_temp; ) {
          var diffNode = buildHydrationDiffNode(fiber, 0),
            description =
              describeHydratableInstanceForDevWarnings(JSCompiler_temp);
          diffNode.serverTail.push(description);
          JSCompiler_temp =
            "Suspense" === description.type
              ? getNextHydratableInstanceAfterHydrationBoundary(JSCompiler_temp)
              : getNextHydratable(JSCompiler_temp.nextSibling);
        }
        throwOnHydrationMismatch(fiber);
      }
      popToNextHostParent(fiber);
      if (13 === tag) {
        fiber = fiber.memoizedState;
        fiber = null !== fiber ? fiber.dehydrated : null;
        if (!fiber)
          throw Error(
            "Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue."
          );
        nextHydratableInstance =
          getNextHydratableInstanceAfterHydrationBoundary(fiber);
      } else if (31 === tag) {
        fiber = fiber.memoizedState;
        fiber = null !== fiber ? fiber.dehydrated : null;
        if (!fiber)
          throw Error(
            "Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue."
          );
        nextHydratableInstance =
          getNextHydratableInstanceAfterHydrationBoundary(fiber);
      } else
        27 === tag
          ? ((tag = nextHydratableInstance),
            isSingletonScope(fiber.type)
              ? ((fiber = previousHydratableOnEnteringScopedSingleton),
                (previousHydratableOnEnteringScopedSingleton = null),
                (nextHydratableInstance = fiber))
              : (nextHydratableInstance = tag))
          : (nextHydratableInstance = hydrationParentFiber
              ? getNextHydratable(fiber.stateNode.nextSibling)
              : null);
      return !0;
    }
    function resetHydrationState() {
      nextHydratableInstance = hydrationParentFiber = null;
      didSuspendOrErrorDEV = isHydrating = !1;
    }
    function upgradeHydrationErrorsToRecoverable() {
      var queuedErrors = hydrationErrors;
      null !== queuedErrors &&
        (null === workInProgressRootRecoverableErrors
          ? (workInProgressRootRecoverableErrors = queuedErrors)
          : workInProgressRootRecoverableErrors.push.apply(
              workInProgressRootRecoverableErrors,
              queuedErrors
            ),
        (hydrationErrors = null));
      return queuedErrors;
    }
    function queueHydrationError(error) {
      null === hydrationErrors
        ? (hydrationErrors = [error])
        : hydrationErrors.push(error);
    }
    function emitPendingHydrationWarnings() {
      var diffRoot = hydrationDiffRootDEV;
      if (null !== diffRoot) {
        hydrationDiffRootDEV = null;
        for (var diff = describeDiff(diffRoot); 0 < diffRoot.children.length; )
          diffRoot = diffRoot.children[0];
        runWithFiberInDEV(diffRoot.fiber, function () {
          console.error(
            "A tree hydrated but some attributes of the server rendered HTML didn't match the client properties. This won't be patched up. This can happen if a SSR-ed Client Component used:\n\n- A server/client branch `if (typeof window !== 'undefined')`.\n- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.\n- Date formatting in a user's locale which doesn't match the server.\n- External changing data without sending a snapshot of it along with the HTML.\n- Invalid HTML tag nesting.\n\nIt can also happen if the client has a browser extension installed which messes with the HTML before React loaded.\n\n%s%s",
            "https://react.dev/link/hydration-mismatch",
            diff
          );
        });
      }
    }
    function resetContextDependencies() {
      lastContextDependency = currentlyRenderingFiber$1 = null;
      isDisallowedContextReadInDEV = !1;
    }
    function pushProvider(providerFiber, context, nextValue) {
      push(valueCursor, context._currentValue, providerFiber);
      context._currentValue = nextValue;
      push(rendererCursorDEV, context._currentRenderer, providerFiber);
      void 0 !== context._currentRenderer &&
        null !== context._currentRenderer &&
        context._currentRenderer !== rendererSigil &&
        console.error(
          "Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported."
        );
      context._currentRenderer = rendererSigil;
    }
    function popProvider(context, providerFiber) {
      context._currentValue = valueCursor.current;
      var currentRenderer = rendererCursorDEV.current;
      pop(rendererCursorDEV, providerFiber);
      context._currentRenderer = currentRenderer;
      pop(valueCursor, providerFiber);
    }
    function scheduleContextWorkOnParentPath(
      parent,
      renderLanes,
      propagationRoot
    ) {
      for (; null !== parent; ) {
        var alternate = parent.alternate;
        (parent.childLanes & renderLanes) !== renderLanes
          ? ((parent.childLanes |= renderLanes),
            null !== alternate && (alternate.childLanes |= renderLanes))
          : null !== alternate &&
            (alternate.childLanes & renderLanes) !== renderLanes &&
            (alternate.childLanes |= renderLanes);
        if (parent === propagationRoot) break;
        parent = parent.return;
      }
      parent !== propagationRoot &&
        console.error(
          "Expected to find the propagation root when scheduling context work. This error is likely caused by a bug in React. Please file an issue."
        );
    }
    function propagateContextChanges(
      workInProgress,
      contexts,
      renderLanes,
      forcePropagateEntireTree
    ) {
      var fiber = workInProgress.child;
      null !== fiber && (fiber.return = workInProgress);
      for (; null !== fiber; ) {
        var list = fiber.dependencies;
        if (null !== list) {
          var nextFiber = fiber.child;
          list = list.firstContext;
          a: for (; null !== list; ) {
            var dependency = list;
            list = fiber;
            for (var i = 0; i < contexts.length; i++)
              if (dependency.context === contexts[i]) {
                list.lanes |= renderLanes;
                dependency = list.alternate;
                null !== dependency && (dependency.lanes |= renderLanes);
                scheduleContextWorkOnParentPath(
                  list.return,
                  renderLanes,
                  workInProgress
                );
                forcePropagateEntireTree || (nextFiber = null);
                break a;
              }
            list = dependency.next;
          }
        } else if (18 === fiber.tag) {
          nextFiber = fiber.return;
          if (null === nextFiber)
            throw Error(
              "We just came from a parent so we must have had a parent. This is a bug in React."
            );
          nextFiber.lanes |= renderLanes;
          list = nextFiber.alternate;
          null !== list && (list.lanes |= renderLanes);
          scheduleContextWorkOnParentPath(
            nextFiber,
            renderLanes,
            workInProgress
          );
          nextFiber = null;
        } else nextFiber = fiber.child;
        if (null !== nextFiber) nextFiber.return = fiber;
        else
          for (nextFiber = fiber; null !== nextFiber; ) {
            if (nextFiber === workInProgress) {
              nextFiber = null;
              break;
            }
            fiber = nextFiber.sibling;
            if (null !== fiber) {
              fiber.return = nextFiber.return;
              nextFiber = fiber;
              break;
            }
            nextFiber = nextFiber.return;
          }
        fiber = nextFiber;
      }
    }
    function propagateParentContextChanges(
      current,
      workInProgress,
      renderLanes,
      forcePropagateEntireTree
    ) {
      current = null;
      for (
        var parent = workInProgress, isInsidePropagationBailout = !1;
        null !== parent;

      ) {
        if (!isInsidePropagationBailout)
          if (0 !== (parent.flags & 524288)) isInsidePropagationBailout = !0;
          else if (0 !== (parent.flags & 262144)) break;
        if (10 === parent.tag) {
          var currentParent = parent.alternate;
          if (null === currentParent)
            throw Error("Should have a current fiber. This is a bug in React.");
          currentParent = currentParent.memoizedProps;
          if (null !== currentParent) {
            var context = parent.type;
            objectIs(parent.pendingProps.value, currentParent.value) ||
              (null !== current
                ? current.push(context)
                : (current = [context]));
          }
        } else if (parent === hostTransitionProviderCursor.current) {
          currentParent = parent.alternate;
          if (null === currentParent)
            throw Error("Should have a current fiber. This is a bug in React.");
          currentParent.memoizedState.memoizedState !==
            parent.memoizedState.memoizedState &&
            (null !== current
              ? current.push(HostTransitionContext)
              : (current = [HostTransitionContext]));
        }
        parent = parent.return;
      }
      null !== current &&
        propagateContextChanges(
          workInProgress,
          current,
          renderLanes,
          forcePropagateEntireTree
        );
      workInProgress.flags |= 262144;
    }
    function checkIfContextChanged(currentDependencies) {
      for (
        currentDependencies = currentDependencies.firstContext;
        null !== currentDependencies;

      ) {
        if (
          !objectIs(
            currentDependencies.context._currentValue,
            currentDependencies.memoizedValue
          )
        )
          return !0;
        currentDependencies = currentDependencies.next;
      }
      return !1;
    }
    function prepareToReadContext(workInProgress) {
      currentlyRenderingFiber$1 = workInProgress;
      lastContextDependency = null;
      workInProgress = workInProgress.dependencies;
      null !== workInProgress && (workInProgress.firstContext = null);
    }
    function readContext(context) {
      isDisallowedContextReadInDEV &&
        console.error(
          "Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo()."
        );
      return readContextForConsumer(currentlyRenderingFiber$1, context);
    }
    function readContextDuringReconciliation(consumer, context) {
      null === currentlyRenderingFiber$1 && prepareToReadContext(consumer);
      return readContextForConsumer(consumer, context);
    }
    function readContextForConsumer(consumer, context) {
      var value = context._currentValue;
      context = { context: context, memoizedValue: value, next: null };
      if (null === lastContextDependency) {
        if (null === consumer)
          throw Error(
            "Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo()."
          );
        lastContextDependency = context;
        consumer.dependencies = {
          lanes: 0,
          firstContext: context,
          _debugThenableState: null
        };
        consumer.flags |= 524288;
      } else lastContextDependency = lastContextDependency.next = context;
      return value;
    }
    function createCache() {
      return {
        controller: new AbortControllerLocal(),
        data: new Map(),
        refCount: 0
      };
    }
    function retainCache(cache) {
      cache.controller.signal.aborted &&
        console.warn(
          "A cache instance was retained after it was already freed. This likely indicates a bug in React."
        );
      cache.refCount++;
    }
    function releaseCache(cache) {
      cache.refCount--;
      0 > cache.refCount &&
        console.warn(
          "A cache instance was released after it was already freed. This likely indicates a bug in React."
        );
      0 === cache.refCount &&
        scheduleCallback$2(NormalPriority, function () {
          cache.controller.abort();
        });
    }
    function startUpdateTimerByLane(lane, method, fiber) {
      if (0 !== (lane & 127))
        0 > blockingUpdateTime &&
          ((blockingUpdateTime = now()),
          (blockingUpdateTask = createTask(method)),
          (blockingUpdateMethodName = method),
          null != fiber &&
            (blockingUpdateComponentName = getComponentNameFromFiber(fiber)),
          (executionContext & (RenderContext | CommitContext)) !== NoContext &&
            ((componentEffectSpawnedUpdate = !0),
            (blockingUpdateType = SPAWNED_UPDATE)),
          (lane = resolveEventTimeStamp()),
          (method = resolveEventType()),
          lane !== blockingEventRepeatTime || method !== blockingEventType
            ? (blockingEventRepeatTime = -1.1)
            : null !== method && (blockingUpdateType = SPAWNED_UPDATE),
          (blockingEventTime = lane),
          (blockingEventType = method));
      else if (
        0 !== (lane & 4194048) &&
        0 > transitionUpdateTime &&
        ((transitionUpdateTime = now()),
        (transitionUpdateTask = createTask(method)),
        (transitionUpdateMethodName = method),
        null != fiber &&
          (transitionUpdateComponentName = getComponentNameFromFiber(fiber)),
        0 > transitionStartTime)
      ) {
        lane = resolveEventTimeStamp();
        method = resolveEventType();
        if (
          lane !== transitionEventRepeatTime ||
          method !== transitionEventType
        )
          transitionEventRepeatTime = -1.1;
        transitionEventTime = lane;
        transitionEventType = method;
      }
    }
    function startHostActionTimer(fiber) {
      if (0 > blockingUpdateTime) {
        blockingUpdateTime = now();
        blockingUpdateTask = null != fiber._debugTask ? fiber._debugTask : null;
        (executionContext & (RenderContext | CommitContext)) !== NoContext &&
          (blockingUpdateType = SPAWNED_UPDATE);
        var newEventTime = resolveEventTimeStamp(),
          newEventType = resolveEventType();
        newEventTime !== blockingEventRepeatTime ||
        newEventType !== blockingEventType
          ? (blockingEventRepeatTime = -1.1)
          : null !== newEventType && (blockingUpdateType = SPAWNED_UPDATE);
        blockingEventTime = newEventTime;
        blockingEventType = newEventType;
      }
      if (
        0 > transitionUpdateTime &&
        ((transitionUpdateTime = now()),
        (transitionUpdateTask =
          null != fiber._debugTask ? fiber._debugTask : null),
        0 > transitionStartTime)
      ) {
        fiber = resolveEventTimeStamp();
        newEventTime = resolveEventType();
        if (
          fiber !== transitionEventRepeatTime ||
          newEventTime !== transitionEventType
        )
          transitionEventRepeatTime = -1.1;
        transitionEventTime = fiber;
        transitionEventType = newEventTime;
      }
    }
    function pushNestedEffectDurations() {
      var prevEffectDuration = profilerEffectDuration;
      profilerEffectDuration = 0;
      return prevEffectDuration;
    }
    function popNestedEffectDurations(prevEffectDuration) {
      var elapsedTime = profilerEffectDuration;
      profilerEffectDuration = prevEffectDuration;
      return elapsedTime;
    }
    function bubbleNestedEffectDurations(prevEffectDuration) {
      var elapsedTime = profilerEffectDuration;
      profilerEffectDuration += prevEffectDuration;
      return elapsedTime;
    }
    function resetComponentEffectTimers() {
      componentEffectEndTime = componentEffectStartTime = -1.1;
    }
    function pushComponentEffectStart() {
      var prevEffectStart = componentEffectStartTime;
      componentEffectStartTime = -1.1;
      return prevEffectStart;
    }
    function popComponentEffectStart(prevEffectStart) {
      0 <= prevEffectStart && (componentEffectStartTime = prevEffectStart);
    }
    function pushComponentEffectDuration() {
      var prevEffectDuration = componentEffectDuration;
      componentEffectDuration = -0;
      return prevEffectDuration;
    }
    function popComponentEffectDuration(prevEffectDuration) {
      0 <= prevEffectDuration && (componentEffectDuration = prevEffectDuration);
    }
    function pushComponentEffectErrors() {
      var prevErrors = componentEffectErrors;
      componentEffectErrors = null;
      return prevErrors;
    }
    function pushComponentEffectDidSpawnUpdate() {
      var prev = componentEffectSpawnedUpdate;
      componentEffectSpawnedUpdate = !1;
      return prev;
    }
    function startProfilerTimer(fiber) {
      profilerStartTime = now();
      0 > fiber.actualStartTime && (fiber.actualStartTime = profilerStartTime);
    }
    function stopProfilerTimerIfRunningAndRecordDuration(fiber) {
      if (0 <= profilerStartTime) {
        var elapsedTime = now() - profilerStartTime;
        fiber.actualDuration += elapsedTime;
        fiber.selfBaseDuration = elapsedTime;
        profilerStartTime = -1;
      }
    }
    function stopProfilerTimerIfRunningAndRecordIncompleteDuration(fiber) {
      if (0 <= profilerStartTime) {
        var elapsedTime = now() - profilerStartTime;
        fiber.actualDuration += elapsedTime;
        profilerStartTime = -1;
      }
    }
    function recordEffectDuration() {
      if (0 <= profilerStartTime) {
        var endTime = now(),
          elapsedTime = endTime - profilerStartTime;
        profilerStartTime = -1;
        profilerEffectDuration += elapsedTime;
        componentEffectDuration += elapsedTime;
        componentEffectEndTime = endTime;
      }
    }
    function recordEffectError(errorInfo) {
      null === componentEffectErrors && (componentEffectErrors = []);
      componentEffectErrors.push(errorInfo);
      null === commitErrors && (commitErrors = []);
      commitErrors.push(errorInfo);
    }
    function startEffectTimer() {
      profilerStartTime = now();
      0 > componentEffectStartTime &&
        (componentEffectStartTime = profilerStartTime);
    }
    function transferActualDuration(fiber) {
      for (var child = fiber.child; child; )
        (fiber.actualDuration += child.actualDuration), (child = child.sibling);
    }
    function entangleAsyncAction(transition, thenable) {
      if (null === currentEntangledListeners) {
        var entangledListeners = (currentEntangledListeners = []);
        currentEntangledPendingCount = 0;
        currentEntangledLane = requestTransitionLane();
        currentEntangledActionThenable = {
          status: "pending",
          value: void 0,
          then: function (resolve) {
            entangledListeners.push(resolve);
          }
        };
      }
      currentEntangledPendingCount++;
      thenable.then(pingEngtangledActionScope, pingEngtangledActionScope);
      return thenable;
    }
    function pingEngtangledActionScope() {
      if (
        0 === --currentEntangledPendingCount &&
        (-1 < transitionUpdateTime || (transitionStartTime = -1.1),
        null !== currentEntangledListeners)
      ) {
        null !== currentEntangledActionThenable &&
          (currentEntangledActionThenable.status = "fulfilled");
        var listeners = currentEntangledListeners;
        currentEntangledListeners = null;
        currentEntangledLane = 0;
        currentEntangledActionThenable = null;
        for (var i = 0; i < listeners.length; i++) (0, listeners[i])();
      }
    }
    function chainThenableValue(thenable, result) {
      var listeners = [],
        thenableWithOverride = {
          status: "pending",
          value: null,
          reason: null,
          then: function (resolve) {
            listeners.push(resolve);
          }
        };
      thenable.then(
        function () {
          thenableWithOverride.status = "fulfilled";
          thenableWithOverride.value = result;
          for (var i = 0; i < listeners.length; i++) (0, listeners[i])(result);
        },
        function (error) {
          thenableWithOverride.status = "rejected";
          thenableWithOverride.reason = error;
          for (error = 0; error < listeners.length; error++)
            (0, listeners[error])(void 0);
        }
      );
      return thenableWithOverride;
    }
    function peekCacheFromPool() {
      var cacheResumedFromPreviousRender = resumedCache.current;
      return null !== cacheResumedFromPreviousRender
        ? cacheResumedFromPreviousRender
        : workInProgressRoot.pooledCache;
    }
    function pushTransition(offscreenWorkInProgress, prevCachePool) {
      null === prevCachePool
        ? push(resumedCache, resumedCache.current, offscreenWorkInProgress)
        : push(resumedCache, prevCachePool.pool, offscreenWorkInProgress);
    }
    function getSuspendedCache() {
      var cacheFromPool = peekCacheFromPool();
      return null === cacheFromPool
        ? null
        : { parent: CacheContext._currentValue, pool: cacheFromPool };
    }
    function createThenableState() {
      return { didWarnAboutUncachedPromise: !1, thenables: [] };
    }
    function isThenableResolved(thenable) {
      thenable = thenable.status;
      return "fulfilled" === thenable || "rejected" === thenable;
    }
    function trackUsedThenable(thenableState, thenable, index) {
      null !== ReactSharedInternals.actQueue &&
        (ReactSharedInternals.didUsePromise = !0);
      var trackedThenables = thenableState.thenables;
      index = trackedThenables[index];
      void 0 === index
        ? trackedThenables.push(thenable)
        : index !== thenable &&
          (thenableState.didWarnAboutUncachedPromise ||
            ((thenableState.didWarnAboutUncachedPromise = !0),
            console.error(
              "A component was suspended by an uncached promise. Creating promises inside a Client Component or hook is not yet supported, except via a Suspense-compatible library or framework."
            )),
          thenable.then(noop$1, noop$1),
          (thenable = index));
      if (void 0 === thenable._debugInfo) {
        thenableState = performance.now();
        trackedThenables = thenable.displayName;
        var ioInfo = {
          name:
            "string" === typeof trackedThenables ? trackedThenables : "Promise",
          start: thenableState,
          end: thenableState,
          value: thenable
        };
        thenable._debugInfo = [{ awaited: ioInfo }];
        "fulfilled" !== thenable.status &&
          "rejected" !== thenable.status &&
          ((thenableState = function () {
            ioInfo.end = performance.now();
          }),
          thenable.then(thenableState, thenableState));
      }
      switch (thenable.status) {
        case "fulfilled":
          return thenable.value;
        case "rejected":
          throw (
            ((thenableState = thenable.reason),
            checkIfUseWrappedInAsyncCatch(thenableState),
            thenableState)
          );
        default:
          if ("string" === typeof thenable.status)
            thenable.then(noop$1, noop$1);
          else {
            thenableState = workInProgressRoot;
            if (
              null !== thenableState &&
              100 < thenableState.shellSuspendCounter
            )
              throw Error(
                "An unknown Component is an async Client Component. Only Server Components can be async at the moment. This error is often caused by accidentally adding `'use client'` to a module that was originally written for the server."
              );
            thenableState = thenable;
            thenableState.status = "pending";
            thenableState.then(
              function (fulfilledValue) {
                if ("pending" === thenable.status) {
                  var fulfilledThenable = thenable;
                  fulfilledThenable.status = "fulfilled";
                  fulfilledThenable.value = fulfilledValue;
                }
              },
              function (error) {
                if ("pending" === thenable.status) {
                  var rejectedThenable = thenable;
                  rejectedThenable.status = "rejected";
                  rejectedThenable.reason = error;
                }
              }
            );
          }
          switch (thenable.status) {
            case "fulfilled":
              return thenable.value;
            case "rejected":
              throw (
                ((thenableState = thenable.reason),
                checkIfUseWrappedInAsyncCatch(thenableState),
                thenableState)
              );
          }
          suspendedThenable = thenable;
          needsToResetSuspendedThenableDEV = !0;
          throw SuspenseException;
      }
    }
    function resolveLazy(lazyType) {
      try {
        return callLazyInitInDEV(lazyType);
      } catch (x) {
        if (null !== x && "object" === typeof x && "function" === typeof x.then)
          throw (
            ((suspendedThenable = x),
            (needsToResetSuspendedThenableDEV = !0),
            SuspenseException)
          );
        throw x;
      }
    }
    function getSuspendedThenable() {
      if (null === suspendedThenable)
        throw Error(
          "Expected a suspended thenable. This is a bug in React. Please file an issue."
        );
      var thenable = suspendedThenable;
      suspendedThenable = null;
      needsToResetSuspendedThenableDEV = !1;
      return thenable;
    }
    function checkIfUseWrappedInAsyncCatch(rejectedReason) {
      if (
        rejectedReason === SuspenseException ||
        rejectedReason === SuspenseActionException
      )
        throw Error(
          "Hooks are not supported inside an async component. This error is often caused by accidentally adding `'use client'` to a module that was originally written for the server."
        );
    }
    function pushDebugInfo(debugInfo) {
      var previousDebugInfo = currentDebugInfo;
      null != debugInfo &&
        (currentDebugInfo =
          null === previousDebugInfo
            ? debugInfo
            : previousDebugInfo.concat(debugInfo));
      return previousDebugInfo;
    }
    function getCurrentDebugTask() {
      var debugInfo = currentDebugInfo;
      if (null != debugInfo)
        for (var i = debugInfo.length - 1; 0 <= i; i--)
          if (null != debugInfo[i].name) {
            var debugTask = debugInfo[i].debugTask;
            if (null != debugTask) return debugTask;
          }
      return null;
    }
    function validateFragmentProps(element, fiber, returnFiber) {
      for (var keys = Object.keys(element.props), i = 0; i < keys.length; i++) {
        var key = keys[i];
        if ("children" !== key && "key" !== key) {
          null === fiber &&
            ((fiber = createFiberFromElement(element, returnFiber.mode, 0)),
            (fiber._debugInfo = currentDebugInfo),
            (fiber.return = returnFiber));
          runWithFiberInDEV(
            fiber,
            function (erroredKey) {
              console.error(
                "Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.",
                erroredKey
              );
            },
            key
          );
          break;
        }
      }
    }
    function unwrapThenable(thenable) {
      var index = thenableIndexCounter$1;
      thenableIndexCounter$1 += 1;
      null === thenableState$1 && (thenableState$1 = createThenableState());
      return trackUsedThenable(thenableState$1, thenable, index);
    }
    function coerceRef(workInProgress, element) {
      element = element.props.ref;
      workInProgress.ref = void 0 !== element ? element : null;
    }
    function throwOnInvalidObjectTypeImpl(returnFiber, newChild) {
      if (newChild.$$typeof === REACT_LEGACY_ELEMENT_TYPE)
        throw Error(
          'A React Element from an older version of React was rendered. This is not supported. It can happen if:\n- Multiple copies of the "react" package is used.\n- A library pre-bundled an old copy of "react" or "react/jsx-runtime".\n- A compiler tries to "inline" JSX instead of using the runtime.'
        );
      returnFiber = Object.prototype.toString.call(newChild);
      throw Error(
        "Objects are not valid as a React child (found: " +
          ("[object Object]" === returnFiber
            ? "object with keys {" + Object.keys(newChild).join(", ") + "}"
            : returnFiber) +
          "). If you meant to render a collection of children, use an array instead."
      );
    }
    function throwOnInvalidObjectType(returnFiber, newChild) {
      var debugTask = getCurrentDebugTask();
      null !== debugTask
        ? debugTask.run(
            throwOnInvalidObjectTypeImpl.bind(null, returnFiber, newChild)
          )
        : throwOnInvalidObjectTypeImpl(returnFiber, newChild);
    }
    function warnOnFunctionTypeImpl(returnFiber, invalidChild) {
      var parentName = getComponentNameFromFiber(returnFiber) || "Component";
      ownerHasFunctionTypeWarning[parentName] ||
        ((ownerHasFunctionTypeWarning[parentName] = !0),
        (invalidChild =
          invalidChild.displayName || invalidChild.name || "Component"),
        3 === returnFiber.tag
          ? console.error(
              "Functions are not valid as a React child. This may happen if you return %s instead of <%s /> from render. Or maybe you meant to call this function rather than return it.\n  root.render(%s)",
              invalidChild,
              invalidChild,
              invalidChild
            )
          : console.error(
              "Functions are not valid as a React child. This may happen if you return %s instead of <%s /> from render. Or maybe you meant to call this function rather than return it.\n  <%s>{%s}</%s>",
              invalidChild,
              invalidChild,
              parentName,
              invalidChild,
              parentName
            ));
    }
    function warnOnFunctionType(returnFiber, invalidChild) {
      var debugTask = getCurrentDebugTask();
      null !== debugTask
        ? debugTask.run(
            warnOnFunctionTypeImpl.bind(null, returnFiber, invalidChild)
          )
        : warnOnFunctionTypeImpl(returnFiber, invalidChild);
    }
    function warnOnSymbolTypeImpl(returnFiber, invalidChild) {
      var parentName = getComponentNameFromFiber(returnFiber) || "Component";
      ownerHasSymbolTypeWarning[parentName] ||
        ((ownerHasSymbolTypeWarning[parentName] = !0),
        (invalidChild = String(invalidChild)),
        3 === returnFiber.tag
          ? console.error(
              "Symbols are not valid as a React child.\n  root.render(%s)",
              invalidChild
            )
          : console.error(
              "Symbols are not valid as a React child.\n  <%s>%s</%s>",
              parentName,
              invalidChild,
              parentName
            ));
    }
    function warnOnSymbolType(returnFiber, invalidChild) {
      var debugTask = getCurrentDebugTask();
      null !== debugTask
        ? debugTask.run(
            warnOnSymbolTypeImpl.bind(null, returnFiber, invalidChild)
          )
        : warnOnSymbolTypeImpl(returnFiber, invalidChild);
    }
    function createChildReconciler(shouldTrackSideEffects) {
      function deleteChild(returnFiber, childToDelete) {
        if (shouldTrackSideEffects) {
          var deletions = returnFiber.deletions;
          null === deletions
            ? ((returnFiber.deletions = [childToDelete]),
              (returnFiber.flags |= 16))
            : deletions.push(childToDelete);
        }
      }
      function deleteRemainingChildren(returnFiber, currentFirstChild) {
        if (!shouldTrackSideEffects) return null;
        for (; null !== currentFirstChild; )
          deleteChild(returnFiber, currentFirstChild),
            (currentFirstChild = currentFirstChild.sibling);
        return null;
      }
      function mapRemainingChildren(currentFirstChild) {
        for (var existingChildren = new Map(); null !== currentFirstChild; )
          null !== currentFirstChild.key
            ? existingChildren.set(currentFirstChild.key, currentFirstChild)
            : existingChildren.set(currentFirstChild.index, currentFirstChild),
            (currentFirstChild = currentFirstChild.sibling);
        return existingChildren;
      }
      function useFiber(fiber, pendingProps) {
        fiber = createWorkInProgress(fiber, pendingProps);
        fiber.index = 0;
        fiber.sibling = null;
        return fiber;
      }
      function placeChild(newFiber, lastPlacedIndex, newIndex) {
        newFiber.index = newIndex;
        if (!shouldTrackSideEffects)
          return (newFiber.flags |= 1048576), lastPlacedIndex;
        newIndex = newFiber.alternate;
        if (null !== newIndex)
          return (
            (newIndex = newIndex.index),
            newIndex < lastPlacedIndex
              ? ((newFiber.flags |= 67108866), lastPlacedIndex)
              : newIndex
          );
        newFiber.flags |= 67108866;
        return lastPlacedIndex;
      }
      function placeSingleChild(newFiber) {
        shouldTrackSideEffects &&
          null === newFiber.alternate &&
          (newFiber.flags |= 67108866);
        return newFiber;
      }
      function updateTextNode(returnFiber, current, textContent, lanes) {
        if (null === current || 6 !== current.tag)
          return (
            (current = createFiberFromText(
              textContent,
              returnFiber.mode,
              lanes
            )),
            (current.return = returnFiber),
            (current._debugOwner = returnFiber),
            (current._debugTask = returnFiber._debugTask),
            (current._debugInfo = currentDebugInfo),
            current
          );
        current = useFiber(current, textContent);
        current.return = returnFiber;
        current._debugInfo = currentDebugInfo;
        return current;
      }
      function updateElement(returnFiber, current, element, lanes) {
        var elementType = element.type;
        if (elementType === REACT_FRAGMENT_TYPE)
          return (
            (current = updateFragment(
              returnFiber,
              current,
              element.props.children,
              lanes,
              element.key
            )),
            validateFragmentProps(element, current, returnFiber),
            current
          );
        if (
          null !== current &&
          (current.elementType === elementType ||
            isCompatibleFamilyForHotReloading(current, element) ||
            ("object" === typeof elementType &&
              null !== elementType &&
              elementType.$$typeof === REACT_LAZY_TYPE &&
              resolveLazy(elementType) === current.type))
        )
          return (
            (current = useFiber(current, element.props)),
            coerceRef(current, element),
            (current.return = returnFiber),
            (current._debugOwner = element._owner),
            (current._debugInfo = currentDebugInfo),
            current
          );
        current = createFiberFromElement(element, returnFiber.mode, lanes);
        coerceRef(current, element);
        current.return = returnFiber;
        current._debugInfo = currentDebugInfo;
        return current;
      }
      function updatePortal(returnFiber, current, portal, lanes) {
        if (
          null === current ||
          4 !== current.tag ||
          current.stateNode.containerInfo !== portal.containerInfo ||
          current.stateNode.implementation !== portal.implementation
        )
          return (
            (current = createFiberFromPortal(portal, returnFiber.mode, lanes)),
            (current.return = returnFiber),
            (current._debugInfo = currentDebugInfo),
            current
          );
        current = useFiber(current, portal.children || []);
        current.return = returnFiber;
        current._debugInfo = currentDebugInfo;
        return current;
      }
      function updateFragment(returnFiber, current, fragment, lanes, key) {
        if (null === current || 7 !== current.tag)
          return (
            (current = createFiberFromFragment(
              fragment,
              returnFiber.mode,
              lanes,
              key
            )),
            (current.return = returnFiber),
            (current._debugOwner = returnFiber),
            (current._debugTask = returnFiber._debugTask),
            (current._debugInfo = currentDebugInfo),
            current
          );
        current = useFiber(current, fragment);
        current.return = returnFiber;
        current._debugInfo = currentDebugInfo;
        return current;
      }
      function createChild(returnFiber, newChild, lanes) {
        if (
          ("string" === typeof newChild && "" !== newChild) ||
          "number" === typeof newChild ||
          "bigint" === typeof newChild
        )
          return (
            (newChild = createFiberFromText(
              "" + newChild,
              returnFiber.mode,
              lanes
            )),
            (newChild.return = returnFiber),
            (newChild._debugOwner = returnFiber),
            (newChild._debugTask = returnFiber._debugTask),
            (newChild._debugInfo = currentDebugInfo),
            newChild
          );
        if ("object" === typeof newChild && null !== newChild) {
          switch (newChild.$$typeof) {
            case REACT_ELEMENT_TYPE:
              return (
                (lanes = createFiberFromElement(
                  newChild,
                  returnFiber.mode,
                  lanes
                )),
                coerceRef(lanes, newChild),
                (lanes.return = returnFiber),
                (returnFiber = pushDebugInfo(newChild._debugInfo)),
                (lanes._debugInfo = currentDebugInfo),
                (currentDebugInfo = returnFiber),
                lanes
              );
            case REACT_PORTAL_TYPE:
              return (
                (newChild = createFiberFromPortal(
                  newChild,
                  returnFiber.mode,
                  lanes
                )),
                (newChild.return = returnFiber),
                (newChild._debugInfo = currentDebugInfo),
                newChild
              );
            case REACT_LAZY_TYPE:
              var _prevDebugInfo = pushDebugInfo(newChild._debugInfo);
              newChild = resolveLazy(newChild);
              returnFiber = createChild(returnFiber, newChild, lanes);
              currentDebugInfo = _prevDebugInfo;
              return returnFiber;
          }
          if (isArrayImpl(newChild) || getIteratorFn(newChild))
            return (
              (lanes = createFiberFromFragment(
                newChild,
                returnFiber.mode,
                lanes,
                null
              )),
              (lanes.return = returnFiber),
              (lanes._debugOwner = returnFiber),
              (lanes._debugTask = returnFiber._debugTask),
              (returnFiber = pushDebugInfo(newChild._debugInfo)),
              (lanes._debugInfo = currentDebugInfo),
              (currentDebugInfo = returnFiber),
              lanes
            );
          if ("function" === typeof newChild.then)
            return (
              (_prevDebugInfo = pushDebugInfo(newChild._debugInfo)),
              (returnFiber = createChild(
                returnFiber,
                unwrapThenable(newChild),
                lanes
              )),
              (currentDebugInfo = _prevDebugInfo),
              returnFiber
            );
          if (newChild.$$typeof === REACT_CONTEXT_TYPE)
            return createChild(
              returnFiber,
              readContextDuringReconciliation(returnFiber, newChild),
              lanes
            );
          throwOnInvalidObjectType(returnFiber, newChild);
        }
        "function" === typeof newChild &&
          warnOnFunctionType(returnFiber, newChild);
        "symbol" === typeof newChild && warnOnSymbolType(returnFiber, newChild);
        return null;
      }
      function updateSlot(returnFiber, oldFiber, newChild, lanes) {
        var key = null !== oldFiber ? oldFiber.key : null;
        if (
          ("string" === typeof newChild && "" !== newChild) ||
          "number" === typeof newChild ||
          "bigint" === typeof newChild
        )
          return null !== key
            ? null
            : updateTextNode(returnFiber, oldFiber, "" + newChild, lanes);
        if ("object" === typeof newChild && null !== newChild) {
          switch (newChild.$$typeof) {
            case REACT_ELEMENT_TYPE:
              return newChild.key === key
                ? ((key = pushDebugInfo(newChild._debugInfo)),
                  (returnFiber = updateElement(
                    returnFiber,
                    oldFiber,
                    newChild,
                    lanes
                  )),
                  (currentDebugInfo = key),
                  returnFiber)
                : null;
            case REACT_PORTAL_TYPE:
              return newChild.key === key
                ? updatePortal(returnFiber, oldFiber, newChild, lanes)
                : null;
            case REACT_LAZY_TYPE:
              return (
                (key = pushDebugInfo(newChild._debugInfo)),
                (newChild = resolveLazy(newChild)),
                (returnFiber = updateSlot(
                  returnFiber,
                  oldFiber,
                  newChild,
                  lanes
                )),
                (currentDebugInfo = key),
                returnFiber
              );
          }
          if (isArrayImpl(newChild) || getIteratorFn(newChild)) {
            if (null !== key) return null;
            key = pushDebugInfo(newChild._debugInfo);
            returnFiber = updateFragment(
              returnFiber,
              oldFiber,
              newChild,
              lanes,
              null
            );
            currentDebugInfo = key;
            return returnFiber;
          }
          if ("function" === typeof newChild.then)
            return (
              (key = pushDebugInfo(newChild._debugInfo)),
              (returnFiber = updateSlot(
                returnFiber,
                oldFiber,
                unwrapThenable(newChild),
                lanes
              )),
              (currentDebugInfo = key),
              returnFiber
            );
          if (newChild.$$typeof === REACT_CONTEXT_TYPE)
            return updateSlot(
              returnFiber,
              oldFiber,
              readContextDuringReconciliation(returnFiber, newChild),
              lanes
            );
          throwOnInvalidObjectType(returnFiber, newChild);
        }
        "function" === typeof newChild &&
          warnOnFunctionType(returnFiber, newChild);
        "symbol" === typeof newChild && warnOnSymbolType(returnFiber, newChild);
        return null;
      }
      function updateFromMap(
        existingChildren,
        returnFiber,
        newIdx,
        newChild,
        lanes
      ) {
        if (
          ("string" === typeof newChild && "" !== newChild) ||
          "number" === typeof newChild ||
          "bigint" === typeof newChild
        )
          return (
            (existingChildren = existingChildren.get(newIdx) || null),
            updateTextNode(returnFiber, existingChildren, "" + newChild, lanes)
          );
        if ("object" === typeof newChild && null !== newChild) {
          switch (newChild.$$typeof) {
            case REACT_ELEMENT_TYPE:
              return (
                (newIdx =
                  existingChildren.get(
                    null === newChild.key ? newIdx : newChild.key
                  ) || null),
                (existingChildren = pushDebugInfo(newChild._debugInfo)),
                (returnFiber = updateElement(
                  returnFiber,
                  newIdx,
                  newChild,
                  lanes
                )),
                (currentDebugInfo = existingChildren),
                returnFiber
              );
            case REACT_PORTAL_TYPE:
              return (
                (existingChildren =
                  existingChildren.get(
                    null === newChild.key ? newIdx : newChild.key
                  ) || null),
                updatePortal(returnFiber, existingChildren, newChild, lanes)
              );
            case REACT_LAZY_TYPE:
              var _prevDebugInfo7 = pushDebugInfo(newChild._debugInfo);
              newChild = resolveLazy(newChild);
              returnFiber = updateFromMap(
                existingChildren,
                returnFiber,
                newIdx,
                newChild,
                lanes
              );
              currentDebugInfo = _prevDebugInfo7;
              return returnFiber;
          }
          if (isArrayImpl(newChild) || getIteratorFn(newChild))
            return (
              (newIdx = existingChildren.get(newIdx) || null),
              (existingChildren = pushDebugInfo(newChild._debugInfo)),
              (returnFiber = updateFragment(
                returnFiber,
                newIdx,
                newChild,
                lanes,
                null
              )),
              (currentDebugInfo = existingChildren),
              returnFiber
            );
          if ("function" === typeof newChild.then)
            return (
              (_prevDebugInfo7 = pushDebugInfo(newChild._debugInfo)),
              (returnFiber = updateFromMap(
                existingChildren,
                returnFiber,
                newIdx,
                unwrapThenable(newChild),
                lanes
              )),
              (currentDebugInfo = _prevDebugInfo7),
              returnFiber
            );
          if (newChild.$$typeof === REACT_CONTEXT_TYPE)
            return updateFromMap(
              existingChildren,
              returnFiber,
              newIdx,
              readContextDuringReconciliation(returnFiber, newChild),
              lanes
            );
          throwOnInvalidObjectType(returnFiber, newChild);
        }
        "function" === typeof newChild &&
          warnOnFunctionType(returnFiber, newChild);
        "symbol" === typeof newChild && warnOnSymbolType(returnFiber, newChild);
        return null;
      }
      function warnOnInvalidKey(returnFiber, workInProgress, child, knownKeys) {
        if ("object" !== typeof child || null === child) return knownKeys;
        switch (child.$$typeof) {
          case REACT_ELEMENT_TYPE:
          case REACT_PORTAL_TYPE:
            warnForMissingKey(returnFiber, workInProgress, child);
            var key = child.key;
            if ("string" !== typeof key) break;
            if (null === knownKeys) {
              knownKeys = new Set();
              knownKeys.add(key);
              break;
            }
            if (!knownKeys.has(key)) {
              knownKeys.add(key);
              break;
            }
            runWithFiberInDEV(workInProgress, function () {
              console.error(
                "Encountered two children with the same key, `%s`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted \u2014 the behavior is unsupported and could change in a future version.",
                key
              );
            });
            break;
          case REACT_LAZY_TYPE:
            (child = resolveLazy(child)),
              warnOnInvalidKey(returnFiber, workInProgress, child, knownKeys);
        }
        return knownKeys;
      }
      function reconcileChildrenArray(
        returnFiber,
        currentFirstChild,
        newChildren,
        lanes
      ) {
        for (
          var knownKeys = null,
            resultingFirstChild = null,
            previousNewFiber = null,
            oldFiber = currentFirstChild,
            newIdx = (currentFirstChild = 0),
            nextOldFiber = null;
          null !== oldFiber && newIdx < newChildren.length;
          newIdx++
        ) {
          oldFiber.index > newIdx
            ? ((nextOldFiber = oldFiber), (oldFiber = null))
            : (nextOldFiber = oldFiber.sibling);
          var newFiber = updateSlot(
            returnFiber,
            oldFiber,
            newChildren[newIdx],
            lanes
          );
          if (null === newFiber) {
            null === oldFiber && (oldFiber = nextOldFiber);
            break;
          }
          knownKeys = warnOnInvalidKey(
            returnFiber,
            newFiber,
            newChildren[newIdx],
            knownKeys
          );
          shouldTrackSideEffects &&
            oldFiber &&
            null === newFiber.alternate &&
            deleteChild(returnFiber, oldFiber);
          currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);
          null === previousNewFiber
            ? (resultingFirstChild = newFiber)
            : (previousNewFiber.sibling = newFiber);
          previousNewFiber = newFiber;
          oldFiber = nextOldFiber;
        }
        if (newIdx === newChildren.length)
          return (
            deleteRemainingChildren(returnFiber, oldFiber),
            isHydrating && pushTreeFork(returnFiber, newIdx),
            resultingFirstChild
          );
        if (null === oldFiber) {
          for (; newIdx < newChildren.length; newIdx++)
            (oldFiber = createChild(returnFiber, newChildren[newIdx], lanes)),
              null !== oldFiber &&
                ((knownKeys = warnOnInvalidKey(
                  returnFiber,
                  oldFiber,
                  newChildren[newIdx],
                  knownKeys
                )),
                (currentFirstChild = placeChild(
                  oldFiber,
                  currentFirstChild,
                  newIdx
                )),
                null === previousNewFiber
                  ? (resultingFirstChild = oldFiber)
                  : (previousNewFiber.sibling = oldFiber),
                (previousNewFiber = oldFiber));
          isHydrating && pushTreeFork(returnFiber, newIdx);
          return resultingFirstChild;
        }
        for (
          oldFiber = mapRemainingChildren(oldFiber);
          newIdx < newChildren.length;
          newIdx++
        )
          (nextOldFiber = updateFromMap(
            oldFiber,
            returnFiber,
            newIdx,
            newChildren[newIdx],
            lanes
          )),
            null !== nextOldFiber &&
              ((knownKeys = warnOnInvalidKey(
                returnFiber,
                nextOldFiber,
                newChildren[newIdx],
                knownKeys
              )),
              shouldTrackSideEffects &&
                null !== nextOldFiber.alternate &&
                oldFiber.delete(
                  null === nextOldFiber.key ? newIdx : nextOldFiber.key
                ),
              (currentFirstChild = placeChild(
                nextOldFiber,
                currentFirstChild,
                newIdx
              )),
              null === previousNewFiber
                ? (resultingFirstChild = nextOldFiber)
                : (previousNewFiber.sibling = nextOldFiber),
              (previousNewFiber = nextOldFiber));
        shouldTrackSideEffects &&
          oldFiber.forEach(function (child) {
            return deleteChild(returnFiber, child);
          });
        isHydrating && pushTreeFork(returnFiber, newIdx);
        return resultingFirstChild;
      }
      function reconcileChildrenIterator(
        returnFiber,
        currentFirstChild,
        newChildren,
        lanes
      ) {
        if (null == newChildren)
          throw Error("An iterable object provided no iterator.");
        for (
          var resultingFirstChild = null,
            previousNewFiber = null,
            oldFiber = currentFirstChild,
            newIdx = (currentFirstChild = 0),
            nextOldFiber = null,
            knownKeys = null,
            step = newChildren.next();
          null !== oldFiber && !step.done;
          newIdx++, step = newChildren.next()
        ) {
          oldFiber.index > newIdx
            ? ((nextOldFiber = oldFiber), (oldFiber = null))
            : (nextOldFiber = oldFiber.sibling);
          var newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);
          if (null === newFiber) {
            null === oldFiber && (oldFiber = nextOldFiber);
            break;
          }
          knownKeys = warnOnInvalidKey(
            returnFiber,
            newFiber,
            step.value,
            knownKeys
          );
          shouldTrackSideEffects &&
            oldFiber &&
            null === newFiber.alternate &&
            deleteChild(returnFiber, oldFiber);
          currentFirstChild = placeChild(newFiber, currentFirstChild, newIdx);
          null === previousNewFiber
            ? (resultingFirstChild = newFiber)
            : (previousNewFiber.sibling = newFiber);
          previousNewFiber = newFiber;
          oldFiber = nextOldFiber;
        }
        if (step.done)
          return (
            deleteRemainingChildren(returnFiber, oldFiber),
            isHydrating && pushTreeFork(returnFiber, newIdx),
            resultingFirstChild
          );
        if (null === oldFiber) {
          for (; !step.done; newIdx++, step = newChildren.next())
            (oldFiber = createChild(returnFiber, step.value, lanes)),
              null !== oldFiber &&
                ((knownKeys = warnOnInvalidKey(
                  returnFiber,
                  oldFiber,
                  step.value,
                  knownKeys
                )),
                (currentFirstChild = placeChild(
                  oldFiber,
                  currentFirstChild,
                  newIdx
                )),
                null === previousNewFiber
                  ? (resultingFirstChild = oldFiber)
                  : (previousNewFiber.sibling = oldFiber),
                (previousNewFiber = oldFiber));
          isHydrating && pushTreeFork(returnFiber, newIdx);
          return resultingFirstChild;
        }
        for (
          oldFiber = mapRemainingChildren(oldFiber);
          !step.done;
          newIdx++, step = newChildren.next()
        )
          (nextOldFiber = updateFromMap(
            oldFiber,
            returnFiber,
            newIdx,
            step.value,
            lanes
          )),
            null !== nextOldFiber &&
              ((knownKeys = warnOnInvalidKey(
                returnFiber,
                nextOldFiber,
                step.value,
                knownKeys
              )),
              shouldTrackSideEffects &&
                null !== nextOldFiber.alternate &&
                oldFiber.delete(
                  null === nextOldFiber.key ? newIdx : nextOldFiber.key
                ),
              (currentFirstChild = placeChild(
                nextOldFiber,
                currentFirstChild,
                newIdx
              )),
              null === previousNewFiber
                ? (resultingFirstChild = nextOldFiber)
                : (previousNewFiber.sibling = nextOldFiber),
              (previousNewFiber = nextOldFiber));
        shouldTrackSideEffects &&
          oldFiber.forEach(function (child) {
            return deleteChild(returnFiber, child);
          });
        isHydrating && pushTreeFork(returnFiber, newIdx);
        return resultingFirstChild;
      }
      function reconcileChildFibersImpl(
        returnFiber,
        currentFirstChild,
        newChild,
        lanes
      ) {
        "object" === typeof newChild &&
          null !== newChild &&
          newChild.type === REACT_FRAGMENT_TYPE &&
          null === newChild.key &&
          (validateFragmentProps(newChild, null, returnFiber),
          (newChild = newChild.props.children));
        if ("object" === typeof newChild && null !== newChild) {
          switch (newChild.$$typeof) {
            case REACT_ELEMENT_TYPE:
              var prevDebugInfo = pushDebugInfo(newChild._debugInfo);
              a: {
                for (var key = newChild.key; null !== currentFirstChild; ) {
                  if (currentFirstChild.key === key) {
                    key = newChild.type;
                    if (key === REACT_FRAGMENT_TYPE) {
                      if (7 === currentFirstChild.tag) {
                        deleteRemainingChildren(
                          returnFiber,
                          currentFirstChild.sibling
                        );
                        lanes = useFiber(
                          currentFirstChild,
                          newChild.props.children
                        );
                        lanes.return = returnFiber;
                        lanes._debugOwner = newChild._owner;
                        lanes._debugInfo = currentDebugInfo;
                        validateFragmentProps(newChild, lanes, returnFiber);
                        returnFiber = lanes;
                        break a;
                      }
                    } else if (
                      currentFirstChild.elementType === key ||
                      isCompatibleFamilyForHotReloading(
                        currentFirstChild,
                        newChild
                      ) ||
                      ("object" === typeof key &&
                        null !== key &&
                        key.$$typeof === REACT_LAZY_TYPE &&
                        resolveLazy(key) === currentFirstChild.type)
                    ) {
                      deleteRemainingChildren(
                        returnFiber,
                        currentFirstChild.sibling
                      );
                      lanes = useFiber(currentFirstChild, newChild.props);
                      coerceRef(lanes, newChild);
                      lanes.return = returnFiber;
                      lanes._debugOwner = newChild._owner;
                      lanes._debugInfo = currentDebugInfo;
                      returnFiber = lanes;
                      break a;
                    }
                    deleteRemainingChildren(returnFiber, currentFirstChild);
                    break;
                  } else deleteChild(returnFiber, currentFirstChild);
                  currentFirstChild = currentFirstChild.sibling;
                }
                newChild.type === REACT_FRAGMENT_TYPE
                  ? ((lanes = createFiberFromFragment(
                      newChild.props.children,
                      returnFiber.mode,
                      lanes,
                      newChild.key
                    )),
                    (lanes.return = returnFiber),
                    (lanes._debugOwner = returnFiber),
                    (lanes._debugTask = returnFiber._debugTask),
                    (lanes._debugInfo = currentDebugInfo),
                    validateFragmentProps(newChild, lanes, returnFiber),
                    (returnFiber = lanes))
                  : ((lanes = createFiberFromElement(
                      newChild,
                      returnFiber.mode,
                      lanes
                    )),
                    coerceRef(lanes, newChild),
                    (lanes.return = returnFiber),
                    (lanes._debugInfo = currentDebugInfo),
                    (returnFiber = lanes));
              }
              returnFiber = placeSingleChild(returnFiber);
              currentDebugInfo = prevDebugInfo;
              return returnFiber;
            case REACT_PORTAL_TYPE:
              a: {
                prevDebugInfo = newChild;
                for (
                  newChild = prevDebugInfo.key;
                  null !== currentFirstChild;

                ) {
                  if (currentFirstChild.key === newChild)
                    if (
                      4 === currentFirstChild.tag &&
                      currentFirstChild.stateNode.containerInfo ===
                        prevDebugInfo.containerInfo &&
                      currentFirstChild.stateNode.implementation ===
                        prevDebugInfo.implementation
                    ) {
                      deleteRemainingChildren(
                        returnFiber,
                        currentFirstChild.sibling
                      );
                      lanes = useFiber(
                        currentFirstChild,
                        prevDebugInfo.children || []
                      );
                      lanes.return = returnFiber;
                      returnFiber = lanes;
                      break a;
                    } else {
                      deleteRemainingChildren(returnFiber, currentFirstChild);
                      break;
                    }
                  else deleteChild(returnFiber, currentFirstChild);
                  currentFirstChild = currentFirstChild.sibling;
                }
                lanes = createFiberFromPortal(
                  prevDebugInfo,
                  returnFiber.mode,
                  lanes
                );
                lanes.return = returnFiber;
                returnFiber = lanes;
              }
              return placeSingleChild(returnFiber);
            case REACT_LAZY_TYPE:
              return (
                (prevDebugInfo = pushDebugInfo(newChild._debugInfo)),
                (newChild = resolveLazy(newChild)),
                (returnFiber = reconcileChildFibersImpl(
                  returnFiber,
                  currentFirstChild,
                  newChild,
                  lanes
                )),
                (currentDebugInfo = prevDebugInfo),
                returnFiber
              );
          }
          if (isArrayImpl(newChild))
            return (
              (prevDebugInfo = pushDebugInfo(newChild._debugInfo)),
              (returnFiber = reconcileChildrenArray(
                returnFiber,
                currentFirstChild,
                newChild,
                lanes
              )),
              (currentDebugInfo = prevDebugInfo),
              returnFiber
            );
          if (getIteratorFn(newChild)) {
            prevDebugInfo = pushDebugInfo(newChild._debugInfo);
            key = getIteratorFn(newChild);
            if ("function" !== typeof key)
              throw Error(
                "An object is not an iterable. This error is likely caused by a bug in React. Please file an issue."
              );
            var newChildren = key.call(newChild);
            if (newChildren === newChild) {
              if (
                0 !== returnFiber.tag ||
                "[object GeneratorFunction]" !==
                  Object.prototype.toString.call(returnFiber.type) ||
                "[object Generator]" !==
                  Object.prototype.toString.call(newChildren)
              )
                didWarnAboutGenerators ||
                  console.error(
                    "Using Iterators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()` or the `[...spread]` operator before rendering. You can also use an Iterable that can iterate multiple times over the same items."
                  ),
                  (didWarnAboutGenerators = !0);
            } else
              newChild.entries !== key ||
                didWarnAboutMaps ||
                (console.error(
                  "Using Maps as children is not supported. Use an array of keyed ReactElements instead."
                ),
                (didWarnAboutMaps = !0));
            returnFiber = reconcileChildrenIterator(
              returnFiber,
              currentFirstChild,
              newChildren,
              lanes
            );
            currentDebugInfo = prevDebugInfo;
            return returnFiber;
          }
          if ("function" === typeof newChild.then)
            return (
              (prevDebugInfo = pushDebugInfo(newChild._debugInfo)),
              (returnFiber = reconcileChildFibersImpl(
                returnFiber,
                currentFirstChild,
                unwrapThenable(newChild),
                lanes
              )),
              (currentDebugInfo = prevDebugInfo),
              returnFiber
            );
          if (newChild.$$typeof === REACT_CONTEXT_TYPE)
            return reconcileChildFibersImpl(
              returnFiber,
              currentFirstChild,
              readContextDuringReconciliation(returnFiber, newChild),
              lanes
            );
          throwOnInvalidObjectType(returnFiber, newChild);
        }
        if (
          ("string" === typeof newChild && "" !== newChild) ||
          "number" === typeof newChild ||
          "bigint" === typeof newChild
        )
          return (
            (prevDebugInfo = "" + newChild),
            null !== currentFirstChild && 6 === currentFirstChild.tag
              ? (deleteRemainingChildren(
                  returnFiber,
                  currentFirstChild.sibling
                ),
                (lanes = useFiber(currentFirstChild, prevDebugInfo)),
                (lanes.return = returnFiber),
                (returnFiber = lanes))
              : (deleteRemainingChildren(returnFiber, currentFirstChild),
                (lanes = createFiberFromText(
                  prevDebugInfo,
                  returnFiber.mode,
                  lanes
                )),
                (lanes.return = returnFiber),
                (lanes._debugOwner = returnFiber),
                (lanes._debugTask = returnFiber._debugTask),
                (lanes._debugInfo = currentDebugInfo),
                (returnFiber = lanes)),
            placeSingleChild(returnFiber)
          );
        "function" === typeof newChild &&
          warnOnFunctionType(returnFiber, newChild);
        "symbol" === typeof newChild && warnOnSymbolType(returnFiber, newChild);
        return deleteRemainingChildren(returnFiber, currentFirstChild);
      }
      return function (returnFiber, currentFirstChild, newChild, lanes) {
        var prevDebugInfo = currentDebugInfo;
        currentDebugInfo = null;
        try {
          thenableIndexCounter$1 = 0;
          var firstChildFiber = reconcileChildFibersImpl(
            returnFiber,
            currentFirstChild,
            newChild,
            lanes
          );
          thenableState$1 = null;
          return firstChildFiber;
        } catch (x) {
          if (x === SuspenseException || x === SuspenseActionException) throw x;
          var fiber = createFiber(29, x, null, returnFiber.mode);
          fiber.lanes = lanes;
          fiber.return = returnFiber;
          var debugInfo = (fiber._debugInfo = currentDebugInfo);
          fiber._debugOwner = returnFiber._debugOwner;
          fiber._debugTask = returnFiber._debugTask;
          if (null != debugInfo)
            for (var i = debugInfo.length - 1; 0 <= i; i--)
              if ("string" === typeof debugInfo[i].stack) {
                fiber._debugOwner = debugInfo[i];
                fiber._debugTask = debugInfo[i].debugTask;
                break;
              }
          return fiber;
        } finally {
          currentDebugInfo = prevDebugInfo;
        }
      };
    }
    function validateSuspenseListNestedChild(childSlot, index) {
      var isAnArray = isArrayImpl(childSlot);
      childSlot = !isAnArray && "function" === typeof getIteratorFn(childSlot);
      return isAnArray || childSlot
        ? ((isAnArray = isAnArray ? "array" : "iterable"),
          console.error(
            "A nested %s was passed to row #%s in <SuspenseList />. Wrap it in an additional SuspenseList to configure its revealOrder: <SuspenseList revealOrder=...> ... <SuspenseList revealOrder=...>{%s}</SuspenseList> ... </SuspenseList>",
            isAnArray,
            index,
            isAnArray
          ),
          !1)
        : !0;
    }
    function initializeUpdateQueue(fiber) {
      fiber.updateQueue = {
        baseState: fiber.memoizedState,
        firstBaseUpdate: null,
        lastBaseUpdate: null,
        shared: { pending: null, lanes: 0, hiddenCallbacks: null },
        callbacks: null
      };
    }
    function cloneUpdateQueue(current, workInProgress) {
      current = current.updateQueue;
      workInProgress.updateQueue === current &&
        (workInProgress.updateQueue = {
          baseState: current.baseState,
          firstBaseUpdate: current.firstBaseUpdate,
          lastBaseUpdate: current.lastBaseUpdate,
          shared: current.shared,
          callbacks: null
        });
    }
    function createUpdate(lane) {
      return {
        lane: lane,
        tag: UpdateState,
        payload: null,
        callback: null,
        next: null
      };
    }
    function enqueueUpdate(fiber, update, lane) {
      var updateQueue = fiber.updateQueue;
      if (null === updateQueue) return null;
      updateQueue = updateQueue.shared;
      if (
        currentlyProcessingQueue === updateQueue &&
        !didWarnUpdateInsideUpdate
      ) {
        var componentName = getComponentNameFromFiber(fiber);
        console.error(
          "An update (setState, replaceState, or forceUpdate) was scheduled from inside an update function. Update functions should be pure, with zero side-effects. Consider using componentDidUpdate or a callback.\n\nPlease update the following component: %s",
          componentName
        );
        didWarnUpdateInsideUpdate = !0;
      }
      if ((executionContext & RenderContext) !== NoContext)
        return (
          (componentName = updateQueue.pending),
          null === componentName
            ? (update.next = update)
            : ((update.next = componentName.next),
              (componentName.next = update)),
          (updateQueue.pending = update),
          (update = getRootForUpdatedFiber(fiber)),
          markUpdateLaneFromFiberToRoot(fiber, null, lane),
          update
        );
      enqueueUpdate$1(fiber, updateQueue, update, lane);
      return getRootForUpdatedFiber(fiber);
    }
    function entangleTransitions(root, fiber, lane) {
      fiber = fiber.updateQueue;
      if (null !== fiber && ((fiber = fiber.shared), 0 !== (lane & 4194048))) {
        var queueLanes = fiber.lanes;
        queueLanes &= root.pendingLanes;
        lane |= queueLanes;
        fiber.lanes = lane;
        markRootEntangled(root, lane);
      }
    }
    function enqueueCapturedUpdate(workInProgress, capturedUpdate) {
      var queue = workInProgress.updateQueue,
        current = workInProgress.alternate;
      if (
        null !== current &&
        ((current = current.updateQueue), queue === current)
      ) {
        var newFirst = null,
          newLast = null;
        queue = queue.firstBaseUpdate;
        if (null !== queue) {
          do {
            var clone = {
              lane: queue.lane,
              tag: queue.tag,
              payload: queue.payload,
              callback: null,
              next: null
            };
            null === newLast
              ? (newFirst = newLast = clone)
              : (newLast = newLast.next = clone);
            queue = queue.next;
          } while (null !== queue);
          null === newLast
            ? (newFirst = newLast = capturedUpdate)
            : (newLast = newLast.next = capturedUpdate);
        } else newFirst = newLast = capturedUpdate;
        queue = {
          baseState: current.baseState,
          firstBaseUpdate: newFirst,
          lastBaseUpdate: newLast,
          shared: current.shared,
          callbacks: current.callbacks
        };
        workInProgress.updateQueue = queue;
        return;
      }
      workInProgress = queue.lastBaseUpdate;
      null === workInProgress
        ? (queue.firstBaseUpdate = capturedUpdate)
        : (workInProgress.next = capturedUpdate);
      queue.lastBaseUpdate = capturedUpdate;
    }
    function suspendIfUpdateReadFromEntangledAsyncAction() {
      if (didReadFromEntangledAsyncAction) {
        var entangledActionThenable = currentEntangledActionThenable;
        if (null !== entangledActionThenable) throw entangledActionThenable;
      }
    }
    function processUpdateQueue(
      workInProgress,
      props,
      instance$jscomp$0,
      renderLanes
    ) {
      didReadFromEntangledAsyncAction = !1;
      var queue = workInProgress.updateQueue;
      hasForceUpdate = !1;
      currentlyProcessingQueue = queue.shared;
      var firstBaseUpdate = queue.firstBaseUpdate,
        lastBaseUpdate = queue.lastBaseUpdate,
        pendingQueue = queue.shared.pending;
      if (null !== pendingQueue) {
        queue.shared.pending = null;
        var lastPendingUpdate = pendingQueue,
          firstPendingUpdate = lastPendingUpdate.next;
        lastPendingUpdate.next = null;
        null === lastBaseUpdate
          ? (firstBaseUpdate = firstPendingUpdate)
          : (lastBaseUpdate.next = firstPendingUpdate);
        lastBaseUpdate = lastPendingUpdate;
        var current = workInProgress.alternate;
        null !== current &&
          ((current = current.updateQueue),
          (pendingQueue = current.lastBaseUpdate),
          pendingQueue !== lastBaseUpdate &&
            (null === pendingQueue
              ? (current.firstBaseUpdate = firstPendingUpdate)
              : (pendingQueue.next = firstPendingUpdate),
            (current.lastBaseUpdate = lastPendingUpdate)));
      }
      if (null !== firstBaseUpdate) {
        var newState = queue.baseState;
        lastBaseUpdate = 0;
        current = firstPendingUpdate = lastPendingUpdate = null;
        pendingQueue = firstBaseUpdate;
        do {
          var updateLane = pendingQueue.lane & -536870913,
            isHiddenUpdate = updateLane !== pendingQueue.lane;
          if (
            isHiddenUpdate
              ? (workInProgressRootRenderLanes & updateLane) === updateLane
              : (renderLanes & updateLane) === updateLane
          ) {
            0 !== updateLane &&
              updateLane === currentEntangledLane &&
              (didReadFromEntangledAsyncAction = !0);
            null !== current &&
              (current = current.next =
                {
                  lane: 0,
                  tag: pendingQueue.tag,
                  payload: pendingQueue.payload,
                  callback: null,
                  next: null
                });
            a: {
              updateLane = workInProgress;
              var partialState = pendingQueue;
              var nextProps = props,
                instance = instance$jscomp$0;
              switch (partialState.tag) {
                case ReplaceState:
                  partialState = partialState.payload;
                  if ("function" === typeof partialState) {
                    isDisallowedContextReadInDEV = !0;
                    var nextState = partialState.call(
                      instance,
                      newState,
                      nextProps
                    );
                    if (updateLane.mode & StrictLegacyMode) {
                      setIsStrictModeForDevtools(!0);
                      try {
                        partialState.call(instance, newState, nextProps);
                      } finally {
                        setIsStrictModeForDevtools(!1);
                      }
                    }
                    isDisallowedContextReadInDEV = !1;
                    newState = nextState;
                    break a;
                  }
                  newState = partialState;
                  break a;
                case CaptureUpdate:
                  updateLane.flags = (updateLane.flags & -65537) | 128;
                case UpdateState:
                  nextState = partialState.payload;
                  if ("function" === typeof nextState) {
                    isDisallowedContextReadInDEV = !0;
                    partialState = nextState.call(
                      instance,
                      newState,
                      nextProps
                    );
                    if (updateLane.mode & StrictLegacyMode) {
                      setIsStrictModeForDevtools(!0);
                      try {
                        nextState.call(instance, newState, nextProps);
                      } finally {
                        setIsStrictModeForDevtools(!1);
                      }
                    }
                    isDisallowedContextReadInDEV = !1;
                  } else partialState = nextState;
                  if (null === partialState || void 0 === partialState) break a;
                  newState = assign({}, newState, partialState);
                  break a;
                case ForceUpdate:
                  hasForceUpdate = !0;
              }
            }
            updateLane = pendingQueue.callback;
            null !== updateLane &&
              ((workInProgress.flags |= 64),
              isHiddenUpdate && (workInProgress.flags |= 8192),
              (isHiddenUpdate = queue.callbacks),
              null === isHiddenUpdate
                ? (queue.callbacks = [updateLane])
                : isHiddenUpdate.push(updateLane));
          } else
            (isHiddenUpdate = {
              lane: updateLane,
              tag: pendingQueue.tag,
              payload: pendingQueue.payload,
              callback: pendingQueue.callback,
              next: null
            }),
              null === current
                ? ((firstPendingUpdate = current = isHiddenUpdate),
                  (lastPendingUpdate = newState))
                : (current = current.next = isHiddenUpdate),
              (lastBaseUpdate |= updateLane);
          pendingQueue = pendingQueue.next;
          if (null === pendingQueue)
            if (((pendingQueue = queue.shared.pending), null === pendingQueue))
              break;
            else
              (isHiddenUpdate = pendingQueue),
                (pendingQueue = isHiddenUpdate.next),
                (isHiddenUpdate.next = null),
                (queue.lastBaseUpdate = isHiddenUpdate),
                (queue.shared.pending = null);
        } while (1);
        null === current && (lastPendingUpdate = newState);
        queue.baseState = lastPendingUpdate;
        queue.firstBaseUpdate = firstPendingUpdate;
        queue.lastBaseUpdate = current;
        null === firstBaseUpdate && (queue.shared.lanes = 0);
        workInProgressRootSkippedLanes |= lastBaseUpdate;
        workInProgress.lanes = lastBaseUpdate;
        workInProgress.memoizedState = newState;
      }
      currentlyProcessingQueue = null;
    }
    function callCallback(callback, context) {
      if ("function" !== typeof callback)
        throw Error(
          "Invalid argument passed as callback. Expected a function. Instead received: " +
            callback
        );
      callback.call(context);
    }
    function commitHiddenCallbacks(updateQueue, context) {
      var hiddenCallbacks = updateQueue.shared.hiddenCallbacks;
      if (null !== hiddenCallbacks)
        for (
          updateQueue.shared.hiddenCallbacks = null, updateQueue = 0;
          updateQueue < hiddenCallbacks.length;
          updateQueue++
        )
          callCallback(hiddenCallbacks[updateQueue], context);
    }
    function commitCallbacks(updateQueue, context) {
      var callbacks = updateQueue.callbacks;
      if (null !== callbacks)
        for (
          updateQueue.callbacks = null, updateQueue = 0;
          updateQueue < callbacks.length;
          updateQueue++
        )
          callCallback(callbacks[updateQueue], context);
    }
    function pushHiddenContext(fiber, context) {
      var prevEntangledRenderLanes = entangledRenderLanes;
      push(prevEntangledRenderLanesCursor, prevEntangledRenderLanes, fiber);
      push(currentTreeHiddenStackCursor, context, fiber);
      entangledRenderLanes = prevEntangledRenderLanes | context.baseLanes;
    }
    function reuseHiddenContextOnStack(fiber) {
      push(prevEntangledRenderLanesCursor, entangledRenderLanes, fiber);
      push(
        currentTreeHiddenStackCursor,
        currentTreeHiddenStackCursor.current,
        fiber
      );
    }
    function popHiddenContext(fiber) {
      entangledRenderLanes = prevEntangledRenderLanesCursor.current;
      pop(currentTreeHiddenStackCursor, fiber);
      pop(prevEntangledRenderLanesCursor, fiber);
    }
    function pushPrimaryTreeSuspenseHandler(handler) {
      var current = handler.alternate;
      push(
        suspenseStackCursor,
        suspenseStackCursor.current & SubtreeSuspenseContextMask,
        handler
      );
      push(suspenseHandlerStackCursor, handler, handler);
      null === shellBoundary &&
        (null === current || null !== currentTreeHiddenStackCursor.current
          ? (shellBoundary = handler)
          : null !== current.memoizedState && (shellBoundary = handler));
    }
    function pushDehydratedActivitySuspenseHandler(fiber) {
      push(suspenseStackCursor, suspenseStackCursor.current, fiber);
      push(suspenseHandlerStackCursor, fiber, fiber);
      null === shellBoundary && (shellBoundary = fiber);
    }
    function pushOffscreenSuspenseHandler(fiber) {
      22 === fiber.tag
        ? (push(suspenseStackCursor, suspenseStackCursor.current, fiber),
          push(suspenseHandlerStackCursor, fiber, fiber),
          null === shellBoundary && (shellBoundary = fiber))
        : reuseSuspenseHandlerOnStack(fiber);
    }
    function reuseSuspenseHandlerOnStack(fiber) {
      push(suspenseStackCursor, suspenseStackCursor.current, fiber);
      push(
        suspenseHandlerStackCursor,
        suspenseHandlerStackCursor.current,
        fiber
      );
    }
    function popSuspenseHandler(fiber) {
      pop(suspenseHandlerStackCursor, fiber);
      shellBoundary === fiber && (shellBoundary = null);
      pop(suspenseStackCursor, fiber);
    }
    function findFirstSuspended(row) {
      for (var node = row; null !== node; ) {
        if (13 === node.tag) {
          var state = node.memoizedState;
          if (
            null !== state &&
            ((state = state.dehydrated),
            null === state ||
              isSuspenseInstancePending(state) ||
              isSuspenseInstanceFallback(state))
          )
            return node;
        } else if (
          19 === node.tag &&
          ("forwards" === node.memoizedProps.revealOrder ||
            "backwards" === node.memoizedProps.revealOrder ||
            "unstable_legacy-backwards" === node.memoizedProps.revealOrder ||
            "together" === node.memoizedProps.revealOrder)
        ) {
          if (0 !== (node.flags & 128)) return node;
        } else if (null !== node.child) {
          node.child.return = node;
          node = node.child;
          continue;
        }
        if (node === row) break;
        for (; null === node.sibling; ) {
          if (null === node.return || node.return === row) return null;
          node = node.return;
        }
        node.sibling.return = node.return;
        node = node.sibling;
      }
      return null;
    }
    function mountHookTypesDev() {
      var hookName = currentHookNameInDev;
      null === hookTypesDev
        ? (hookTypesDev = [hookName])
        : hookTypesDev.push(hookName);
    }
    function updateHookTypesDev() {
      var hookName = currentHookNameInDev;
      if (
        null !== hookTypesDev &&
        (hookTypesUpdateIndexDev++,
        hookTypesDev[hookTypesUpdateIndexDev] !== hookName)
      ) {
        var componentName = getComponentNameFromFiber(currentlyRenderingFiber);
        if (
          !didWarnAboutMismatchedHooksForComponent.has(componentName) &&
          (didWarnAboutMismatchedHooksForComponent.add(componentName),
          null !== hookTypesDev)
        ) {
          for (var table = "", i = 0; i <= hookTypesUpdateIndexDev; i++) {
            var oldHookName = hookTypesDev[i],
              newHookName =
                i === hookTypesUpdateIndexDev ? hookName : oldHookName;
            for (
              oldHookName = i + 1 + ". " + oldHookName;
              30 > oldHookName.length;

            )
              oldHookName += " ";
            oldHookName += newHookName + "\n";
            table += oldHookName;
          }
          console.error(
            "React has detected a change in the order of Hooks called by %s. This will lead to bugs and errors if not fixed. For more information, read the Rules of Hooks: https://react.dev/link/rules-of-hooks\n\n   Previous render            Next render\n   ------------------------------------------------------\n%s   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
            componentName,
            table
          );
        }
      }
    }
    function checkDepsAreArrayDev(deps) {
      void 0 === deps ||
        null === deps ||
        isArrayImpl(deps) ||
        console.error(
          "%s received a final argument that is not an array (instead, received `%s`). When specified, the final argument must be an array.",
          currentHookNameInDev,
          typeof deps
        );
    }
    function warnOnUseFormStateInDev() {
      var componentName = getComponentNameFromFiber(currentlyRenderingFiber);
      didWarnAboutUseFormState.has(componentName) ||
        (didWarnAboutUseFormState.add(componentName),
        console.error(
          "ReactDOM.useFormState has been renamed to React.useActionState. Please update %s to use React.useActionState.",
          componentName
        ));
    }
    function throwInvalidHookError() {
      throw Error(
        "Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://react.dev/link/invalid-hook-call for tips about how to debug and fix this problem."
      );
    }
    function areHookInputsEqual(nextDeps, prevDeps) {
      if (ignorePreviousDependencies) return !1;
      if (null === prevDeps)
        return (
          console.error(
            "%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.",
            currentHookNameInDev
          ),
          !1
        );
      nextDeps.length !== prevDeps.length &&
        console.error(
          "The final argument passed to %s changed size between renders. The order and size of this array must remain constant.\n\nPrevious: %s\nIncoming: %s",
          currentHookNameInDev,
          "[" + prevDeps.join(", ") + "]",
          "[" + nextDeps.join(", ") + "]"
        );
      for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++)
        if (!objectIs(nextDeps[i], prevDeps[i])) return !1;
      return !0;
    }
    function renderWithHooks(
      current,
      workInProgress,
      Component,
      props,
      secondArg,
      nextRenderLanes
    ) {
      renderLanes = nextRenderLanes;
      currentlyRenderingFiber = workInProgress;
      hookTypesDev = null !== current ? current._debugHookTypes : null;
      hookTypesUpdateIndexDev = -1;
      ignorePreviousDependencies =
        null !== current && current.type !== workInProgress.type;
      if (
        "[object AsyncFunction]" ===
          Object.prototype.toString.call(Component) ||
        "[object AsyncGeneratorFunction]" ===
          Object.prototype.toString.call(Component)
      )
        (nextRenderLanes = getComponentNameFromFiber(currentlyRenderingFiber)),
          didWarnAboutAsyncClientComponent.has(nextRenderLanes) ||
            (didWarnAboutAsyncClientComponent.add(nextRenderLanes),
            console.error(
              "%s is an async Client Component. Only Server Components can be async at the moment. This error is often caused by accidentally adding `'use client'` to a module that was originally written for the server.",
              null === nextRenderLanes
                ? "An unknown Component"
                : "<" + nextRenderLanes + ">"
            ));
      workInProgress.memoizedState = null;
      workInProgress.updateQueue = null;
      workInProgress.lanes = 0;
      ReactSharedInternals.H =
        null !== current && null !== current.memoizedState
          ? HooksDispatcherOnUpdateInDEV
          : null !== hookTypesDev
            ? HooksDispatcherOnMountWithHookTypesInDEV
            : HooksDispatcherOnMountInDEV;
      shouldDoubleInvokeUserFnsInHooksDEV = nextRenderLanes =
        (workInProgress.mode & StrictLegacyMode) !== NoMode;
      var children = callComponentInDEV(Component, props, secondArg);
      shouldDoubleInvokeUserFnsInHooksDEV = !1;
      didScheduleRenderPhaseUpdateDuringThisPass &&
        (children = renderWithHooksAgain(
          workInProgress,
          Component,
          props,
          secondArg
        ));
      if (nextRenderLanes) {
        setIsStrictModeForDevtools(!0);
        try {
          children = renderWithHooksAgain(
            workInProgress,
            Component,
            props,
            secondArg
          );
        } finally {
          setIsStrictModeForDevtools(!1);
        }
      }
      finishRenderingHooks(current, workInProgress);
      return children;
    }
    function finishRenderingHooks(current, workInProgress) {
      workInProgress._debugHookTypes = hookTypesDev;
      null === workInProgress.dependencies
        ? null !== thenableState &&
          (workInProgress.dependencies = {
            lanes: 0,
            firstContext: null,
            _debugThenableState: thenableState
          })
        : (workInProgress.dependencies._debugThenableState = thenableState);
      ReactSharedInternals.H = ContextOnlyDispatcher;
      var didRenderTooFewHooks =
        null !== currentHook && null !== currentHook.next;
      renderLanes = 0;
      hookTypesDev =
        currentHookNameInDev =
        workInProgressHook =
        currentHook =
        currentlyRenderingFiber =
          null;
      hookTypesUpdateIndexDev = -1;
      null !== current &&
        (current.flags & 65011712) !== (workInProgress.flags & 65011712) &&
        console.error(
          "Internal React error: Expected static flag was missing. Please notify the React team."
        );
      didScheduleRenderPhaseUpdate = !1;
      thenableIndexCounter = 0;
      thenableState = null;
      if (didRenderTooFewHooks)
        throw Error(
          "Rendered fewer hooks than expected. This may be caused by an accidental early return statement."
        );
      null === current ||
        didReceiveUpdate ||
        ((current = current.dependencies),
        null !== current &&
          checkIfContextChanged(current) &&
          (didReceiveUpdate = !0));
      needsToResetSuspendedThenableDEV
        ? ((needsToResetSuspendedThenableDEV = !1), (current = !0))
        : (current = !1);
      current &&
        ((workInProgress =
          getComponentNameFromFiber(workInProgress) || "Unknown"),
        didWarnAboutUseWrappedInTryCatch.has(workInProgress) ||
          didWarnAboutAsyncClientComponent.has(workInProgress) ||
          (didWarnAboutUseWrappedInTryCatch.add(workInProgress),
          console.error(
            "`use` was called from inside a try/catch block. This is not allowed and can lead to unexpected behavior. To handle errors triggered by `use`, wrap your component in a error boundary."
          )));
    }
    function renderWithHooksAgain(workInProgress, Component, props, secondArg) {
      currentlyRenderingFiber = workInProgress;
      var numberOfReRenders = 0;
      do {
        didScheduleRenderPhaseUpdateDuringThisPass && (thenableState = null);
        thenableIndexCounter = 0;
        didScheduleRenderPhaseUpdateDuringThisPass = !1;
        if (numberOfReRenders >= RE_RENDER_LIMIT)
          throw Error(
            "Too many re-renders. React limits the number of renders to prevent an infinite loop."
          );
        numberOfReRenders += 1;
        ignorePreviousDependencies = !1;
        workInProgressHook = currentHook = null;
        if (null != workInProgress.updateQueue) {
          var children = workInProgress.updateQueue;
          children.lastEffect = null;
          children.events = null;
          children.stores = null;
          null != children.memoCache && (children.memoCache.index = 0);
        }
        hookTypesUpdateIndexDev = -1;
        ReactSharedInternals.H = HooksDispatcherOnRerenderInDEV;
        children = callComponentInDEV(Component, props, secondArg);
      } while (didScheduleRenderPhaseUpdateDuringThisPass);
      return children;
    }
    function TransitionAwareHostComponent() {
      var dispatcher = ReactSharedInternals.H,
        maybeThenable = dispatcher.useState()[0];
      maybeThenable =
        "function" === typeof maybeThenable.then
          ? useThenable(maybeThenable)
          : maybeThenable;
      dispatcher = dispatcher.useState()[0];
      (null !== currentHook ? currentHook.memoizedState : null) !==
        dispatcher && (currentlyRenderingFiber.flags |= 1024);
      return maybeThenable;
    }
    function checkDidRenderIdHook() {
      var didRenderIdHook = 0 !== localIdCounter;
      localIdCounter = 0;
      return didRenderIdHook;
    }
    function bailoutHooks(current, workInProgress, lanes) {
      workInProgress.updateQueue = current.updateQueue;
      workInProgress.flags =
        (workInProgress.mode & StrictEffectsMode) !== NoMode
          ? workInProgress.flags & -402655237
          : workInProgress.flags & -2053;
      current.lanes &= ~lanes;
    }
    function resetHooksOnUnwind(workInProgress) {
      if (didScheduleRenderPhaseUpdate) {
        for (
          workInProgress = workInProgress.memoizedState;
          null !== workInProgress;

        ) {
          var queue = workInProgress.queue;
          null !== queue && (queue.pending = null);
          workInProgress = workInProgress.next;
        }
        didScheduleRenderPhaseUpdate = !1;
      }
      renderLanes = 0;
      hookTypesDev =
        workInProgressHook =
        currentHook =
        currentlyRenderingFiber =
          null;
      hookTypesUpdateIndexDev = -1;
      currentHookNameInDev = null;
      didScheduleRenderPhaseUpdateDuringThisPass = !1;
      thenableIndexCounter = localIdCounter = 0;
      thenableState = null;
    }
    function mountWorkInProgressHook() {
      var hook = {
        memoizedState: null,
        baseState: null,
        baseQueue: null,
        queue: null,
        next: null
      };
      null === workInProgressHook
        ? (currentlyRenderingFiber.memoizedState = workInProgressHook = hook)
        : (workInProgressHook = workInProgressHook.next = hook);
      return workInProgressHook;
    }
    function updateWorkInProgressHook() {
      if (null === currentHook) {
        var nextCurrentHook = currentlyRenderingFiber.alternate;
        nextCurrentHook =
          null !== nextCurrentHook ? nextCurrentHook.memoizedState : null;
      } else nextCurrentHook = currentHook.next;
      var nextWorkInProgressHook =
        null === workInProgressHook
          ? currentlyRenderingFiber.memoizedState
          : workInProgressHook.next;
      if (null !== nextWorkInProgressHook)
        (workInProgressHook = nextWorkInProgressHook),
          (currentHook = nextCurrentHook);
      else {
        if (null === nextCurrentHook) {
          if (null === currentlyRenderingFiber.alternate)
            throw Error(
              "Update hook called on initial render. This is likely a bug in React. Please file an issue."
            );
          throw Error("Rendered more hooks than during the previous render.");
        }
        currentHook = nextCurrentHook;
        nextCurrentHook = {
          memoizedState: currentHook.memoizedState,
          baseState: currentHook.baseState,
          baseQueue: currentHook.baseQueue,
          queue: currentHook.queue,
          next: null
        };
        null === workInProgressHook
          ? (currentlyRenderingFiber.memoizedState = workInProgressHook =
              nextCurrentHook)
          : (workInProgressHook = workInProgressHook.next = nextCurrentHook);
      }
      return workInProgressHook;
    }
    function createFunctionComponentUpdateQueue() {
      return { lastEffect: null, events: null, stores: null, memoCache: null };
    }
    function useThenable(thenable) {
      var index = thenableIndexCounter;
      thenableIndexCounter += 1;
      null === thenableState && (thenableState = createThenableState());
      thenable = trackUsedThenable(thenableState, thenable, index);
      index = currentlyRenderingFiber;
      null ===
        (null === workInProgressHook
          ? index.memoizedState
          : workInProgressHook.next) &&
        ((index = index.alternate),
        (ReactSharedInternals.H =
          null !== index && null !== index.memoizedState
            ? HooksDispatcherOnUpdateInDEV
            : HooksDispatcherOnMountInDEV));
      return thenable;
    }
    function use(usable) {
      if (null !== usable && "object" === typeof usable) {
        if ("function" === typeof usable.then) return useThenable(usable);
        if (usable.$$typeof === REACT_CONTEXT_TYPE) return readContext(usable);
      }
      throw Error("An unsupported type was passed to use(): " + String(usable));
    }
    function useMemoCache(size) {
      var memoCache = null,
        updateQueue = currentlyRenderingFiber.updateQueue;
      null !== updateQueue && (memoCache = updateQueue.memoCache);
      if (null == memoCache) {
        var current = currentlyRenderingFiber.alternate;
        null !== current &&
          ((current = current.updateQueue),
          null !== current &&
            ((current = current.memoCache),
            null != current &&
              (memoCache = {
                data: current.data.map(function (array) {
                  return array.slice();
                }),
                index: 0
              })));
      }
      null == memoCache && (memoCache = { data: [], index: 0 });
      null === updateQueue &&
        ((updateQueue = createFunctionComponentUpdateQueue()),
        (currentlyRenderingFiber.updateQueue = updateQueue));
      updateQueue.memoCache = memoCache;
      updateQueue = memoCache.data[memoCache.index];
      if (void 0 === updateQueue || ignorePreviousDependencies)
        for (
          updateQueue = memoCache.data[memoCache.index] = Array(size),
            current = 0;
          current < size;
          current++
        )
          updateQueue[current] = REACT_MEMO_CACHE_SENTINEL;
      else
        updateQueue.length !== size &&
          console.error(
            "Expected a constant size argument for each invocation of useMemoCache. The previous cache was allocated with size %s but size %s was requested.",
            updateQueue.length,
            size
          );
      memoCache.index++;
      return updateQueue;
    }
    function basicStateReducer(state, action) {
      return "function" === typeof action ? action(state) : action;
    }
    function mountReducer(reducer, initialArg, init) {
      var hook = mountWorkInProgressHook();
      if (void 0 !== init) {
        var initialState = init(initialArg);
        if (shouldDoubleInvokeUserFnsInHooksDEV) {
          setIsStrictModeForDevtools(!0);
          try {
            init(initialArg);
          } finally {
            setIsStrictModeForDevtools(!1);
          }
        }
      } else initialState = initialArg;
      hook.memoizedState = hook.baseState = initialState;
      reducer = {
        pending: null,
        lanes: 0,
        dispatch: null,
        lastRenderedReducer: reducer,
        lastRenderedState: initialState
      };
      hook.queue = reducer;
      reducer = reducer.dispatch = dispatchReducerAction.bind(
        null,
        currentlyRenderingFiber,
        reducer
      );
      return [hook.memoizedState, reducer];
    }
    function updateReducer(reducer) {
      var hook = updateWorkInProgressHook();
      return updateReducerImpl(hook, currentHook, reducer);
    }
    function updateReducerImpl(hook, current, reducer) {
      var queue = hook.queue;
      if (null === queue)
        throw Error(
          "Should have a queue. You are likely calling Hooks conditionally, which is not allowed. (https://react.dev/link/invalid-hook-call)"
        );
      queue.lastRenderedReducer = reducer;
      var baseQueue = hook.baseQueue,
        pendingQueue = queue.pending;
      if (null !== pendingQueue) {
        if (null !== baseQueue) {
          var baseFirst = baseQueue.next;
          baseQueue.next = pendingQueue.next;
          pendingQueue.next = baseFirst;
        }
        current.baseQueue !== baseQueue &&
          console.error(
            "Internal error: Expected work-in-progress queue to be a clone. This is a bug in React."
          );
        current.baseQueue = baseQueue = pendingQueue;
        queue.pending = null;
      }
      pendingQueue = hook.baseState;
      if (null === baseQueue) hook.memoizedState = pendingQueue;
      else {
        current = baseQueue.next;
        var newBaseQueueFirst = (baseFirst = null),
          newBaseQueueLast = null,
          update = current,
          didReadFromEntangledAsyncAction = !1;
        do {
          var updateLane = update.lane & -536870913;
          if (
            updateLane !== update.lane
              ? (workInProgressRootRenderLanes & updateLane) === updateLane
              : (renderLanes & updateLane) === updateLane
          ) {
            var revertLane = update.revertLane;
            if (0 === revertLane)
              null !== newBaseQueueLast &&
                (newBaseQueueLast = newBaseQueueLast.next =
                  {
                    lane: 0,
                    revertLane: 0,
                    gesture: null,
                    action: update.action,
                    hasEagerState: update.hasEagerState,
                    eagerState: update.eagerState,
                    next: null
                  }),
                updateLane === currentEntangledLane &&
                  (didReadFromEntangledAsyncAction = !0);
            else if ((renderLanes & revertLane) === revertLane) {
              update = update.next;
              revertLane === currentEntangledLane &&
                (didReadFromEntangledAsyncAction = !0);
              continue;
            } else
              (updateLane = {
                lane: 0,
                revertLane: update.revertLane,
                gesture: null,
                action: update.action,
                hasEagerState: update.hasEagerState,
                eagerState: update.eagerState,
                next: null
              }),
                null === newBaseQueueLast
                  ? ((newBaseQueueFirst = newBaseQueueLast = updateLane),
                    (baseFirst = pendingQueue))
                  : (newBaseQueueLast = newBaseQueueLast.next = updateLane),
                (currentlyRenderingFiber.lanes |= revertLane),
                (workInProgressRootSkippedLanes |= revertLane);
            updateLane = update.action;
            shouldDoubleInvokeUserFnsInHooksDEV &&
              reducer(pendingQueue, updateLane);
            pendingQueue = update.hasEagerState
              ? update.eagerState
              : reducer(pendingQueue, updateLane);
          } else
            (revertLane = {
              lane: updateLane,
              revertLane: update.revertLane,
              gesture: update.gesture,
              action: update.action,
              hasEagerState: update.hasEagerState,
              eagerState: update.eagerState,
              next: null
            }),
              null === newBaseQueueLast
                ? ((newBaseQueueFirst = newBaseQueueLast = revertLane),
                  (baseFirst = pendingQueue))
                : (newBaseQueueLast = newBaseQueueLast.next = revertLane),
              (currentlyRenderingFiber.lanes |= updateLane),
              (workInProgressRootSkippedLanes |= updateLane);
          update = update.next;
        } while (null !== update && update !== current);
        null === newBaseQueueLast
          ? (baseFirst = pendingQueue)
          : (newBaseQueueLast.next = newBaseQueueFirst);
        if (
          !objectIs(pendingQueue, hook.memoizedState) &&
          ((didReceiveUpdate = !0),
          didReadFromEntangledAsyncAction &&
            ((reducer = currentEntangledActionThenable), null !== reducer))
        )
          throw reducer;
        hook.memoizedState = pendingQueue;
        hook.baseState = baseFirst;
        hook.baseQueue = newBaseQueueLast;
        queue.lastRenderedState = pendingQueue;
      }
      null === baseQueue && (queue.lanes = 0);
      return [hook.memoizedState, queue.dispatch];
    }
    function rerenderReducer(reducer) {
      var hook = updateWorkInProgressHook(),
        queue = hook.queue;
      if (null === queue)
        throw Error(
          "Should have a queue. You are likely calling Hooks conditionally, which is not allowed. (https://react.dev/link/invalid-hook-call)"
        );
      queue.lastRenderedReducer = reducer;
      var dispatch = queue.dispatch,
        lastRenderPhaseUpdate = queue.pending,
        newState = hook.memoizedState;
      if (null !== lastRenderPhaseUpdate) {
        queue.pending = null;
        var update = (lastRenderPhaseUpdate = lastRenderPhaseUpdate.next);
        do
          (newState = reducer(newState, update.action)), (update = update.next);
        while (update !== lastRenderPhaseUpdate);
        objectIs(newState, hook.memoizedState) || (didReceiveUpdate = !0);
        hook.memoizedState = newState;
        null === hook.baseQueue && (hook.baseState = newState);
        queue.lastRenderedState = newState;
      }
      return [newState, dispatch];
    }
    function mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
      var fiber = currentlyRenderingFiber,
        hook = mountWorkInProgressHook();
      if (isHydrating) {
        if (void 0 === getServerSnapshot)
          throw Error(
            "Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering."
          );
        var nextSnapshot = getServerSnapshot();
        didWarnUncachedGetSnapshot ||
          nextSnapshot === getServerSnapshot() ||
          (console.error(
            "The result of getServerSnapshot should be cached to avoid an infinite loop"
          ),
          (didWarnUncachedGetSnapshot = !0));
      } else {
        nextSnapshot = getSnapshot();
        didWarnUncachedGetSnapshot ||
          ((getServerSnapshot = getSnapshot()),
          objectIs(nextSnapshot, getServerSnapshot) ||
            (console.error(
              "The result of getSnapshot should be cached to avoid an infinite loop"
            ),
            (didWarnUncachedGetSnapshot = !0)));
        if (null === workInProgressRoot)
          throw Error(
            "Expected a work-in-progress root. This is a bug in React. Please file an issue."
          );
        0 !== (workInProgressRootRenderLanes & 127) ||
          pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);
      }
      hook.memoizedState = nextSnapshot;
      getServerSnapshot = { value: nextSnapshot, getSnapshot: getSnapshot };
      hook.queue = getServerSnapshot;
      mountEffect(
        subscribeToStore.bind(null, fiber, getServerSnapshot, subscribe),
        [subscribe]
      );
      fiber.flags |= 2048;
      pushSimpleEffect(
        HasEffect | Passive,
        { destroy: void 0 },
        updateStoreInstance.bind(
          null,
          fiber,
          getServerSnapshot,
          nextSnapshot,
          getSnapshot
        ),
        null
      );
      return nextSnapshot;
    }
    function updateSyncExternalStore(
      subscribe,
      getSnapshot,
      getServerSnapshot
    ) {
      var fiber = currentlyRenderingFiber,
        hook = updateWorkInProgressHook(),
        isHydrating$jscomp$0 = isHydrating;
      if (isHydrating$jscomp$0) {
        if (void 0 === getServerSnapshot)
          throw Error(
            "Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering."
          );
        getServerSnapshot = getServerSnapshot();
      } else if (
        ((getServerSnapshot = getSnapshot()), !didWarnUncachedGetSnapshot)
      ) {
        var cachedSnapshot = getSnapshot();
        objectIs(getServerSnapshot, cachedSnapshot) ||
          (console.error(
            "The result of getSnapshot should be cached to avoid an infinite loop"
          ),
          (didWarnUncachedGetSnapshot = !0));
      }
      if (
        (cachedSnapshot = !objectIs(
          (currentHook || hook).memoizedState,
          getServerSnapshot
        ))
      )
        (hook.memoizedState = getServerSnapshot), (didReceiveUpdate = !0);
      hook = hook.queue;
      var create = subscribeToStore.bind(null, fiber, hook, subscribe);
      updateEffectImpl(2048, Passive, create, [subscribe]);
      if (
        hook.getSnapshot !== getSnapshot ||
        cachedSnapshot ||
        (null !== workInProgressHook &&
          workInProgressHook.memoizedState.tag & HasEffect)
      ) {
        fiber.flags |= 2048;
        pushSimpleEffect(
          HasEffect | Passive,
          { destroy: void 0 },
          updateStoreInstance.bind(
            null,
            fiber,
            hook,
            getServerSnapshot,
            getSnapshot
          ),
          null
        );
        if (null === workInProgressRoot)
          throw Error(
            "Expected a work-in-progress root. This is a bug in React. Please file an issue."
          );
        isHydrating$jscomp$0 ||
          0 !== (renderLanes & 127) ||
          pushStoreConsistencyCheck(fiber, getSnapshot, getServerSnapshot);
      }
      return getServerSnapshot;
    }
    function pushStoreConsistencyCheck(fiber, getSnapshot, renderedSnapshot) {
      fiber.flags |= 16384;
      fiber = { getSnapshot: getSnapshot, value: renderedSnapshot };
      getSnapshot = currentlyRenderingFiber.updateQueue;
      null === getSnapshot
        ? ((getSnapshot = createFunctionComponentUpdateQueue()),
          (currentlyRenderingFiber.updateQueue = getSnapshot),
          (getSnapshot.stores = [fiber]))
        : ((renderedSnapshot = getSnapshot.stores),
          null === renderedSnapshot
            ? (getSnapshot.stores = [fiber])
            : renderedSnapshot.push(fiber));
    }
    function updateStoreInstance(fiber, inst, nextSnapshot, getSnapshot) {
      inst.value = nextSnapshot;
      inst.getSnapshot = getSnapshot;
      checkIfSnapshotChanged(inst) && forceStoreRerender(fiber);
    }
    function subscribeToStore(fiber, inst, subscribe) {
      return subscribe(function () {
        checkIfSnapshotChanged(inst) &&
          (startUpdateTimerByLane(2, "updateSyncExternalStore()", fiber),
          forceStoreRerender(fiber));
      });
    }
    function checkIfSnapshotChanged(inst) {
      var latestGetSnapshot = inst.getSnapshot;
      inst = inst.value;
      try {
        var nextValue = latestGetSnapshot();
        return !objectIs(inst, nextValue);
      } catch (error) {
        return !0;
      }
    }
    function forceStoreRerender(fiber) {
      var root = enqueueConcurrentRenderForLane(fiber, 2);
      null !== root && scheduleUpdateOnFiber(root, fiber, 2);
    }
    function mountStateImpl(initialState) {
      var hook = mountWorkInProgressHook();
      if ("function" === typeof initialState) {
        var initialStateInitializer = initialState;
        initialState = initialStateInitializer();
        if (shouldDoubleInvokeUserFnsInHooksDEV) {
          setIsStrictModeForDevtools(!0);
          try {
            initialStateInitializer();
          } finally {
            setIsStrictModeForDevtools(!1);
          }
        }
      }
      hook.memoizedState = hook.baseState = initialState;
      hook.queue = {
        pending: null,
        lanes: 0,
        dispatch: null,
        lastRenderedReducer: basicStateReducer,
        lastRenderedState: initialState
      };
      return hook;
    }
    function mountState(initialState) {
      initialState = mountStateImpl(initialState);
      var queue = initialState.queue,
        dispatch = dispatchSetState.bind(null, currentlyRenderingFiber, queue);
      queue.dispatch = dispatch;
      return [initialState.memoizedState, dispatch];
    }
    function mountOptimistic(passthrough) {
      var hook = mountWorkInProgressHook();
      hook.memoizedState = hook.baseState = passthrough;
      var queue = {
        pending: null,
        lanes: 0,
        dispatch: null,
        lastRenderedReducer: null,
        lastRenderedState: null
      };
      hook.queue = queue;
      hook = dispatchOptimisticSetState.bind(
        null,
        currentlyRenderingFiber,
        !0,
        queue
      );
      queue.dispatch = hook;
      return [passthrough, hook];
    }
    function updateOptimistic(passthrough, reducer) {
      var hook = updateWorkInProgressHook();
      return updateOptimisticImpl(hook, currentHook, passthrough, reducer);
    }
    function updateOptimisticImpl(hook, current, passthrough, reducer) {
      hook.baseState = passthrough;
      return updateReducerImpl(
        hook,
        currentHook,
        "function" === typeof reducer ? reducer : basicStateReducer
      );
    }
    function rerenderOptimistic(passthrough, reducer) {
      var hook = updateWorkInProgressHook();
      if (null !== currentHook)
        return updateOptimisticImpl(hook, currentHook, passthrough, reducer);
      hook.baseState = passthrough;
      return [passthrough, hook.queue.dispatch];
    }
    function dispatchActionState(
      fiber,
      actionQueue,
      setPendingState,
      setState,
      payload
    ) {
      if (isRenderPhaseUpdate(fiber))
        throw Error("Cannot update form state while rendering.");
      fiber = actionQueue.action;
      if (null !== fiber) {
        var actionNode = {
          payload: payload,
          action: fiber,
          next: null,
          isTransition: !0,
          status: "pending",
          value: null,
          reason: null,
          listeners: [],
          then: function (listener) {
            actionNode.listeners.push(listener);
          }
        };
        null !== ReactSharedInternals.T
          ? setPendingState(!0)
          : (actionNode.isTransition = !1);
        setState(actionNode);
        setPendingState = actionQueue.pending;
        null === setPendingState
          ? ((actionNode.next = actionQueue.pending = actionNode),
            runActionStateAction(actionQueue, actionNode))
          : ((actionNode.next = setPendingState.next),
            (actionQueue.pending = setPendingState.next = actionNode));
      }
    }
    function runActionStateAction(actionQueue, node) {
      var action = node.action,
        payload = node.payload,
        prevState = actionQueue.state;
      if (node.isTransition) {
        var prevTransition = ReactSharedInternals.T,
          currentTransition = {};
        currentTransition._updatedFibers = new Set();
        ReactSharedInternals.T = currentTransition;
        try {
          var returnValue = action(prevState, payload),
            onStartTransitionFinish = ReactSharedInternals.S;
          null !== onStartTransitionFinish &&
            onStartTransitionFinish(currentTransition, returnValue);
          handleActionReturnValue(actionQueue, node, returnValue);
        } catch (error) {
          onActionError(actionQueue, node, error);
        } finally {
          null !== prevTransition &&
            null !== currentTransition.types &&
            (null !== prevTransition.types &&
              prevTransition.types !== currentTransition.types &&
              console.error(
                "We expected inner Transitions to have transferred the outer types set and that you cannot add to the outer Transition while inside the inner.This is a bug in React."
              ),
            (prevTransition.types = currentTransition.types)),
            (ReactSharedInternals.T = prevTransition),
            null === prevTransition &&
              currentTransition._updatedFibers &&
              ((actionQueue = currentTransition._updatedFibers.size),
              currentTransition._updatedFibers.clear(),
              10 < actionQueue &&
                console.warn(
                  "Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table."
                ));
        }
      } else
        try {
          (currentTransition = action(prevState, payload)),
            handleActionReturnValue(actionQueue, node, currentTransition);
        } catch (error$4) {
          onActionError(actionQueue, node, error$4);
        }
    }
    function handleActionReturnValue(actionQueue, node, returnValue) {
      null !== returnValue &&
      "object" === typeof returnValue &&
      "function" === typeof returnValue.then
        ? (ReactSharedInternals.asyncTransitions++,
          returnValue.then(releaseAsyncTransition, releaseAsyncTransition),
          returnValue.then(
            function (nextState) {
              onActionSuccess(actionQueue, node, nextState);
            },
            function (error) {
              return onActionError(actionQueue, node, error);
            }
          ),
          node.isTransition ||
            console.error(
              "An async function with useActionState was called outside of a transition. This is likely not what you intended (for example, isPending will not update correctly). Either call the returned function inside startTransition, or pass it to an `action` or `formAction` prop."
            ))
        : onActionSuccess(actionQueue, node, returnValue);
    }
    function onActionSuccess(actionQueue, actionNode, nextState) {
      actionNode.status = "fulfilled";
      actionNode.value = nextState;
      notifyActionListeners(actionNode);
      actionQueue.state = nextState;
      actionNode = actionQueue.pending;
      null !== actionNode &&
        ((nextState = actionNode.next),
        nextState === actionNode
          ? (actionQueue.pending = null)
          : ((nextState = nextState.next),
            (actionNode.next = nextState),
            runActionStateAction(actionQueue, nextState)));
    }
    function onActionError(actionQueue, actionNode, error) {
      var last = actionQueue.pending;
      actionQueue.pending = null;
      if (null !== last) {
        last = last.next;
        do
          (actionNode.status = "rejected"),
            (actionNode.reason = error),
            notifyActionListeners(actionNode),
            (actionNode = actionNode.next);
        while (actionNode !== last);
      }
      actionQueue.action = null;
    }
    function notifyActionListeners(actionNode) {
      actionNode = actionNode.listeners;
      for (var i = 0; i < actionNode.length; i++) (0, actionNode[i])();
    }
    function actionStateReducer(oldState, newState) {
      return newState;
    }
    function mountActionState(action, initialStateProp) {
      if (isHydrating) {
        var ssrFormState = workInProgressRoot.formState;
        if (null !== ssrFormState) {
          a: {
            var isMatching = currentlyRenderingFiber;
            if (isHydrating) {
              if (nextHydratableInstance) {
                b: {
                  var markerInstance = nextHydratableInstance;
                  for (
                    var inRootOrSingleton = rootOrSingletonContext;
                    8 !== markerInstance.nodeType;

                  ) {
                    if (!inRootOrSingleton) {
                      markerInstance = null;
                      break b;
                    }
                    markerInstance = getNextHydratable(
                      markerInstance.nextSibling
                    );
                    if (null === markerInstance) {
                      markerInstance = null;
                      break b;
                    }
                  }
                  inRootOrSingleton = markerInstance.data;
                  markerInstance =
                    inRootOrSingleton === FORM_STATE_IS_MATCHING ||
                    inRootOrSingleton === FORM_STATE_IS_NOT_MATCHING
                      ? markerInstance
                      : null;
                }
                if (markerInstance) {
                  nextHydratableInstance = getNextHydratable(
                    markerInstance.nextSibling
                  );
                  isMatching = markerInstance.data === FORM_STATE_IS_MATCHING;
                  break a;
                }
              }
              throwOnHydrationMismatch(isMatching);
            }
            isMatching = !1;
          }
          isMatching && (initialStateProp = ssrFormState[0]);
        }
      }
      ssrFormState = mountWorkInProgressHook();
      ssrFormState.memoizedState = ssrFormState.baseState = initialStateProp;
      isMatching = {
        pending: null,
        lanes: 0,
        dispatch: null,
        lastRenderedReducer: actionStateReducer,
        lastRenderedState: initialStateProp
      };
      ssrFormState.queue = isMatching;
      ssrFormState = dispatchSetState.bind(
        null,
        currentlyRenderingFiber,
        isMatching
      );
      isMatching.dispatch = ssrFormState;
      isMatching = mountStateImpl(!1);
      inRootOrSingleton = dispatchOptimisticSetState.bind(
        null,
        currentlyRenderingFiber,
        !1,
        isMatching.queue
      );
      isMatching = mountWorkInProgressHook();
      markerInstance = {
        state: initialStateProp,
        dispatch: null,
        action: action,
        pending: null
      };
      isMatching.queue = markerInstance;
      ssrFormState = dispatchActionState.bind(
        null,
        currentlyRenderingFiber,
        markerInstance,
        inRootOrSingleton,
        ssrFormState
      );
      markerInstance.dispatch = ssrFormState;
      isMatching.memoizedState = action;
      return [initialStateProp, ssrFormState, !1];
    }
    function updateActionState(action) {
      var stateHook = updateWorkInProgressHook();
      return updateActionStateImpl(stateHook, currentHook, action);
    }
    function updateActionStateImpl(stateHook, currentStateHook, action) {
      currentStateHook = updateReducerImpl(
        stateHook,
        currentStateHook,
        actionStateReducer
      )[0];
      stateHook = updateReducer(basicStateReducer)[0];
      if (
        "object" === typeof currentStateHook &&
        null !== currentStateHook &&
        "function" === typeof currentStateHook.then
      )
        try {
          var state = useThenable(currentStateHook);
        } catch (x) {
          if (x === SuspenseException) throw SuspenseActionException;
          throw x;
        }
      else state = currentStateHook;
      currentStateHook = updateWorkInProgressHook();
      var actionQueue = currentStateHook.queue,
        dispatch = actionQueue.dispatch;
      action !== currentStateHook.memoizedState &&
        ((currentlyRenderingFiber.flags |= 2048),
        pushSimpleEffect(
          HasEffect | Passive,
          { destroy: void 0 },
          actionStateActionEffect.bind(null, actionQueue, action),
          null
        ));
      return [state, dispatch, stateHook];
    }
    function actionStateActionEffect(actionQueue, action) {
      actionQueue.action = action;
    }
    function rerenderActionState(action) {
      var stateHook = updateWorkInProgressHook(),
        currentStateHook = currentHook;
      if (null !== currentStateHook)
        return updateActionStateImpl(stateHook, currentStateHook, action);
      updateWorkInProgressHook();
      stateHook = stateHook.memoizedState;
      currentStateHook = updateWorkInProgressHook();
      var dispatch = currentStateHook.queue.dispatch;
      currentStateHook.memoizedState = action;
      return [stateHook, dispatch, !1];
    }
    function pushSimpleEffect(tag, inst, create, deps) {
      tag = { tag: tag, create: create, deps: deps, inst: inst, next: null };
      inst = currentlyRenderingFiber.updateQueue;
      null === inst &&
        ((inst = createFunctionComponentUpdateQueue()),
        (currentlyRenderingFiber.updateQueue = inst));
      create = inst.lastEffect;
      null === create
        ? (inst.lastEffect = tag.next = tag)
        : ((deps = create.next),
          (create.next = tag),
          (tag.next = deps),
          (inst.lastEffect = tag));
      return tag;
    }
    function mountRef(initialValue) {
      var hook = mountWorkInProgressHook();
      initialValue = { current: initialValue };
      return (hook.memoizedState = initialValue);
    }
    function mountEffectImpl(fiberFlags, hookFlags, create, deps) {
      var hook = mountWorkInProgressHook();
      currentlyRenderingFiber.flags |= fiberFlags;
      hook.memoizedState = pushSimpleEffect(
        HasEffect | hookFlags,
        { destroy: void 0 },
        create,
        void 0 === deps ? null : deps
      );
    }
    function updateEffectImpl(fiberFlags, hookFlags, create, deps) {
      var hook = updateWorkInProgressHook();
      deps = void 0 === deps ? null : deps;
      var inst = hook.memoizedState.inst;
      null !== currentHook &&
      null !== deps &&
      areHookInputsEqual(deps, currentHook.memoizedState.deps)
        ? (hook.memoizedState = pushSimpleEffect(hookFlags, inst, create, deps))
        : ((currentlyRenderingFiber.flags |= fiberFlags),
          (hook.memoizedState = pushSimpleEffect(
            HasEffect | hookFlags,
            inst,
            create,
            deps
          )));
    }
    function mountEffect(create, deps) {
      (currentlyRenderingFiber.mode & StrictEffectsMode) !== NoMode
        ? mountEffectImpl(276826112, Passive, create, deps)
        : mountEffectImpl(8390656, Passive, create, deps);
    }
    function useEffectEventImpl(payload) {
      currentlyRenderingFiber.flags |= 4;
      var componentUpdateQueue = currentlyRenderingFiber.updateQueue;
      if (null === componentUpdateQueue)
        (componentUpdateQueue = createFunctionComponentUpdateQueue()),
          (currentlyRenderingFiber.updateQueue = componentUpdateQueue),
          (componentUpdateQueue.events = [payload]);
      else {
        var events = componentUpdateQueue.events;
        null === events
          ? (componentUpdateQueue.events = [payload])
          : events.push(payload);
      }
    }
    function mountEvent(callback) {
      var hook = mountWorkInProgressHook(),
        ref = { impl: callback };
      hook.memoizedState = ref;
      return function () {
        if ((executionContext & RenderContext) !== NoContext)
          throw Error(
            "A function wrapped in useEffectEvent can't be called during rendering."
          );
        return ref.impl.apply(void 0, arguments);
      };
    }
    function updateEvent(callback) {
      var ref = updateWorkInProgressHook().memoizedState;
      useEffectEventImpl({ ref: ref, nextImpl: callback });
      return function () {
        if ((executionContext & RenderContext) !== NoContext)
          throw Error(
            "A function wrapped in useEffectEvent can't be called during rendering."
          );
        return ref.impl.apply(void 0, arguments);
      };
    }
    function mountLayoutEffect(create, deps) {
      var fiberFlags = 4194308;
      (currentlyRenderingFiber.mode & StrictEffectsMode) !== NoMode &&
        (fiberFlags |= 134217728);
      return mountEffectImpl(fiberFlags, Layout, create, deps);
    }
    function imperativeHandleEffect(create, ref) {
      if ("function" === typeof ref) {
        create = create();
        var refCleanup = ref(create);
        return function () {
          "function" === typeof refCleanup ? refCleanup() : ref(null);
        };
      }
      if (null !== ref && void 0 !== ref)
        return (
          ref.hasOwnProperty("current") ||
            console.error(
              "Expected useImperativeHandle() first argument to either be a ref callback or React.createRef() object. Instead received: %s.",
              "an object with keys {" + Object.keys(ref).join(", ") + "}"
            ),
          (create = create()),
          (ref.current = create),
          function () {
            ref.current = null;
          }
        );
    }
    function mountImperativeHandle(ref, create, deps) {
      "function" !== typeof create &&
        console.error(
          "Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.",
          null !== create ? typeof create : "null"
        );
      deps = null !== deps && void 0 !== deps ? deps.concat([ref]) : null;
      var fiberFlags = 4194308;
      (currentlyRenderingFiber.mode & StrictEffectsMode) !== NoMode &&
        (fiberFlags |= 134217728);
      mountEffectImpl(
        fiberFlags,
        Layout,
        imperativeHandleEffect.bind(null, create, ref),
        deps
      );
    }
    function updateImperativeHandle(ref, create, deps) {
      "function" !== typeof create &&
        console.error(
          "Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.",
          null !== create ? typeof create : "null"
        );
      deps = null !== deps && void 0 !== deps ? deps.concat([ref]) : null;
      updateEffectImpl(
        4,
        Layout,
        imperativeHandleEffect.bind(null, create, ref),
        deps
      );
    }
    function mountCallback(callback, deps) {
      mountWorkInProgressHook().memoizedState = [
        callback,
        void 0 === deps ? null : deps
      ];
      return callback;
    }
    function updateCallback(callback, deps) {
      var hook = updateWorkInProgressHook();
      deps = void 0 === deps ? null : deps;
      var prevState = hook.memoizedState;
      if (null !== deps && areHookInputsEqual(deps, prevState[1]))
        return prevState[0];
      hook.memoizedState = [callback, deps];
      return callback;
    }
    function mountMemo(nextCreate, deps) {
      var hook = mountWorkInProgressHook();
      deps = void 0 === deps ? null : deps;
      var nextValue = nextCreate();
      if (shouldDoubleInvokeUserFnsInHooksDEV) {
        setIsStrictModeForDevtools(!0);
        try {
          nextCreate();
        } finally {
          setIsStrictModeForDevtools(!1);
        }
      }
      hook.memoizedState = [nextValue, deps];
      return nextValue;
    }
    function updateMemo(nextCreate, deps) {
      var hook = updateWorkInProgressHook();
      deps = void 0 === deps ? null : deps;
      var prevState = hook.memoizedState;
      if (null !== deps && areHookInputsEqual(deps, prevState[1]))
        return prevState[0];
      prevState = nextCreate();
      if (shouldDoubleInvokeUserFnsInHooksDEV) {
        setIsStrictModeForDevtools(!0);
        try {
          nextCreate();
        } finally {
          setIsStrictModeForDevtools(!1);
        }
      }
      hook.memoizedState = [prevState, deps];
      return prevState;
    }
    function mountDeferredValue(value, initialValue) {
      var hook = mountWorkInProgressHook();
      return mountDeferredValueImpl(hook, value, initialValue);
    }
    function updateDeferredValue(value, initialValue) {
      var hook = updateWorkInProgressHook();
      return updateDeferredValueImpl(
        hook,
        currentHook.memoizedState,
        value,
        initialValue
      );
    }
    function rerenderDeferredValue(value, initialValue) {
      var hook = updateWorkInProgressHook();
      return null === currentHook
        ? mountDeferredValueImpl(hook, value, initialValue)
        : updateDeferredValueImpl(
            hook,
            currentHook.memoizedState,
            value,
            initialValue
          );
    }
    function mountDeferredValueImpl(hook, value, initialValue) {
      if (
        void 0 === initialValue ||
        (0 !== (renderLanes & 1073741824) &&
          0 === (workInProgressRootRenderLanes & 261930))
      )
        return (hook.memoizedState = value);
      hook.memoizedState = initialValue;
      hook = requestDeferredLane();
      currentlyRenderingFiber.lanes |= hook;
      workInProgressRootSkippedLanes |= hook;
      return initialValue;
    }
    function updateDeferredValueImpl(hook, prevValue, value, initialValue) {
      if (objectIs(value, prevValue)) return value;
      if (null !== currentTreeHiddenStackCursor.current)
        return (
          (hook = mountDeferredValueImpl(hook, value, initialValue)),
          objectIs(hook, prevValue) || (didReceiveUpdate = !0),
          hook
        );
      if (
        0 === (renderLanes & 42) ||
        (0 !== (renderLanes & 1073741824) &&
          0 === (workInProgressRootRenderLanes & 261930))
      )
        return (didReceiveUpdate = !0), (hook.memoizedState = value);
      hook = requestDeferredLane();
      currentlyRenderingFiber.lanes |= hook;
      workInProgressRootSkippedLanes |= hook;
      return prevValue;
    }
    function releaseAsyncTransition() {
      ReactSharedInternals.asyncTransitions--;
    }
    function startTransition(
      fiber,
      queue,
      pendingState,
      finishedState,
      callback
    ) {
      var previousPriority = ReactDOMSharedInternals.p;
      ReactDOMSharedInternals.p =
        0 !== previousPriority && previousPriority < ContinuousEventPriority
          ? previousPriority
          : ContinuousEventPriority;
      var prevTransition = ReactSharedInternals.T,
        currentTransition = {};
      currentTransition._updatedFibers = new Set();
      ReactSharedInternals.T = currentTransition;
      dispatchOptimisticSetState(fiber, !1, queue, pendingState);
      try {
        var returnValue = callback(),
          onStartTransitionFinish = ReactSharedInternals.S;
        null !== onStartTransitionFinish &&
          onStartTransitionFinish(currentTransition, returnValue);
        if (
          null !== returnValue &&
          "object" === typeof returnValue &&
          "function" === typeof returnValue.then
        ) {
          ReactSharedInternals.asyncTransitions++;
          returnValue.then(releaseAsyncTransition, releaseAsyncTransition);
          var thenableForFinishedState = chainThenableValue(
            returnValue,
            finishedState
          );
          dispatchSetStateInternal(
            fiber,
            queue,
            thenableForFinishedState,
            requestUpdateLane(fiber)
          );
        } else
          dispatchSetStateInternal(
            fiber,
            queue,
            finishedState,
            requestUpdateLane(fiber)
          );
      } catch (error) {
        dispatchSetStateInternal(
          fiber,
          queue,
          { then: function () {}, status: "rejected", reason: error },
          requestUpdateLane(fiber)
        );
      } finally {
        (ReactDOMSharedInternals.p = previousPriority),
          null !== prevTransition &&
            null !== currentTransition.types &&
            (null !== prevTransition.types &&
              prevTransition.types !== currentTransition.types &&
              console.error(
                "We expected inner Transitions to have transferred the outer types set and that you cannot add to the outer Transition while inside the inner.This is a bug in React."
              ),
            (prevTransition.types = currentTransition.types)),
          (ReactSharedInternals.T = prevTransition),
          null === prevTransition &&
            currentTransition._updatedFibers &&
            ((fiber = currentTransition._updatedFibers.size),
            currentTransition._updatedFibers.clear(),
            10 < fiber &&
              console.warn(
                "Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table."
              ));
      }
    }
    function startHostTransition(formFiber, pendingState, action, formData) {
      if (5 !== formFiber.tag)
        throw Error(
          "Expected the form instance to be a HostComponent. This is a bug in React."
        );
      var queue = ensureFormComponentIsStateful(formFiber).queue;
      startHostActionTimer(formFiber);
      startTransition(
        formFiber,
        queue,
        pendingState,
        NotPendingTransition,
        null === action
          ? noop
          : function () {
              requestFormReset$1(formFiber);
              return action(formData);
            }
      );
    }
    function ensureFormComponentIsStateful(formFiber) {
      var existingStateHook = formFiber.memoizedState;
      if (null !== existingStateHook) return existingStateHook;
      existingStateHook = {
        memoizedState: NotPendingTransition,
        baseState: NotPendingTransition,
        baseQueue: null,
        queue: {
          pending: null,
          lanes: 0,
          dispatch: null,
          lastRenderedReducer: basicStateReducer,
          lastRenderedState: NotPendingTransition
        },
        next: null
      };
      var initialResetState = {};
      existingStateHook.next = {
        memoizedState: initialResetState,
        baseState: initialResetState,
        baseQueue: null,
        queue: {
          pending: null,
          lanes: 0,
          dispatch: null,
          lastRenderedReducer: basicStateReducer,
          lastRenderedState: initialResetState
        },
        next: null
      };
      formFiber.memoizedState = existingStateHook;
      formFiber = formFiber.alternate;
      null !== formFiber && (formFiber.memoizedState = existingStateHook);
      return existingStateHook;
    }
    function requestFormReset$1(formFiber) {
      null === ReactSharedInternals.T &&
        console.error(
          "requestFormReset was called outside a transition or action. To fix, move to an action, or wrap with startTransition."
        );
      var stateHook = ensureFormComponentIsStateful(formFiber);
      null === stateHook.next &&
        (stateHook = formFiber.alternate.memoizedState);
      dispatchSetStateInternal(
        formFiber,
        stateHook.next.queue,
        {},
        requestUpdateLane(formFiber)
      );
    }
    function mountTransition() {
      var stateHook = mountStateImpl(!1);
      stateHook = startTransition.bind(
        null,
        currentlyRenderingFiber,
        stateHook.queue,
        !0,
        !1
      );
      mountWorkInProgressHook().memoizedState = stateHook;
      return [!1, stateHook];
    }
    function updateTransition() {
      var booleanOrThenable = updateReducer(basicStateReducer)[0],
        start = updateWorkInProgressHook().memoizedState;
      return [
        "boolean" === typeof booleanOrThenable
          ? booleanOrThenable
          : useThenable(booleanOrThenable),
        start
      ];
    }
    function rerenderTransition() {
      var booleanOrThenable = rerenderReducer(basicStateReducer)[0],
        start = updateWorkInProgressHook().memoizedState;
      return [
        "boolean" === typeof booleanOrThenable
          ? booleanOrThenable
          : useThenable(booleanOrThenable),
        start
      ];
    }
    function useHostTransitionStatus() {
      return readContext(HostTransitionContext);
    }
    function mountId() {
      var hook = mountWorkInProgressHook(),
        identifierPrefix = workInProgressRoot.identifierPrefix;
      if (isHydrating) {
        var treeId = treeContextOverflow;
        var idWithLeadingBit = treeContextId;
        treeId =
          (
            idWithLeadingBit & ~(1 << (32 - clz32(idWithLeadingBit) - 1))
          ).toString(32) + treeId;
        identifierPrefix = "_" + identifierPrefix + "R_" + treeId;
        treeId = localIdCounter++;
        0 < treeId && (identifierPrefix += "H" + treeId.toString(32));
        identifierPrefix += "_";
      } else
        (treeId = globalClientIdCounter++),
          (identifierPrefix =
            "_" + identifierPrefix + "r_" + treeId.toString(32) + "_");
      return (hook.memoizedState = identifierPrefix);
    }
    function mountRefresh() {
      return (mountWorkInProgressHook().memoizedState = refreshCache.bind(
        null,
        currentlyRenderingFiber
      ));
    }
    function refreshCache(fiber, seedKey) {
      for (var provider = fiber.return; null !== provider; ) {
        switch (provider.tag) {
          case 24:
          case 3:
            var lane = requestUpdateLane(provider),
              refreshUpdate = createUpdate(lane),
              root = enqueueUpdate(provider, refreshUpdate, lane);
            null !== root &&
              (startUpdateTimerByLane(lane, "refresh()", fiber),
              scheduleUpdateOnFiber(root, provider, lane),
              entangleTransitions(root, provider, lane));
            fiber = createCache();
            null !== seedKey &&
              void 0 !== seedKey &&
              null !== root &&
              console.error(
                "The seed argument is not enabled outside experimental channels."
              );
            refreshUpdate.payload = { cache: fiber };
            return;
        }
        provider = provider.return;
      }
    }
    function dispatchReducerAction(fiber, queue, action) {
      var args = arguments;
      "function" === typeof args[3] &&
        console.error(
          "State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect()."
        );
      args = requestUpdateLane(fiber);
      var update = {
        lane: args,
        revertLane: 0,
        gesture: null,
        action: action,
        hasEagerState: !1,
        eagerState: null,
        next: null
      };
      isRenderPhaseUpdate(fiber)
        ? enqueueRenderPhaseUpdate(queue, update)
        : ((update = enqueueConcurrentHookUpdate(fiber, queue, update, args)),
          null !== update &&
            (startUpdateTimerByLane(args, "dispatch()", fiber),
            scheduleUpdateOnFiber(update, fiber, args),
            entangleTransitionUpdate(update, queue, args)));
    }
    function dispatchSetState(fiber, queue, action) {
      var args = arguments;
      "function" === typeof args[3] &&
        console.error(
          "State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect()."
        );
      args = requestUpdateLane(fiber);
      dispatchSetStateInternal(fiber, queue, action, args) &&
        startUpdateTimerByLane(args, "setState()", fiber);
    }
    function dispatchSetStateInternal(fiber, queue, action, lane) {
      var update = {
        lane: lane,
        revertLane: 0,
        gesture: null,
        action: action,
        hasEagerState: !1,
        eagerState: null,
        next: null
      };
      if (isRenderPhaseUpdate(fiber)) enqueueRenderPhaseUpdate(queue, update);
      else {
        var alternate = fiber.alternate;
        if (
          0 === fiber.lanes &&
          (null === alternate || 0 === alternate.lanes) &&
          ((alternate = queue.lastRenderedReducer), null !== alternate)
        ) {
          var prevDispatcher = ReactSharedInternals.H;
          ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;
          try {
            var currentState = queue.lastRenderedState,
              eagerState = alternate(currentState, action);
            update.hasEagerState = !0;
            update.eagerState = eagerState;
            if (objectIs(eagerState, currentState))
              return (
                enqueueUpdate$1(fiber, queue, update, 0),
                null === workInProgressRoot &&
                  finishQueueingConcurrentUpdates(),
                !1
              );
          } catch (error) {
          } finally {
            ReactSharedInternals.H = prevDispatcher;
          }
        }
        action = enqueueConcurrentHookUpdate(fiber, queue, update, lane);
        if (null !== action)
          return (
            scheduleUpdateOnFiber(action, fiber, lane),
            entangleTransitionUpdate(action, queue, lane),
            !0
          );
      }
      return !1;
    }
    function dispatchOptimisticSetState(
      fiber,
      throwIfDuringRender,
      queue,
      action
    ) {
      null === ReactSharedInternals.T &&
        0 === currentEntangledLane &&
        console.error(
          "An optimistic state update occurred outside a transition or action. To fix, move the update to an action, or wrap with startTransition."
        );
      action = {
        lane: 2,
        revertLane: requestTransitionLane(),
        gesture: null,
        action: action,
        hasEagerState: !1,
        eagerState: null,
        next: null
      };
      if (isRenderPhaseUpdate(fiber)) {
        if (throwIfDuringRender)
          throw Error("Cannot update optimistic state while rendering.");
        console.error("Cannot call startTransition while rendering.");
      } else
        (throwIfDuringRender = enqueueConcurrentHookUpdate(
          fiber,
          queue,
          action,
          2
        )),
          null !== throwIfDuringRender &&
            (startUpdateTimerByLane(2, "setOptimistic()", fiber),
            scheduleUpdateOnFiber(throwIfDuringRender, fiber, 2));
    }
    function isRenderPhaseUpdate(fiber) {
      var alternate = fiber.alternate;
      return (
        fiber === currentlyRenderingFiber ||
        (null !== alternate && alternate === currentlyRenderingFiber)
      );
    }
    function enqueueRenderPhaseUpdate(queue, update) {
      didScheduleRenderPhaseUpdateDuringThisPass =
        didScheduleRenderPhaseUpdate = !0;
      var pending = queue.pending;
      null === pending
        ? (update.next = update)
        : ((update.next = pending.next), (pending.next = update));
      queue.pending = update;
    }
    function entangleTransitionUpdate(root, queue, lane) {
      if (0 !== (lane & 4194048)) {
        var queueLanes = queue.lanes;
        queueLanes &= root.pendingLanes;
        lane |= queueLanes;
        queue.lanes = lane;
        markRootEntangled(root, lane);
      }
    }
    function warnOnInvalidCallback(callback) {
      if (null !== callback && "function" !== typeof callback) {
        var key = String(callback);
        didWarnOnInvalidCallback.has(key) ||
          (didWarnOnInvalidCallback.add(key),
          console.error(
            "Expected the last optional `callback` argument to be a function. Instead received: %s.",
            callback
          ));
      }
    }
    function applyDerivedStateFromProps(
      workInProgress,
      ctor,
      getDerivedStateFromProps,
      nextProps
    ) {
      var prevState = workInProgress.memoizedState,
        partialState = getDerivedStateFromProps(nextProps, prevState);
      if (workInProgress.mode & StrictLegacyMode) {
        setIsStrictModeForDevtools(!0);
        try {
          partialState = getDerivedStateFromProps(nextProps, prevState);
        } finally {
          setIsStrictModeForDevtools(!1);
        }
      }
      void 0 === partialState &&
        ((ctor = getComponentNameFromType(ctor) || "Component"),
        didWarnAboutUndefinedDerivedState.has(ctor) ||
          (didWarnAboutUndefinedDerivedState.add(ctor),
          console.error(
            "%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. You have returned undefined.",
            ctor
          )));
      prevState =
        null === partialState || void 0 === partialState
          ? prevState
          : assign({}, prevState, partialState);
      workInProgress.memoizedState = prevState;
      0 === workInProgress.lanes &&
        (workInProgress.updateQueue.baseState = prevState);
    }
    function checkShouldComponentUpdate(
      workInProgress,
      ctor,
      oldProps,
      newProps,
      oldState,
      newState,
      nextContext
    ) {
      var instance = workInProgress.stateNode;
      if ("function" === typeof instance.shouldComponentUpdate) {
        oldProps = instance.shouldComponentUpdate(
          newProps,
          newState,
          nextContext
        );
        if (workInProgress.mode & StrictLegacyMode) {
          setIsStrictModeForDevtools(!0);
          try {
            oldProps = instance.shouldComponentUpdate(
              newProps,
              newState,
              nextContext
            );
          } finally {
            setIsStrictModeForDevtools(!1);
          }
        }
        void 0 === oldProps &&
          console.error(
            "%s.shouldComponentUpdate(): Returned undefined instead of a boolean value. Make sure to return true or false.",
            getComponentNameFromType(ctor) || "Component"
          );
        return oldProps;
      }
      return ctor.prototype && ctor.prototype.isPureReactComponent
        ? !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState)
        : !0;
    }
    function callComponentWillReceiveProps(
      workInProgress,
      instance,
      newProps,
      nextContext
    ) {
      var oldState = instance.state;
      "function" === typeof instance.componentWillReceiveProps &&
        instance.componentWillReceiveProps(newProps, nextContext);
      "function" === typeof instance.UNSAFE_componentWillReceiveProps &&
        instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);
      instance.state !== oldState &&
        ((workInProgress =
          getComponentNameFromFiber(workInProgress) || "Component"),
        didWarnAboutStateAssignmentForComponent.has(workInProgress) ||
          (didWarnAboutStateAssignmentForComponent.add(workInProgress),
          console.error(
            "%s.componentWillReceiveProps(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.",
            workInProgress
          )),
        classComponentUpdater.enqueueReplaceState(
          instance,
          instance.state,
          null
        ));
    }
    function resolveClassComponentProps(Component, baseProps) {
      var newProps = baseProps;
      if ("ref" in baseProps) {
        newProps = {};
        for (var propName in baseProps)
          "ref" !== propName && (newProps[propName] = baseProps[propName]);
      }
      if ((Component = Component.defaultProps)) {
        newProps === baseProps && (newProps = assign({}, newProps));
        for (var _propName in Component)
          void 0 === newProps[_propName] &&
            (newProps[_propName] = Component[_propName]);
      }
      return newProps;
    }
    function defaultOnUncaughtError(error) {
      reportGlobalError(error);
      console.warn(
        "%s\n\n%s\n",
        componentName
          ? "An error occurred in the <" + componentName + "> component."
          : "An error occurred in one of your React components.",
        "Consider adding an error boundary to your tree to customize error handling behavior.\nVisit https://react.dev/link/error-boundaries to learn more about error boundaries."
      );
    }
    function defaultOnCaughtError(error) {
      var componentNameMessage = componentName
          ? "The above error occurred in the <" + componentName + "> component."
          : "The above error occurred in one of your React components.",
        recreateMessage =
          "React will try to recreate this component tree from scratch using the error boundary you provided, " +
          ((errorBoundaryName || "Anonymous") + ".");
      if (
        "object" === typeof error &&
        null !== error &&
        "string" === typeof error.environmentName
      ) {
        var JSCompiler_inline_result = error.environmentName;
        error = [
          "%o\n\n%s\n\n%s\n",
          error,
          componentNameMessage,
          recreateMessage
        ].slice(0);
        "string" === typeof error[0]
          ? error.splice(
              0,
              1,
              badgeFormat + " " + error[0],
              badgeStyle,
              pad + JSCompiler_inline_result + pad,
              resetStyle
            )
          : error.splice(
              0,
              0,
              badgeFormat,
              badgeStyle,
              pad + JSCompiler_inline_result + pad,
              resetStyle
            );
        error.unshift(console);
        JSCompiler_inline_result = bind.apply(console.error, error);
        JSCompiler_inline_result();
      } else
        console.error(
          "%o\n\n%s\n\n%s\n",
          error,
          componentNameMessage,
          recreateMessage
        );
    }
    function defaultOnRecoverableError(error) {
      reportGlobalError(error);
    }
    function logUncaughtError(root, errorInfo) {
      try {
        componentName = errorInfo.source
          ? getComponentNameFromFiber(errorInfo.source)
          : null;
        errorBoundaryName = null;
        var error = errorInfo.value;
        if (null !== ReactSharedInternals.actQueue)
          ReactSharedInternals.thrownErrors.push(error);
        else {
          var onUncaughtError = root.onUncaughtError;
          onUncaughtError(error, { componentStack: errorInfo.stack });
        }
      } catch (e$5) {
        setTimeout(function () {
          throw e$5;
        });
      }
    }
    function logCaughtError(root, boundary, errorInfo) {
      try {
        componentName = errorInfo.source
          ? getComponentNameFromFiber(errorInfo.source)
          : null;
        errorBoundaryName = getComponentNameFromFiber(boundary);
        var onCaughtError = root.onCaughtError;
        onCaughtError(errorInfo.value, {
          componentStack: errorInfo.stack,
          errorBoundary: 1 === boundary.tag ? boundary.stateNode : null
        });
      } catch (e$6) {
        setTimeout(function () {
          throw e$6;
        });
      }
    }
    function createRootErrorUpdate(root, errorInfo, lane) {
      lane = createUpdate(lane);
      lane.tag = CaptureUpdate;
      lane.payload = { element: null };
      lane.callback = function () {
        runWithFiberInDEV(errorInfo.source, logUncaughtError, root, errorInfo);
      };
      return lane;
    }
    function createClassErrorUpdate(lane) {
      lane = createUpdate(lane);
      lane.tag = CaptureUpdate;
      return lane;
    }
    function initializeClassErrorUpdate(update, root, fiber, errorInfo) {
      var getDerivedStateFromError = fiber.type.getDerivedStateFromError;
      if ("function" === typeof getDerivedStateFromError) {
        var error = errorInfo.value;
        update.payload = function () {
          return getDerivedStateFromError(error);
        };
        update.callback = function () {
          markFailedErrorBoundaryForHotReloading(fiber);
          runWithFiberInDEV(
            errorInfo.source,
            logCaughtError,
            root,
            fiber,
            errorInfo
          );
        };
      }
      var inst = fiber.stateNode;
      null !== inst &&
        "function" === typeof inst.componentDidCatch &&
        (update.callback = function () {
          markFailedErrorBoundaryForHotReloading(fiber);
          runWithFiberInDEV(
            errorInfo.source,
            logCaughtError,
            root,
            fiber,
            errorInfo
          );
          "function" !== typeof getDerivedStateFromError &&
            (null === legacyErrorBoundariesThatAlreadyFailed
              ? (legacyErrorBoundariesThatAlreadyFailed = new Set([this]))
              : legacyErrorBoundariesThatAlreadyFailed.add(this));
          callComponentDidCatchInDEV(this, errorInfo);
          "function" === typeof getDerivedStateFromError ||
            (0 === (fiber.lanes & 2) &&
              console.error(
                "%s: Error boundaries should implement getDerivedStateFromError(). In that method, return a state update to display an error message or fallback UI.",
                getComponentNameFromFiber(fiber) || "Unknown"
              ));
        });
    }
    function throwException(
      root,
      returnFiber,
      sourceFiber,
      value,
      rootRenderLanes
    ) {
      sourceFiber.flags |= 32768;
      isDevToolsPresent && restorePendingUpdaters(root, rootRenderLanes);
      if (
        null !== value &&
        "object" === typeof value &&
        "function" === typeof value.then
      ) {
        returnFiber = sourceFiber.alternate;
        null !== returnFiber &&
          propagateParentContextChanges(
            returnFiber,
            sourceFiber,
            rootRenderLanes,
            !0
          );
        isHydrating && (didSuspendOrErrorDEV = !0);
        sourceFiber = suspenseHandlerStackCursor.current;
        if (null !== sourceFiber) {
          switch (sourceFiber.tag) {
            case 31:
            case 13:
              return (
                null === shellBoundary
                  ? renderDidSuspendDelayIfPossible()
                  : null === sourceFiber.alternate &&
                    workInProgressRootExitStatus === RootInProgress &&
                    (workInProgressRootExitStatus = RootSuspended),
                (sourceFiber.flags &= -257),
                (sourceFiber.flags |= 65536),
                (sourceFiber.lanes = rootRenderLanes),
                value === noopSuspenseyCommitThenable
                  ? (sourceFiber.flags |= 16384)
                  : ((returnFiber = sourceFiber.updateQueue),
                    null === returnFiber
                      ? (sourceFiber.updateQueue = new Set([value]))
                      : returnFiber.add(value),
                    attachPingListener(root, value, rootRenderLanes)),
                !1
              );
            case 22:
              return (
                (sourceFiber.flags |= 65536),
                value === noopSuspenseyCommitThenable
                  ? (sourceFiber.flags |= 16384)
                  : ((returnFiber = sourceFiber.updateQueue),
                    null === returnFiber
                      ? ((returnFiber = {
                          transitions: null,
                          markerInstances: null,
                          retryQueue: new Set([value])
                        }),
                        (sourceFiber.updateQueue = returnFiber))
                      : ((sourceFiber = returnFiber.retryQueue),
                        null === sourceFiber
                          ? (returnFiber.retryQueue = new Set([value]))
                          : sourceFiber.add(value)),
                    attachPingListener(root, value, rootRenderLanes)),
                !1
              );
          }
          throw Error(
            "Unexpected Suspense handler tag (" +
              sourceFiber.tag +
              "). This is a bug in React."
          );
        }
        attachPingListener(root, value, rootRenderLanes);
        renderDidSuspendDelayIfPossible();
        return !1;
      }
      if (isHydrating)
        return (
          (didSuspendOrErrorDEV = !0),
          (returnFiber = suspenseHandlerStackCursor.current),
          null !== returnFiber
            ? (0 === (returnFiber.flags & 65536) && (returnFiber.flags |= 256),
              (returnFiber.flags |= 65536),
              (returnFiber.lanes = rootRenderLanes),
              value !== HydrationMismatchException &&
                queueHydrationError(
                  createCapturedValueAtFiber(
                    Error(
                      "There was an error while hydrating but React was able to recover by instead client rendering from the nearest Suspense boundary.",
                      { cause: value }
                    ),
                    sourceFiber
                  )
                ))
            : (value !== HydrationMismatchException &&
                queueHydrationError(
                  createCapturedValueAtFiber(
                    Error(
                      "There was an error while hydrating but React was able to recover by instead client rendering the entire root.",
                      { cause: value }
                    ),
                    sourceFiber
                  )
                ),
              (root = root.current.alternate),
              (root.flags |= 65536),
              (rootRenderLanes &= -rootRenderLanes),
              (root.lanes |= rootRenderLanes),
              (value = createCapturedValueAtFiber(value, sourceFiber)),
              (rootRenderLanes = createRootErrorUpdate(
                root.stateNode,
                value,
                rootRenderLanes
              )),
              enqueueCapturedUpdate(root, rootRenderLanes),
              workInProgressRootExitStatus !== RootSuspendedWithDelay &&
                (workInProgressRootExitStatus = RootErrored)),
          !1
        );
      var error = createCapturedValueAtFiber(
        Error(
          "There was an error during concurrent rendering but React was able to recover by instead synchronously rendering the entire root.",
          { cause: value }
        ),
        sourceFiber
      );
      null === workInProgressRootConcurrentErrors
        ? (workInProgressRootConcurrentErrors = [error])
        : workInProgressRootConcurrentErrors.push(error);
      workInProgressRootExitStatus !== RootSuspendedWithDelay &&
        (workInProgressRootExitStatus = RootErrored);
      if (null === returnFiber) return !0;
      value = createCapturedValueAtFiber(value, sourceFiber);
      sourceFiber = returnFiber;
      do {
        switch (sourceFiber.tag) {
          case 3:
            return (
              (sourceFiber.flags |= 65536),
              (root = rootRenderLanes & -rootRenderLanes),
              (sourceFiber.lanes |= root),
              (root = createRootErrorUpdate(
                sourceFiber.stateNode,
                value,
                root
              )),
              enqueueCapturedUpdate(sourceFiber, root),
              !1
            );
          case 1:
            if (
              ((returnFiber = sourceFiber.type),
              (error = sourceFiber.stateNode),
              0 === (sourceFiber.flags & 128) &&
                ("function" === typeof returnFiber.getDerivedStateFromError ||
                  (null !== error &&
                    "function" === typeof error.componentDidCatch &&
                    (null === legacyErrorBoundariesThatAlreadyFailed ||
                      !legacyErrorBoundariesThatAlreadyFailed.has(error)))))
            )
              return (
                (sourceFiber.flags |= 65536),
                (rootRenderLanes &= -rootRenderLanes),
                (sourceFiber.lanes |= rootRenderLanes),
                (rootRenderLanes = createClassErrorUpdate(rootRenderLanes)),
                initializeClassErrorUpdate(
                  rootRenderLanes,
                  root,
                  sourceFiber,
                  value
                ),
                enqueueCapturedUpdate(sourceFiber, rootRenderLanes),
                !1
              );
        }
        sourceFiber = sourceFiber.return;
      } while (null !== sourceFiber);
      return !1;
    }
    function reconcileChildren(
      current,
      workInProgress,
      nextChildren,
      renderLanes
    ) {
      workInProgress.child =
        null === current
          ? mountChildFibers(workInProgress, null, nextChildren, renderLanes)
          : reconcileChildFibers(
              workInProgress,
              current.child,
              nextChildren,
              renderLanes
            );
    }
    function updateForwardRef(
      current,
      workInProgress,
      Component,
      nextProps,
      renderLanes
    ) {
      Component = Component.render;
      var ref = workInProgress.ref;
      if ("ref" in nextProps) {
        var propsWithoutRef = {};
        for (var key in nextProps)
          "ref" !== key && (propsWithoutRef[key] = nextProps[key]);
      } else propsWithoutRef = nextProps;
      prepareToReadContext(workInProgress);
      nextProps = renderWithHooks(
        current,
        workInProgress,
        Component,
        propsWithoutRef,
        ref,
        renderLanes
      );
      key = checkDidRenderIdHook();
      if (null !== current && !didReceiveUpdate)
        return (
          bailoutHooks(current, workInProgress, renderLanes),
          bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes)
        );
      isHydrating && key && pushMaterializedTreeId(workInProgress);
      workInProgress.flags |= 1;
      reconcileChildren(current, workInProgress, nextProps, renderLanes);
      return workInProgress.child;
    }
    function updateMemoComponent(
      current,
      workInProgress,
      Component,
      nextProps,
      renderLanes
    ) {
      if (null === current) {
        var type = Component.type;
        if (
          "function" === typeof type &&
          !shouldConstruct(type) &&
          void 0 === type.defaultProps &&
          null === Component.compare
        )
          return (
            (Component = resolveFunctionForHotReloading(type)),
            (workInProgress.tag = 15),
            (workInProgress.type = Component),
            validateFunctionComponentInDev(workInProgress, type),
            updateSimpleMemoComponent(
              current,
              workInProgress,
              Component,
              nextProps,
              renderLanes
            )
          );
        current = createFiberFromTypeAndProps(
          Component.type,
          null,
          nextProps,
          workInProgress,
          workInProgress.mode,
          renderLanes
        );
        current.ref = workInProgress.ref;
        current.return = workInProgress;
        return (workInProgress.child = current);
      }
      type = current.child;
      if (!checkScheduledUpdateOrContext(current, renderLanes)) {
        var prevProps = type.memoizedProps;
        Component = Component.compare;
        Component = null !== Component ? Component : shallowEqual;
        if (
          Component(prevProps, nextProps) &&
          current.ref === workInProgress.ref
        )
          return bailoutOnAlreadyFinishedWork(
            current,
            workInProgress,
            renderLanes
          );
      }
      workInProgress.flags |= 1;
      current = createWorkInProgress(type, nextProps);
      current.ref = workInProgress.ref;
      current.return = workInProgress;
      return (workInProgress.child = current);
    }
    function updateSimpleMemoComponent(
      current,
      workInProgress,
      Component,
      nextProps,
      renderLanes
    ) {
      if (null !== current) {
        var prevProps = current.memoizedProps;
        if (
          shallowEqual(prevProps, nextProps) &&
          current.ref === workInProgress.ref &&
          workInProgress.type === current.type
        )
          if (
            ((didReceiveUpdate = !1),
            (workInProgress.pendingProps = nextProps = prevProps),
            checkScheduledUpdateOrContext(current, renderLanes))
          )
            0 !== (current.flags & 131072) && (didReceiveUpdate = !0);
          else
            return (
              (workInProgress.lanes = current.lanes),
              bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes)
            );
      }
      return updateFunctionComponent(
        current,
        workInProgress,
        Component,
        nextProps,
        renderLanes
      );
    }
    function updateOffscreenComponent(
      current,
      workInProgress,
      renderLanes,
      nextProps
    ) {
      var nextChildren = nextProps.children,
        prevState = null !== current ? current.memoizedState : null;
      null === current &&
        null === workInProgress.stateNode &&
        (workInProgress.stateNode = {
          _visibility: OffscreenVisible,
          _pendingMarkers: null,
          _retryCache: null,
          _transitions: null
        });
      if ("hidden" === nextProps.mode) {
        if (0 !== (workInProgress.flags & 128)) {
          prevState =
            null !== prevState
              ? prevState.baseLanes | renderLanes
              : renderLanes;
          if (null !== current) {
            nextProps = workInProgress.child = current.child;
            for (nextChildren = 0; null !== nextProps; )
              (nextChildren =
                nextChildren | nextProps.lanes | nextProps.childLanes),
                (nextProps = nextProps.sibling);
            nextProps = nextChildren & ~prevState;
          } else (nextProps = 0), (workInProgress.child = null);
          return deferHiddenOffscreenComponent(
            current,
            workInProgress,
            prevState,
            renderLanes,
            nextProps
          );
        }
        if (0 !== (renderLanes & 536870912))
          (workInProgress.memoizedState = { baseLanes: 0, cachePool: null }),
            null !== current &&
              pushTransition(
                workInProgress,
                null !== prevState ? prevState.cachePool : null
              ),
            null !== prevState
              ? pushHiddenContext(workInProgress, prevState)
              : reuseHiddenContextOnStack(workInProgress),
            pushOffscreenSuspenseHandler(workInProgress);
        else
          return (
            (nextProps = workInProgress.lanes = 536870912),
            deferHiddenOffscreenComponent(
              current,
              workInProgress,
              null !== prevState
                ? prevState.baseLanes | renderLanes
                : renderLanes,
              renderLanes,
              nextProps
            )
          );
      } else
        null !== prevState
          ? (pushTransition(workInProgress, prevState.cachePool),
            pushHiddenContext(workInProgress, prevState),
            reuseSuspenseHandlerOnStack(workInProgress),
            (workInProgress.memoizedState = null))
          : (null !== current && pushTransition(workInProgress, null),
            reuseHiddenContextOnStack(workInProgress),
            reuseSuspenseHandlerOnStack(workInProgress));
      reconcileChildren(current, workInProgress, nextChildren, renderLanes);
      return workInProgress.child;
    }
    function bailoutOffscreenComponent(current, workInProgress) {
      (null !== current && 22 === current.tag) ||
        null !== workInProgress.stateNode ||
        (workInProgress.stateNode = {
          _visibility: OffscreenVisible,
          _pendingMarkers: null,
          _retryCache: null,
          _transitions: null
        });
      return workInProgress.sibling;
    }
    function deferHiddenOffscreenComponent(
      current,
      workInProgress,
      nextBaseLanes,
      renderLanes,
      remainingChildLanes
    ) {
      var JSCompiler_inline_result = peekCacheFromPool();
      JSCompiler_inline_result =
        null === JSCompiler_inline_result
          ? null
          : {
              parent: CacheContext._currentValue,
              pool: JSCompiler_inline_result
            };
      workInProgress.memoizedState = {
        baseLanes: nextBaseLanes,
        cachePool: JSCompiler_inline_result
      };
      null !== current && pushTransition(workInProgress, null);
      reuseHiddenContextOnStack(workInProgress);
      pushOffscreenSuspenseHandler(workInProgress);
      null !== current &&
        propagateParentContextChanges(current, workInProgress, renderLanes, !0);
      workInProgress.childLanes = remainingChildLanes;
      return null;
    }
    function mountActivityChildren(workInProgress, nextProps) {
      var hiddenProp = nextProps.hidden;
      void 0 !== hiddenProp &&
        console.error(
          '<Activity> doesn\'t accept a hidden prop. Use mode="hidden" instead.\n- <Activity %s>\n+ <Activity %s>',
          !0 === hiddenProp
            ? "hidden"
            : !1 === hiddenProp
              ? "hidden={false}"
              : "hidden={...}",
          hiddenProp ? 'mode="hidden"' : 'mode="visible"'
        );
      nextProps = mountWorkInProgressOffscreenFiber(
        { mode: nextProps.mode, children: nextProps.children },
        workInProgress.mode
      );
      nextProps.ref = workInProgress.ref;
      workInProgress.child = nextProps;
      nextProps.return = workInProgress;
      return nextProps;
    }
    function retryActivityComponentWithoutHydrating(
      current,
      workInProgress,
      renderLanes
    ) {
      reconcileChildFibers(workInProgress, current.child, null, renderLanes);
      current = mountActivityChildren(
        workInProgress,
        workInProgress.pendingProps
      );
      current.flags |= 2;
      popSuspenseHandler(workInProgress);
      workInProgress.memoizedState = null;
      return current;
    }
    function updateActivityComponent(current, workInProgress, renderLanes) {
      var nextProps = workInProgress.pendingProps,
        didSuspend = 0 !== (workInProgress.flags & 128);
      workInProgress.flags &= -129;
      if (null === current) {
        if (isHydrating) {
          if ("hidden" === nextProps.mode)
            return (
              (current = mountActivityChildren(workInProgress, nextProps)),
              (workInProgress.lanes = 536870912),
              bailoutOffscreenComponent(null, current)
            );
          pushDehydratedActivitySuspenseHandler(workInProgress);
          (current = nextHydratableInstance)
            ? ((renderLanes = canHydrateHydrationBoundary(
                current,
                rootOrSingletonContext
              )),
              (renderLanes =
                null !== renderLanes && renderLanes.data === ACTIVITY_START_DATA
                  ? renderLanes
                  : null),
              null !== renderLanes &&
                ((nextProps = {
                  dehydrated: renderLanes,
                  treeContext: getSuspendedTreeContext(),
                  retryLane: 536870912,
                  hydrationErrors: null
                }),
                (workInProgress.memoizedState = nextProps),
                (nextProps = createFiberFromDehydratedFragment(renderLanes)),
                (nextProps.return = workInProgress),
                (workInProgress.child = nextProps),
                (hydrationParentFiber = workInProgress),
                (nextHydratableInstance = null)))
            : (renderLanes = null);
          if (null === renderLanes)
            throw (
              (warnNonHydratedInstance(workInProgress, current),
              throwOnHydrationMismatch(workInProgress))
            );
          workInProgress.lanes = 536870912;
          return null;
        }
        return mountActivityChildren(workInProgress, nextProps);
      }
      var prevState = current.memoizedState;
      if (null !== prevState) {
        var activityInstance = prevState.dehydrated;
        pushDehydratedActivitySuspenseHandler(workInProgress);
        if (didSuspend)
          if (workInProgress.flags & 256)
            (workInProgress.flags &= -257),
              (workInProgress = retryActivityComponentWithoutHydrating(
                current,
                workInProgress,
                renderLanes
              ));
          else if (null !== workInProgress.memoizedState)
            (workInProgress.child = current.child),
              (workInProgress.flags |= 128),
              (workInProgress = null);
          else
            throw Error(
              "Client rendering an Activity suspended it again. This is a bug in React."
            );
        else if (
          (warnIfHydrating(),
          0 !== (renderLanes & 536870912) &&
            markRenderDerivedCause(workInProgress),
          didReceiveUpdate ||
            propagateParentContextChanges(
              current,
              workInProgress,
              renderLanes,
              !1
            ),
          (didSuspend = 0 !== (renderLanes & current.childLanes)),
          didReceiveUpdate || didSuspend)
        ) {
          nextProps = workInProgressRoot;
          if (
            null !== nextProps &&
            ((activityInstance = getBumpedLaneForHydration(
              nextProps,
              renderLanes
            )),
            0 !== activityInstance && activityInstance !== prevState.retryLane)
          )
            throw (
              ((prevState.retryLane = activityInstance),
              enqueueConcurrentRenderForLane(current, activityInstance),
              scheduleUpdateOnFiber(nextProps, current, activityInstance),
              SelectiveHydrationException)
            );
          renderDidSuspendDelayIfPossible();
          workInProgress = retryActivityComponentWithoutHydrating(
            current,
            workInProgress,
            renderLanes
          );
        } else
          (current = prevState.treeContext),
            (nextHydratableInstance = getNextHydratable(
              activityInstance.nextSibling
            )),
            (hydrationParentFiber = workInProgress),
            (isHydrating = !0),
            (hydrationErrors = null),
            (didSuspendOrErrorDEV = !1),
            (hydrationDiffRootDEV = null),
            (rootOrSingletonContext = !1),
            null !== current &&
              restoreSuspendedTreeContext(workInProgress, current),
            (workInProgress = mountActivityChildren(workInProgress, nextProps)),
            (workInProgress.flags |= 4096);
        return workInProgress;
      }
      prevState = current.child;
      nextProps = { mode: nextProps.mode, children: nextProps.children };
      0 !== (renderLanes & 536870912) &&
        0 !== (renderLanes & current.lanes) &&
        markRenderDerivedCause(workInProgress);
      current = createWorkInProgress(prevState, nextProps);
      current.ref = workInProgress.ref;
      workInProgress.child = current;
      current.return = workInProgress;
      return current;
    }
    function markRef(current, workInProgress) {
      var ref = workInProgress.ref;
      if (null === ref)
        null !== current &&
          null !== current.ref &&
          (workInProgress.flags |= 4194816);
      else {
        if ("function" !== typeof ref && "object" !== typeof ref)
          throw Error(
            "Expected ref to be a function, an object returned by React.createRef(), or undefined/null."
          );
        if (null === current || current.ref !== ref)
          workInProgress.flags |= 4194816;
      }
    }
    function updateFunctionComponent(
      current,
      workInProgress,
      Component,
      nextProps,
      renderLanes
    ) {
      if (
        Component.prototype &&
        "function" === typeof Component.prototype.render
      ) {
        var componentName = getComponentNameFromType(Component) || "Unknown";
        didWarnAboutBadClass[componentName] ||
          (console.error(
            "The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.",
            componentName,
            componentName
          ),
          (didWarnAboutBadClass[componentName] = !0));
      }
      workInProgress.mode & StrictLegacyMode &&
        ReactStrictModeWarnings.recordLegacyContextWarning(
          workInProgress,
          null
        );
      null === current &&
        (validateFunctionComponentInDev(workInProgress, workInProgress.type),
        Component.contextTypes &&
          ((componentName = getComponentNameFromType(Component) || "Unknown"),
          didWarnAboutContextTypes[componentName] ||
            ((didWarnAboutContextTypes[componentName] = !0),
            console.error(
              "%s uses the legacy contextTypes API which was removed in React 19. Use React.createContext() with React.useContext() instead. (https://react.dev/link/legacy-context)",
              componentName
            ))));
      prepareToReadContext(workInProgress);
      Component = renderWithHooks(
        current,
        workInProgress,
        Component,
        nextProps,
        void 0,
        renderLanes
      );
      nextProps = checkDidRenderIdHook();
      if (null !== current && !didReceiveUpdate)
        return (
          bailoutHooks(current, workInProgress, renderLanes),
          bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes)
        );
      isHydrating && nextProps && pushMaterializedTreeId(workInProgress);
      workInProgress.flags |= 1;
      reconcileChildren(current, workInProgress, Component, renderLanes);
      return workInProgress.child;
    }
    function replayFunctionComponent(
      current,
      workInProgress,
      nextProps,
      Component,
      secondArg,
      renderLanes
    ) {
      prepareToReadContext(workInProgress);
      hookTypesUpdateIndexDev = -1;
      ignorePreviousDependencies =
        null !== current && current.type !== workInProgress.type;
      workInProgress.updateQueue = null;
      nextProps = renderWithHooksAgain(
        workInProgress,
        Component,
        nextProps,
        secondArg
      );
      finishRenderingHooks(current, workInProgress);
      Component = checkDidRenderIdHook();
      if (null !== current && !didReceiveUpdate)
        return (
          bailoutHooks(current, workInProgress, renderLanes),
          bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes)
        );
      isHydrating && Component && pushMaterializedTreeId(workInProgress);
      workInProgress.flags |= 1;
      reconcileChildren(current, workInProgress, nextProps, renderLanes);
      return workInProgress.child;
    }
    function updateClassComponent(
      current,
      workInProgress,
      Component,
      nextProps,
      renderLanes
    ) {
      switch (shouldErrorImpl(workInProgress)) {
        case !1:
          var _instance = workInProgress.stateNode,
            state = new workInProgress.type(
              workInProgress.memoizedProps,
              _instance.context
            ).state;
          _instance.updater.enqueueSetState(_instance, state, null);
          break;
        case !0:
          workInProgress.flags |= 128;
          workInProgress.flags |= 65536;
          _instance = Error("Simulated error coming from DevTools");
          var lane = renderLanes & -renderLanes;
          workInProgress.lanes |= lane;
          state = workInProgressRoot;
          if (null === state)
            throw Error(
              "Expected a work-in-progress root. This is a bug in React. Please file an issue."
            );
          lane = createClassErrorUpdate(lane);
          initializeClassErrorUpdate(
            lane,
            state,
            workInProgress,
            createCapturedValueAtFiber(_instance, workInProgress)
          );
          enqueueCapturedUpdate(workInProgress, lane);
      }
      prepareToReadContext(workInProgress);
      if (null === workInProgress.stateNode) {
        state = emptyContextObject;
        _instance = Component.contextType;
        "contextType" in Component &&
          null !== _instance &&
          (void 0 === _instance || _instance.$$typeof !== REACT_CONTEXT_TYPE) &&
          !didWarnAboutInvalidateContextType.has(Component) &&
          (didWarnAboutInvalidateContextType.add(Component),
          (lane =
            void 0 === _instance
              ? " However, it is set to undefined. This can be caused by a typo or by mixing up named and default imports. This can also happen due to a circular dependency, so try moving the createContext() call to a separate file."
              : "object" !== typeof _instance
                ? " However, it is set to a " + typeof _instance + "."
                : _instance.$$typeof === REACT_CONSUMER_TYPE
                  ? " Did you accidentally pass the Context.Consumer instead?"
                  : " However, it is set to an object with keys {" +
                    Object.keys(_instance).join(", ") +
                    "}."),
          console.error(
            "%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext().%s",
            getComponentNameFromType(Component) || "Component",
            lane
          ));
        "object" === typeof _instance &&
          null !== _instance &&
          (state = readContext(_instance));
        _instance = new Component(nextProps, state);
        if (workInProgress.mode & StrictLegacyMode) {
          setIsStrictModeForDevtools(!0);
          try {
            _instance = new Component(nextProps, state);
          } finally {
            setIsStrictModeForDevtools(!1);
          }
        }
        state = workInProgress.memoizedState =
          null !== _instance.state && void 0 !== _instance.state
            ? _instance.state
            : null;
        _instance.updater = classComponentUpdater;
        workInProgress.stateNode = _instance;
        _instance._reactInternals = workInProgress;
        _instance._reactInternalInstance = fakeInternalInstance;
        "function" === typeof Component.getDerivedStateFromProps &&
          null === state &&
          ((state = getComponentNameFromType(Component) || "Component"),
          didWarnAboutUninitializedState.has(state) ||
            (didWarnAboutUninitializedState.add(state),
            console.error(
              "`%s` uses `getDerivedStateFromProps` but its initial state is %s. This is not recommended. Instead, define the initial state by assigning an object to `this.state` in the constructor of `%s`. This ensures that `getDerivedStateFromProps` arguments have a consistent shape.",
              state,
              null === _instance.state ? "null" : "undefined",
              state
            )));
        if (
          "function" === typeof Component.getDerivedStateFromProps ||
          "function" === typeof _instance.getSnapshotBeforeUpdate
        ) {
          var foundWillUpdateName = (lane = state = null);
          "function" === typeof _instance.componentWillMount &&
          !0 !== _instance.componentWillMount.__suppressDeprecationWarning
            ? (state = "componentWillMount")
            : "function" === typeof _instance.UNSAFE_componentWillMount &&
              (state = "UNSAFE_componentWillMount");
          "function" === typeof _instance.componentWillReceiveProps &&
          !0 !==
            _instance.componentWillReceiveProps.__suppressDeprecationWarning
            ? (lane = "componentWillReceiveProps")
            : "function" ===
                typeof _instance.UNSAFE_componentWillReceiveProps &&
              (lane = "UNSAFE_componentWillReceiveProps");
          "function" === typeof _instance.componentWillUpdate &&
          !0 !== _instance.componentWillUpdate.__suppressDeprecationWarning
            ? (foundWillUpdateName = "componentWillUpdate")
            : "function" === typeof _instance.UNSAFE_componentWillUpdate &&
              (foundWillUpdateName = "UNSAFE_componentWillUpdate");
          if (null !== state || null !== lane || null !== foundWillUpdateName) {
            _instance = getComponentNameFromType(Component) || "Component";
            var newApiName =
              "function" === typeof Component.getDerivedStateFromProps
                ? "getDerivedStateFromProps()"
                : "getSnapshotBeforeUpdate()";
            didWarnAboutLegacyLifecyclesAndDerivedState.has(_instance) ||
              (didWarnAboutLegacyLifecyclesAndDerivedState.add(_instance),
              console.error(
                "Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\nThe above lifecycles should be removed. Learn more about this warning here:\nhttps://react.dev/link/unsafe-component-lifecycles",
                _instance,
                newApiName,
                null !== state ? "\n  " + state : "",
                null !== lane ? "\n  " + lane : "",
                null !== foundWillUpdateName ? "\n  " + foundWillUpdateName : ""
              ));
          }
        }
        _instance = workInProgress.stateNode;
        state = getComponentNameFromType(Component) || "Component";
        _instance.render ||
          (Component.prototype &&
          "function" === typeof Component.prototype.render
            ? console.error(
                "No `render` method found on the %s instance: did you accidentally return an object from the constructor?",
                state
              )
            : console.error(
                "No `render` method found on the %s instance: you may have forgotten to define `render`.",
                state
              ));
        !_instance.getInitialState ||
          _instance.getInitialState.isReactClassApproved ||
          _instance.state ||
          console.error(
            "getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?",
            state
          );
        _instance.getDefaultProps &&
          !_instance.getDefaultProps.isReactClassApproved &&
          console.error(
            "getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.",
            state
          );
        _instance.contextType &&
          console.error(
            "contextType was defined as an instance property on %s. Use a static property to define contextType instead.",
            state
          );
        Component.childContextTypes &&
          !didWarnAboutChildContextTypes.has(Component) &&
          (didWarnAboutChildContextTypes.add(Component),
          console.error(
            "%s uses the legacy childContextTypes API which was removed in React 19. Use React.createContext() instead. (https://react.dev/link/legacy-context)",
            state
          ));
        Component.contextTypes &&
          !didWarnAboutContextTypes$1.has(Component) &&
          (didWarnAboutContextTypes$1.add(Component),
          console.error(
            "%s uses the legacy contextTypes API which was removed in React 19. Use React.createContext() with static contextType instead. (https://react.dev/link/legacy-context)",
            state
          ));
        "function" === typeof _instance.componentShouldUpdate &&
          console.error(
            "%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.",
            state
          );
        Component.prototype &&
          Component.prototype.isPureReactComponent &&
          "undefined" !== typeof _instance.shouldComponentUpdate &&
          console.error(
            "%s has a method called shouldComponentUpdate(). shouldComponentUpdate should not be used when extending React.PureComponent. Please extend React.Component if shouldComponentUpdate is used.",
            getComponentNameFromType(Component) || "A pure component"
          );
        "function" === typeof _instance.componentDidUnmount &&
          console.error(
            "%s has a method called componentDidUnmount(). But there is no such lifecycle method. Did you mean componentWillUnmount()?",
            state
          );
        "function" === typeof _instance.componentDidReceiveProps &&
          console.error(
            "%s has a method called componentDidReceiveProps(). But there is no such lifecycle method. If you meant to update the state in response to changing props, use componentWillReceiveProps(). If you meant to fetch data or run side-effects or mutations after React has updated the UI, use componentDidUpdate().",
            state
          );
        "function" === typeof _instance.componentWillRecieveProps &&
          console.error(
            "%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?",
            state
          );
        "function" === typeof _instance.UNSAFE_componentWillRecieveProps &&
          console.error(
            "%s has a method called UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?",
            state
          );
        lane = _instance.props !== nextProps;
        void 0 !== _instance.props &&
          lane &&
          console.error(
            "When calling super() in `%s`, make sure to pass up the same props that your component's constructor was passed.",
            state
          );
        _instance.defaultProps &&
          console.error(
            "Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.",
            state,
            state
          );
        "function" !== typeof _instance.getSnapshotBeforeUpdate ||
          "function" === typeof _instance.componentDidUpdate ||
          didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(Component) ||
          (didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(Component),
          console.error(
            "%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). This component defines getSnapshotBeforeUpdate() only.",
            getComponentNameFromType(Component)
          ));
        "function" === typeof _instance.getDerivedStateFromProps &&
          console.error(
            "%s: getDerivedStateFromProps() is defined as an instance method and will be ignored. Instead, declare it as a static method.",
            state
          );
        "function" === typeof _instance.getDerivedStateFromError &&
          console.error(
            "%s: getDerivedStateFromError() is defined as an instance method and will be ignored. Instead, declare it as a static method.",
            state
          );
        "function" === typeof Component.getSnapshotBeforeUpdate &&
          console.error(
            "%s: getSnapshotBeforeUpdate() is defined as a static method and will be ignored. Instead, declare it as an instance method.",
            state
          );
        (lane = _instance.state) &&
          ("object" !== typeof lane || isArrayImpl(lane)) &&
          console.error("%s.state: must be set to an object or null", state);
        "function" === typeof _instance.getChildContext &&
          "object" !== typeof Component.childContextTypes &&
          console.error(
            "%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().",
            state
          );
        _instance = workInProgress.stateNode;
        _instance.props = nextProps;
        _instance.state = workInProgress.memoizedState;
        _instance.refs = {};
        initializeUpdateQueue(workInProgress);
        state = Component.contextType;
        _instance.context =
          "object" === typeof state && null !== state
            ? readContext(state)
            : emptyContextObject;
        _instance.state === nextProps &&
          ((state = getComponentNameFromType(Component) || "Component"),
          didWarnAboutDirectlyAssigningPropsToState.has(state) ||
            (didWarnAboutDirectlyAssigningPropsToState.add(state),
            console.error(
              "%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.",
              state
            )));
        workInProgress.mode & StrictLegacyMode &&
          ReactStrictModeWarnings.recordLegacyContextWarning(
            workInProgress,
            _instance
          );
        ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(
          workInProgress,
          _instance
        );
        _instance.state = workInProgress.memoizedState;
        state = Component.getDerivedStateFromProps;
        "function" === typeof state &&
          (applyDerivedStateFromProps(
            workInProgress,
            Component,
            state,
            nextProps
          ),
          (_instance.state = workInProgress.memoizedState));
        "function" === typeof Component.getDerivedStateFromProps ||
          "function" === typeof _instance.getSnapshotBeforeUpdate ||
          ("function" !== typeof _instance.UNSAFE_componentWillMount &&
            "function" !== typeof _instance.componentWillMount) ||
          ((state = _instance.state),
          "function" === typeof _instance.componentWillMount &&
            _instance.componentWillMount(),
          "function" === typeof _instance.UNSAFE_componentWillMount &&
            _instance.UNSAFE_componentWillMount(),
          state !== _instance.state &&
            (console.error(
              "%s.componentWillMount(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.",
              getComponentNameFromFiber(workInProgress) || "Component"
            ),
            classComponentUpdater.enqueueReplaceState(
              _instance,
              _instance.state,
              null
            )),
          processUpdateQueue(workInProgress, nextProps, _instance, renderLanes),
          suspendIfUpdateReadFromEntangledAsyncAction(),
          (_instance.state = workInProgress.memoizedState));
        "function" === typeof _instance.componentDidMount &&
          (workInProgress.flags |= 4194308);
        (workInProgress.mode & StrictEffectsMode) !== NoMode &&
          (workInProgress.flags |= 134217728);
        _instance = !0;
      } else if (null === current) {
        _instance = workInProgress.stateNode;
        var unresolvedOldProps = workInProgress.memoizedProps;
        lane = resolveClassComponentProps(Component, unresolvedOldProps);
        _instance.props = lane;
        var oldContext = _instance.context;
        foundWillUpdateName = Component.contextType;
        state = emptyContextObject;
        "object" === typeof foundWillUpdateName &&
          null !== foundWillUpdateName &&
          (state = readContext(foundWillUpdateName));
        newApiName = Component.getDerivedStateFromProps;
        foundWillUpdateName =
          "function" === typeof newApiName ||
          "function" === typeof _instance.getSnapshotBeforeUpdate;
        unresolvedOldProps = workInProgress.pendingProps !== unresolvedOldProps;
        foundWillUpdateName ||
          ("function" !== typeof _instance.UNSAFE_componentWillReceiveProps &&
            "function" !== typeof _instance.componentWillReceiveProps) ||
          ((unresolvedOldProps || oldContext !== state) &&
            callComponentWillReceiveProps(
              workInProgress,
              _instance,
              nextProps,
              state
            ));
        hasForceUpdate = !1;
        var oldState = workInProgress.memoizedState;
        _instance.state = oldState;
        processUpdateQueue(workInProgress, nextProps, _instance, renderLanes);
        suspendIfUpdateReadFromEntangledAsyncAction();
        oldContext = workInProgress.memoizedState;
        unresolvedOldProps || oldState !== oldContext || hasForceUpdate
          ? ("function" === typeof newApiName &&
              (applyDerivedStateFromProps(
                workInProgress,
                Component,
                newApiName,
                nextProps
              ),
              (oldContext = workInProgress.memoizedState)),
            (lane =
              hasForceUpdate ||
              checkShouldComponentUpdate(
                workInProgress,
                Component,
                lane,
                nextProps,
                oldState,
                oldContext,
                state
              ))
              ? (foundWillUpdateName ||
                  ("function" !== typeof _instance.UNSAFE_componentWillMount &&
                    "function" !== typeof _instance.componentWillMount) ||
                  ("function" === typeof _instance.componentWillMount &&
                    _instance.componentWillMount(),
                  "function" === typeof _instance.UNSAFE_componentWillMount &&
                    _instance.UNSAFE_componentWillMount()),
                "function" === typeof _instance.componentDidMount &&
                  (workInProgress.flags |= 4194308),
                (workInProgress.mode & StrictEffectsMode) !== NoMode &&
                  (workInProgress.flags |= 134217728))
              : ("function" === typeof _instance.componentDidMount &&
                  (workInProgress.flags |= 4194308),
                (workInProgress.mode & StrictEffectsMode) !== NoMode &&
                  (workInProgress.flags |= 134217728),
                (workInProgress.memoizedProps = nextProps),
                (workInProgress.memoizedState = oldContext)),
            (_instance.props = nextProps),
            (_instance.state = oldContext),
            (_instance.context = state),
            (_instance = lane))
          : ("function" === typeof _instance.componentDidMount &&
              (workInProgress.flags |= 4194308),
            (workInProgress.mode & StrictEffectsMode) !== NoMode &&
              (workInProgress.flags |= 134217728),
            (_instance = !1));
      } else {
        _instance = workInProgress.stateNode;
        cloneUpdateQueue(current, workInProgress);
        state = workInProgress.memoizedProps;
        foundWillUpdateName = resolveClassComponentProps(Component, state);
        _instance.props = foundWillUpdateName;
        newApiName = workInProgress.pendingProps;
        oldState = _instance.context;
        oldContext = Component.contextType;
        lane = emptyContextObject;
        "object" === typeof oldContext &&
          null !== oldContext &&
          (lane = readContext(oldContext));
        unresolvedOldProps = Component.getDerivedStateFromProps;
        (oldContext =
          "function" === typeof unresolvedOldProps ||
          "function" === typeof _instance.getSnapshotBeforeUpdate) ||
          ("function" !== typeof _instance.UNSAFE_componentWillReceiveProps &&
            "function" !== typeof _instance.componentWillReceiveProps) ||
          ((state !== newApiName || oldState !== lane) &&
            callComponentWillReceiveProps(
              workInProgress,
              _instance,
              nextProps,
              lane
            ));
        hasForceUpdate = !1;
        oldState = workInProgress.memoizedState;
        _instance.state = oldState;
        processUpdateQueue(workInProgress, nextProps, _instance, renderLanes);
        suspendIfUpdateReadFromEntangledAsyncAction();
        var newState = workInProgress.memoizedState;
        state !== newApiName ||
        oldState !== newState ||
        hasForceUpdate ||
        (null !== current &&
          null !== current.dependencies &&
          checkIfContextChanged(current.dependencies))
          ? ("function" === typeof unresolvedOldProps &&
              (applyDerivedStateFromProps(
                workInProgress,
                Component,
                unresolvedOldProps,
                nextProps
              ),
              (newState = workInProgress.memoizedState)),
            (foundWillUpdateName =
              hasForceUpdate ||
              checkShouldComponentUpdate(
                workInProgress,
                Component,
                foundWillUpdateName,
                nextProps,
                oldState,
                newState,
                lane
              ) ||
              (null !== current &&
                null !== current.dependencies &&
                checkIfContextChanged(current.dependencies)))
              ? (oldContext ||
                  ("function" !== typeof _instance.UNSAFE_componentWillUpdate &&
                    "function" !== typeof _instance.componentWillUpdate) ||
                  ("function" === typeof _instance.componentWillUpdate &&
                    _instance.componentWillUpdate(nextProps, newState, lane),
                  "function" === typeof _instance.UNSAFE_componentWillUpdate &&
                    _instance.UNSAFE_componentWillUpdate(
                      nextProps,
                      newState,
                      lane
                    )),
                "function" === typeof _instance.componentDidUpdate &&
                  (workInProgress.flags |= 4),
                "function" === typeof _instance.getSnapshotBeforeUpdate &&
                  (workInProgress.flags |= 1024))
              : ("function" !== typeof _instance.componentDidUpdate ||
                  (state === current.memoizedProps &&
                    oldState === current.memoizedState) ||
                  (workInProgress.flags |= 4),
                "function" !== typeof _instance.getSnapshotBeforeUpdate ||
                  (state === current.memoizedProps &&
                    oldState === current.memoizedState) ||
                  (workInProgress.flags |= 1024),
                (workInProgress.memoizedProps = nextProps),
                (workInProgress.memoizedState = newState)),
            (_instance.props = nextProps),
            (_instance.state = newState),
            (_instance.context = lane),
            (_instance = foundWillUpdateName))
          : ("function" !== typeof _instance.componentDidUpdate ||
              (state === current.memoizedProps &&
                oldState === current.memoizedState) ||
              (workInProgress.flags |= 4),
            "function" !== typeof _instance.getSnapshotBeforeUpdate ||
              (state === current.memoizedProps &&
                oldState === current.memoizedState) ||
              (workInProgress.flags |= 1024),
            (_instance = !1));
      }
      lane = _instance;
      markRef(current, workInProgress);
      state = 0 !== (workInProgress.flags & 128);
      if (lane || state) {
        lane = workInProgress.stateNode;
        setCurrentFiber(workInProgress);
        if (state && "function" !== typeof Component.getDerivedStateFromError)
          (Component = null), (profilerStartTime = -1);
        else if (
          ((Component = callRenderInDEV(lane)),
          workInProgress.mode & StrictLegacyMode)
        ) {
          setIsStrictModeForDevtools(!0);
          try {
            callRenderInDEV(lane);
          } finally {
            setIsStrictModeForDevtools(!1);
          }
        }
        workInProgress.flags |= 1;
        null !== current && state
          ? ((workInProgress.child = reconcileChildFibers(
              workInProgress,
              current.child,
              null,
              renderLanes
            )),
            (workInProgress.child = reconcileChildFibers(
              workInProgress,
              null,
              Component,
              renderLanes
            )))
          : reconcileChildren(current, workInProgress, Component, renderLanes);
        workInProgress.memoizedState = lane.state;
        current = workInProgress.child;
      } else
        current = bailoutOnAlreadyFinishedWork(
          current,
          workInProgress,
          renderLanes
        );
      renderLanes = workInProgress.stateNode;
      _instance &&
        renderLanes.props !== nextProps &&
        (didWarnAboutReassigningProps ||
          console.error(
            "It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.",
            getComponentNameFromFiber(workInProgress) || "a component"
          ),
        (didWarnAboutReassigningProps = !0));
      return current;
    }
    function mountHostRootWithoutHydrating(
      current,
      workInProgress,
      nextChildren,
      renderLanes
    ) {
      resetHydrationState();
      workInProgress.flags |= 256;
      reconcileChildren(current, workInProgress, nextChildren, renderLanes);
      return workInProgress.child;
    }
    function validateFunctionComponentInDev(workInProgress, Component) {
      Component &&
        Component.childContextTypes &&
        console.error(
          "childContextTypes cannot be defined on a function component.\n  %s.childContextTypes = ...",
          Component.displayName || Component.name || "Component"
        );
      "function" === typeof Component.getDerivedStateFromProps &&
        ((workInProgress = getComponentNameFromType(Component) || "Unknown"),
        didWarnAboutGetDerivedStateOnFunctionComponent[workInProgress] ||
          (console.error(
            "%s: Function components do not support getDerivedStateFromProps.",
            workInProgress
          ),
          (didWarnAboutGetDerivedStateOnFunctionComponent[workInProgress] =
            !0)));
      "object" === typeof Component.contextType &&
        null !== Component.contextType &&
        ((Component = getComponentNameFromType(Component) || "Unknown"),
        didWarnAboutContextTypeOnFunctionComponent[Component] ||
          (console.error(
            "%s: Function components do not support contextType.",
            Component
          ),
          (didWarnAboutContextTypeOnFunctionComponent[Component] = !0)));
    }
    function mountSuspenseOffscreenState(renderLanes) {
      return { baseLanes: renderLanes, cachePool: getSuspendedCache() };
    }
    function getRemainingWorkInPrimaryTree(
      current,
      primaryTreeDidDefer,
      renderLanes
    ) {
      current = null !== current ? current.childLanes & ~renderLanes : 0;
      primaryTreeDidDefer && (current |= workInProgressDeferredLane);
      return current;
    }
    function updateSuspenseComponent(current, workInProgress, renderLanes) {
      var JSCompiler_object_inline_digest_2724;
      var JSCompiler_object_inline_stack_2725 = workInProgress.pendingProps;
      shouldSuspendImpl(workInProgress) && (workInProgress.flags |= 128);
      var JSCompiler_object_inline_message_2723 = !1;
      var didSuspend = 0 !== (workInProgress.flags & 128);
      (JSCompiler_object_inline_digest_2724 = didSuspend) ||
        (JSCompiler_object_inline_digest_2724 =
          null !== current && null === current.memoizedState
            ? !1
            : 0 !== (suspenseStackCursor.current & ForceSuspenseFallback));
      JSCompiler_object_inline_digest_2724 &&
        ((JSCompiler_object_inline_message_2723 = !0),
        (workInProgress.flags &= -129));
      JSCompiler_object_inline_digest_2724 = 0 !== (workInProgress.flags & 32);
      workInProgress.flags &= -33;
      if (null === current) {
        if (isHydrating) {
          JSCompiler_object_inline_message_2723
            ? pushPrimaryTreeSuspenseHandler(workInProgress)
            : reuseSuspenseHandlerOnStack(workInProgress);
          (current = nextHydratableInstance)
            ? ((renderLanes = canHydrateHydrationBoundary(
                current,
                rootOrSingletonContext
              )),
              (renderLanes =
                null !== renderLanes && renderLanes.data !== ACTIVITY_START_DATA
                  ? renderLanes
                  : null),
              null !== renderLanes &&
                ((JSCompiler_object_inline_digest_2724 = {
                  dehydrated: renderLanes,
                  treeContext: getSuspendedTreeContext(),
                  retryLane: 536870912,
                  hydrationErrors: null
                }),
                (workInProgress.memoizedState =
                  JSCompiler_object_inline_digest_2724),
                (JSCompiler_object_inline_digest_2724 =
                  createFiberFromDehydratedFragment(renderLanes)),
                (JSCompiler_object_inline_digest_2724.return = workInProgress),
                (workInProgress.child = JSCompiler_object_inline_digest_2724),
                (hydrationParentFiber = workInProgress),
                (nextHydratableInstance = null)))
            : (renderLanes = null);
          if (null === renderLanes)
            throw (
              (warnNonHydratedInstance(workInProgress, current),
              throwOnHydrationMismatch(workInProgress))
            );
          isSuspenseInstanceFallback(renderLanes)
            ? (workInProgress.lanes = 32)
            : (workInProgress.lanes = 536870912);
          return null;
        }
        var nextPrimaryChildren = JSCompiler_object_inline_stack_2725.children;
        JSCompiler_object_inline_stack_2725 =
          JSCompiler_object_inline_stack_2725.fallback;
        if (JSCompiler_object_inline_message_2723) {
          reuseSuspenseHandlerOnStack(workInProgress);
          var mode = workInProgress.mode;
          nextPrimaryChildren = mountWorkInProgressOffscreenFiber(
            { mode: "hidden", children: nextPrimaryChildren },
            mode
          );
          JSCompiler_object_inline_stack_2725 = createFiberFromFragment(
            JSCompiler_object_inline_stack_2725,
            mode,
            renderLanes,
            null
          );
          nextPrimaryChildren.return = workInProgress;
          JSCompiler_object_inline_stack_2725.return = workInProgress;
          nextPrimaryChildren.sibling = JSCompiler_object_inline_stack_2725;
          workInProgress.child = nextPrimaryChildren;
          JSCompiler_object_inline_stack_2725 = workInProgress.child;
          JSCompiler_object_inline_stack_2725.memoizedState =
            mountSuspenseOffscreenState(renderLanes);
          JSCompiler_object_inline_stack_2725.childLanes =
            getRemainingWorkInPrimaryTree(
              current,
              JSCompiler_object_inline_digest_2724,
              renderLanes
            );
          workInProgress.memoizedState = SUSPENDED_MARKER;
          return bailoutOffscreenComponent(
            null,
            JSCompiler_object_inline_stack_2725
          );
        }
        pushPrimaryTreeSuspenseHandler(workInProgress);
        return mountSuspensePrimaryChildren(
          workInProgress,
          nextPrimaryChildren
        );
      }
      var prevState = current.memoizedState;
      if (null !== prevState) {
        var JSCompiler_object_inline_componentStack_2726 = prevState.dehydrated;
        if (null !== JSCompiler_object_inline_componentStack_2726) {
          if (didSuspend)
            workInProgress.flags & 256
              ? (pushPrimaryTreeSuspenseHandler(workInProgress),
                (workInProgress.flags &= -257),
                (workInProgress = retrySuspenseComponentWithoutHydrating(
                  current,
                  workInProgress,
                  renderLanes
                )))
              : null !== workInProgress.memoizedState
                ? (reuseSuspenseHandlerOnStack(workInProgress),
                  (workInProgress.child = current.child),
                  (workInProgress.flags |= 128),
                  (workInProgress = null))
                : (reuseSuspenseHandlerOnStack(workInProgress),
                  (nextPrimaryChildren =
                    JSCompiler_object_inline_stack_2725.fallback),
                  (mode = workInProgress.mode),
                  (JSCompiler_object_inline_stack_2725 =
                    mountWorkInProgressOffscreenFiber(
                      {
                        mode: "visible",
                        children: JSCompiler_object_inline_stack_2725.children
                      },
                      mode
                    )),
                  (nextPrimaryChildren = createFiberFromFragment(
                    nextPrimaryChildren,
                    mode,
                    renderLanes,
                    null
                  )),
                  (nextPrimaryChildren.flags |= 2),
                  (JSCompiler_object_inline_stack_2725.return = workInProgress),
                  (nextPrimaryChildren.return = workInProgress),
                  (JSCompiler_object_inline_stack_2725.sibling =
                    nextPrimaryChildren),
                  (workInProgress.child = JSCompiler_object_inline_stack_2725),
                  reconcileChildFibers(
                    workInProgress,
                    current.child,
                    null,
                    renderLanes
                  ),
                  (JSCompiler_object_inline_stack_2725 = workInProgress.child),
                  (JSCompiler_object_inline_stack_2725.memoizedState =
                    mountSuspenseOffscreenState(renderLanes)),
                  (JSCompiler_object_inline_stack_2725.childLanes =
                    getRemainingWorkInPrimaryTree(
                      current,
                      JSCompiler_object_inline_digest_2724,
                      renderLanes
                    )),
                  (workInProgress.memoizedState = SUSPENDED_MARKER),
                  (workInProgress = bailoutOffscreenComponent(
                    null,
                    JSCompiler_object_inline_stack_2725
                  )));
          else if (
            (pushPrimaryTreeSuspenseHandler(workInProgress),
            warnIfHydrating(),
            0 !== (renderLanes & 536870912) &&
              markRenderDerivedCause(workInProgress),
            isSuspenseInstanceFallback(
              JSCompiler_object_inline_componentStack_2726
            ))
          ) {
            JSCompiler_object_inline_digest_2724 =
              JSCompiler_object_inline_componentStack_2726.nextSibling &&
              JSCompiler_object_inline_componentStack_2726.nextSibling.dataset;
            if (JSCompiler_object_inline_digest_2724) {
              nextPrimaryChildren = JSCompiler_object_inline_digest_2724.dgst;
              var message = JSCompiler_object_inline_digest_2724.msg;
              mode = JSCompiler_object_inline_digest_2724.stck;
              var componentStack = JSCompiler_object_inline_digest_2724.cstck;
            }
            JSCompiler_object_inline_message_2723 = message;
            JSCompiler_object_inline_digest_2724 = nextPrimaryChildren;
            JSCompiler_object_inline_stack_2725 = mode;
            JSCompiler_object_inline_componentStack_2726 = componentStack;
            nextPrimaryChildren = JSCompiler_object_inline_message_2723;
            mode = JSCompiler_object_inline_componentStack_2726;
            nextPrimaryChildren = nextPrimaryChildren
              ? Error(nextPrimaryChildren)
              : Error(
                  "The server could not finish this Suspense boundary, likely due to an error during server rendering. Switched to client rendering."
                );
            nextPrimaryChildren.stack =
              JSCompiler_object_inline_stack_2725 || "";
            nextPrimaryChildren.digest = JSCompiler_object_inline_digest_2724;
            JSCompiler_object_inline_digest_2724 =
              void 0 === mode ? null : mode;
            JSCompiler_object_inline_stack_2725 = {
              value: nextPrimaryChildren,
              source: null,
              stack: JSCompiler_object_inline_digest_2724
            };
            "string" === typeof JSCompiler_object_inline_digest_2724 &&
              CapturedStacks.set(
                nextPrimaryChildren,
                JSCompiler_object_inline_stack_2725
              );
            queueHydrationError(JSCompiler_object_inline_stack_2725);
            workInProgress = retrySuspenseComponentWithoutHydrating(
              current,
              workInProgress,
              renderLanes
            );
          } else if (
            (didReceiveUpdate ||
              propagateParentContextChanges(
                current,
                workInProgress,
                renderLanes,
                !1
              ),
            (JSCompiler_object_inline_digest_2724 =
              0 !== (renderLanes & current.childLanes)),
            didReceiveUpdate || JSCompiler_object_inline_digest_2724)
          ) {
            JSCompiler_object_inline_digest_2724 = workInProgressRoot;
            if (
              null !== JSCompiler_object_inline_digest_2724 &&
              ((JSCompiler_object_inline_stack_2725 = getBumpedLaneForHydration(
                JSCompiler_object_inline_digest_2724,
                renderLanes
              )),
              0 !== JSCompiler_object_inline_stack_2725 &&
                JSCompiler_object_inline_stack_2725 !== prevState.retryLane)
            )
              throw (
                ((prevState.retryLane = JSCompiler_object_inline_stack_2725),
                enqueueConcurrentRenderForLane(
                  current,
                  JSCompiler_object_inline_stack_2725
                ),
                scheduleUpdateOnFiber(
                  JSCompiler_object_inline_digest_2724,
                  current,
                  JSCompiler_object_inline_stack_2725
                ),
                SelectiveHydrationException)
              );
            isSuspenseInstancePending(
              JSCompiler_object_inline_componentStack_2726
            ) || renderDidSuspendDelayIfPossible();
            workInProgress = retrySuspenseComponentWithoutHydrating(
              current,
              workInProgress,
              renderLanes
            );
          } else
            isSuspenseInstancePending(
              JSCompiler_object_inline_componentStack_2726
            )
              ? ((workInProgress.flags |= 192),
                (workInProgress.child = current.child),
                (workInProgress = null))
              : ((current = prevState.treeContext),
                (nextHydratableInstance = getNextHydratable(
                  JSCompiler_object_inline_componentStack_2726.nextSibling
                )),
                (hydrationParentFiber = workInProgress),
                (isHydrating = !0),
                (hydrationErrors = null),
                (didSuspendOrErrorDEV = !1),
                (hydrationDiffRootDEV = null),
                (rootOrSingletonContext = !1),
                null !== current &&
                  restoreSuspendedTreeContext(workInProgress, current),
                (workInProgress = mountSuspensePrimaryChildren(
                  workInProgress,
                  JSCompiler_object_inline_stack_2725.children
                )),
                (workInProgress.flags |= 4096));
          return workInProgress;
        }
      }
      if (JSCompiler_object_inline_message_2723)
        return (
          reuseSuspenseHandlerOnStack(workInProgress),
          (nextPrimaryChildren = JSCompiler_object_inline_stack_2725.fallback),
          (mode = workInProgress.mode),
          (componentStack = current.child),
          (JSCompiler_object_inline_componentStack_2726 =
            componentStack.sibling),
          (JSCompiler_object_inline_stack_2725 = createWorkInProgress(
            componentStack,
            {
              mode: "hidden",
              children: JSCompiler_object_inline_stack_2725.children
            }
          )),
          (JSCompiler_object_inline_stack_2725.subtreeFlags =
            componentStack.subtreeFlags & 65011712),
          null !== JSCompiler_object_inline_componentStack_2726
            ? (nextPrimaryChildren = createWorkInProgress(
                JSCompiler_object_inline_componentStack_2726,
                nextPrimaryChildren
              ))
            : ((nextPrimaryChildren = createFiberFromFragment(
                nextPrimaryChildren,
                mode,
                renderLanes,
                null
              )),
              (nextPrimaryChildren.flags |= 2)),
          (nextPrimaryChildren.return = workInProgress),
          (JSCompiler_object_inline_stack_2725.return = workInProgress),
          (JSCompiler_object_inline_stack_2725.sibling = nextPrimaryChildren),
          (workInProgress.child = JSCompiler_object_inline_stack_2725),
          bailoutOffscreenComponent(null, JSCompiler_object_inline_stack_2725),
          (JSCompiler_object_inline_stack_2725 = workInProgress.child),
          (nextPrimaryChildren = current.child.memoizedState),
          null === nextPrimaryChildren
            ? (nextPrimaryChildren = mountSuspenseOffscreenState(renderLanes))
            : ((mode = nextPrimaryChildren.cachePool),
              null !== mode
                ? ((componentStack = CacheContext._currentValue),
                  (mode =
                    mode.parent !== componentStack
                      ? { parent: componentStack, pool: componentStack }
                      : mode))
                : (mode = getSuspendedCache()),
              (nextPrimaryChildren = {
                baseLanes: nextPrimaryChildren.baseLanes | renderLanes,
                cachePool: mode
              })),
          (JSCompiler_object_inline_stack_2725.memoizedState =
            nextPrimaryChildren),
          (JSCompiler_object_inline_stack_2725.childLanes =
            getRemainingWorkInPrimaryTree(
              current,
              JSCompiler_object_inline_digest_2724,
              renderLanes
            )),
          (workInProgress.memoizedState = SUSPENDED_MARKER),
          bailoutOffscreenComponent(
            current.child,
            JSCompiler_object_inline_stack_2725
          )
        );
      null !== prevState &&
        (renderLanes & 62914560) === renderLanes &&
        0 !== (renderLanes & current.lanes) &&
        markRenderDerivedCause(workInProgress);
      pushPrimaryTreeSuspenseHandler(workInProgress);
      renderLanes = current.child;
      current = renderLanes.sibling;
      renderLanes = createWorkInProgress(renderLanes, {
        mode: "visible",
        children: JSCompiler_object_inline_stack_2725.children
      });
      renderLanes.return = workInProgress;
      renderLanes.sibling = null;
      null !== current &&
        ((JSCompiler_object_inline_digest_2724 = workInProgress.deletions),
        null === JSCompiler_object_inline_digest_2724
          ? ((workInProgress.deletions = [current]),
            (workInProgress.flags |= 16))
          : JSCompiler_object_inline_digest_2724.push(current));
      workInProgress.child = renderLanes;
      workInProgress.memoizedState = null;
      return renderLanes;
    }
    function mountSuspensePrimaryChildren(workInProgress, primaryChildren) {
      primaryChildren = mountWorkInProgressOffscreenFiber(
        { mode: "visible", children: primaryChildren },
        workInProgress.mode
      );
      primaryChildren.return = workInProgress;
      return (workInProgress.child = primaryChildren);
    }
    function mountWorkInProgressOffscreenFiber(offscreenProps, mode) {
      offscreenProps = createFiber(22, offscreenProps, null, mode);
      offscreenProps.lanes = 0;
      return offscreenProps;
    }
    function retrySuspenseComponentWithoutHydrating(
      current,
      workInProgress,
      renderLanes
    ) {
      reconcileChildFibers(workInProgress, current.child, null, renderLanes);
      current = mountSuspensePrimaryChildren(
        workInProgress,
        workInProgress.pendingProps.children
      );
      current.flags |= 2;
      workInProgress.memoizedState = null;
      return current;
    }
    function scheduleSuspenseWorkOnFiber(fiber, renderLanes, propagationRoot) {
      fiber.lanes |= renderLanes;
      var alternate = fiber.alternate;
      null !== alternate && (alternate.lanes |= renderLanes);
      scheduleContextWorkOnParentPath(
        fiber.return,
        renderLanes,
        propagationRoot
      );
    }
    function initSuspenseListRenderState(
      workInProgress,
      isBackwards,
      tail,
      lastContentRow,
      tailMode,
      treeForkCount
    ) {
      var renderState = workInProgress.memoizedState;
      null === renderState
        ? (workInProgress.memoizedState = {
            isBackwards: isBackwards,
            rendering: null,
            renderingStartTime: 0,
            last: lastContentRow,
            tail: tail,
            tailMode: tailMode,
            treeForkCount: treeForkCount
          })
        : ((renderState.isBackwards = isBackwards),
          (renderState.rendering = null),
          (renderState.renderingStartTime = 0),
          (renderState.last = lastContentRow),
          (renderState.tail = tail),
          (renderState.tailMode = tailMode),
          (renderState.treeForkCount = treeForkCount));
    }
    function updateSuspenseListComponent(current, workInProgress, renderLanes) {
      var nextProps = workInProgress.pendingProps,
        revealOrder = nextProps.revealOrder,
        tailMode = nextProps.tail,
        newChildren = nextProps.children,
        suspenseContext = suspenseStackCursor.current;
      (nextProps = 0 !== (suspenseContext & ForceSuspenseFallback))
        ? ((suspenseContext =
            (suspenseContext & SubtreeSuspenseContextMask) |
            ForceSuspenseFallback),
          (workInProgress.flags |= 128))
        : (suspenseContext &= SubtreeSuspenseContextMask);
      push(suspenseStackCursor, suspenseContext, workInProgress);
      suspenseContext = null == revealOrder ? "null" : revealOrder;
      if (
        "forwards" !== revealOrder &&
        "unstable_legacy-backwards" !== revealOrder &&
        "together" !== revealOrder &&
        "independent" !== revealOrder &&
        !didWarnAboutRevealOrder[suspenseContext]
      )
        if (
          ((didWarnAboutRevealOrder[suspenseContext] = !0), null == revealOrder)
        )
          console.error(
            'The default for the <SuspenseList revealOrder="..."> prop is changing. To be future compatible you must explictly specify either "independent" (the current default), "together", "forwards" or "legacy_unstable-backwards".'
          );
        else if ("backwards" === revealOrder)
          console.error(
            'The rendering order of <SuspenseList revealOrder="backwards"> is changing. To be future compatible you must specify revealOrder="legacy_unstable-backwards" instead.'
          );
        else if ("string" === typeof revealOrder)
          switch (revealOrder.toLowerCase()) {
            case "together":
            case "forwards":
            case "backwards":
            case "independent":
              console.error(
                '"%s" is not a valid value for revealOrder on <SuspenseList />. Use lowercase "%s" instead.',
                revealOrder,
                revealOrder.toLowerCase()
              );
              break;
            case "forward":
            case "backward":
              console.error(
                '"%s" is not a valid value for revealOrder on <SuspenseList />. React uses the -s suffix in the spelling. Use "%ss" instead.',
                revealOrder,
                revealOrder.toLowerCase()
              );
              break;
            default:
              console.error(
                '"%s" is not a supported revealOrder on <SuspenseList />. Did you mean "independent", "together", "forwards" or "backwards"?',
                revealOrder
              );
          }
        else
          console.error(
            '%s is not a supported value for revealOrder on <SuspenseList />. Did you mean "independent", "together", "forwards" or "backwards"?',
            revealOrder
          );
      suspenseContext = null == tailMode ? "null" : tailMode;
      if (!didWarnAboutTailOptions[suspenseContext])
        if (null == tailMode) {
          if (
            "forwards" === revealOrder ||
            "backwards" === revealOrder ||
            "unstable_legacy-backwards" === revealOrder
          )
            (didWarnAboutTailOptions[suspenseContext] = !0),
              console.error(
                'The default for the <SuspenseList tail="..."> prop is changing. To be future compatible you must explictly specify either "visible" (the current default), "collapsed" or "hidden".'
              );
        } else
          "visible" !== tailMode &&
          "collapsed" !== tailMode &&
          "hidden" !== tailMode
            ? ((didWarnAboutTailOptions[suspenseContext] = !0),
              console.error(
                '"%s" is not a supported value for tail on <SuspenseList />. Did you mean "visible", "collapsed" or "hidden"?',
                tailMode
              ))
            : "forwards" !== revealOrder &&
              "backwards" !== revealOrder &&
              "unstable_legacy-backwards" !== revealOrder &&
              ((didWarnAboutTailOptions[suspenseContext] = !0),
              console.error(
                '<SuspenseList tail="%s" /> is only valid if revealOrder is "forwards" or "backwards". Did you mean to specify revealOrder="forwards"?',
                tailMode
              ));
      a: if (
        ("forwards" === revealOrder ||
          "backwards" === revealOrder ||
          "unstable_legacy-backwards" === revealOrder) &&
        void 0 !== newChildren &&
        null !== newChildren &&
        !1 !== newChildren
      )
        if (isArrayImpl(newChildren))
          for (
            suspenseContext = 0;
            suspenseContext < newChildren.length;
            suspenseContext++
          ) {
            if (
              !validateSuspenseListNestedChild(
                newChildren[suspenseContext],
                suspenseContext
              )
            )
              break a;
          }
        else if (
          ((suspenseContext = getIteratorFn(newChildren)),
          "function" === typeof suspenseContext)
        ) {
          if ((suspenseContext = suspenseContext.call(newChildren)))
            for (
              var step = suspenseContext.next(), _i = 0;
              !step.done;
              step = suspenseContext.next()
            ) {
              if (!validateSuspenseListNestedChild(step.value, _i)) break a;
              _i++;
            }
        } else
          console.error(
            'A single row was passed to a <SuspenseList revealOrder="%s" />. This is not useful since it needs multiple rows. Did you mean to pass multiple children or an array?',
            revealOrder
          );
      reconcileChildren(current, workInProgress, newChildren, renderLanes);
      isHydrating
        ? (warnIfNotHydrating(), (newChildren = treeForkCount))
        : (newChildren = 0);
      if (!nextProps && null !== current && 0 !== (current.flags & 128))
        a: for (current = workInProgress.child; null !== current; ) {
          if (13 === current.tag)
            null !== current.memoizedState &&
              scheduleSuspenseWorkOnFiber(current, renderLanes, workInProgress);
          else if (19 === current.tag)
            scheduleSuspenseWorkOnFiber(current, renderLanes, workInProgress);
          else if (null !== current.child) {
            current.child.return = current;
            current = current.child;
            continue;
          }
          if (current === workInProgress) break a;
          for (; null === current.sibling; ) {
            if (null === current.return || current.return === workInProgress)
              break a;
            current = current.return;
          }
          current.sibling.return = current.return;
          current = current.sibling;
        }
      switch (revealOrder) {
        case "forwards":
          renderLanes = workInProgress.child;
          for (revealOrder = null; null !== renderLanes; )
            (current = renderLanes.alternate),
              null !== current &&
                null === findFirstSuspended(current) &&
                (revealOrder = renderLanes),
              (renderLanes = renderLanes.sibling);
          renderLanes = revealOrder;
          null === renderLanes
            ? ((revealOrder = workInProgress.child),
              (workInProgress.child = null))
            : ((revealOrder = renderLanes.sibling),
              (renderLanes.sibling = null));
          initSuspenseListRenderState(
            workInProgress,
            !1,
            revealOrder,
            renderLanes,
            tailMode,
            newChildren
          );
          break;
        case "backwards":
        case "unstable_legacy-backwards":
          renderLanes = null;
          revealOrder = workInProgress.child;
          for (workInProgress.child = null; null !== revealOrder; ) {
            current = revealOrder.alternate;
            if (null !== current && null === findFirstSuspended(current)) {
              workInProgress.child = revealOrder;
              break;
            }
            current = revealOrder.sibling;
            revealOrder.sibling = renderLanes;
            renderLanes = revealOrder;
            revealOrder = current;
          }
          initSuspenseListRenderState(
            workInProgress,
            !0,
            renderLanes,
            null,
            tailMode,
            newChildren
          );
          break;
        case "together":
          initSuspenseListRenderState(
            workInProgress,
            !1,
            null,
            null,
            void 0,
            newChildren
          );
          break;
        default:
          workInProgress.memoizedState = null;
      }
      return workInProgress.child;
    }
    function bailoutOnAlreadyFinishedWork(
      current,
      workInProgress,
      renderLanes
    ) {
      null !== current && (workInProgress.dependencies = current.dependencies);
      profilerStartTime = -1;
      workInProgressRootSkippedLanes |= workInProgress.lanes;
      if (0 === (renderLanes & workInProgress.childLanes))
        if (null !== current) {
          if (
            (propagateParentContextChanges(
              current,
              workInProgress,
              renderLanes,
              !1
            ),
            0 === (renderLanes & workInProgress.childLanes))
          )
            return null;
        } else return null;
      if (null !== current && workInProgress.child !== current.child)
        throw Error("Resuming work not yet implemented.");
      if (null !== workInProgress.child) {
        current = workInProgress.child;
        renderLanes = createWorkInProgress(current, current.pendingProps);
        workInProgress.child = renderLanes;
        for (renderLanes.return = workInProgress; null !== current.sibling; )
          (current = current.sibling),
            (renderLanes = renderLanes.sibling =
              createWorkInProgress(current, current.pendingProps)),
            (renderLanes.return = workInProgress);
        renderLanes.sibling = null;
      }
      return workInProgress.child;
    }
    function checkScheduledUpdateOrContext(current, renderLanes) {
      if (0 !== (current.lanes & renderLanes)) return !0;
      current = current.dependencies;
      return null !== current && checkIfContextChanged(current) ? !0 : !1;
    }
    function attemptEarlyBailoutIfNoScheduledUpdate(
      current,
      workInProgress,
      renderLanes
    ) {
      switch (workInProgress.tag) {
        case 3:
          pushHostContainer(
            workInProgress,
            workInProgress.stateNode.containerInfo
          );
          pushProvider(
            workInProgress,
            CacheContext,
            current.memoizedState.cache
          );
          resetHydrationState();
          break;
        case 27:
        case 5:
          pushHostContext(workInProgress);
          break;
        case 4:
          pushHostContainer(
            workInProgress,
            workInProgress.stateNode.containerInfo
          );
          break;
        case 10:
          pushProvider(
            workInProgress,
            workInProgress.type,
            workInProgress.memoizedProps.value
          );
          break;
        case 12:
          0 !== (renderLanes & workInProgress.childLanes) &&
            (workInProgress.flags |= 4);
          workInProgress.flags |= 2048;
          var stateNode = workInProgress.stateNode;
          stateNode.effectDuration = -0;
          stateNode.passiveEffectDuration = -0;
          break;
        case 31:
          if (null !== workInProgress.memoizedState)
            return (
              (workInProgress.flags |= 128),
              pushDehydratedActivitySuspenseHandler(workInProgress),
              null
            );
          break;
        case 13:
          stateNode = workInProgress.memoizedState;
          if (null !== stateNode) {
            if (null !== stateNode.dehydrated)
              return (
                pushPrimaryTreeSuspenseHandler(workInProgress),
                (workInProgress.flags |= 128),
                null
              );
            if (0 !== (renderLanes & workInProgress.child.childLanes))
              return updateSuspenseComponent(
                current,
                workInProgress,
                renderLanes
              );
            pushPrimaryTreeSuspenseHandler(workInProgress);
            current = bailoutOnAlreadyFinishedWork(
              current,
              workInProgress,
              renderLanes
            );
            return null !== current ? current.sibling : null;
          }
          pushPrimaryTreeSuspenseHandler(workInProgress);
          break;
        case 19:
          var didSuspendBefore = 0 !== (current.flags & 128);
          stateNode = 0 !== (renderLanes & workInProgress.childLanes);
          stateNode ||
            (propagateParentContextChanges(
              current,
              workInProgress,
              renderLanes,
              !1
            ),
            (stateNode = 0 !== (renderLanes & workInProgress.childLanes)));
          if (didSuspendBefore) {
            if (stateNode)
              return updateSuspenseListComponent(
                current,
                workInProgress,
                renderLanes
              );
            workInProgress.flags |= 128;
          }
          didSuspendBefore = workInProgress.memoizedState;
          null !== didSuspendBefore &&
            ((didSuspendBefore.rendering = null),
            (didSuspendBefore.tail = null),
            (didSuspendBefore.lastEffect = null));
          push(
            suspenseStackCursor,
            suspenseStackCursor.current,
            workInProgress
          );
          if (stateNode) break;
          else return null;
        case 22:
          return (
            (workInProgress.lanes = 0),
            updateOffscreenComponent(
              current,
              workInProgress,
              renderLanes,
              workInProgress.pendingProps
            )
          );
        case 24:
          pushProvider(
            workInProgress,
            CacheContext,
            current.memoizedState.cache
          );
      }
      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
    }
    function beginWork(current, workInProgress, renderLanes) {
      if (workInProgress._debugNeedsRemount && null !== current) {
        renderLanes = createFiberFromTypeAndProps(
          workInProgress.type,
          workInProgress.key,
          workInProgress.pendingProps,
          workInProgress._debugOwner || null,
          workInProgress.mode,
          workInProgress.lanes
        );
        renderLanes._debugStack = workInProgress._debugStack;
        renderLanes._debugTask = workInProgress._debugTask;
        var returnFiber = workInProgress.return;
        if (null === returnFiber) throw Error("Cannot swap the root fiber.");
        current.alternate = null;
        workInProgress.alternate = null;
        renderLanes.index = workInProgress.index;
        renderLanes.sibling = workInProgress.sibling;
        renderLanes.return = workInProgress.return;
        renderLanes.ref = workInProgress.ref;
        renderLanes._debugInfo = workInProgress._debugInfo;
        if (workInProgress === returnFiber.child)
          returnFiber.child = renderLanes;
        else {
          var prevSibling = returnFiber.child;
          if (null === prevSibling)
            throw Error("Expected parent to have a child.");
          for (; prevSibling.sibling !== workInProgress; )
            if (((prevSibling = prevSibling.sibling), null === prevSibling))
              throw Error("Expected to find the previous sibling.");
          prevSibling.sibling = renderLanes;
        }
        workInProgress = returnFiber.deletions;
        null === workInProgress
          ? ((returnFiber.deletions = [current]), (returnFiber.flags |= 16))
          : workInProgress.push(current);
        renderLanes.flags |= 2;
        return renderLanes;
      }
      if (null !== current)
        if (
          current.memoizedProps !== workInProgress.pendingProps ||
          workInProgress.type !== current.type
        )
          didReceiveUpdate = !0;
        else {
          if (
            !checkScheduledUpdateOrContext(current, renderLanes) &&
            0 === (workInProgress.flags & 128)
          )
            return (
              (didReceiveUpdate = !1),
              attemptEarlyBailoutIfNoScheduledUpdate(
                current,
                workInProgress,
                renderLanes
              )
            );
          didReceiveUpdate = 0 !== (current.flags & 131072) ? !0 : !1;
        }
      else {
        didReceiveUpdate = !1;
        if ((returnFiber = isHydrating))
          warnIfNotHydrating(),
            (returnFiber = 0 !== (workInProgress.flags & 1048576));
        returnFiber &&
          ((returnFiber = workInProgress.index),
          warnIfNotHydrating(),
          pushTreeId(workInProgress, treeForkCount, returnFiber));
      }
      workInProgress.lanes = 0;
      switch (workInProgress.tag) {
        case 16:
          a: if (
            ((returnFiber = workInProgress.pendingProps),
            (current = resolveLazy(workInProgress.elementType)),
            (workInProgress.type = current),
            "function" === typeof current)
          )
            shouldConstruct(current)
              ? ((returnFiber = resolveClassComponentProps(
                  current,
                  returnFiber
                )),
                (workInProgress.tag = 1),
                (workInProgress.type = current =
                  resolveFunctionForHotReloading(current)),
                (workInProgress = updateClassComponent(
                  null,
                  workInProgress,
                  current,
                  returnFiber,
                  renderLanes
                )))
              : ((workInProgress.tag = 0),
                validateFunctionComponentInDev(workInProgress, current),
                (workInProgress.type = current =
                  resolveFunctionForHotReloading(current)),
                (workInProgress = updateFunctionComponent(
                  null,
                  workInProgress,
                  current,
                  returnFiber,
                  renderLanes
                )));
          else {
            if (void 0 !== current && null !== current)
              if (
                ((prevSibling = current.$$typeof),
                prevSibling === REACT_FORWARD_REF_TYPE)
              ) {
                workInProgress.tag = 11;
                workInProgress.type = current =
                  resolveForwardRefForHotReloading(current);
                workInProgress = updateForwardRef(
                  null,
                  workInProgress,
                  current,
                  returnFiber,
                  renderLanes
                );
                break a;
              } else if (prevSibling === REACT_MEMO_TYPE) {
                workInProgress.tag = 14;
                workInProgress = updateMemoComponent(
                  null,
                  workInProgress,
                  current,
                  returnFiber,
                  renderLanes
                );
                break a;
              }
            workInProgress = "";
            null !== current &&
              "object" === typeof current &&
              current.$$typeof === REACT_LAZY_TYPE &&
              (workInProgress =
                " Did you wrap a component in React.lazy() more than once?");
            renderLanes = getComponentNameFromType(current) || current;
            throw Error(
              "Element type is invalid. Received a promise that resolves to: " +
                renderLanes +
                ". Lazy element type must resolve to a class or function." +
                workInProgress
            );
          }
          return workInProgress;
        case 0:
          return updateFunctionComponent(
            current,
            workInProgress,
            workInProgress.type,
            workInProgress.pendingProps,
            renderLanes
          );
        case 1:
          return (
            (returnFiber = workInProgress.type),
            (prevSibling = resolveClassComponentProps(
              returnFiber,
              workInProgress.pendingProps
            )),
            updateClassComponent(
              current,
              workInProgress,
              returnFiber,
              prevSibling,
              renderLanes
            )
          );
        case 3:
          a: {
            pushHostContainer(
              workInProgress,
              workInProgress.stateNode.containerInfo
            );
            if (null === current)
              throw Error(
                "Should have a current fiber. This is a bug in React."
              );
            returnFiber = workInProgress.pendingProps;
            var prevState = workInProgress.memoizedState;
            prevSibling = prevState.element;
            cloneUpdateQueue(current, workInProgress);
            processUpdateQueue(workInProgress, returnFiber, null, renderLanes);
            var nextState = workInProgress.memoizedState;
            returnFiber = nextState.cache;
            pushProvider(workInProgress, CacheContext, returnFiber);
            returnFiber !== prevState.cache &&
              propagateContextChanges(
                workInProgress,
                [CacheContext],
                renderLanes,
                !0
              );
            suspendIfUpdateReadFromEntangledAsyncAction();
            returnFiber = nextState.element;
            if (prevState.isDehydrated)
              if (
                ((prevState = {
                  element: returnFiber,
                  isDehydrated: !1,
                  cache: nextState.cache
                }),
                (workInProgress.updateQueue.baseState = prevState),
                (workInProgress.memoizedState = prevState),
                workInProgress.flags & 256)
              ) {
                workInProgress = mountHostRootWithoutHydrating(
                  current,
                  workInProgress,
                  returnFiber,
                  renderLanes
                );
                break a;
              } else if (returnFiber !== prevSibling) {
                prevSibling = createCapturedValueAtFiber(
                  Error(
                    "This root received an early update, before anything was able hydrate. Switched the entire root to client rendering."
                  ),
                  workInProgress
                );
                queueHydrationError(prevSibling);
                workInProgress = mountHostRootWithoutHydrating(
                  current,
                  workInProgress,
                  returnFiber,
                  renderLanes
                );
                break a;
              } else {
                current = workInProgress.stateNode.containerInfo;
                switch (current.nodeType) {
                  case 9:
                    current = current.body;
                    break;
                  default:
                    current =
                      "HTML" === current.nodeName
                        ? current.ownerDocument.body
                        : current;
                }
                nextHydratableInstance = getNextHydratable(current.firstChild);
                hydrationParentFiber = workInProgress;
                isHydrating = !0;
                hydrationErrors = null;
                didSuspendOrErrorDEV = !1;
                hydrationDiffRootDEV = null;
                rootOrSingletonContext = !0;
                renderLanes = mountChildFibers(
                  workInProgress,
                  null,
                  returnFiber,
                  renderLanes
                );
                for (workInProgress.child = renderLanes; renderLanes; )
                  (renderLanes.flags = (renderLanes.flags & -3) | 4096),
                    (renderLanes = renderLanes.sibling);
              }
            else {
              resetHydrationState();
              if (returnFiber === prevSibling) {
                workInProgress = bailoutOnAlreadyFinishedWork(
                  current,
                  workInProgress,
                  renderLanes
                );
                break a;
              }
              reconcileChildren(
                current,
                workInProgress,
                returnFiber,
                renderLanes
              );
            }
            workInProgress = workInProgress.child;
          }
          return workInProgress;
        case 26:
          return (
            markRef(current, workInProgress),
            null === current
              ? (renderLanes = getResource(
                  workInProgress.type,
                  null,
                  workInProgress.pendingProps,
                  null
                ))
                ? (workInProgress.memoizedState = renderLanes)
                : isHydrating ||
                  ((renderLanes = workInProgress.type),
                  (current = workInProgress.pendingProps),
                  (returnFiber = requiredContext(
                    rootInstanceStackCursor.current
                  )),
                  (returnFiber =
                    getOwnerDocumentFromRootContainer(
                      returnFiber
                    ).createElement(renderLanes)),
                  (returnFiber[internalInstanceKey] = workInProgress),
                  (returnFiber[internalPropsKey] = current),
                  setInitialProperties(returnFiber, renderLanes, current),
                  markNodeAsHoistable(returnFiber),
                  (workInProgress.stateNode = returnFiber))
              : (workInProgress.memoizedState = getResource(
                  workInProgress.type,
                  current.memoizedProps,
                  workInProgress.pendingProps,
                  current.memoizedState
                )),
            null
          );
        case 27:
          return (
            pushHostContext(workInProgress),
            null === current &&
              isHydrating &&
              ((returnFiber = requiredContext(rootInstanceStackCursor.current)),
              (prevSibling = getHostContext()),
              (returnFiber = workInProgress.stateNode =
                resolveSingletonInstance(
                  workInProgress.type,
                  workInProgress.pendingProps,
                  returnFiber,
                  prevSibling,
                  !1
                )),
              didSuspendOrErrorDEV ||
                ((prevSibling = diffHydratedProperties(
                  returnFiber,
                  workInProgress.type,
                  workInProgress.pendingProps,
                  prevSibling
                )),
                null !== prevSibling &&
                  (buildHydrationDiffNode(workInProgress, 0).serverProps =
                    prevSibling)),
              (hydrationParentFiber = workInProgress),
              (rootOrSingletonContext = !0),
              (prevSibling = nextHydratableInstance),
              isSingletonScope(workInProgress.type)
                ? ((previousHydratableOnEnteringScopedSingleton = prevSibling),
                  (nextHydratableInstance = getNextHydratable(
                    returnFiber.firstChild
                  )))
                : (nextHydratableInstance = prevSibling)),
            reconcileChildren(
              current,
              workInProgress,
              workInProgress.pendingProps.children,
              renderLanes
            ),
            markRef(current, workInProgress),
            null === current && (workInProgress.flags |= 4194304),
            workInProgress.child
          );
        case 5:
          return (
            null === current &&
              isHydrating &&
              ((prevState = getHostContext()),
              (returnFiber = validateDOMNesting(
                workInProgress.type,
                prevState.ancestorInfo
              )),
              (prevSibling = nextHydratableInstance),
              (nextState = !prevSibling) ||
                ((nextState = canHydrateInstance(
                  prevSibling,
                  workInProgress.type,
                  workInProgress.pendingProps,
                  rootOrSingletonContext
                )),
                null !== nextState
                  ? ((workInProgress.stateNode = nextState),
                    didSuspendOrErrorDEV ||
                      ((prevState = diffHydratedProperties(
                        nextState,
                        workInProgress.type,
                        workInProgress.pendingProps,
                        prevState
                      )),
                      null !== prevState &&
                        (buildHydrationDiffNode(workInProgress, 0).serverProps =
                          prevState)),
                    (hydrationParentFiber = workInProgress),
                    (nextHydratableInstance = getNextHydratable(
                      nextState.firstChild
                    )),
                    (rootOrSingletonContext = !1),
                    (prevState = !0))
                  : (prevState = !1),
                (nextState = !prevState)),
              nextState &&
                (returnFiber &&
                  warnNonHydratedInstance(workInProgress, prevSibling),
                throwOnHydrationMismatch(workInProgress))),
            pushHostContext(workInProgress),
            (prevSibling = workInProgress.type),
            (prevState = workInProgress.pendingProps),
            (nextState = null !== current ? current.memoizedProps : null),
            (returnFiber = prevState.children),
            shouldSetTextContent(prevSibling, prevState)
              ? (returnFiber = null)
              : null !== nextState &&
                shouldSetTextContent(prevSibling, nextState) &&
                (workInProgress.flags |= 32),
            null !== workInProgress.memoizedState &&
              ((prevSibling = renderWithHooks(
                current,
                workInProgress,
                TransitionAwareHostComponent,
                null,
                null,
                renderLanes
              )),
              (HostTransitionContext._currentValue = prevSibling)),
            markRef(current, workInProgress),
            reconcileChildren(
              current,
              workInProgress,
              returnFiber,
              renderLanes
            ),
            workInProgress.child
          );
        case 6:
          return (
            null === current &&
              isHydrating &&
              ((renderLanes = workInProgress.pendingProps),
              (current = getHostContext()),
              (returnFiber = current.ancestorInfo.current),
              (renderLanes =
                null != returnFiber
                  ? validateTextNesting(
                      renderLanes,
                      returnFiber.tag,
                      current.ancestorInfo.implicitRootScope
                    )
                  : !0),
              (current = nextHydratableInstance),
              (returnFiber = !current) ||
                ((returnFiber = canHydrateTextInstance(
                  current,
                  workInProgress.pendingProps,
                  rootOrSingletonContext
                )),
                null !== returnFiber
                  ? ((workInProgress.stateNode = returnFiber),
                    (hydrationParentFiber = workInProgress),
                    (nextHydratableInstance = null),
                    (returnFiber = !0))
                  : (returnFiber = !1),
                (returnFiber = !returnFiber)),
              returnFiber &&
                (renderLanes &&
                  warnNonHydratedInstance(workInProgress, current),
                throwOnHydrationMismatch(workInProgress))),
            null
          );
        case 13:
          return updateSuspenseComponent(current, workInProgress, renderLanes);
        case 4:
          return (
            pushHostContainer(
              workInProgress,
              workInProgress.stateNode.containerInfo
            ),
            (returnFiber = workInProgress.pendingProps),
            null === current
              ? (workInProgress.child = reconcileChildFibers(
                  workInProgress,
                  null,
                  returnFiber,
                  renderLanes
                ))
              : reconcileChildren(
                  current,
                  workInProgress,
                  returnFiber,
                  renderLanes
                ),
            workInProgress.child
          );
        case 11:
          return updateForwardRef(
            current,
            workInProgress,
            workInProgress.type,
            workInProgress.pendingProps,
            renderLanes
          );
        case 7:
          return (
            reconcileChildren(
              current,
              workInProgress,
              workInProgress.pendingProps,
              renderLanes
            ),
            workInProgress.child
          );
        case 8:
          return (
            reconcileChildren(
              current,
              workInProgress,
              workInProgress.pendingProps.children,
              renderLanes
            ),
            workInProgress.child
          );
        case 12:
          return (
            (workInProgress.flags |= 4),
            (workInProgress.flags |= 2048),
            (returnFiber = workInProgress.stateNode),
            (returnFiber.effectDuration = -0),
            (returnFiber.passiveEffectDuration = -0),
            reconcileChildren(
              current,
              workInProgress,
              workInProgress.pendingProps.children,
              renderLanes
            ),
            workInProgress.child
          );
        case 10:
          return (
            (returnFiber = workInProgress.type),
            (prevSibling = workInProgress.pendingProps),
            (prevState = prevSibling.value),
            "value" in prevSibling ||
              hasWarnedAboutUsingNoValuePropOnContextProvider ||
              ((hasWarnedAboutUsingNoValuePropOnContextProvider = !0),
              console.error(
                "The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?"
              )),
            pushProvider(workInProgress, returnFiber, prevState),
            reconcileChildren(
              current,
              workInProgress,
              prevSibling.children,
              renderLanes
            ),
            workInProgress.child
          );
        case 9:
          return (
            (prevSibling = workInProgress.type._context),
            (returnFiber = workInProgress.pendingProps.children),
            "function" !== typeof returnFiber &&
              console.error(
                "A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it."
              ),
            prepareToReadContext(workInProgress),
            (prevSibling = readContext(prevSibling)),
            (returnFiber = callComponentInDEV(
              returnFiber,
              prevSibling,
              void 0
            )),
            (workInProgress.flags |= 1),
            reconcileChildren(
              current,
              workInProgress,
              returnFiber,
              renderLanes
            ),
            workInProgress.child
          );
        case 14:
          return updateMemoComponent(
            current,
            workInProgress,
            workInProgress.type,
            workInProgress.pendingProps,
            renderLanes
          );
        case 15:
          return updateSimpleMemoComponent(
            current,
            workInProgress,
            workInProgress.type,
            workInProgress.pendingProps,
            renderLanes
          );
        case 19:
          return updateSuspenseListComponent(
            current,
            workInProgress,
            renderLanes
          );
        case 31:
          return updateActivityComponent(current, workInProgress, renderLanes);
        case 22:
          return updateOffscreenComponent(
            current,
            workInProgress,
            renderLanes,
            workInProgress.pendingProps
          );
        case 24:
          return (
            prepareToReadContext(workInProgress),
            (returnFiber = readContext(CacheContext)),
            null === current
              ? ((prevSibling = peekCacheFromPool()),
                null === prevSibling &&
                  ((prevSibling = workInProgressRoot),
                  (prevState = createCache()),
                  (prevSibling.pooledCache = prevState),
                  retainCache(prevState),
                  null !== prevState &&
                    (prevSibling.pooledCacheLanes |= renderLanes),
                  (prevSibling = prevState)),
                (workInProgress.memoizedState = {
                  parent: returnFiber,
                  cache: prevSibling
                }),
                initializeUpdateQueue(workInProgress),
                pushProvider(workInProgress, CacheContext, prevSibling))
              : (0 !== (current.lanes & renderLanes) &&
                  (cloneUpdateQueue(current, workInProgress),
                  processUpdateQueue(workInProgress, null, null, renderLanes),
                  suspendIfUpdateReadFromEntangledAsyncAction()),
                (prevSibling = current.memoizedState),
                (prevState = workInProgress.memoizedState),
                prevSibling.parent !== returnFiber
                  ? ((prevSibling = {
                      parent: returnFiber,
                      cache: returnFiber
                    }),
                    (workInProgress.memoizedState = prevSibling),
                    0 === workInProgress.lanes &&
                      (workInProgress.memoizedState =
                        workInProgress.updateQueue.baseState =
                          prevSibling),
                    pushProvider(workInProgress, CacheContext, returnFiber))
                  : ((returnFiber = prevState.cache),
                    pushProvider(workInProgress, CacheContext, returnFiber),
                    returnFiber !== prevSibling.cache &&
                      propagateContextChanges(
                        workInProgress,
                        [CacheContext],
                        renderLanes,
                        !0
                      ))),
            reconcileChildren(
              current,
              workInProgress,
              workInProgress.pendingProps.children,
              renderLanes
            ),
            workInProgress.child
          );
        case 29:
          throw workInProgress.pendingProps;
      }
      throw Error(
        "Unknown unit of work tag (" +
          workInProgress.tag +
          "). This error is likely caused by a bug in React. Please file an issue."
      );
    }
    function markUpdate(workInProgress) {
      workInProgress.flags |= 4;
    }
    function preloadInstanceAndSuspendIfNeeded(
      workInProgress,
      type,
      oldProps,
      newProps,
      renderLanes
    ) {
      if ((type = (workInProgress.mode & SuspenseyImagesMode) !== NoMode))
        type = !1;
      if (type) {
        if (
          ((workInProgress.flags |= 16777216),
          (renderLanes & 335544128) === renderLanes)
        )
          if (workInProgress.stateNode.complete) workInProgress.flags |= 8192;
          else if (shouldRemainOnPreviousScreen()) workInProgress.flags |= 8192;
          else
            throw (
              ((suspendedThenable = noopSuspenseyCommitThenable),
              SuspenseyCommitException)
            );
      } else workInProgress.flags &= -16777217;
    }
    function preloadResourceAndSuspendIfNeeded(workInProgress, resource) {
      if (
        "stylesheet" !== resource.type ||
        (resource.state.loading & Inserted) !== NotLoaded
      )
        workInProgress.flags &= -16777217;
      else if (((workInProgress.flags |= 16777216), !preloadResource(resource)))
        if (shouldRemainOnPreviousScreen()) workInProgress.flags |= 8192;
        else
          throw (
            ((suspendedThenable = noopSuspenseyCommitThenable),
            SuspenseyCommitException)
          );
    }
    function scheduleRetryEffect(workInProgress, retryQueue) {
      null !== retryQueue && (workInProgress.flags |= 4);
      workInProgress.flags & 16384 &&
        ((retryQueue =
          22 !== workInProgress.tag ? claimNextRetryLane() : 536870912),
        (workInProgress.lanes |= retryQueue),
        (workInProgressSuspendedRetryLanes |= retryQueue));
    }
    function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
      if (!isHydrating)
        switch (renderState.tailMode) {
          case "hidden":
            hasRenderedATailFallback = renderState.tail;
            for (var lastTailNode = null; null !== hasRenderedATailFallback; )
              null !== hasRenderedATailFallback.alternate &&
                (lastTailNode = hasRenderedATailFallback),
                (hasRenderedATailFallback = hasRenderedATailFallback.sibling);
            null === lastTailNode
              ? (renderState.tail = null)
              : (lastTailNode.sibling = null);
            break;
          case "collapsed":
            lastTailNode = renderState.tail;
            for (var _lastTailNode = null; null !== lastTailNode; )
              null !== lastTailNode.alternate && (_lastTailNode = lastTailNode),
                (lastTailNode = lastTailNode.sibling);
            null === _lastTailNode
              ? hasRenderedATailFallback || null === renderState.tail
                ? (renderState.tail = null)
                : (renderState.tail.sibling = null)
              : (_lastTailNode.sibling = null);
        }
    }
    function bubbleProperties(completedWork) {
      var didBailout =
          null !== completedWork.alternate &&
          completedWork.alternate.child === completedWork.child,
        newChildLanes = 0,
        subtreeFlags = 0;
      if (didBailout)
        if ((completedWork.mode & ProfileMode) !== NoMode) {
          for (
            var _treeBaseDuration = completedWork.selfBaseDuration,
              _child2 = completedWork.child;
            null !== _child2;

          )
            (newChildLanes |= _child2.lanes | _child2.childLanes),
              (subtreeFlags |= _child2.subtreeFlags & 65011712),
              (subtreeFlags |= _child2.flags & 65011712),
              (_treeBaseDuration += _child2.treeBaseDuration),
              (_child2 = _child2.sibling);
          completedWork.treeBaseDuration = _treeBaseDuration;
        } else
          for (
            _treeBaseDuration = completedWork.child;
            null !== _treeBaseDuration;

          )
            (newChildLanes |=
              _treeBaseDuration.lanes | _treeBaseDuration.childLanes),
              (subtreeFlags |= _treeBaseDuration.subtreeFlags & 65011712),
              (subtreeFlags |= _treeBaseDuration.flags & 65011712),
              (_treeBaseDuration.return = completedWork),
              (_treeBaseDuration = _treeBaseDuration.sibling);
      else if ((completedWork.mode & ProfileMode) !== NoMode) {
        _treeBaseDuration = completedWork.actualDuration;
        _child2 = completedWork.selfBaseDuration;
        for (var child = completedWork.child; null !== child; )
          (newChildLanes |= child.lanes | child.childLanes),
            (subtreeFlags |= child.subtreeFlags),
            (subtreeFlags |= child.flags),
            (_treeBaseDuration += child.actualDuration),
            (_child2 += child.treeBaseDuration),
            (child = child.sibling);
        completedWork.actualDuration = _treeBaseDuration;
        completedWork.treeBaseDuration = _child2;
      } else
        for (
          _treeBaseDuration = completedWork.child;
          null !== _treeBaseDuration;

        )
          (newChildLanes |=
            _treeBaseDuration.lanes | _treeBaseDuration.childLanes),
            (subtreeFlags |= _treeBaseDuration.subtreeFlags),
            (subtreeFlags |= _treeBaseDuration.flags),
            (_treeBaseDuration.return = completedWork),
            (_treeBaseDuration = _treeBaseDuration.sibling);
      completedWork.subtreeFlags |= subtreeFlags;
      completedWork.childLanes = newChildLanes;
      return didBailout;
    }
    function completeWork(current, workInProgress, renderLanes) {
      var newProps = workInProgress.pendingProps;
      popTreeContext(workInProgress);
      switch (workInProgress.tag) {
        case 16:
        case 15:
        case 0:
        case 11:
        case 7:
        case 8:
        case 12:
        case 9:
        case 14:
          return bubbleProperties(workInProgress), null;
        case 1:
          return bubbleProperties(workInProgress), null;
        case 3:
          renderLanes = workInProgress.stateNode;
          newProps = null;
          null !== current && (newProps = current.memoizedState.cache);
          workInProgress.memoizedState.cache !== newProps &&
            (workInProgress.flags |= 2048);
          popProvider(CacheContext, workInProgress);
          popHostContainer(workInProgress);
          renderLanes.pendingContext &&
            ((renderLanes.context = renderLanes.pendingContext),
            (renderLanes.pendingContext = null));
          if (null === current || null === current.child)
            popHydrationState(workInProgress)
              ? (emitPendingHydrationWarnings(), markUpdate(workInProgress))
              : null === current ||
                (current.memoizedState.isDehydrated &&
                  0 === (workInProgress.flags & 256)) ||
                ((workInProgress.flags |= 1024),
                upgradeHydrationErrorsToRecoverable());
          bubbleProperties(workInProgress);
          return null;
        case 26:
          var type = workInProgress.type,
            nextResource = workInProgress.memoizedState;
          null === current
            ? (markUpdate(workInProgress),
              null !== nextResource
                ? (bubbleProperties(workInProgress),
                  preloadResourceAndSuspendIfNeeded(
                    workInProgress,
                    nextResource
                  ))
                : (bubbleProperties(workInProgress),
                  preloadInstanceAndSuspendIfNeeded(
                    workInProgress,
                    type,
                    null,
                    newProps,
                    renderLanes
                  )))
            : nextResource
              ? nextResource !== current.memoizedState
                ? (markUpdate(workInProgress),
                  bubbleProperties(workInProgress),
                  preloadResourceAndSuspendIfNeeded(
                    workInProgress,
                    nextResource
                  ))
                : (bubbleProperties(workInProgress),
                  (workInProgress.flags &= -16777217))
              : ((current = current.memoizedProps),
                current !== newProps && markUpdate(workInProgress),
                bubbleProperties(workInProgress),
                preloadInstanceAndSuspendIfNeeded(
                  workInProgress,
                  type,
                  current,
                  newProps,
                  renderLanes
                ));
          return null;
        case 27:
          popHostContext(workInProgress);
          renderLanes = requiredContext(rootInstanceStackCursor.current);
          type = workInProgress.type;
          if (null !== current && null != workInProgress.stateNode)
            current.memoizedProps !== newProps && markUpdate(workInProgress);
          else {
            if (!newProps) {
              if (null === workInProgress.stateNode)
                throw Error(
                  "We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue."
                );
              bubbleProperties(workInProgress);
              return null;
            }
            current = getHostContext();
            popHydrationState(workInProgress)
              ? prepareToHydrateHostInstance(workInProgress, current)
              : ((current = resolveSingletonInstance(
                  type,
                  newProps,
                  renderLanes,
                  current,
                  !0
                )),
                (workInProgress.stateNode = current),
                markUpdate(workInProgress));
          }
          bubbleProperties(workInProgress);
          return null;
        case 5:
          popHostContext(workInProgress);
          type = workInProgress.type;
          if (null !== current && null != workInProgress.stateNode)
            current.memoizedProps !== newProps && markUpdate(workInProgress);
          else {
            if (!newProps) {
              if (null === workInProgress.stateNode)
                throw Error(
                  "We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue."
                );
              bubbleProperties(workInProgress);
              return null;
            }
            var _currentHostContext = getHostContext();
            if (popHydrationState(workInProgress))
              prepareToHydrateHostInstance(workInProgress, _currentHostContext);
            else {
              nextResource = requiredContext(rootInstanceStackCursor.current);
              validateDOMNesting(type, _currentHostContext.ancestorInfo);
              _currentHostContext = _currentHostContext.context;
              nextResource = getOwnerDocumentFromRootContainer(nextResource);
              switch (_currentHostContext) {
                case HostContextNamespaceSvg:
                  nextResource = nextResource.createElementNS(
                    SVG_NAMESPACE,
                    type
                  );
                  break;
                case HostContextNamespaceMath:
                  nextResource = nextResource.createElementNS(
                    MATH_NAMESPACE,
                    type
                  );
                  break;
                default:
                  switch (type) {
                    case "svg":
                      nextResource = nextResource.createElementNS(
                        SVG_NAMESPACE,
                        type
                      );
                      break;
                    case "math":
                      nextResource = nextResource.createElementNS(
                        MATH_NAMESPACE,
                        type
                      );
                      break;
                    case "script":
                      nextResource = nextResource.createElement("div");
                      nextResource.innerHTML = "<script>\x3c/script>";
                      nextResource = nextResource.removeChild(
                        nextResource.firstChild
                      );
                      break;
                    case "select":
                      nextResource =
                        "string" === typeof newProps.is
                          ? nextResource.createElement("select", {
                              is: newProps.is
                            })
                          : nextResource.createElement("select");
                      newProps.multiple
                        ? (nextResource.multiple = !0)
                        : newProps.size && (nextResource.size = newProps.size);
                      break;
                    default:
                      (nextResource =
                        "string" === typeof newProps.is
                          ? nextResource.createElement(type, {
                              is: newProps.is
                            })
                          : nextResource.createElement(type)),
                        -1 === type.indexOf("-") &&
                          (type !== type.toLowerCase() &&
                            console.error(
                              "<%s /> is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.",
                              type
                            ),
                          "[object HTMLUnknownElement]" !==
                            Object.prototype.toString.call(nextResource) ||
                            hasOwnProperty.call(warnedUnknownTags, type) ||
                            ((warnedUnknownTags[type] = !0),
                            console.error(
                              "The tag <%s> is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.",
                              type
                            )));
                  }
              }
              nextResource[internalInstanceKey] = workInProgress;
              nextResource[internalPropsKey] = newProps;
              a: for (
                _currentHostContext = workInProgress.child;
                null !== _currentHostContext;

              ) {
                if (
                  5 === _currentHostContext.tag ||
                  6 === _currentHostContext.tag
                )
                  nextResource.appendChild(_currentHostContext.stateNode);
                else if (
                  4 !== _currentHostContext.tag &&
                  27 !== _currentHostContext.tag &&
                  null !== _currentHostContext.child
                ) {
                  _currentHostContext.child.return = _currentHostContext;
                  _currentHostContext = _currentHostContext.child;
                  continue;
                }
                if (_currentHostContext === workInProgress) break a;
                for (; null === _currentHostContext.sibling; ) {
                  if (
                    null === _currentHostContext.return ||
                    _currentHostContext.return === workInProgress
                  )
                    break a;
                  _currentHostContext = _currentHostContext.return;
                }
                _currentHostContext.sibling.return = _currentHostContext.return;
                _currentHostContext = _currentHostContext.sibling;
              }
              workInProgress.stateNode = nextResource;
              a: switch (
                (setInitialProperties(nextResource, type, newProps), type)
              ) {
                case "button":
                case "input":
                case "select":
                case "textarea":
                  newProps = !!newProps.autoFocus;
                  break a;
                case "img":
                  newProps = !0;
                  break a;
                default:
                  newProps = !1;
              }
              newProps && markUpdate(workInProgress);
            }
          }
          bubbleProperties(workInProgress);
          preloadInstanceAndSuspendIfNeeded(
            workInProgress,
            workInProgress.type,
            null === current ? null : current.memoizedProps,
            workInProgress.pendingProps,
            renderLanes
          );
          return null;
        case 6:
          if (current && null != workInProgress.stateNode)
            current.memoizedProps !== newProps && markUpdate(workInProgress);
          else {
            if (
              "string" !== typeof newProps &&
              null === workInProgress.stateNode
            )
              throw Error(
                "We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue."
              );
            current = requiredContext(rootInstanceStackCursor.current);
            renderLanes = getHostContext();
            if (popHydrationState(workInProgress)) {
              current = workInProgress.stateNode;
              renderLanes = workInProgress.memoizedProps;
              type = !didSuspendOrErrorDEV;
              newProps = null;
              nextResource = hydrationParentFiber;
              if (null !== nextResource)
                switch (nextResource.tag) {
                  case 3:
                    type &&
                      ((type = diffHydratedTextForDevWarnings(
                        current,
                        renderLanes,
                        newProps
                      )),
                      null !== type &&
                        (buildHydrationDiffNode(workInProgress, 0).serverProps =
                          type));
                    break;
                  case 27:
                  case 5:
                    (newProps = nextResource.memoizedProps),
                      type &&
                        ((type = diffHydratedTextForDevWarnings(
                          current,
                          renderLanes,
                          newProps
                        )),
                        null !== type &&
                          (buildHydrationDiffNode(
                            workInProgress,
                            0
                          ).serverProps = type));
                }
              current[internalInstanceKey] = workInProgress;
              current =
                current.nodeValue === renderLanes ||
                (null !== newProps &&
                  !0 === newProps.suppressHydrationWarning) ||
                checkForUnmatchedText(current.nodeValue, renderLanes)
                  ? !0
                  : !1;
              current || throwOnHydrationMismatch(workInProgress, !0);
            } else
              (type = renderLanes.ancestorInfo.current),
                null != type &&
                  validateTextNesting(
                    newProps,
                    type.tag,
                    renderLanes.ancestorInfo.implicitRootScope
                  ),
                (current =
                  getOwnerDocumentFromRootContainer(current).createTextNode(
                    newProps
                  )),
                (current[internalInstanceKey] = workInProgress),
                (workInProgress.stateNode = current);
          }
          bubbleProperties(workInProgress);
          return null;
        case 31:
          renderLanes = workInProgress.memoizedState;
          if (null === current || null !== current.memoizedState) {
            newProps = popHydrationState(workInProgress);
            if (null !== renderLanes) {
              if (null === current) {
                if (!newProps)
                  throw Error(
                    "A dehydrated suspense component was completed without a hydrated node. This is probably a bug in React."
                  );
                current = workInProgress.memoizedState;
                current = null !== current ? current.dehydrated : null;
                if (!current)
                  throw Error(
                    "Expected to have a hydrated activity instance. This error is likely caused by a bug in React. Please file an issue."
                  );
                current[internalInstanceKey] = workInProgress;
                bubbleProperties(workInProgress);
                (workInProgress.mode & ProfileMode) !== NoMode &&
                  null !== renderLanes &&
                  ((current = workInProgress.child),
                  null !== current &&
                    (workInProgress.treeBaseDuration -=
                      current.treeBaseDuration));
              } else
                emitPendingHydrationWarnings(),
                  resetHydrationState(),
                  0 === (workInProgress.flags & 128) &&
                    (renderLanes = workInProgress.memoizedState = null),
                  (workInProgress.flags |= 4),
                  bubbleProperties(workInProgress),
                  (workInProgress.mode & ProfileMode) !== NoMode &&
                    null !== renderLanes &&
                    ((current = workInProgress.child),
                    null !== current &&
                      (workInProgress.treeBaseDuration -=
                        current.treeBaseDuration));
              current = !1;
            } else
              (renderLanes = upgradeHydrationErrorsToRecoverable()),
                null !== current &&
                  null !== current.memoizedState &&
                  (current.memoizedState.hydrationErrors = renderLanes),
                (current = !0);
            if (!current) {
              if (workInProgress.flags & 256)
                return popSuspenseHandler(workInProgress), workInProgress;
              popSuspenseHandler(workInProgress);
              return null;
            }
            if (0 !== (workInProgress.flags & 128))
              throw Error(
                "Client rendering an Activity suspended it again. This is a bug in React."
              );
          }
          bubbleProperties(workInProgress);
          return null;
        case 13:
          newProps = workInProgress.memoizedState;
          if (
            null === current ||
            (null !== current.memoizedState &&
              null !== current.memoizedState.dehydrated)
          ) {
            type = newProps;
            nextResource = popHydrationState(workInProgress);
            if (null !== type && null !== type.dehydrated) {
              if (null === current) {
                if (!nextResource)
                  throw Error(
                    "A dehydrated suspense component was completed without a hydrated node. This is probably a bug in React."
                  );
                nextResource = workInProgress.memoizedState;
                nextResource =
                  null !== nextResource ? nextResource.dehydrated : null;
                if (!nextResource)
                  throw Error(
                    "Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue."
                  );
                nextResource[internalInstanceKey] = workInProgress;
                bubbleProperties(workInProgress);
                (workInProgress.mode & ProfileMode) !== NoMode &&
                  null !== type &&
                  ((type = workInProgress.child),
                  null !== type &&
                    (workInProgress.treeBaseDuration -= type.treeBaseDuration));
              } else
                emitPendingHydrationWarnings(),
                  resetHydrationState(),
                  0 === (workInProgress.flags & 128) &&
                    (type = workInProgress.memoizedState = null),
                  (workInProgress.flags |= 4),
                  bubbleProperties(workInProgress),
                  (workInProgress.mode & ProfileMode) !== NoMode &&
                    null !== type &&
                    ((type = workInProgress.child),
                    null !== type &&
                      (workInProgress.treeBaseDuration -=
                        type.treeBaseDuration));
              type = !1;
            } else
              (type = upgradeHydrationErrorsToRecoverable()),
                null !== current &&
                  null !== current.memoizedState &&
                  (current.memoizedState.hydrationErrors = type),
                (type = !0);
            if (!type) {
              if (workInProgress.flags & 256)
                return popSuspenseHandler(workInProgress), workInProgress;
              popSuspenseHandler(workInProgress);
              return null;
            }
          }
          popSuspenseHandler(workInProgress);
          if (0 !== (workInProgress.flags & 128))
            return (
              (workInProgress.lanes = renderLanes),
              (workInProgress.mode & ProfileMode) !== NoMode &&
                transferActualDuration(workInProgress),
              workInProgress
            );
          renderLanes = null !== newProps;
          current = null !== current && null !== current.memoizedState;
          renderLanes &&
            ((newProps = workInProgress.child),
            (type = null),
            null !== newProps.alternate &&
              null !== newProps.alternate.memoizedState &&
              null !== newProps.alternate.memoizedState.cachePool &&
              (type = newProps.alternate.memoizedState.cachePool.pool),
            (nextResource = null),
            null !== newProps.memoizedState &&
              null !== newProps.memoizedState.cachePool &&
              (nextResource = newProps.memoizedState.cachePool.pool),
            nextResource !== type && (newProps.flags |= 2048));
          renderLanes !== current &&
            renderLanes &&
            (workInProgress.child.flags |= 8192);
          scheduleRetryEffect(workInProgress, workInProgress.updateQueue);
          bubbleProperties(workInProgress);
          (workInProgress.mode & ProfileMode) !== NoMode &&
            renderLanes &&
            ((current = workInProgress.child),
            null !== current &&
              (workInProgress.treeBaseDuration -= current.treeBaseDuration));
          return null;
        case 4:
          return (
            popHostContainer(workInProgress),
            null === current &&
              listenToAllSupportedEvents(
                workInProgress.stateNode.containerInfo
              ),
            bubbleProperties(workInProgress),
            null
          );
        case 10:
          return (
            popProvider(workInProgress.type, workInProgress),
            bubbleProperties(workInProgress),
            null
          );
        case 19:
          pop(suspenseStackCursor, workInProgress);
          newProps = workInProgress.memoizedState;
          if (null === newProps) return bubbleProperties(workInProgress), null;
          type = 0 !== (workInProgress.flags & 128);
          nextResource = newProps.rendering;
          if (null === nextResource)
            if (type) cutOffTailIfNeeded(newProps, !1);
            else {
              if (
                workInProgressRootExitStatus !== RootInProgress ||
                (null !== current && 0 !== (current.flags & 128))
              )
                for (current = workInProgress.child; null !== current; ) {
                  nextResource = findFirstSuspended(current);
                  if (null !== nextResource) {
                    workInProgress.flags |= 128;
                    cutOffTailIfNeeded(newProps, !1);
                    current = nextResource.updateQueue;
                    workInProgress.updateQueue = current;
                    scheduleRetryEffect(workInProgress, current);
                    workInProgress.subtreeFlags = 0;
                    current = renderLanes;
                    for (
                      renderLanes = workInProgress.child;
                      null !== renderLanes;

                    )
                      resetWorkInProgress(renderLanes, current),
                        (renderLanes = renderLanes.sibling);
                    push(
                      suspenseStackCursor,
                      (suspenseStackCursor.current &
                        SubtreeSuspenseContextMask) |
                        ForceSuspenseFallback,
                      workInProgress
                    );
                    isHydrating &&
                      pushTreeFork(workInProgress, newProps.treeForkCount);
                    return workInProgress.child;
                  }
                  current = current.sibling;
                }
              null !== newProps.tail &&
                now$1() > workInProgressRootRenderTargetTime &&
                ((workInProgress.flags |= 128),
                (type = !0),
                cutOffTailIfNeeded(newProps, !1),
                (workInProgress.lanes = 4194304));
            }
          else {
            if (!type)
              if (
                ((current = findFirstSuspended(nextResource)), null !== current)
              ) {
                if (
                  ((workInProgress.flags |= 128),
                  (type = !0),
                  (current = current.updateQueue),
                  (workInProgress.updateQueue = current),
                  scheduleRetryEffect(workInProgress, current),
                  cutOffTailIfNeeded(newProps, !0),
                  null === newProps.tail &&
                    "hidden" === newProps.tailMode &&
                    !nextResource.alternate &&
                    !isHydrating)
                )
                  return bubbleProperties(workInProgress), null;
              } else
                2 * now$1() - newProps.renderingStartTime >
                  workInProgressRootRenderTargetTime &&
                  536870912 !== renderLanes &&
                  ((workInProgress.flags |= 128),
                  (type = !0),
                  cutOffTailIfNeeded(newProps, !1),
                  (workInProgress.lanes = 4194304));
            newProps.isBackwards
              ? ((nextResource.sibling = workInProgress.child),
                (workInProgress.child = nextResource))
              : ((current = newProps.last),
                null !== current
                  ? (current.sibling = nextResource)
                  : (workInProgress.child = nextResource),
                (newProps.last = nextResource));
          }
          if (null !== newProps.tail)
            return (
              (current = newProps.tail),
              (newProps.rendering = current),
              (newProps.tail = current.sibling),
              (newProps.renderingStartTime = now$1()),
              (current.sibling = null),
              (renderLanes = suspenseStackCursor.current),
              (renderLanes = type
                ? (renderLanes & SubtreeSuspenseContextMask) |
                  ForceSuspenseFallback
                : renderLanes & SubtreeSuspenseContextMask),
              push(suspenseStackCursor, renderLanes, workInProgress),
              isHydrating &&
                pushTreeFork(workInProgress, newProps.treeForkCount),
              current
            );
          bubbleProperties(workInProgress);
          return null;
        case 22:
        case 23:
          return (
            popSuspenseHandler(workInProgress),
            popHiddenContext(workInProgress),
            (newProps = null !== workInProgress.memoizedState),
            null !== current
              ? (null !== current.memoizedState) !== newProps &&
                (workInProgress.flags |= 8192)
              : newProps && (workInProgress.flags |= 8192),
            newProps
              ? 0 !== (renderLanes & 536870912) &&
                0 === (workInProgress.flags & 128) &&
                (bubbleProperties(workInProgress),
                workInProgress.subtreeFlags & 6 &&
                  (workInProgress.flags |= 8192))
              : bubbleProperties(workInProgress),
            (renderLanes = workInProgress.updateQueue),
            null !== renderLanes &&
              scheduleRetryEffect(workInProgress, renderLanes.retryQueue),
            (renderLanes = null),
            null !== current &&
              null !== current.memoizedState &&
              null !== current.memoizedState.cachePool &&
              (renderLanes = current.memoizedState.cachePool.pool),
            (newProps = null),
            null !== workInProgress.memoizedState &&
              null !== workInProgress.memoizedState.cachePool &&
              (newProps = workInProgress.memoizedState.cachePool.pool),
            newProps !== renderLanes && (workInProgress.flags |= 2048),
            null !== current && pop(resumedCache, workInProgress),
            null
          );
        case 24:
          return (
            (renderLanes = null),
            null !== current && (renderLanes = current.memoizedState.cache),
            workInProgress.memoizedState.cache !== renderLanes &&
              (workInProgress.flags |= 2048),
            popProvider(CacheContext, workInProgress),
            bubbleProperties(workInProgress),
            null
          );
        case 25:
          return null;
        case 30:
          return null;
      }
      throw Error(
        "Unknown unit of work tag (" +
          workInProgress.tag +
          "). This error is likely caused by a bug in React. Please file an issue."
      );
    }
    function unwindWork(current, workInProgress) {
      popTreeContext(workInProgress);
      switch (workInProgress.tag) {
        case 1:
          return (
            (current = workInProgress.flags),
            current & 65536
              ? ((workInProgress.flags = (current & -65537) | 128),
                (workInProgress.mode & ProfileMode) !== NoMode &&
                  transferActualDuration(workInProgress),
                workInProgress)
              : null
          );
        case 3:
          return (
            popProvider(CacheContext, workInProgress),
            popHostContainer(workInProgress),
            (current = workInProgress.flags),
            0 !== (current & 65536) && 0 === (current & 128)
              ? ((workInProgress.flags = (current & -65537) | 128),
                workInProgress)
              : null
          );
        case 26:
        case 27:
        case 5:
          return popHostContext(workInProgress), null;
        case 31:
          if (null !== workInProgress.memoizedState) {
            popSuspenseHandler(workInProgress);
            if (null === workInProgress.alternate)
              throw Error(
                "Threw in newly mounted dehydrated component. This is likely a bug in React. Please file an issue."
              );
            resetHydrationState();
          }
          current = workInProgress.flags;
          return current & 65536
            ? ((workInProgress.flags = (current & -65537) | 128),
              (workInProgress.mode & ProfileMode) !== NoMode &&
                transferActualDuration(workInProgress),
              workInProgress)
            : null;
        case 13:
          popSuspenseHandler(workInProgress);
          current = workInProgress.memoizedState;
          if (null !== current && null !== current.dehydrated) {
            if (null === workInProgress.alternate)
              throw Error(
                "Threw in newly mounted dehydrated component. This is likely a bug in React. Please file an issue."
              );
            resetHydrationState();
          }
          current = workInProgress.flags;
          return current & 65536
            ? ((workInProgress.flags = (current & -65537) | 128),
              (workInProgress.mode & ProfileMode) !== NoMode &&
                transferActualDuration(workInProgress),
              workInProgress)
            : null;
        case 19:
          return pop(suspenseStackCursor, workInProgress), null;
        case 4:
          return popHostContainer(workInProgress), null;
        case 10:
          return popProvider(workInProgress.type, workInProgress), null;
        case 22:
        case 23:
          return (
            popSuspenseHandler(workInProgress),
            popHiddenContext(workInProgress),
            null !== current && pop(resumedCache, workInProgress),
            (current = workInProgress.flags),
            current & 65536
              ? ((workInProgress.flags = (current & -65537) | 128),
                (workInProgress.mode & ProfileMode) !== NoMode &&
                  transferActualDuration(workInProgress),
                workInProgress)
              : null
          );
        case 24:
          return popProvider(CacheContext, workInProgress), null;
        case 25:
          return null;
        default:
          return null;
      }
    }
    function unwindInterruptedWork(current, interruptedWork) {
      popTreeContext(interruptedWork);
      switch (interruptedWork.tag) {
        case 3:
          popProvider(CacheContext, interruptedWork);
          popHostContainer(interruptedWork);
          break;
        case 26:
        case 27:
        case 5:
          popHostContext(interruptedWork);
          break;
        case 4:
          popHostContainer(interruptedWork);
          break;
        case 31:
          null !== interruptedWork.memoizedState &&
            popSuspenseHandler(interruptedWork);
          break;
        case 13:
          popSuspenseHandler(interruptedWork);
          break;
        case 19:
          pop(suspenseStackCursor, interruptedWork);
          break;
        case 10:
          popProvider(interruptedWork.type, interruptedWork);
          break;
        case 22:
        case 23:
          popSuspenseHandler(interruptedWork);
          popHiddenContext(interruptedWork);
          null !== current && pop(resumedCache, interruptedWork);
          break;
        case 24:
          popProvider(CacheContext, interruptedWork);
      }
    }
    function shouldProfile(current) {
      return (current.mode & ProfileMode) !== NoMode;
    }
    function commitHookLayoutEffects(finishedWork, hookFlags) {
      shouldProfile(finishedWork)
        ? (startEffectTimer(),
          commitHookEffectListMount(hookFlags, finishedWork),
          recordEffectDuration())
        : commitHookEffectListMount(hookFlags, finishedWork);
    }
    function commitHookLayoutUnmountEffects(
      finishedWork,
      nearestMountedAncestor,
      hookFlags
    ) {
      shouldProfile(finishedWork)
        ? (startEffectTimer(),
          commitHookEffectListUnmount(
            hookFlags,
            finishedWork,
            nearestMountedAncestor
          ),
          recordEffectDuration())
        : commitHookEffectListUnmount(
            hookFlags,
            finishedWork,
            nearestMountedAncestor
          );
    }
    function commitHookEffectListMount(flags, finishedWork) {
      try {
        var updateQueue = finishedWork.updateQueue,
          lastEffect = null !== updateQueue ? updateQueue.lastEffect : null;
        if (null !== lastEffect) {
          var firstEffect = lastEffect.next;
          updateQueue = firstEffect;
          do {
            if (
              (updateQueue.tag & flags) === flags &&
              ((lastEffect = void 0),
              (flags & Insertion) !== NoFlags &&
                (isRunningInsertionEffect = !0),
              (lastEffect = runWithFiberInDEV(
                finishedWork,
                callCreateInDEV,
                updateQueue
              )),
              (flags & Insertion) !== NoFlags &&
                (isRunningInsertionEffect = !1),
              void 0 !== lastEffect && "function" !== typeof lastEffect)
            ) {
              var hookName = void 0;
              hookName =
                0 !== (updateQueue.tag & Layout)
                  ? "useLayoutEffect"
                  : 0 !== (updateQueue.tag & Insertion)
                    ? "useInsertionEffect"
                    : "useEffect";
              var addendum = void 0;
              addendum =
                null === lastEffect
                  ? " You returned null. If your effect does not require clean up, return undefined (or nothing)."
                  : "function" === typeof lastEffect.then
                    ? "\n\nIt looks like you wrote " +
                      hookName +
                      "(async () => ...) or returned a Promise. Instead, write the async function inside your effect and call it immediately:\n\n" +
                      hookName +
                      "(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://react.dev/link/hooks-data-fetching"
                    : " You returned: " + lastEffect;
              runWithFiberInDEV(
                finishedWork,
                function (n, a) {
                  console.error(
                    "%s must not return anything besides a function, which is used for clean-up.%s",
                    n,
                    a
                  );
                },
                hookName,
                addendum
              );
            }
            updateQueue = updateQueue.next;
          } while (updateQueue !== firstEffect);
        }
      } catch (error) {
        captureCommitPhaseError(finishedWork, finishedWork.return, error);
      }
    }
    function commitHookEffectListUnmount(
      flags,
      finishedWork,
      nearestMountedAncestor
    ) {
      try {
        var updateQueue = finishedWork.updateQueue,
          lastEffect = null !== updateQueue ? updateQueue.lastEffect : null;
        if (null !== lastEffect) {
          var firstEffect = lastEffect.next;
          updateQueue = firstEffect;
          do {
            if ((updateQueue.tag & flags) === flags) {
              var inst = updateQueue.inst,
                destroy = inst.destroy;
              void 0 !== destroy &&
                ((inst.destroy = void 0),
                (flags & Insertion) !== NoFlags &&
                  (isRunningInsertionEffect = !0),
                (lastEffect = finishedWork),
                runWithFiberInDEV(
                  lastEffect,
                  callDestroyInDEV,
                  lastEffect,
                  nearestMountedAncestor,
                  destroy
                ),
                (flags & Insertion) !== NoFlags &&
                  (isRunningInsertionEffect = !1));
            }
            updateQueue = updateQueue.next;
          } while (updateQueue !== firstEffect);
        }
      } catch (error) {
        captureCommitPhaseError(finishedWork, finishedWork.return, error);
      }
    }
    function commitHookPassiveMountEffects(finishedWork, hookFlags) {
      shouldProfile(finishedWork)
        ? (startEffectTimer(),
          commitHookEffectListMount(hookFlags, finishedWork),
          recordEffectDuration())
        : commitHookEffectListMount(hookFlags, finishedWork);
    }
    function commitHookPassiveUnmountEffects(
      finishedWork,
      nearestMountedAncestor,
      hookFlags
    ) {
      shouldProfile(finishedWork)
        ? (startEffectTimer(),
          commitHookEffectListUnmount(
            hookFlags,
            finishedWork,
            nearestMountedAncestor
          ),
          recordEffectDuration())
        : commitHookEffectListUnmount(
            hookFlags,
            finishedWork,
            nearestMountedAncestor
          );
    }
    function commitClassCallbacks(finishedWork) {
      var updateQueue = finishedWork.updateQueue;
      if (null !== updateQueue) {
        var instance = finishedWork.stateNode;
        finishedWork.type.defaultProps ||
          "ref" in finishedWork.memoizedProps ||
          didWarnAboutReassigningProps ||
          (instance.props !== finishedWork.memoizedProps &&
            console.error(
              "Expected %s props to match memoized props before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.",
              getComponentNameFromFiber(finishedWork) || "instance"
            ),
          instance.state !== finishedWork.memoizedState &&
            console.error(
              "Expected %s state to match memoized state before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.",
              getComponentNameFromFiber(finishedWork) || "instance"
            ));
        try {
          runWithFiberInDEV(
            finishedWork,
            commitCallbacks,
            updateQueue,
            instance
          );
        } catch (error) {
          captureCommitPhaseError(finishedWork, finishedWork.return, error);
        }
      }
    }
    function callGetSnapshotBeforeUpdates(instance, prevProps, prevState) {
      return instance.getSnapshotBeforeUpdate(prevProps, prevState);
    }
    function commitClassSnapshot(finishedWork, current) {
      var prevProps = current.memoizedProps,
        prevState = current.memoizedState;
      current = finishedWork.stateNode;
      finishedWork.type.defaultProps ||
        "ref" in finishedWork.memoizedProps ||
        didWarnAboutReassigningProps ||
        (current.props !== finishedWork.memoizedProps &&
          console.error(
            "Expected %s props to match memoized props before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.",
            getComponentNameFromFiber(finishedWork) || "instance"
          ),
        current.state !== finishedWork.memoizedState &&
          console.error(
            "Expected %s state to match memoized state before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.",
            getComponentNameFromFiber(finishedWork) || "instance"
          ));
      try {
        var resolvedPrevProps = resolveClassComponentProps(
          finishedWork.type,
          prevProps
        );
        var snapshot = runWithFiberInDEV(
          finishedWork,
          callGetSnapshotBeforeUpdates,
          current,
          resolvedPrevProps,
          prevState
        );
        prevProps = didWarnAboutUndefinedSnapshotBeforeUpdate;
        void 0 !== snapshot ||
          prevProps.has(finishedWork.type) ||
          (prevProps.add(finishedWork.type),
          runWithFiberInDEV(finishedWork, function () {
            console.error(
              "%s.getSnapshotBeforeUpdate(): A snapshot value (or null) must be returned. You have returned undefined.",
              getComponentNameFromFiber(finishedWork)
            );
          }));
        current.__reactInternalSnapshotBeforeUpdate = snapshot;
      } catch (error) {
        captureCommitPhaseError(finishedWork, finishedWork.return, error);
      }
    }
    function safelyCallComponentWillUnmount(
      current,
      nearestMountedAncestor,
      instance
    ) {
      instance.props = resolveClassComponentProps(
        current.type,
        current.memoizedProps
      );
      instance.state = current.memoizedState;
      shouldProfile(current)
        ? (startEffectTimer(),
          runWithFiberInDEV(
            current,
            callComponentWillUnmountInDEV,
            current,
            nearestMountedAncestor,
            instance
          ),
          recordEffectDuration())
        : runWithFiberInDEV(
            current,
            callComponentWillUnmountInDEV,
            current,
            nearestMountedAncestor,
            instance
          );
    }
    function commitAttachRef(finishedWork) {
      var ref = finishedWork.ref;
      if (null !== ref) {
        switch (finishedWork.tag) {
          case 26:
          case 27:
          case 5:
            var instanceToUse = finishedWork.stateNode;
            break;
          case 30:
            instanceToUse = finishedWork.stateNode;
            break;
          default:
            instanceToUse = finishedWork.stateNode;
        }
        if ("function" === typeof ref)
          if (shouldProfile(finishedWork))
            try {
              startEffectTimer(),
                (finishedWork.refCleanup = ref(instanceToUse));
            } finally {
              recordEffectDuration();
            }
          else finishedWork.refCleanup = ref(instanceToUse);
        else
          "string" === typeof ref
            ? console.error("String refs are no longer supported.")
            : ref.hasOwnProperty("current") ||
              console.error(
                "Unexpected ref object provided for %s. Use either a ref-setter function or React.createRef().",
                getComponentNameFromFiber(finishedWork)
              ),
            (ref.current = instanceToUse);
      }
    }
    function safelyAttachRef(current, nearestMountedAncestor) {
      try {
        runWithFiberInDEV(current, commitAttachRef, current);
      } catch (error) {
        captureCommitPhaseError(current, nearestMountedAncestor, error);
      }
    }
    function safelyDetachRef(current, nearestMountedAncestor) {
      var ref = current.ref,
        refCleanup = current.refCleanup;
      if (null !== ref)
        if ("function" === typeof refCleanup)
          try {
            if (shouldProfile(current))
              try {
                startEffectTimer(), runWithFiberInDEV(current, refCleanup);
              } finally {
                recordEffectDuration(current);
              }
            else runWithFiberInDEV(current, refCleanup);
          } catch (error) {
            captureCommitPhaseError(current, nearestMountedAncestor, error);
          } finally {
            (current.refCleanup = null),
              (current = current.alternate),
              null != current && (current.refCleanup = null);
          }
        else if ("function" === typeof ref)
          try {
            if (shouldProfile(current))
              try {
                startEffectTimer(), runWithFiberInDEV(current, ref, null);
              } finally {
                recordEffectDuration(current);
              }
            else runWithFiberInDEV(current, ref, null);
          } catch (error$7) {
            captureCommitPhaseError(current, nearestMountedAncestor, error$7);
          }
        else ref.current = null;
    }
    function commitProfiler(
      finishedWork,
      current,
      commitStartTime,
      effectDuration
    ) {
      var _finishedWork$memoize = finishedWork.memoizedProps,
        id = _finishedWork$memoize.id,
        onCommit = _finishedWork$memoize.onCommit;
      _finishedWork$memoize = _finishedWork$memoize.onRender;
      current = null === current ? "mount" : "update";
      currentUpdateIsNested && (current = "nested-update");
      "function" === typeof _finishedWork$memoize &&
        _finishedWork$memoize(
          id,
          current,
          finishedWork.actualDuration,
          finishedWork.treeBaseDuration,
          finishedWork.actualStartTime,
          commitStartTime
        );
      "function" === typeof onCommit &&
        onCommit(id, current, effectDuration, commitStartTime);
    }
    function commitProfilerPostCommitImpl(
      finishedWork,
      current,
      commitStartTime,
      passiveEffectDuration
    ) {
      var _finishedWork$memoize2 = finishedWork.memoizedProps;
      finishedWork = _finishedWork$memoize2.id;
      _finishedWork$memoize2 = _finishedWork$memoize2.onPostCommit;
      current = null === current ? "mount" : "update";
      currentUpdateIsNested && (current = "nested-update");
      "function" === typeof _finishedWork$memoize2 &&
        _finishedWork$memoize2(
          finishedWork,
          current,
          passiveEffectDuration,
          commitStartTime
        );
    }
    function commitHostMount(finishedWork) {
      var type = finishedWork.type,
        props = finishedWork.memoizedProps,
        instance = finishedWork.stateNode;
      try {
        runWithFiberInDEV(
          finishedWork,
          commitMount,
          instance,
          type,
          props,
          finishedWork
        );
      } catch (error) {
        captureCommitPhaseError(finishedWork, finishedWork.return, error);
      }
    }
    function commitHostUpdate(finishedWork, newProps, oldProps) {
      try {
        runWithFiberInDEV(
          finishedWork,
          commitUpdate,
          finishedWork.stateNode,
          finishedWork.type,
          oldProps,
          newProps,
          finishedWork
        );
      } catch (error) {
        captureCommitPhaseError(finishedWork, finishedWork.return, error);
      }
    }
    function isHostParent(fiber) {
      return (
        5 === fiber.tag ||
        3 === fiber.tag ||
        26 === fiber.tag ||
        (27 === fiber.tag && isSingletonScope(fiber.type)) ||
        4 === fiber.tag
      );
    }
    function getHostSibling(fiber) {
      a: for (;;) {
        for (; null === fiber.sibling; ) {
          if (null === fiber.return || isHostParent(fiber.return)) return null;
          fiber = fiber.return;
        }
        fiber.sibling.return = fiber.return;
        for (
          fiber = fiber.sibling;
          5 !== fiber.tag && 6 !== fiber.tag && 18 !== fiber.tag;

        ) {
          if (27 === fiber.tag && isSingletonScope(fiber.type)) continue a;
          if (fiber.flags & 2) continue a;
          if (null === fiber.child || 4 === fiber.tag) continue a;
          else (fiber.child.return = fiber), (fiber = fiber.child);
        }
        if (!(fiber.flags & 2)) return fiber.stateNode;
      }
    }
    function insertOrAppendPlacementNodeIntoContainer(node, before, parent) {
      var tag = node.tag;
      if (5 === tag || 6 === tag)
        (node = node.stateNode),
          before
            ? (warnForReactChildrenConflict(parent),
              (9 === parent.nodeType
                ? parent.body
                : "HTML" === parent.nodeName
                  ? parent.ownerDocument.body
                  : parent
              ).insertBefore(node, before))
            : (warnForReactChildrenConflict(parent),
              (before =
                9 === parent.nodeType
                  ? parent.body
                  : "HTML" === parent.nodeName
                    ? parent.ownerDocument.body
                    : parent),
              before.appendChild(node),
              (parent = parent._reactRootContainer),
              (null !== parent && void 0 !== parent) ||
                null !== before.onclick ||
                (before.onclick = noop$1));
      else if (
        4 !== tag &&
        (27 === tag &&
          isSingletonScope(node.type) &&
          ((parent = node.stateNode), (before = null)),
        (node = node.child),
        null !== node)
      )
        for (
          insertOrAppendPlacementNodeIntoContainer(node, before, parent),
            node = node.sibling;
          null !== node;

        )
          insertOrAppendPlacementNodeIntoContainer(node, before, parent),
            (node = node.sibling);
    }
    function insertOrAppendPlacementNode(node, before, parent) {
      var tag = node.tag;
      if (5 === tag || 6 === tag)
        (node = node.stateNode),
          before ? parent.insertBefore(node, before) : parent.appendChild(node);
      else if (
        4 !== tag &&
        (27 === tag && isSingletonScope(node.type) && (parent = node.stateNode),
        (node = node.child),
        null !== node)
      )
        for (
          insertOrAppendPlacementNode(node, before, parent),
            node = node.sibling;
          null !== node;

        )
          insertOrAppendPlacementNode(node, before, parent),
            (node = node.sibling);
    }
    function commitPlacement(finishedWork) {
      for (
        var hostParentFiber, parentFiber = finishedWork.return;
        null !== parentFiber;

      ) {
        if (isHostParent(parentFiber)) {
          hostParentFiber = parentFiber;
          break;
        }
        parentFiber = parentFiber.return;
      }
      if (null == hostParentFiber)
        throw Error(
          "Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue."
        );
      switch (hostParentFiber.tag) {
        case 27:
          hostParentFiber = hostParentFiber.stateNode;
          parentFiber = getHostSibling(finishedWork);
          insertOrAppendPlacementNode(
            finishedWork,
            parentFiber,
            hostParentFiber
          );
          break;
        case 5:
          parentFiber = hostParentFiber.stateNode;
          hostParentFiber.flags & 32 &&
            (resetTextContent(parentFiber), (hostParentFiber.flags &= -33));
          hostParentFiber = getHostSibling(finishedWork);
          insertOrAppendPlacementNode(
            finishedWork,
            hostParentFiber,
            parentFiber
          );
          break;
        case 3:
        case 4:
          hostParentFiber = hostParentFiber.stateNode.containerInfo;
          parentFiber = getHostSibling(finishedWork);
          insertOrAppendPlacementNodeIntoContainer(
            finishedWork,
            parentFiber,
            hostParentFiber
          );
          break;
        default:
          throw Error(
            "Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue."
          );
      }
    }
    function commitHostSingletonAcquisition(finishedWork) {
      var singleton = finishedWork.stateNode,
        props = finishedWork.memoizedProps;
      try {
        runWithFiberInDEV(
          finishedWork,
          acquireSingletonInstance,
          finishedWork.type,
          props,
          singleton,
          finishedWork
        );
      } catch (error) {
        captureCommitPhaseError(finishedWork, finishedWork.return, error);
      }
    }
    function isHydratingParent(current, finishedWork) {
      return 31 === finishedWork.tag
        ? ((finishedWork = finishedWork.memoizedState),
          null !== current.memoizedState && null === finishedWork)
        : 13 === finishedWork.tag
          ? ((current = current.memoizedState),
            (finishedWork = finishedWork.memoizedState),
            null !== current &&
              null !== current.dehydrated &&
              (null === finishedWork || null === finishedWork.dehydrated))
          : 3 === finishedWork.tag
            ? current.memoizedState.isDehydrated &&
              0 === (finishedWork.flags & 256)
            : !1;
    }
    function commitBeforeMutationEffects(root, firstChild) {
      root = root.containerInfo;
      eventsEnabled = _enabled;
      root = getActiveElementDeep(root);
      if (hasSelectionCapabilities(root)) {
        if ("selectionStart" in root)
          var JSCompiler_temp = {
            start: root.selectionStart,
            end: root.selectionEnd
          };
        else
          a: {
            JSCompiler_temp =
              ((JSCompiler_temp = root.ownerDocument) &&
                JSCompiler_temp.defaultView) ||
              window;
            var selection =
              JSCompiler_temp.getSelection && JSCompiler_temp.getSelection();
            if (selection && 0 !== selection.rangeCount) {
              JSCompiler_temp = selection.anchorNode;
              var anchorOffset = selection.anchorOffset,
                focusNode = selection.focusNode;
              selection = selection.focusOffset;
              try {
                JSCompiler_temp.nodeType, focusNode.nodeType;
              } catch (e$2) {
                JSCompiler_temp = null;
                break a;
              }
              var length = 0,
                start = -1,
                end = -1,
                indexWithinAnchor = 0,
                indexWithinFocus = 0,
                node = root,
                parentNode = null;
              b: for (;;) {
                for (var next; ; ) {
                  node !== JSCompiler_temp ||
                    (0 !== anchorOffset && 3 !== node.nodeType) ||
                    (start = length + anchorOffset);
                  node !== focusNode ||
                    (0 !== selection && 3 !== node.nodeType) ||
                    (end = length + selection);
                  3 === node.nodeType && (length += node.nodeValue.length);
                  if (null === (next = node.firstChild)) break;
                  parentNode = node;
                  node = next;
                }
                for (;;) {
                  if (node === root) break b;
                  parentNode === JSCompiler_temp &&
                    ++indexWithinAnchor === anchorOffset &&
                    (start = length);
                  parentNode === focusNode &&
                    ++indexWithinFocus === selection &&
                    (end = length);
                  if (null !== (next = node.nextSibling)) break;
                  node = parentNode;
                  parentNode = node.parentNode;
                }
                node = next;
              }
              JSCompiler_temp =
                -1 === start || -1 === end ? null : { start: start, end: end };
            } else JSCompiler_temp = null;
          }
        JSCompiler_temp = JSCompiler_temp || { start: 0, end: 0 };
      } else JSCompiler_temp = null;
      selectionInformation = {
        focusedElem: root,
        selectionRange: JSCompiler_temp
      };
      _enabled = !1;
      for (nextEffect = firstChild; null !== nextEffect; )
        if (
          ((firstChild = nextEffect),
          (root = firstChild.child),
          0 !== (firstChild.subtreeFlags & 1028) && null !== root)
        )
          (root.return = firstChild), (nextEffect = root);
        else
          for (; null !== nextEffect; ) {
            root = firstChild = nextEffect;
            JSCompiler_temp = root.alternate;
            anchorOffset = root.flags;
            switch (root.tag) {
              case 0:
                if (
                  0 !== (anchorOffset & 4) &&
                  ((root = root.updateQueue),
                  (root = null !== root ? root.events : null),
                  null !== root)
                )
                  for (
                    JSCompiler_temp = 0;
                    JSCompiler_temp < root.length;
                    JSCompiler_temp++
                  )
                    (anchorOffset = root[JSCompiler_temp]),
                      (anchorOffset.ref.impl = anchorOffset.nextImpl);
                break;
              case 11:
              case 15:
                break;
              case 1:
                0 !== (anchorOffset & 1024) &&
                  null !== JSCompiler_temp &&
                  commitClassSnapshot(root, JSCompiler_temp);
                break;
              case 3:
                if (0 !== (anchorOffset & 1024))
                  if (
                    ((root = root.stateNode.containerInfo),
                    (JSCompiler_temp = root.nodeType),
                    9 === JSCompiler_temp)
                  )
                    clearContainerSparingly(root);
                  else if (1 === JSCompiler_temp)
                    switch (root.nodeName) {
                      case "HEAD":
                      case "HTML":
                      case "BODY":
                        clearContainerSparingly(root);
                        break;
                      default:
                        root.textContent = "";
                    }
                break;
              case 5:
              case 26:
              case 27:
              case 6:
              case 4:
              case 17:
                break;
              default:
                if (0 !== (anchorOffset & 1024))
                  throw Error(
                    "This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue."
                  );
            }
            root = firstChild.sibling;
            if (null !== root) {
              root.return = firstChild.return;
              nextEffect = root;
              break;
            }
            nextEffect = firstChild.return;
          }
    }
    function commitLayoutEffectOnFiber(finishedRoot, current, finishedWork) {
      var prevEffectStart = pushComponentEffectStart(),
        prevEffectDuration = pushComponentEffectDuration(),
        prevEffectErrors = pushComponentEffectErrors(),
        prevEffectDidSpawnUpdate = pushComponentEffectDidSpawnUpdate(),
        flags = finishedWork.flags;
      switch (finishedWork.tag) {
        case 0:
        case 11:
        case 15:
          recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
          flags & 4 &&
            commitHookLayoutEffects(finishedWork, Layout | HasEffect);
          break;
        case 1:
          recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
          if (flags & 4)
            if (((finishedRoot = finishedWork.stateNode), null === current))
              finishedWork.type.defaultProps ||
                "ref" in finishedWork.memoizedProps ||
                didWarnAboutReassigningProps ||
                (finishedRoot.props !== finishedWork.memoizedProps &&
                  console.error(
                    "Expected %s props to match memoized props before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.",
                    getComponentNameFromFiber(finishedWork) || "instance"
                  ),
                finishedRoot.state !== finishedWork.memoizedState &&
                  console.error(
                    "Expected %s state to match memoized state before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.",
                    getComponentNameFromFiber(finishedWork) || "instance"
                  )),
                shouldProfile(finishedWork)
                  ? (startEffectTimer(),
                    runWithFiberInDEV(
                      finishedWork,
                      callComponentDidMountInDEV,
                      finishedWork,
                      finishedRoot
                    ),
                    recordEffectDuration())
                  : runWithFiberInDEV(
                      finishedWork,
                      callComponentDidMountInDEV,
                      finishedWork,
                      finishedRoot
                    );
            else {
              var prevProps = resolveClassComponentProps(
                finishedWork.type,
                current.memoizedProps
              );
              current = current.memoizedState;
              finishedWork.type.defaultProps ||
                "ref" in finishedWork.memoizedProps ||
                didWarnAboutReassigningProps ||
                (finishedRoot.props !== finishedWork.memoizedProps &&
                  console.error(
                    "Expected %s props to match memoized props before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.",
                    getComponentNameFromFiber(finishedWork) || "instance"
                  ),
                finishedRoot.state !== finishedWork.memoizedState &&
                  console.error(
                    "Expected %s state to match memoized state before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.",
                    getComponentNameFromFiber(finishedWork) || "instance"
                  ));
              shouldProfile(finishedWork)
                ? (startEffectTimer(),
                  runWithFiberInDEV(
                    finishedWork,
                    callComponentDidUpdateInDEV,
                    finishedWork,
                    finishedRoot,
                    prevProps,
                    current,
                    finishedRoot.__reactInternalSnapshotBeforeUpdate
                  ),
                  recordEffectDuration())
                : runWithFiberInDEV(
                    finishedWork,
                    callComponentDidUpdateInDEV,
                    finishedWork,
                    finishedRoot,
                    prevProps,
                    current,
                    finishedRoot.__reactInternalSnapshotBeforeUpdate
                  );
            }
          flags & 64 && commitClassCallbacks(finishedWork);
          flags & 512 && safelyAttachRef(finishedWork, finishedWork.return);
          break;
        case 3:
          current = pushNestedEffectDurations();
          recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
          if (
            flags & 64 &&
            ((flags = finishedWork.updateQueue), null !== flags)
          ) {
            prevProps = null;
            if (null !== finishedWork.child)
              switch (finishedWork.child.tag) {
                case 27:
                case 5:
                  prevProps = finishedWork.child.stateNode;
                  break;
                case 1:
                  prevProps = finishedWork.child.stateNode;
              }
            try {
              runWithFiberInDEV(
                finishedWork,
                commitCallbacks,
                flags,
                prevProps
              );
            } catch (error) {
              captureCommitPhaseError(finishedWork, finishedWork.return, error);
            }
          }
          finishedRoot.effectDuration += popNestedEffectDurations(current);
          break;
        case 27:
          null === current &&
            flags & 4 &&
            commitHostSingletonAcquisition(finishedWork);
        case 26:
        case 5:
          recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
          if (null === current)
            if (flags & 4) commitHostMount(finishedWork);
            else if (flags & 64) {
              finishedRoot = finishedWork.type;
              current = finishedWork.memoizedProps;
              prevProps = finishedWork.stateNode;
              try {
                runWithFiberInDEV(
                  finishedWork,
                  commitHydratedInstance,
                  prevProps,
                  finishedRoot,
                  current,
                  finishedWork
                );
              } catch (error) {
                captureCommitPhaseError(
                  finishedWork,
                  finishedWork.return,
                  error
                );
              }
            }
          flags & 512 && safelyAttachRef(finishedWork, finishedWork.return);
          break;
        case 12:
          if (flags & 4) {
            flags = pushNestedEffectDurations();
            recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
            finishedRoot = finishedWork.stateNode;
            finishedRoot.effectDuration += bubbleNestedEffectDurations(flags);
            try {
              runWithFiberInDEV(
                finishedWork,
                commitProfiler,
                finishedWork,
                current,
                commitStartTime,
                finishedRoot.effectDuration
              );
            } catch (error) {
              captureCommitPhaseError(finishedWork, finishedWork.return, error);
            }
          } else recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
          break;
        case 31:
          recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
          flags & 4 &&
            commitActivityHydrationCallbacks(finishedRoot, finishedWork);
          break;
        case 13:
          recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
          flags & 4 &&
            commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);
          flags & 64 &&
            ((finishedRoot = finishedWork.memoizedState),
            null !== finishedRoot &&
              ((finishedRoot = finishedRoot.dehydrated),
              null !== finishedRoot &&
                ((flags = retryDehydratedSuspenseBoundary.bind(
                  null,
                  finishedWork
                )),
                registerSuspenseInstanceRetry(finishedRoot, flags))));
          break;
        case 22:
          flags =
            null !== finishedWork.memoizedState || offscreenSubtreeIsHidden;
          if (!flags) {
            current =
              (null !== current && null !== current.memoizedState) ||
              offscreenSubtreeWasHidden;
            prevProps = offscreenSubtreeIsHidden;
            var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
            offscreenSubtreeIsHidden = flags;
            (offscreenSubtreeWasHidden = current) &&
            !prevOffscreenSubtreeWasHidden
              ? (recursivelyTraverseReappearLayoutEffects(
                  finishedRoot,
                  finishedWork,
                  0 !== (finishedWork.subtreeFlags & 8772)
                ),
                (finishedWork.mode & ProfileMode) !== NoMode &&
                  0 <= componentEffectStartTime &&
                  0 <= componentEffectEndTime &&
                  0.05 < componentEffectEndTime - componentEffectStartTime &&
                  logComponentReappeared(
                    finishedWork,
                    componentEffectStartTime,
                    componentEffectEndTime
                  ))
              : recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
            offscreenSubtreeIsHidden = prevProps;
            offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
          }
          break;
        case 30:
          break;
        default:
          recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
      }
      (finishedWork.mode & ProfileMode) !== NoMode &&
        0 <= componentEffectStartTime &&
        0 <= componentEffectEndTime &&
        ((componentEffectSpawnedUpdate || 0.05 < componentEffectDuration) &&
          logComponentEffect(
            finishedWork,
            componentEffectStartTime,
            componentEffectEndTime,
            componentEffectDuration,
            componentEffectErrors
          ),
        null === finishedWork.alternate &&
          null !== finishedWork.return &&
          null !== finishedWork.return.alternate &&
          0.05 < componentEffectEndTime - componentEffectStartTime &&
          (isHydratingParent(
            finishedWork.return.alternate,
            finishedWork.return
          ) ||
            logComponentTrigger(
              finishedWork,
              componentEffectStartTime,
              componentEffectEndTime,
              "Mount"
            )));
      popComponentEffectStart(prevEffectStart);
      popComponentEffectDuration(prevEffectDuration);
      componentEffectErrors = prevEffectErrors;
      componentEffectSpawnedUpdate = prevEffectDidSpawnUpdate;
    }
    function detachFiberAfterEffects(fiber) {
      var alternate = fiber.alternate;
      null !== alternate &&
        ((fiber.alternate = null), detachFiberAfterEffects(alternate));
      fiber.child = null;
      fiber.deletions = null;
      fiber.sibling = null;
      5 === fiber.tag &&
        ((alternate = fiber.stateNode),
        null !== alternate && detachDeletedInstance(alternate));
      fiber.stateNode = null;
      fiber._debugOwner = null;
      fiber.return = null;
      fiber.dependencies = null;
      fiber.memoizedProps = null;
      fiber.memoizedState = null;
      fiber.pendingProps = null;
      fiber.stateNode = null;
      fiber.updateQueue = null;
    }
    function recursivelyTraverseDeletionEffects(
      finishedRoot,
      nearestMountedAncestor,
      parent
    ) {
      for (parent = parent.child; null !== parent; )
        commitDeletionEffectsOnFiber(
          finishedRoot,
          nearestMountedAncestor,
          parent
        ),
          (parent = parent.sibling);
    }
    function commitDeletionEffectsOnFiber(
      finishedRoot,
      nearestMountedAncestor,
      deletedFiber
    ) {
      if (
        injectedHook &&
        "function" === typeof injectedHook.onCommitFiberUnmount
      )
        try {
          injectedHook.onCommitFiberUnmount(rendererID, deletedFiber);
        } catch (err) {
          hasLoggedError ||
            ((hasLoggedError = !0),
            console.error(
              "React instrumentation encountered an error: %o",
              err
            ));
        }
      var prevEffectStart = pushComponentEffectStart(),
        prevEffectDuration = pushComponentEffectDuration(),
        prevEffectErrors = pushComponentEffectErrors(),
        prevEffectDidSpawnUpdate = pushComponentEffectDidSpawnUpdate();
      switch (deletedFiber.tag) {
        case 26:
          offscreenSubtreeWasHidden ||
            safelyDetachRef(deletedFiber, nearestMountedAncestor);
          recursivelyTraverseDeletionEffects(
            finishedRoot,
            nearestMountedAncestor,
            deletedFiber
          );
          deletedFiber.memoizedState
            ? deletedFiber.memoizedState.count--
            : deletedFiber.stateNode &&
              ((finishedRoot = deletedFiber.stateNode),
              finishedRoot.parentNode.removeChild(finishedRoot));
          break;
        case 27:
          offscreenSubtreeWasHidden ||
            safelyDetachRef(deletedFiber, nearestMountedAncestor);
          var prevHostParent = hostParent,
            prevHostParentIsContainer = hostParentIsContainer;
          isSingletonScope(deletedFiber.type) &&
            ((hostParent = deletedFiber.stateNode),
            (hostParentIsContainer = !1));
          recursivelyTraverseDeletionEffects(
            finishedRoot,
            nearestMountedAncestor,
            deletedFiber
          );
          runWithFiberInDEV(
            deletedFiber,
            releaseSingletonInstance,
            deletedFiber.stateNode
          );
          hostParent = prevHostParent;
          hostParentIsContainer = prevHostParentIsContainer;
          break;
        case 5:
          offscreenSubtreeWasHidden ||
            safelyDetachRef(deletedFiber, nearestMountedAncestor);
        case 6:
          prevHostParent = hostParent;
          prevHostParentIsContainer = hostParentIsContainer;
          hostParent = null;
          recursivelyTraverseDeletionEffects(
            finishedRoot,
            nearestMountedAncestor,
            deletedFiber
          );
          hostParent = prevHostParent;
          hostParentIsContainer = prevHostParentIsContainer;
          if (null !== hostParent)
            if (hostParentIsContainer)
              try {
                runWithFiberInDEV(
                  deletedFiber,
                  removeChildFromContainer,
                  hostParent,
                  deletedFiber.stateNode
                );
              } catch (error) {
                captureCommitPhaseError(
                  deletedFiber,
                  nearestMountedAncestor,
                  error
                );
              }
            else
              try {
                runWithFiberInDEV(
                  deletedFiber,
                  removeChild,
                  hostParent,
                  deletedFiber.stateNode
                );
              } catch (error) {
                captureCommitPhaseError(
                  deletedFiber,
                  nearestMountedAncestor,
                  error
                );
              }
          break;
        case 18:
          null !== hostParent &&
            (hostParentIsContainer
              ? ((finishedRoot = hostParent),
                clearHydrationBoundary(
                  9 === finishedRoot.nodeType
                    ? finishedRoot.body
                    : "HTML" === finishedRoot.nodeName
                      ? finishedRoot.ownerDocument.body
                      : finishedRoot,
                  deletedFiber.stateNode
                ),
                retryIfBlockedOn(finishedRoot))
              : clearHydrationBoundary(hostParent, deletedFiber.stateNode));
          break;
        case 4:
          prevHostParent = hostParent;
          prevHostParentIsContainer = hostParentIsContainer;
          hostParent = deletedFiber.stateNode.containerInfo;
          hostParentIsContainer = !0;
          recursivelyTraverseDeletionEffects(
            finishedRoot,
            nearestMountedAncestor,
            deletedFiber
          );
          hostParent = prevHostParent;
          hostParentIsContainer = prevHostParentIsContainer;
          break;
        case 0:
        case 11:
        case 14:
        case 15:
          commitHookEffectListUnmount(
            Insertion,
            deletedFiber,
            nearestMountedAncestor
          );
          offscreenSubtreeWasHidden ||
            commitHookLayoutUnmountEffects(
              deletedFiber,
              nearestMountedAncestor,
              Layout
            );
          recursivelyTraverseDeletionEffects(
            finishedRoot,
            nearestMountedAncestor,
            deletedFiber
          );
          break;
        case 1:
          offscreenSubtreeWasHidden ||
            (safelyDetachRef(deletedFiber, nearestMountedAncestor),
            (prevHostParent = deletedFiber.stateNode),
            "function" === typeof prevHostParent.componentWillUnmount &&
              safelyCallComponentWillUnmount(
                deletedFiber,
                nearestMountedAncestor,
                prevHostParent
              ));
          recursivelyTraverseDeletionEffects(
            finishedRoot,
            nearestMountedAncestor,
            deletedFiber
          );
          break;
        case 21:
          recursivelyTraverseDeletionEffects(
            finishedRoot,
            nearestMountedAncestor,
            deletedFiber
          );
          break;
        case 22:
          offscreenSubtreeWasHidden =
            (prevHostParent = offscreenSubtreeWasHidden) ||
            null !== deletedFiber.memoizedState;
          recursivelyTraverseDeletionEffects(
            finishedRoot,
            nearestMountedAncestor,
            deletedFiber
          );
          offscreenSubtreeWasHidden = prevHostParent;
          break;
        default:
          recursivelyTraverseDeletionEffects(
            finishedRoot,
            nearestMountedAncestor,
            deletedFiber
          );
      }
      (deletedFiber.mode & ProfileMode) !== NoMode &&
        0 <= componentEffectStartTime &&
        0 <= componentEffectEndTime &&
        (componentEffectSpawnedUpdate || 0.05 < componentEffectDuration) &&
        logComponentEffect(
          deletedFiber,
          componentEffectStartTime,
          componentEffectEndTime,
          componentEffectDuration,
          componentEffectErrors
        );
      popComponentEffectStart(prevEffectStart);
      popComponentEffectDuration(prevEffectDuration);
      componentEffectErrors = prevEffectErrors;
      componentEffectSpawnedUpdate = prevEffectDidSpawnUpdate;
    }
    function commitActivityHydrationCallbacks(finishedRoot, finishedWork) {
      if (
        null === finishedWork.memoizedState &&
        ((finishedRoot = finishedWork.alternate),
        null !== finishedRoot &&
          ((finishedRoot = finishedRoot.memoizedState), null !== finishedRoot))
      ) {
        finishedRoot = finishedRoot.dehydrated;
        try {
          runWithFiberInDEV(
            finishedWork,
            commitHydratedActivityInstance,
            finishedRoot
          );
        } catch (error) {
          captureCommitPhaseError(finishedWork, finishedWork.return, error);
        }
      }
    }
    function commitSuspenseHydrationCallbacks(finishedRoot, finishedWork) {
      if (
        null === finishedWork.memoizedState &&
        ((finishedRoot = finishedWork.alternate),
        null !== finishedRoot &&
          ((finishedRoot = finishedRoot.memoizedState),
          null !== finishedRoot &&
            ((finishedRoot = finishedRoot.dehydrated), null !== finishedRoot)))
      )
        try {
          runWithFiberInDEV(
            finishedWork,
            commitHydratedSuspenseInstance,
            finishedRoot
          );
        } catch (error) {
          captureCommitPhaseError(finishedWork, finishedWork.return, error);
        }
    }
    function getRetryCache(finishedWork) {
      switch (finishedWork.tag) {
        case 31:
        case 13:
        case 19:
          var retryCache = finishedWork.stateNode;
          null === retryCache &&
            (retryCache = finishedWork.stateNode = new PossiblyWeakSet());
          return retryCache;
        case 22:
          return (
            (finishedWork = finishedWork.stateNode),
            (retryCache = finishedWork._retryCache),
            null === retryCache &&
              (retryCache = finishedWork._retryCache = new PossiblyWeakSet()),
            retryCache
          );
        default:
          throw Error(
            "Unexpected Suspense handler tag (" +
              finishedWork.tag +
              "). This is a bug in React."
          );
      }
    }
    function attachSuspenseRetryListeners(finishedWork, wakeables) {
      var retryCache = getRetryCache(finishedWork);
      wakeables.forEach(function (wakeable) {
        if (!retryCache.has(wakeable)) {
          retryCache.add(wakeable);
          if (isDevToolsPresent)
            if (null !== inProgressLanes && null !== inProgressRoot)
              restorePendingUpdaters(inProgressRoot, inProgressLanes);
            else
              throw Error(
                "Expected finished root and lanes to be set. This is a bug in React."
              );
          var retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);
          wakeable.then(retry, retry);
        }
      });
    }
    function recursivelyTraverseMutationEffects(root$jscomp$0, parentFiber) {
      var deletions = parentFiber.deletions;
      if (null !== deletions)
        for (var i = 0; i < deletions.length; i++) {
          var root = root$jscomp$0,
            returnFiber = parentFiber,
            deletedFiber = deletions[i],
            prevEffectStart = pushComponentEffectStart(),
            parent = returnFiber;
          a: for (; null !== parent; ) {
            switch (parent.tag) {
              case 27:
                if (isSingletonScope(parent.type)) {
                  hostParent = parent.stateNode;
                  hostParentIsContainer = !1;
                  break a;
                }
                break;
              case 5:
                hostParent = parent.stateNode;
                hostParentIsContainer = !1;
                break a;
              case 3:
              case 4:
                hostParent = parent.stateNode.containerInfo;
                hostParentIsContainer = !0;
                break a;
            }
            parent = parent.return;
          }
          if (null === hostParent)
            throw Error(
              "Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue."
            );
          commitDeletionEffectsOnFiber(root, returnFiber, deletedFiber);
          hostParent = null;
          hostParentIsContainer = !1;
          (deletedFiber.mode & ProfileMode) !== NoMode &&
            0 <= componentEffectStartTime &&
            0 <= componentEffectEndTime &&
            0.05 < componentEffectEndTime - componentEffectStartTime &&
            logComponentTrigger(
              deletedFiber,
              componentEffectStartTime,
              componentEffectEndTime,
              "Unmount"
            );
          popComponentEffectStart(prevEffectStart);
          root = deletedFiber;
          returnFiber = root.alternate;
          null !== returnFiber && (returnFiber.return = null);
          root.return = null;
        }
      if (parentFiber.subtreeFlags & 13886)
        for (parentFiber = parentFiber.child; null !== parentFiber; )
          commitMutationEffectsOnFiber(parentFiber, root$jscomp$0),
            (parentFiber = parentFiber.sibling);
    }
    function commitMutationEffectsOnFiber(finishedWork, root) {
      var prevEffectStart = pushComponentEffectStart(),
        prevEffectDuration = pushComponentEffectDuration(),
        prevEffectErrors = pushComponentEffectErrors(),
        prevEffectDidSpawnUpdate = pushComponentEffectDidSpawnUpdate(),
        current = finishedWork.alternate,
        flags = finishedWork.flags;
      switch (finishedWork.tag) {
        case 0:
        case 11:
        case 14:
        case 15:
          recursivelyTraverseMutationEffects(root, finishedWork);
          commitReconciliationEffects(finishedWork);
          flags & 4 &&
            (commitHookEffectListUnmount(
              Insertion | HasEffect,
              finishedWork,
              finishedWork.return
            ),
            commitHookEffectListMount(Insertion | HasEffect, finishedWork),
            commitHookLayoutUnmountEffects(
              finishedWork,
              finishedWork.return,
              Layout | HasEffect
            ));
          break;
        case 1:
          recursivelyTraverseMutationEffects(root, finishedWork);
          commitReconciliationEffects(finishedWork);
          flags & 512 &&
            (offscreenSubtreeWasHidden ||
              null === current ||
              safelyDetachRef(current, current.return));
          if (
            flags & 64 &&
            offscreenSubtreeIsHidden &&
            ((flags = finishedWork.updateQueue),
            null !== flags && ((current = flags.callbacks), null !== current))
          ) {
            var existingHiddenCallbacks = flags.shared.hiddenCallbacks;
            flags.shared.hiddenCallbacks =
              null === existingHiddenCallbacks
                ? current
                : existingHiddenCallbacks.concat(current);
          }
          break;
        case 26:
          existingHiddenCallbacks = currentHoistableRoot;
          recursivelyTraverseMutationEffects(root, finishedWork);
          commitReconciliationEffects(finishedWork);
          flags & 512 &&
            (offscreenSubtreeWasHidden ||
              null === current ||
              safelyDetachRef(current, current.return));
          if (flags & 4) {
            var currentResource =
              null !== current ? current.memoizedState : null;
            flags = finishedWork.memoizedState;
            if (null === current)
              if (null === flags)
                if (null === finishedWork.stateNode) {
                  a: {
                    flags = finishedWork.type;
                    current = finishedWork.memoizedProps;
                    existingHiddenCallbacks =
                      existingHiddenCallbacks.ownerDocument ||
                      existingHiddenCallbacks;
                    b: switch (flags) {
                      case "title":
                        currentResource =
                          existingHiddenCallbacks.getElementsByTagName(
                            "title"
                          )[0];
                        if (
                          !currentResource ||
                          currentResource[internalHoistableMarker] ||
                          currentResource[internalInstanceKey] ||
                          currentResource.namespaceURI === SVG_NAMESPACE ||
                          currentResource.hasAttribute("itemprop")
                        )
                          (currentResource =
                            existingHiddenCallbacks.createElement(flags)),
                            existingHiddenCallbacks.head.insertBefore(
                              currentResource,
                              existingHiddenCallbacks.querySelector(
                                "head > title"
                              )
                            );
                        setInitialProperties(currentResource, flags, current);
                        currentResource[internalInstanceKey] = finishedWork;
                        markNodeAsHoistable(currentResource);
                        flags = currentResource;
                        break a;
                      case "link":
                        var maybeNodes = getHydratableHoistableCache(
                          "link",
                          "href",
                          existingHiddenCallbacks
                        ).get(flags + (current.href || ""));
                        if (maybeNodes)
                          for (var i = 0; i < maybeNodes.length; i++)
                            if (
                              ((currentResource = maybeNodes[i]),
                              currentResource.getAttribute("href") ===
                                (null == current.href || "" === current.href
                                  ? null
                                  : current.href) &&
                                currentResource.getAttribute("rel") ===
                                  (null == current.rel ? null : current.rel) &&
                                currentResource.getAttribute("title") ===
                                  (null == current.title
                                    ? null
                                    : current.title) &&
                                currentResource.getAttribute("crossorigin") ===
                                  (null == current.crossOrigin
                                    ? null
                                    : current.crossOrigin))
                            ) {
                              maybeNodes.splice(i, 1);
                              break b;
                            }
                        currentResource =
                          existingHiddenCallbacks.createElement(flags);
                        setInitialProperties(currentResource, flags, current);
                        existingHiddenCallbacks.head.appendChild(
                          currentResource
                        );
                        break;
                      case "meta":
                        if (
                          (maybeNodes = getHydratableHoistableCache(
                            "meta",
                            "content",
                            existingHiddenCallbacks
                          ).get(flags + (current.content || "")))
                        )
                          for (i = 0; i < maybeNodes.length; i++)
                            if (
                              ((currentResource = maybeNodes[i]),
                              checkAttributeStringCoercion(
                                current.content,
                                "content"
                              ),
                              currentResource.getAttribute("content") ===
                                (null == current.content
                                  ? null
                                  : "" + current.content) &&
                                currentResource.getAttribute("name") ===
                                  (null == current.name
                                    ? null
                                    : current.name) &&
                                currentResource.getAttribute("property") ===
                                  (null == current.property
                                    ? null
                                    : current.property) &&
                                currentResource.getAttribute("http-equiv") ===
                                  (null == current.httpEquiv
                                    ? null
                                    : current.httpEquiv) &&
                                currentResource.getAttribute("charset") ===
                                  (null == current.charSet
                                    ? null
                                    : current.charSet))
                            ) {
                              maybeNodes.splice(i, 1);
                              break b;
                            }
                        currentResource =
                          existingHiddenCallbacks.createElement(flags);
                        setInitialProperties(currentResource, flags, current);
                        existingHiddenCallbacks.head.appendChild(
                          currentResource
                        );
                        break;
                      default:
                        throw Error(
                          'getNodesForType encountered a type it did not expect: "' +
                            flags +
                            '". This is a bug in React.'
                        );
                    }
                    currentResource[internalInstanceKey] = finishedWork;
                    markNodeAsHoistable(currentResource);
                    flags = currentResource;
                  }
                  finishedWork.stateNode = flags;
                } else
                  mountHoistable(
                    existingHiddenCallbacks,
                    finishedWork.type,
                    finishedWork.stateNode
                  );
              else
                finishedWork.stateNode = acquireResource(
                  existingHiddenCallbacks,
                  flags,
                  finishedWork.memoizedProps
                );
            else
              currentResource !== flags
                ? (null === currentResource
                    ? null !== current.stateNode &&
                      ((current = current.stateNode),
                      current.parentNode.removeChild(current))
                    : currentResource.count--,
                  null === flags
                    ? mountHoistable(
                        existingHiddenCallbacks,
                        finishedWork.type,
                        finishedWork.stateNode
                      )
                    : acquireResource(
                        existingHiddenCallbacks,
                        flags,
                        finishedWork.memoizedProps
                      ))
                : null === flags &&
                  null !== finishedWork.stateNode &&
                  commitHostUpdate(
                    finishedWork,
                    finishedWork.memoizedProps,
                    current.memoizedProps
                  );
          }
          break;
        case 27:
          recursivelyTraverseMutationEffects(root, finishedWork);
          commitReconciliationEffects(finishedWork);
          flags & 512 &&
            (offscreenSubtreeWasHidden ||
              null === current ||
              safelyDetachRef(current, current.return));
          null !== current &&
            flags & 4 &&
            commitHostUpdate(
              finishedWork,
              finishedWork.memoizedProps,
              current.memoizedProps
            );
          break;
        case 5:
          recursivelyTraverseMutationEffects(root, finishedWork);
          commitReconciliationEffects(finishedWork);
          flags & 512 &&
            (offscreenSubtreeWasHidden ||
              null === current ||
              safelyDetachRef(current, current.return));
          if (finishedWork.flags & 32) {
            existingHiddenCallbacks = finishedWork.stateNode;
            try {
              runWithFiberInDEV(
                finishedWork,
                resetTextContent,
                existingHiddenCallbacks
              );
            } catch (error) {
              captureCommitPhaseError(finishedWork, finishedWork.return, error);
            }
          }
          flags & 4 &&
            null != finishedWork.stateNode &&
            ((existingHiddenCallbacks = finishedWork.memoizedProps),
            commitHostUpdate(
              finishedWork,
              existingHiddenCallbacks,
              null !== current ? current.memoizedProps : existingHiddenCallbacks
            ));
          flags & 1024 &&
            ((needsFormReset = !0),
            "form" !== finishedWork.type &&
              console.error(
                "Unexpected host component type. Expected a form. This is a bug in React."
              ));
          break;
        case 6:
          recursivelyTraverseMutationEffects(root, finishedWork);
          commitReconciliationEffects(finishedWork);
          if (flags & 4) {
            if (null === finishedWork.stateNode)
              throw Error(
                "This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue."
              );
            flags = finishedWork.memoizedProps;
            current = null !== current ? current.memoizedProps : flags;
            existingHiddenCallbacks = finishedWork.stateNode;
            try {
              runWithFiberInDEV(
                finishedWork,
                commitTextUpdate,
                existingHiddenCallbacks,
                current,
                flags
              );
            } catch (error) {
              captureCommitPhaseError(finishedWork, finishedWork.return, error);
            }
          }
          break;
        case 3:
          existingHiddenCallbacks = pushNestedEffectDurations();
          tagCaches = null;
          currentResource = currentHoistableRoot;
          currentHoistableRoot = getHoistableRoot(root.containerInfo);
          recursivelyTraverseMutationEffects(root, finishedWork);
          currentHoistableRoot = currentResource;
          commitReconciliationEffects(finishedWork);
          if (
            flags & 4 &&
            null !== current &&
            current.memoizedState.isDehydrated
          )
            try {
              runWithFiberInDEV(
                finishedWork,
                commitHydratedContainer,
                root.containerInfo
              );
            } catch (error) {
              captureCommitPhaseError(finishedWork, finishedWork.return, error);
            }
          needsFormReset &&
            ((needsFormReset = !1), recursivelyResetForms(finishedWork));
          root.effectDuration += popNestedEffectDurations(
            existingHiddenCallbacks
          );
          break;
        case 4:
          flags = currentHoistableRoot;
          currentHoistableRoot = getHoistableRoot(
            finishedWork.stateNode.containerInfo
          );
          recursivelyTraverseMutationEffects(root, finishedWork);
          commitReconciliationEffects(finishedWork);
          currentHoistableRoot = flags;
          break;
        case 12:
          flags = pushNestedEffectDurations();
          recursivelyTraverseMutationEffects(root, finishedWork);
          commitReconciliationEffects(finishedWork);
          finishedWork.stateNode.effectDuration +=
            bubbleNestedEffectDurations(flags);
          break;
        case 31:
          recursivelyTraverseMutationEffects(root, finishedWork);
          commitReconciliationEffects(finishedWork);
          flags & 4 &&
            ((flags = finishedWork.updateQueue),
            null !== flags &&
              ((finishedWork.updateQueue = null),
              attachSuspenseRetryListeners(finishedWork, flags)));
          break;
        case 13:
          recursivelyTraverseMutationEffects(root, finishedWork);
          commitReconciliationEffects(finishedWork);
          finishedWork.child.flags & 8192 &&
            (null !== finishedWork.memoizedState) !==
              (null !== current && null !== current.memoizedState) &&
            (globalMostRecentFallbackTime = now$1());
          flags & 4 &&
            ((flags = finishedWork.updateQueue),
            null !== flags &&
              ((finishedWork.updateQueue = null),
              attachSuspenseRetryListeners(finishedWork, flags)));
          break;
        case 22:
          existingHiddenCallbacks = null !== finishedWork.memoizedState;
          var wasHidden = null !== current && null !== current.memoizedState,
            prevOffscreenSubtreeIsHidden = offscreenSubtreeIsHidden,
            prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
          offscreenSubtreeIsHidden =
            prevOffscreenSubtreeIsHidden || existingHiddenCallbacks;
          offscreenSubtreeWasHidden =
            prevOffscreenSubtreeWasHidden || wasHidden;
          recursivelyTraverseMutationEffects(root, finishedWork);
          offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
          offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden;
          wasHidden &&
            !existingHiddenCallbacks &&
            !prevOffscreenSubtreeIsHidden &&
            !prevOffscreenSubtreeWasHidden &&
            (finishedWork.mode & ProfileMode) !== NoMode &&
            0 <= componentEffectStartTime &&
            0 <= componentEffectEndTime &&
            0.05 < componentEffectEndTime - componentEffectStartTime &&
            logComponentReappeared(
              finishedWork,
              componentEffectStartTime,
              componentEffectEndTime
            );
          commitReconciliationEffects(finishedWork);
          if (flags & 8192)
            a: for (
              root = finishedWork.stateNode,
                root._visibility = existingHiddenCallbacks
                  ? root._visibility & ~OffscreenVisible
                  : root._visibility | OffscreenVisible,
                !existingHiddenCallbacks ||
                  null === current ||
                  wasHidden ||
                  offscreenSubtreeIsHidden ||
                  offscreenSubtreeWasHidden ||
                  (recursivelyTraverseDisappearLayoutEffects(finishedWork),
                  (finishedWork.mode & ProfileMode) !== NoMode &&
                    0 <= componentEffectStartTime &&
                    0 <= componentEffectEndTime &&
                    0.05 < componentEffectEndTime - componentEffectStartTime &&
                    logComponentTrigger(
                      finishedWork,
                      componentEffectStartTime,
                      componentEffectEndTime,
                      "Disconnect"
                    )),
                current = null,
                root = finishedWork;
              ;

            ) {
              if (5 === root.tag || 26 === root.tag) {
                if (null === current) {
                  wasHidden = current = root;
                  try {
                    (currentResource = wasHidden.stateNode),
                      existingHiddenCallbacks
                        ? runWithFiberInDEV(
                            wasHidden,
                            hideInstance,
                            currentResource
                          )
                        : runWithFiberInDEV(
                            wasHidden,
                            unhideInstance,
                            wasHidden.stateNode,
                            wasHidden.memoizedProps
                          );
                  } catch (error) {
                    captureCommitPhaseError(wasHidden, wasHidden.return, error);
                  }
                }
              } else if (6 === root.tag) {
                if (null === current) {
                  wasHidden = root;
                  try {
                    (maybeNodes = wasHidden.stateNode),
                      existingHiddenCallbacks
                        ? runWithFiberInDEV(
                            wasHidden,
                            hideTextInstance,
                            maybeNodes
                          )
                        : runWithFiberInDEV(
                            wasHidden,
                            unhideTextInstance,
                            maybeNodes,
                            wasHidden.memoizedProps
                          );
                  } catch (error) {
                    captureCommitPhaseError(wasHidden, wasHidden.return, error);
                  }
                }
              } else if (18 === root.tag) {
                if (null === current) {
                  wasHidden = root;
                  try {
                    (i = wasHidden.stateNode),
                      existingHiddenCallbacks
                        ? runWithFiberInDEV(
                            wasHidden,
                            hideDehydratedBoundary,
                            i
                          )
                        : runWithFiberInDEV(
                            wasHidden,
                            unhideDehydratedBoundary,
                            wasHidden.stateNode
                          );
                  } catch (error) {
                    captureCommitPhaseError(wasHidden, wasHidden.return, error);
                  }
                }
              } else if (
                ((22 !== root.tag && 23 !== root.tag) ||
                  null === root.memoizedState ||
                  root === finishedWork) &&
                null !== root.child
              ) {
                root.child.return = root;
                root = root.child;
                continue;
              }
              if (root === finishedWork) break a;
              for (; null === root.sibling; ) {
                if (null === root.return || root.return === finishedWork)
                  break a;
                current === root && (current = null);
                root = root.return;
              }
              current === root && (current = null);
              root.sibling.return = root.return;
              root = root.sibling;
            }
          flags & 4 &&
            ((flags = finishedWork.updateQueue),
            null !== flags &&
              ((current = flags.retryQueue),
              null !== current &&
                ((flags.retryQueue = null),
                attachSuspenseRetryListeners(finishedWork, current))));
          break;
        case 19:
          recursivelyTraverseMutationEffects(root, finishedWork);
          commitReconciliationEffects(finishedWork);
          flags & 4 &&
            ((flags = finishedWork.updateQueue),
            null !== flags &&
              ((finishedWork.updateQueue = null),
              attachSuspenseRetryListeners(finishedWork, flags)));
          break;
        case 30:
          break;
        case 21:
          break;
        default:
          recursivelyTraverseMutationEffects(root, finishedWork),
            commitReconciliationEffects(finishedWork);
      }
      (finishedWork.mode & ProfileMode) !== NoMode &&
        0 <= componentEffectStartTime &&
        0 <= componentEffectEndTime &&
        ((componentEffectSpawnedUpdate || 0.05 < componentEffectDuration) &&
          logComponentEffect(
            finishedWork,
            componentEffectStartTime,
            componentEffectEndTime,
            componentEffectDuration,
            componentEffectErrors
          ),
        null === finishedWork.alternate &&
          null !== finishedWork.return &&
          null !== finishedWork.return.alternate &&
          0.05 < componentEffectEndTime - componentEffectStartTime &&
          (isHydratingParent(
            finishedWork.return.alternate,
            finishedWork.return
          ) ||
            logComponentTrigger(
              finishedWork,
              componentEffectStartTime,
              componentEffectEndTime,
              "Mount"
            )));
      popComponentEffectStart(prevEffectStart);
      popComponentEffectDuration(prevEffectDuration);
      componentEffectErrors = prevEffectErrors;
      componentEffectSpawnedUpdate = prevEffectDidSpawnUpdate;
    }
    function commitReconciliationEffects(finishedWork) {
      var flags = finishedWork.flags;
      if (flags & 2) {
        try {
          runWithFiberInDEV(finishedWork, commitPlacement, finishedWork);
        } catch (error) {
          captureCommitPhaseError(finishedWork, finishedWork.return, error);
        }
        finishedWork.flags &= -3;
      }
      flags & 4096 && (finishedWork.flags &= -4097);
    }
    function recursivelyResetForms(parentFiber) {
      if (parentFiber.subtreeFlags & 1024)
        for (parentFiber = parentFiber.child; null !== parentFiber; ) {
          var fiber = parentFiber;
          recursivelyResetForms(fiber);
          5 === fiber.tag && fiber.flags & 1024 && fiber.stateNode.reset();
          parentFiber = parentFiber.sibling;
        }
    }
    function recursivelyTraverseLayoutEffects(root, parentFiber) {
      if (parentFiber.subtreeFlags & 8772)
        for (parentFiber = parentFiber.child; null !== parentFiber; )
          commitLayoutEffectOnFiber(root, parentFiber.alternate, parentFiber),
            (parentFiber = parentFiber.sibling);
    }
    function disappearLayoutEffects(finishedWork) {
      var prevEffectStart = pushComponentEffectStart(),
        prevEffectDuration = pushComponentEffectDuration(),
        prevEffectErrors = pushComponentEffectErrors(),
        prevEffectDidSpawnUpdate = pushComponentEffectDidSpawnUpdate();
      switch (finishedWork.tag) {
        case 0:
        case 11:
        case 14:
        case 15:
          commitHookLayoutUnmountEffects(
            finishedWork,
            finishedWork.return,
            Layout
          );
          recursivelyTraverseDisappearLayoutEffects(finishedWork);
          break;
        case 1:
          safelyDetachRef(finishedWork, finishedWork.return);
          var instance = finishedWork.stateNode;
          "function" === typeof instance.componentWillUnmount &&
            safelyCallComponentWillUnmount(
              finishedWork,
              finishedWork.return,
              instance
            );
          recursivelyTraverseDisappearLayoutEffects(finishedWork);
          break;
        case 27:
          runWithFiberInDEV(
            finishedWork,
            releaseSingletonInstance,
            finishedWork.stateNode
          );
        case 26:
        case 5:
          safelyDetachRef(finishedWork, finishedWork.return);
          recursivelyTraverseDisappearLayoutEffects(finishedWork);
          break;
        case 22:
          null === finishedWork.memoizedState &&
            recursivelyTraverseDisappearLayoutEffects(finishedWork);
          break;
        case 30:
          recursivelyTraverseDisappearLayoutEffects(finishedWork);
          break;
        default:
          recursivelyTraverseDisappearLayoutEffects(finishedWork);
      }
      (finishedWork.mode & ProfileMode) !== NoMode &&
        0 <= componentEffectStartTime &&
        0 <= componentEffectEndTime &&
        (componentEffectSpawnedUpdate || 0.05 < componentEffectDuration) &&
        logComponentEffect(
          finishedWork,
          componentEffectStartTime,
          componentEffectEndTime,
          componentEffectDuration,
          componentEffectErrors
        );
      popComponentEffectStart(prevEffectStart);
      popComponentEffectDuration(prevEffectDuration);
      componentEffectErrors = prevEffectErrors;
      componentEffectSpawnedUpdate = prevEffectDidSpawnUpdate;
    }
    function recursivelyTraverseDisappearLayoutEffects(parentFiber) {
      for (parentFiber = parentFiber.child; null !== parentFiber; )
        disappearLayoutEffects(parentFiber),
          (parentFiber = parentFiber.sibling);
    }
    function reappearLayoutEffects(
      finishedRoot,
      current,
      finishedWork,
      includeWorkInProgressEffects
    ) {
      var prevEffectStart = pushComponentEffectStart(),
        prevEffectDuration = pushComponentEffectDuration(),
        prevEffectErrors = pushComponentEffectErrors(),
        prevEffectDidSpawnUpdate = pushComponentEffectDidSpawnUpdate(),
        flags = finishedWork.flags;
      switch (finishedWork.tag) {
        case 0:
        case 11:
        case 15:
          recursivelyTraverseReappearLayoutEffects(
            finishedRoot,
            finishedWork,
            includeWorkInProgressEffects
          );
          commitHookLayoutEffects(finishedWork, Layout);
          break;
        case 1:
          recursivelyTraverseReappearLayoutEffects(
            finishedRoot,
            finishedWork,
            includeWorkInProgressEffects
          );
          current = finishedWork.stateNode;
          "function" === typeof current.componentDidMount &&
            runWithFiberInDEV(
              finishedWork,
              callComponentDidMountInDEV,
              finishedWork,
              current
            );
          current = finishedWork.updateQueue;
          if (null !== current) {
            finishedRoot = finishedWork.stateNode;
            try {
              runWithFiberInDEV(
                finishedWork,
                commitHiddenCallbacks,
                current,
                finishedRoot
              );
            } catch (error) {
              captureCommitPhaseError(finishedWork, finishedWork.return, error);
            }
          }
          includeWorkInProgressEffects &&
            flags & 64 &&
            commitClassCallbacks(finishedWork);
          safelyAttachRef(finishedWork, finishedWork.return);
          break;
        case 27:
          commitHostSingletonAcquisition(finishedWork);
        case 26:
        case 5:
          recursivelyTraverseReappearLayoutEffects(
            finishedRoot,
            finishedWork,
            includeWorkInProgressEffects
          );
          includeWorkInProgressEffects &&
            null === current &&
            flags & 4 &&
            commitHostMount(finishedWork);
          safelyAttachRef(finishedWork, finishedWork.return);
          break;
        case 12:
          if (includeWorkInProgressEffects && flags & 4) {
            flags = pushNestedEffectDurations();
            recursivelyTraverseReappearLayoutEffects(
              finishedRoot,
              finishedWork,
              includeWorkInProgressEffects
            );
            includeWorkInProgressEffects = finishedWork.stateNode;
            includeWorkInProgressEffects.effectDuration +=
              bubbleNestedEffectDurations(flags);
            try {
              runWithFiberInDEV(
                finishedWork,
                commitProfiler,
                finishedWork,
                current,
                commitStartTime,
                includeWorkInProgressEffects.effectDuration
              );
            } catch (error) {
              captureCommitPhaseError(finishedWork, finishedWork.return, error);
            }
          } else
            recursivelyTraverseReappearLayoutEffects(
              finishedRoot,
              finishedWork,
              includeWorkInProgressEffects
            );
          break;
        case 31:
          recursivelyTraverseReappearLayoutEffects(
            finishedRoot,
            finishedWork,
            includeWorkInProgressEffects
          );
          includeWorkInProgressEffects &&
            flags & 4 &&
            commitActivityHydrationCallbacks(finishedRoot, finishedWork);
          break;
        case 13:
          recursivelyTraverseReappearLayoutEffects(
            finishedRoot,
            finishedWork,
            includeWorkInProgressEffects
          );
          includeWorkInProgressEffects &&
            flags & 4 &&
            commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);
          break;
        case 22:
          null === finishedWork.memoizedState &&
            recursivelyTraverseReappearLayoutEffects(
              finishedRoot,
              finishedWork,
              includeWorkInProgressEffects
            );
          safelyAttachRef(finishedWork, finishedWork.return);
          break;
        case 30:
          break;
        default:
          recursivelyTraverseReappearLayoutEffects(
            finishedRoot,
            finishedWork,
            includeWorkInProgressEffects
          );
      }
      (finishedWork.mode & ProfileMode) !== NoMode &&
        0 <= componentEffectStartTime &&
        0 <= componentEffectEndTime &&
        (componentEffectSpawnedUpdate || 0.05 < componentEffectDuration) &&
        logComponentEffect(
          finishedWork,
          componentEffectStartTime,
          componentEffectEndTime,
          componentEffectDuration,
          componentEffectErrors
        );
      popComponentEffectStart(prevEffectStart);
      popComponentEffectDuration(prevEffectDuration);
      componentEffectErrors = prevEffectErrors;
      componentEffectSpawnedUpdate = prevEffectDidSpawnUpdate;
    }
    function recursivelyTraverseReappearLayoutEffects(
      finishedRoot,
      parentFiber,
      includeWorkInProgressEffects
    ) {
      includeWorkInProgressEffects =
        includeWorkInProgressEffects && 0 !== (parentFiber.subtreeFlags & 8772);
      for (parentFiber = parentFiber.child; null !== parentFiber; )
        reappearLayoutEffects(
          finishedRoot,
          parentFiber.alternate,
          parentFiber,
          includeWorkInProgressEffects
        ),
          (parentFiber = parentFiber.sibling);
    }
    function commitOffscreenPassiveMountEffects(current, finishedWork) {
      var previousCache = null;
      null !== current &&
        null !== current.memoizedState &&
        null !== current.memoizedState.cachePool &&
        (previousCache = current.memoizedState.cachePool.pool);
      current = null;
      null !== finishedWork.memoizedState &&
        null !== finishedWork.memoizedState.cachePool &&
        (current = finishedWork.memoizedState.cachePool.pool);
      current !== previousCache &&
        (null != current && retainCache(current),
        null != previousCache && releaseCache(previousCache));
    }
    function commitCachePassiveMountEffect(current, finishedWork) {
      current = null;
      null !== finishedWork.alternate &&
        (current = finishedWork.alternate.memoizedState.cache);
      finishedWork = finishedWork.memoizedState.cache;
      finishedWork !== current &&
        (retainCache(finishedWork), null != current && releaseCache(current));
    }
    function recursivelyTraversePassiveMountEffects(
      root,
      parentFiber,
      committedLanes,
      committedTransitions,
      endTime
    ) {
      if (
        parentFiber.subtreeFlags & 10256 ||
        (0 !== parentFiber.actualDuration &&
          (null === parentFiber.alternate ||
            parentFiber.alternate.child !== parentFiber.child))
      )
        for (parentFiber = parentFiber.child; null !== parentFiber; ) {
          var nextSibling = parentFiber.sibling;
          commitPassiveMountOnFiber(
            root,
            parentFiber,
            committedLanes,
            committedTransitions,
            null !== nextSibling ? nextSibling.actualStartTime : endTime
          );
          parentFiber = nextSibling;
        }
    }
    function commitPassiveMountOnFiber(
      finishedRoot,
      finishedWork,
      committedLanes,
      committedTransitions,
      endTime
    ) {
      var prevEffectStart = pushComponentEffectStart(),
        prevEffectDuration = pushComponentEffectDuration(),
        prevEffectErrors = pushComponentEffectErrors(),
        prevEffectDidSpawnUpdate = pushComponentEffectDidSpawnUpdate(),
        prevDeepEquality = alreadyWarnedForDeepEquality,
        flags = finishedWork.flags;
      switch (finishedWork.tag) {
        case 0:
        case 11:
        case 15:
          (finishedWork.mode & ProfileMode) !== NoMode &&
            0 < finishedWork.actualStartTime &&
            0 !== (finishedWork.flags & 1) &&
            logComponentRender(
              finishedWork,
              finishedWork.actualStartTime,
              endTime,
              inHydratedSubtree,
              committedLanes
            );
          recursivelyTraversePassiveMountEffects(
            finishedRoot,
            finishedWork,
            committedLanes,
            committedTransitions,
            endTime
          );
          flags & 2048 &&
            commitHookPassiveMountEffects(finishedWork, Passive | HasEffect);
          break;
        case 1:
          (finishedWork.mode & ProfileMode) !== NoMode &&
            0 < finishedWork.actualStartTime &&
            (0 !== (finishedWork.flags & 128)
              ? logComponentErrored(
                  finishedWork,
                  finishedWork.actualStartTime,
                  endTime,
                  []
                )
              : 0 !== (finishedWork.flags & 1) &&
                logComponentRender(
                  finishedWork,
                  finishedWork.actualStartTime,
                  endTime,
                  inHydratedSubtree,
                  committedLanes
                ));
          recursivelyTraversePassiveMountEffects(
            finishedRoot,
            finishedWork,
            committedLanes,
            committedTransitions,
            endTime
          );
          break;
        case 3:
          var prevProfilerEffectDuration = pushNestedEffectDurations(),
            wasInHydratedSubtree = inHydratedSubtree;
          inHydratedSubtree =
            null !== finishedWork.alternate &&
            finishedWork.alternate.memoizedState.isDehydrated &&
            0 === (finishedWork.flags & 256);
          recursivelyTraversePassiveMountEffects(
            finishedRoot,
            finishedWork,
            committedLanes,
            committedTransitions,
            endTime
          );
          inHydratedSubtree = wasInHydratedSubtree;
          flags & 2048 &&
            ((committedLanes = null),
            null !== finishedWork.alternate &&
              (committedLanes = finishedWork.alternate.memoizedState.cache),
            (committedTransitions = finishedWork.memoizedState.cache),
            committedTransitions !== committedLanes &&
              (retainCache(committedTransitions),
              null != committedLanes && releaseCache(committedLanes)));
          finishedRoot.passiveEffectDuration += popNestedEffectDurations(
            prevProfilerEffectDuration
          );
          break;
        case 12:
          if (flags & 2048) {
            flags = pushNestedEffectDurations();
            recursivelyTraversePassiveMountEffects(
              finishedRoot,
              finishedWork,
              committedLanes,
              committedTransitions,
              endTime
            );
            finishedRoot = finishedWork.stateNode;
            finishedRoot.passiveEffectDuration +=
              bubbleNestedEffectDurations(flags);
            try {
              runWithFiberInDEV(
                finishedWork,
                commitProfilerPostCommitImpl,
                finishedWork,
                finishedWork.alternate,
                commitStartTime,
                finishedRoot.passiveEffectDuration
              );
            } catch (error) {
              captureCommitPhaseError(finishedWork, finishedWork.return, error);
            }
          } else
            recursivelyTraversePassiveMountEffects(
              finishedRoot,
              finishedWork,
              committedLanes,
              committedTransitions,
              endTime
            );
          break;
        case 31:
          flags = inHydratedSubtree;
          prevProfilerEffectDuration =
            null !== finishedWork.alternate
              ? finishedWork.alternate.memoizedState
              : null;
          wasInHydratedSubtree = finishedWork.memoizedState;
          null !== prevProfilerEffectDuration && null === wasInHydratedSubtree
            ? ((wasInHydratedSubtree = finishedWork.deletions),
              null !== wasInHydratedSubtree &&
              0 < wasInHydratedSubtree.length &&
              18 === wasInHydratedSubtree[0].tag
                ? ((inHydratedSubtree = !1),
                  (prevProfilerEffectDuration =
                    prevProfilerEffectDuration.hydrationErrors),
                  null !== prevProfilerEffectDuration &&
                    logComponentErrored(
                      finishedWork,
                      finishedWork.actualStartTime,
                      endTime,
                      prevProfilerEffectDuration
                    ))
                : (inHydratedSubtree = !0))
            : (inHydratedSubtree = !1);
          recursivelyTraversePassiveMountEffects(
            finishedRoot,
            finishedWork,
            committedLanes,
            committedTransitions,
            endTime
          );
          inHydratedSubtree = flags;
          break;
        case 13:
          flags = inHydratedSubtree;
          prevProfilerEffectDuration =
            null !== finishedWork.alternate
              ? finishedWork.alternate.memoizedState
              : null;
          wasInHydratedSubtree = finishedWork.memoizedState;
          null === prevProfilerEffectDuration ||
          null === prevProfilerEffectDuration.dehydrated ||
          (null !== wasInHydratedSubtree &&
            null !== wasInHydratedSubtree.dehydrated)
            ? (inHydratedSubtree = !1)
            : ((wasInHydratedSubtree = finishedWork.deletions),
              null !== wasInHydratedSubtree &&
              0 < wasInHydratedSubtree.length &&
              18 === wasInHydratedSubtree[0].tag
                ? ((inHydratedSubtree = !1),
                  (prevProfilerEffectDuration =
                    prevProfilerEffectDuration.hydrationErrors),
                  null !== prevProfilerEffectDuration &&
                    logComponentErrored(
                      finishedWork,
                      finishedWork.actualStartTime,
                      endTime,
                      prevProfilerEffectDuration
                    ))
                : (inHydratedSubtree = !0));
          recursivelyTraversePassiveMountEffects(
            finishedRoot,
            finishedWork,
            committedLanes,
            committedTransitions,
            endTime
          );
          inHydratedSubtree = flags;
          break;
        case 23:
          break;
        case 22:
          wasInHydratedSubtree = finishedWork.stateNode;
          prevProfilerEffectDuration = finishedWork.alternate;
          null !== finishedWork.memoizedState
            ? wasInHydratedSubtree._visibility &
              OffscreenPassiveEffectsConnected
              ? recursivelyTraversePassiveMountEffects(
                  finishedRoot,
                  finishedWork,
                  committedLanes,
                  committedTransitions,
                  endTime
                )
              : recursivelyTraverseAtomicPassiveEffects(
                  finishedRoot,
                  finishedWork,
                  committedLanes,
                  committedTransitions,
                  endTime
                )
            : wasInHydratedSubtree._visibility &
                OffscreenPassiveEffectsConnected
              ? recursivelyTraversePassiveMountEffects(
                  finishedRoot,
                  finishedWork,
                  committedLanes,
                  committedTransitions,
                  endTime
                )
              : ((wasInHydratedSubtree._visibility |=
                  OffscreenPassiveEffectsConnected),
                recursivelyTraverseReconnectPassiveEffects(
                  finishedRoot,
                  finishedWork,
                  committedLanes,
                  committedTransitions,
                  0 !== (finishedWork.subtreeFlags & 10256) ||
                    (0 !== finishedWork.actualDuration &&
                      (null === finishedWork.alternate ||
                        finishedWork.alternate.child !== finishedWork.child)),
                  endTime
                ),
                (finishedWork.mode & ProfileMode) === NoMode ||
                  inHydratedSubtree ||
                  ((finishedRoot = finishedWork.actualStartTime),
                  0 <= finishedRoot &&
                    0.05 < endTime - finishedRoot &&
                    logComponentReappeared(finishedWork, finishedRoot, endTime),
                  0 <= componentEffectStartTime &&
                    0 <= componentEffectEndTime &&
                    0.05 < componentEffectEndTime - componentEffectStartTime &&
                    logComponentReappeared(
                      finishedWork,
                      componentEffectStartTime,
                      componentEffectEndTime
                    )));
          flags & 2048 &&
            commitOffscreenPassiveMountEffects(
              prevProfilerEffectDuration,
              finishedWork
            );
          break;
        case 24:
          recursivelyTraversePassiveMountEffects(
            finishedRoot,
            finishedWork,
            committedLanes,
            committedTransitions,
            endTime
          );
          flags & 2048 &&
            commitCachePassiveMountEffect(finishedWork.alternate, finishedWork);
          break;
        default:
          recursivelyTraversePassiveMountEffects(
            finishedRoot,
            finishedWork,
            committedLanes,
            committedTransitions,
            endTime
          );
      }
      if ((finishedWork.mode & ProfileMode) !== NoMode) {
        if (
          (finishedRoot =
            !inHydratedSubtree &&
            null === finishedWork.alternate &&
            null !== finishedWork.return &&
            null !== finishedWork.return.alternate)
        )
          (committedLanes = finishedWork.actualStartTime),
            0 <= committedLanes &&
              0.05 < endTime - committedLanes &&
              logComponentTrigger(
                finishedWork,
                committedLanes,
                endTime,
                "Mount"
              );
        0 <= componentEffectStartTime &&
          0 <= componentEffectEndTime &&
          ((componentEffectSpawnedUpdate || 0.05 < componentEffectDuration) &&
            logComponentEffect(
              finishedWork,
              componentEffectStartTime,
              componentEffectEndTime,
              componentEffectDuration,
              componentEffectErrors
            ),
          finishedRoot &&
            0.05 < componentEffectEndTime - componentEffectStartTime &&
            logComponentTrigger(
              finishedWork,
              componentEffectStartTime,
              componentEffectEndTime,
              "Mount"
            ));
      }
      popComponentEffectStart(prevEffectStart);
      popComponentEffectDuration(prevEffectDuration);
      componentEffectErrors = prevEffectErrors;
      componentEffectSpawnedUpdate = prevEffectDidSpawnUpdate;
      alreadyWarnedForDeepEquality = prevDeepEquality;
    }
    function recursivelyTraverseReconnectPassiveEffects(
      finishedRoot,
      parentFiber,
      committedLanes,
      committedTransitions,
      includeWorkInProgressEffects,
      endTime
    ) {
      includeWorkInProgressEffects =
        includeWorkInProgressEffects &&
        (0 !== (parentFiber.subtreeFlags & 10256) ||
          (0 !== parentFiber.actualDuration &&
            (null === parentFiber.alternate ||
              parentFiber.alternate.child !== parentFiber.child)));
      for (parentFiber = parentFiber.child; null !== parentFiber; ) {
        var nextSibling = parentFiber.sibling;
        reconnectPassiveEffects(
          finishedRoot,
          parentFiber,
          committedLanes,
          committedTransitions,
          includeWorkInProgressEffects,
          null !== nextSibling ? nextSibling.actualStartTime : endTime
        );
        parentFiber = nextSibling;
      }
    }
    function reconnectPassiveEffects(
      finishedRoot,
      finishedWork,
      committedLanes,
      committedTransitions,
      includeWorkInProgressEffects,
      endTime
    ) {
      var prevEffectStart = pushComponentEffectStart(),
        prevEffectDuration = pushComponentEffectDuration(),
        prevEffectErrors = pushComponentEffectErrors(),
        prevEffectDidSpawnUpdate = pushComponentEffectDidSpawnUpdate(),
        prevDeepEquality = alreadyWarnedForDeepEquality;
      includeWorkInProgressEffects &&
        (finishedWork.mode & ProfileMode) !== NoMode &&
        0 < finishedWork.actualStartTime &&
        0 !== (finishedWork.flags & 1) &&
        logComponentRender(
          finishedWork,
          finishedWork.actualStartTime,
          endTime,
          inHydratedSubtree,
          committedLanes
        );
      var flags = finishedWork.flags;
      switch (finishedWork.tag) {
        case 0:
        case 11:
        case 15:
          recursivelyTraverseReconnectPassiveEffects(
            finishedRoot,
            finishedWork,
            committedLanes,
            committedTransitions,
            includeWorkInProgressEffects,
            endTime
          );
          commitHookPassiveMountEffects(finishedWork, Passive);
          break;
        case 23:
          break;
        case 22:
          var _instance2 = finishedWork.stateNode;
          null !== finishedWork.memoizedState
            ? _instance2._visibility & OffscreenPassiveEffectsConnected
              ? recursivelyTraverseReconnectPassiveEffects(
                  finishedRoot,
                  finishedWork,
                  committedLanes,
                  committedTransitions,
                  includeWorkInProgressEffects,
                  endTime
                )
              : recursivelyTraverseAtomicPassiveEffects(
                  finishedRoot,
                  finishedWork,
                  committedLanes,
                  committedTransitions,
                  endTime
                )
            : ((_instance2._visibility |= OffscreenPassiveEffectsConnected),
              recursivelyTraverseReconnectPassiveEffects(
                finishedRoot,
                finishedWork,
                committedLanes,
                committedTransitions,
                includeWorkInProgressEffects,
                endTime
              ));
          includeWorkInProgressEffects &&
            flags & 2048 &&
            commitOffscreenPassiveMountEffects(
              finishedWork.alternate,
              finishedWork
            );
          break;
        case 24:
          recursivelyTraverseReconnectPassiveEffects(
            finishedRoot,
            finishedWork,
            committedLanes,
            committedTransitions,
            includeWorkInProgressEffects,
            endTime
          );
          includeWorkInProgressEffects &&
            flags & 2048 &&
            commitCachePassiveMountEffect(finishedWork.alternate, finishedWork);
          break;
        default:
          recursivelyTraverseReconnectPassiveEffects(
            finishedRoot,
            finishedWork,
            committedLanes,
            committedTransitions,
            includeWorkInProgressEffects,
            endTime
          );
      }
      (finishedWork.mode & ProfileMode) !== NoMode &&
        0 <= componentEffectStartTime &&
        0 <= componentEffectEndTime &&
        (componentEffectSpawnedUpdate || 0.05 < componentEffectDuration) &&
        logComponentEffect(
          finishedWork,
          componentEffectStartTime,
          componentEffectEndTime,
          componentEffectDuration,
          componentEffectErrors
        );
      popComponentEffectStart(prevEffectStart);
      popComponentEffectDuration(prevEffectDuration);
      componentEffectErrors = prevEffectErrors;
      componentEffectSpawnedUpdate = prevEffectDidSpawnUpdate;
      alreadyWarnedForDeepEquality = prevDeepEquality;
    }
    function recursivelyTraverseAtomicPassiveEffects(
      finishedRoot$jscomp$0,
      parentFiber,
      committedLanes$jscomp$0,
      committedTransitions$jscomp$0,
      endTime$jscomp$0
    ) {
      if (
        parentFiber.subtreeFlags & 10256 ||
        (0 !== parentFiber.actualDuration &&
          (null === parentFiber.alternate ||
            parentFiber.alternate.child !== parentFiber.child))
      )
        for (var child = parentFiber.child; null !== child; ) {
          parentFiber = child.sibling;
          var finishedRoot = finishedRoot$jscomp$0,
            committedLanes = committedLanes$jscomp$0,
            committedTransitions = committedTransitions$jscomp$0,
            endTime =
              null !== parentFiber
                ? parentFiber.actualStartTime
                : endTime$jscomp$0,
            prevDeepEquality = alreadyWarnedForDeepEquality;
          (child.mode & ProfileMode) !== NoMode &&
            0 < child.actualStartTime &&
            0 !== (child.flags & 1) &&
            logComponentRender(
              child,
              child.actualStartTime,
              endTime,
              inHydratedSubtree,
              committedLanes
            );
          var flags = child.flags;
          switch (child.tag) {
            case 22:
              recursivelyTraverseAtomicPassiveEffects(
                finishedRoot,
                child,
                committedLanes,
                committedTransitions,
                endTime
              );
              flags & 2048 &&
                commitOffscreenPassiveMountEffects(child.alternate, child);
              break;
            case 24:
              recursivelyTraverseAtomicPassiveEffects(
                finishedRoot,
                child,
                committedLanes,
                committedTransitions,
                endTime
              );
              flags & 2048 &&
                commitCachePassiveMountEffect(child.alternate, child);
              break;
            default:
              recursivelyTraverseAtomicPassiveEffects(
                finishedRoot,
                child,
                committedLanes,
                committedTransitions,
                endTime
              );
          }
          alreadyWarnedForDeepEquality = prevDeepEquality;
          child = parentFiber;
        }
    }
    function recursivelyAccumulateSuspenseyCommit(
      parentFiber,
      committedLanes,
      suspendedState
    ) {
      if (parentFiber.subtreeFlags & suspenseyCommitFlag)
        for (parentFiber = parentFiber.child; null !== parentFiber; )
          accumulateSuspenseyCommitOnFiber(
            parentFiber,
            committedLanes,
            suspendedState
          ),
            (parentFiber = parentFiber.sibling);
    }
    function accumulateSuspenseyCommitOnFiber(
      fiber,
      committedLanes,
      suspendedState
    ) {
      switch (fiber.tag) {
        case 26:
          recursivelyAccumulateSuspenseyCommit(
            fiber,
            committedLanes,
            suspendedState
          );
          fiber.flags & suspenseyCommitFlag &&
            null !== fiber.memoizedState &&
            suspendResource(
              suspendedState,
              currentHoistableRoot,
              fiber.memoizedState,
              fiber.memoizedProps
            );
          break;
        case 5:
          recursivelyAccumulateSuspenseyCommit(
            fiber,
            committedLanes,
            suspendedState
          );
          break;
        case 3:
        case 4:
          var previousHoistableRoot = currentHoistableRoot;
          currentHoistableRoot = getHoistableRoot(
            fiber.stateNode.containerInfo
          );
          recursivelyAccumulateSuspenseyCommit(
            fiber,
            committedLanes,
            suspendedState
          );
          currentHoistableRoot = previousHoistableRoot;
          break;
        case 22:
          null === fiber.memoizedState &&
            ((previousHoistableRoot = fiber.alternate),
            null !== previousHoistableRoot &&
            null !== previousHoistableRoot.memoizedState
              ? ((previousHoistableRoot = suspenseyCommitFlag),
                (suspenseyCommitFlag = 16777216),
                recursivelyAccumulateSuspenseyCommit(
                  fiber,
                  committedLanes,
                  suspendedState
                ),
                (suspenseyCommitFlag = previousHoistableRoot))
              : recursivelyAccumulateSuspenseyCommit(
                  fiber,
                  committedLanes,
                  suspendedState
                ));
          break;
        default:
          recursivelyAccumulateSuspenseyCommit(
            fiber,
            committedLanes,
            suspendedState
          );
      }
    }
    function detachAlternateSiblings(parentFiber) {
      var previousFiber = parentFiber.alternate;
      if (
        null !== previousFiber &&
        ((parentFiber = previousFiber.child), null !== parentFiber)
      ) {
        previousFiber.child = null;
        do
          (previousFiber = parentFiber.sibling),
            (parentFiber.sibling = null),
            (parentFiber = previousFiber);
        while (null !== parentFiber);
      }
    }
    function recursivelyTraversePassiveUnmountEffects(parentFiber) {
      var deletions = parentFiber.deletions;
      if (0 !== (parentFiber.flags & 16)) {
        if (null !== deletions)
          for (var i = 0; i < deletions.length; i++) {
            var childToDelete = deletions[i],
              prevEffectStart = pushComponentEffectStart();
            nextEffect = childToDelete;
            commitPassiveUnmountEffectsInsideOfDeletedTree_begin(
              childToDelete,
              parentFiber
            );
            (childToDelete.mode & ProfileMode) !== NoMode &&
              0 <= componentEffectStartTime &&
              0 <= componentEffectEndTime &&
              0.05 < componentEffectEndTime - componentEffectStartTime &&
              logComponentTrigger(
                childToDelete,
                componentEffectStartTime,
                componentEffectEndTime,
                "Unmount"
              );
            popComponentEffectStart(prevEffectStart);
          }
        detachAlternateSiblings(parentFiber);
      }
      if (parentFiber.subtreeFlags & 10256)
        for (parentFiber = parentFiber.child; null !== parentFiber; )
          commitPassiveUnmountOnFiber(parentFiber),
            (parentFiber = parentFiber.sibling);
    }
    function commitPassiveUnmountOnFiber(finishedWork) {
      var prevEffectStart = pushComponentEffectStart(),
        prevEffectDuration = pushComponentEffectDuration(),
        prevEffectErrors = pushComponentEffectErrors(),
        prevEffectDidSpawnUpdate = pushComponentEffectDidSpawnUpdate();
      switch (finishedWork.tag) {
        case 0:
        case 11:
        case 15:
          recursivelyTraversePassiveUnmountEffects(finishedWork);
          finishedWork.flags & 2048 &&
            commitHookPassiveUnmountEffects(
              finishedWork,
              finishedWork.return,
              Passive | HasEffect
            );
          break;
        case 3:
          var prevProfilerEffectDuration = pushNestedEffectDurations();
          recursivelyTraversePassiveUnmountEffects(finishedWork);
          finishedWork.stateNode.passiveEffectDuration +=
            popNestedEffectDurations(prevProfilerEffectDuration);
          break;
        case 12:
          prevProfilerEffectDuration = pushNestedEffectDurations();
          recursivelyTraversePassiveUnmountEffects(finishedWork);
          finishedWork.stateNode.passiveEffectDuration +=
            bubbleNestedEffectDurations(prevProfilerEffectDuration);
          break;
        case 22:
          prevProfilerEffectDuration = finishedWork.stateNode;
          null !== finishedWork.memoizedState &&
          prevProfilerEffectDuration._visibility &
            OffscreenPassiveEffectsConnected &&
          (null === finishedWork.return || 13 !== finishedWork.return.tag)
            ? ((prevProfilerEffectDuration._visibility &=
                ~OffscreenPassiveEffectsConnected),
              recursivelyTraverseDisconnectPassiveEffects(finishedWork),
              (finishedWork.mode & ProfileMode) !== NoMode &&
                0 <= componentEffectStartTime &&
                0 <= componentEffectEndTime &&
                0.05 < componentEffectEndTime - componentEffectStartTime &&
                logComponentTrigger(
                  finishedWork,
                  componentEffectStartTime,
                  componentEffectEndTime,
                  "Disconnect"
                ))
            : recursivelyTraversePassiveUnmountEffects(finishedWork);
          break;
        default:
          recursivelyTraversePassiveUnmountEffects(finishedWork);
      }
      (finishedWork.mode & ProfileMode) !== NoMode &&
        0 <= componentEffectStartTime &&
        0 <= componentEffectEndTime &&
        (componentEffectSpawnedUpdate || 0.05 < componentEffectDuration) &&
        logComponentEffect(
          finishedWork,
          componentEffectStartTime,
          componentEffectEndTime,
          componentEffectDuration,
          componentEffectErrors
        );
      popComponentEffectStart(prevEffectStart);
      popComponentEffectDuration(prevEffectDuration);
      componentEffectSpawnedUpdate = prevEffectDidSpawnUpdate;
      componentEffectErrors = prevEffectErrors;
    }
    function recursivelyTraverseDisconnectPassiveEffects(parentFiber) {
      var deletions = parentFiber.deletions;
      if (0 !== (parentFiber.flags & 16)) {
        if (null !== deletions)
          for (var i = 0; i < deletions.length; i++) {
            var childToDelete = deletions[i],
              prevEffectStart = pushComponentEffectStart();
            nextEffect = childToDelete;
            commitPassiveUnmountEffectsInsideOfDeletedTree_begin(
              childToDelete,
              parentFiber
            );
            (childToDelete.mode & ProfileMode) !== NoMode &&
              0 <= componentEffectStartTime &&
              0 <= componentEffectEndTime &&
              0.05 < componentEffectEndTime - componentEffectStartTime &&
              logComponentTrigger(
                childToDelete,
                componentEffectStartTime,
                componentEffectEndTime,
                "Unmount"
              );
            popComponentEffectStart(prevEffectStart);
          }
        detachAlternateSiblings(parentFiber);
      }
      for (parentFiber = parentFiber.child; null !== parentFiber; )
        disconnectPassiveEffect(parentFiber),
          (parentFiber = parentFiber.sibling);
    }
    function disconnectPassiveEffect(finishedWork) {
      var prevEffectStart = pushComponentEffectStart(),
        prevEffectDuration = pushComponentEffectDuration(),
        prevEffectErrors = pushComponentEffectErrors(),
        prevEffectDidSpawnUpdate = pushComponentEffectDidSpawnUpdate();
      switch (finishedWork.tag) {
        case 0:
        case 11:
        case 15:
          commitHookPassiveUnmountEffects(
            finishedWork,
            finishedWork.return,
            Passive
          );
          recursivelyTraverseDisconnectPassiveEffects(finishedWork);
          break;
        case 22:
          var instance = finishedWork.stateNode;
          instance._visibility & OffscreenPassiveEffectsConnected &&
            ((instance._visibility &= ~OffscreenPassiveEffectsConnected),
            recursivelyTraverseDisconnectPassiveEffects(finishedWork));
          break;
        default:
          recursivelyTraverseDisconnectPassiveEffects(finishedWork);
      }
      (finishedWork.mode & ProfileMode) !== NoMode &&
        0 <= componentEffectStartTime &&
        0 <= componentEffectEndTime &&
        (componentEffectSpawnedUpdate || 0.05 < componentEffectDuration) &&
        logComponentEffect(
          finishedWork,
          componentEffectStartTime,
          componentEffectEndTime,
          componentEffectDuration,
          componentEffectErrors
        );
      popComponentEffectStart(prevEffectStart);
      popComponentEffectDuration(prevEffectDuration);
      componentEffectSpawnedUpdate = prevEffectDidSpawnUpdate;
      componentEffectErrors = prevEffectErrors;
    }
    function commitPassiveUnmountEffectsInsideOfDeletedTree_begin(
      deletedSubtreeRoot,
      nearestMountedAncestor$jscomp$0
    ) {
      for (; null !== nextEffect; ) {
        var fiber = nextEffect,
          current = fiber,
          nearestMountedAncestor = nearestMountedAncestor$jscomp$0,
          prevEffectStart = pushComponentEffectStart(),
          prevEffectDuration = pushComponentEffectDuration(),
          prevEffectErrors = pushComponentEffectErrors(),
          prevEffectDidSpawnUpdate = pushComponentEffectDidSpawnUpdate();
        switch (current.tag) {
          case 0:
          case 11:
          case 15:
            commitHookPassiveUnmountEffects(
              current,
              nearestMountedAncestor,
              Passive
            );
            break;
          case 23:
          case 22:
            null !== current.memoizedState &&
              null !== current.memoizedState.cachePool &&
              ((nearestMountedAncestor = current.memoizedState.cachePool.pool),
              null != nearestMountedAncestor &&
                retainCache(nearestMountedAncestor));
            break;
          case 24:
            releaseCache(current.memoizedState.cache);
        }
        (current.mode & ProfileMode) !== NoMode &&
          0 <= componentEffectStartTime &&
          0 <= componentEffectEndTime &&
          (componentEffectSpawnedUpdate || 0.05 < componentEffectDuration) &&
          logComponentEffect(
            current,
            componentEffectStartTime,
            componentEffectEndTime,
            componentEffectDuration,
            componentEffectErrors
          );
        popComponentEffectStart(prevEffectStart);
        popComponentEffectDuration(prevEffectDuration);
        componentEffectSpawnedUpdate = prevEffectDidSpawnUpdate;
        componentEffectErrors = prevEffectErrors;
        current = fiber.child;
        if (null !== current) (current.return = fiber), (nextEffect = current);
        else
          a: for (fiber = deletedSubtreeRoot; null !== nextEffect; ) {
            current = nextEffect;
            prevEffectStart = current.sibling;
            prevEffectDuration = current.return;
            detachFiberAfterEffects(current);
            if (current === fiber) {
              nextEffect = null;
              break a;
            }
            if (null !== prevEffectStart) {
              prevEffectStart.return = prevEffectDuration;
              nextEffect = prevEffectStart;
              break a;
            }
            nextEffect = prevEffectDuration;
          }
      }
    }
    function onCommitRoot() {
      commitHooks.forEach(function (commitHook) {
        return commitHook();
      });
    }
    function isConcurrentActEnvironment() {
      var isReactActEnvironmentGlobal =
        "undefined" !== typeof IS_REACT_ACT_ENVIRONMENT
          ? IS_REACT_ACT_ENVIRONMENT
          : void 0;
      isReactActEnvironmentGlobal ||
        null === ReactSharedInternals.actQueue ||
        console.error(
          "The current testing environment is not configured to support act(...)"
        );
      return isReactActEnvironmentGlobal;
    }
    function requestUpdateLane(fiber) {
      if (
        (executionContext & RenderContext) !== NoContext &&
        0 !== workInProgressRootRenderLanes
      )
        return workInProgressRootRenderLanes & -workInProgressRootRenderLanes;
      var transition = ReactSharedInternals.T;
      return null !== transition
        ? (transition._updatedFibers || (transition._updatedFibers = new Set()),
          transition._updatedFibers.add(fiber),
          requestTransitionLane())
        : resolveUpdatePriority();
    }
    function requestDeferredLane() {
      if (0 === workInProgressDeferredLane)
        if (0 === (workInProgressRootRenderLanes & 536870912) || isHydrating) {
          var lane = nextTransitionDeferredLane;
          nextTransitionDeferredLane <<= 1;
          0 === (nextTransitionDeferredLane & 3932160) &&
            (nextTransitionDeferredLane = 262144);
          workInProgressDeferredLane = lane;
        } else workInProgressDeferredLane = 536870912;
      lane = suspenseHandlerStackCursor.current;
      null !== lane && (lane.flags |= 32);
      return workInProgressDeferredLane;
    }
    function scheduleUpdateOnFiber(root, fiber, lane) {
      isRunningInsertionEffect &&
        console.error("useInsertionEffect must not schedule updates.");
      isFlushingPassiveEffects && (didScheduleUpdateDuringPassiveEffects = !0);
      if (
        (root === workInProgressRoot &&
          (workInProgressSuspendedReason === SuspendedOnData ||
            workInProgressSuspendedReason === SuspendedOnAction)) ||
        null !== root.cancelPendingCommit
      )
        prepareFreshStack(root, 0),
          markRootSuspended(
            root,
            workInProgressRootRenderLanes,
            workInProgressDeferredLane,
            !1
          );
      markRootUpdated$1(root, lane);
      if (
        (executionContext & RenderContext) !== NoContext &&
        root === workInProgressRoot
      ) {
        if (isRendering)
          switch (fiber.tag) {
            case 0:
            case 11:
            case 15:
              root =
                (workInProgress && getComponentNameFromFiber(workInProgress)) ||
                "Unknown";
              didWarnAboutUpdateInRenderForAnotherComponent.has(root) ||
                (didWarnAboutUpdateInRenderForAnotherComponent.add(root),
                (fiber = getComponentNameFromFiber(fiber) || "Unknown"),
                console.error(
                  "Cannot update a component (`%s`) while rendering a different component (`%s`). To locate the bad setState() call inside `%s`, follow the stack trace as described in https://react.dev/link/setstate-in-render",
                  fiber,
                  root,
                  root
                ));
              break;
            case 1:
              didWarnAboutUpdateInRender ||
                (console.error(
                  "Cannot update during an existing state transition (such as within `render`). Render methods should be a pure function of props and state."
                ),
                (didWarnAboutUpdateInRender = !0));
          }
      } else
        isDevToolsPresent && addFiberToLanesMap(root, fiber, lane),
          warnIfUpdatesNotWrappedWithActDEV(fiber),
          root === workInProgressRoot &&
            ((executionContext & RenderContext) === NoContext &&
              (workInProgressRootInterleavedUpdatedLanes |= lane),
            workInProgressRootExitStatus === RootSuspendedWithDelay &&
              markRootSuspended(
                root,
                workInProgressRootRenderLanes,
                workInProgressDeferredLane,
                !1
              )),
          ensureRootIsScheduled(root);
    }
    function performWorkOnRoot(root, lanes, forceSync) {
      if ((executionContext & (RenderContext | CommitContext)) !== NoContext)
        throw Error("Should not already be working.");
      if (0 !== workInProgressRootRenderLanes && null !== workInProgress) {
        var yieldedFiber = workInProgress,
          yieldEndTime = now$1();
        switch (yieldReason) {
          case SuspendedOnImmediate:
          case SuspendedOnData:
            var startTime = yieldStartTime;
            supportsUserTiming &&
              ((yieldedFiber = yieldedFiber._debugTask)
                ? yieldedFiber.run(
                    console.timeStamp.bind(
                      console,
                      "Suspended",
                      startTime,
                      yieldEndTime,
                      COMPONENTS_TRACK,
                      void 0,
                      "primary-light"
                    )
                  )
                : console.timeStamp(
                    "Suspended",
                    startTime,
                    yieldEndTime,
                    COMPONENTS_TRACK,
                    void 0,
                    "primary-light"
                  ));
            break;
          case SuspendedOnAction:
            startTime = yieldStartTime;
            supportsUserTiming &&
              ((yieldedFiber = yieldedFiber._debugTask)
                ? yieldedFiber.run(
                    console.timeStamp.bind(
                      console,
                      "Action",
                      startTime,
                      yieldEndTime,
                      COMPONENTS_TRACK,
                      void 0,
                      "primary-light"
                    )
                  )
                : console.timeStamp(
                    "Action",
                    startTime,
                    yieldEndTime,
                    COMPONENTS_TRACK,
                    void 0,
                    "primary-light"
                  ));
            break;
          default:
            supportsUserTiming &&
              ((yieldedFiber = yieldEndTime - yieldStartTime),
              3 > yieldedFiber ||
                console.timeStamp(
                  "Blocked",
                  yieldStartTime,
                  yieldEndTime,
                  COMPONENTS_TRACK,
                  void 0,
                  5 > yieldedFiber
                    ? "primary-light"
                    : 10 > yieldedFiber
                      ? "primary"
                      : 100 > yieldedFiber
                        ? "primary-dark"
                        : "error"
                ));
        }
      }
      startTime = (forceSync =
        (!forceSync &&
          0 === (lanes & 127) &&
          0 === (lanes & root.expiredLanes)) ||
        checkIfRootIsPrerendering(root, lanes))
        ? renderRootConcurrent(root, lanes)
        : renderRootSync(root, lanes, !0);
      var renderWasConcurrent = forceSync;
      do {
        if (startTime === RootInProgress) {
          workInProgressRootIsPrerendering &&
            !forceSync &&
            markRootSuspended(root, lanes, 0, !1);
          lanes = workInProgressSuspendedReason;
          yieldStartTime = now();
          yieldReason = lanes;
          break;
        } else {
          yieldedFiber = now$1();
          yieldEndTime = root.current.alternate;
          if (
            renderWasConcurrent &&
            !isRenderConsistentWithExternalStores(yieldEndTime)
          ) {
            setCurrentTrackFromLanes(lanes);
            yieldEndTime = renderStartTime;
            startTime = yieldedFiber;
            !supportsUserTiming ||
              startTime <= yieldEndTime ||
              (workInProgressUpdateTask
                ? workInProgressUpdateTask.run(
                    console.timeStamp.bind(
                      console,
                      "Teared Render",
                      yieldEndTime,
                      startTime,
                      currentTrack,
                      LANES_TRACK_GROUP,
                      "error"
                    )
                  )
                : console.timeStamp(
                    "Teared Render",
                    yieldEndTime,
                    startTime,
                    currentTrack,
                    LANES_TRACK_GROUP,
                    "error"
                  ));
            finalizeRender(lanes, yieldedFiber);
            startTime = renderRootSync(root, lanes, !1);
            renderWasConcurrent = !1;
            continue;
          }
          if (startTime === RootErrored) {
            renderWasConcurrent = lanes;
            if (root.errorRecoveryDisabledLanes & renderWasConcurrent)
              var errorRetryLanes = 0;
            else
              (errorRetryLanes = root.pendingLanes & -536870913),
                (errorRetryLanes =
                  0 !== errorRetryLanes
                    ? errorRetryLanes
                    : errorRetryLanes & 536870912
                      ? 536870912
                      : 0);
            if (0 !== errorRetryLanes) {
              setCurrentTrackFromLanes(lanes);
              logErroredRenderPhase(
                renderStartTime,
                yieldedFiber,
                lanes,
                workInProgressUpdateTask
              );
              finalizeRender(lanes, yieldedFiber);
              lanes = errorRetryLanes;
              a: {
                yieldedFiber = root;
                startTime = renderWasConcurrent;
                renderWasConcurrent = workInProgressRootConcurrentErrors;
                var wasRootDehydrated =
                  yieldedFiber.current.memoizedState.isDehydrated;
                wasRootDehydrated &&
                  (prepareFreshStack(yieldedFiber, errorRetryLanes).flags |=
                    256);
                errorRetryLanes = renderRootSync(
                  yieldedFiber,
                  errorRetryLanes,
                  !1
                );
                if (errorRetryLanes !== RootErrored) {
                  if (
                    workInProgressRootDidAttachPingListener &&
                    !wasRootDehydrated
                  ) {
                    yieldedFiber.errorRecoveryDisabledLanes |= startTime;
                    workInProgressRootInterleavedUpdatedLanes |= startTime;
                    startTime = RootSuspendedWithDelay;
                    break a;
                  }
                  yieldedFiber = workInProgressRootRecoverableErrors;
                  workInProgressRootRecoverableErrors = renderWasConcurrent;
                  null !== yieldedFiber &&
                    (null === workInProgressRootRecoverableErrors
                      ? (workInProgressRootRecoverableErrors = yieldedFiber)
                      : workInProgressRootRecoverableErrors.push.apply(
                          workInProgressRootRecoverableErrors,
                          yieldedFiber
                        ));
                }
                startTime = errorRetryLanes;
              }
              renderWasConcurrent = !1;
              if (startTime !== RootErrored) continue;
              else yieldedFiber = now$1();
            }
          }
          if (startTime === RootFatalErrored) {
            setCurrentTrackFromLanes(lanes);
            logErroredRenderPhase(
              renderStartTime,
              yieldedFiber,
              lanes,
              workInProgressUpdateTask
            );
            finalizeRender(lanes, yieldedFiber);
            prepareFreshStack(root, 0);
            markRootSuspended(root, lanes, 0, !0);
            break;
          }
          a: {
            forceSync = root;
            switch (startTime) {
              case RootInProgress:
              case RootFatalErrored:
                throw Error("Root did not complete. This is a bug in React.");
              case RootSuspendedWithDelay:
                if ((lanes & 4194048) !== lanes) break;
              case RootSuspendedAtTheShell:
                setCurrentTrackFromLanes(lanes);
                logSuspendedRenderPhase(
                  renderStartTime,
                  yieldedFiber,
                  lanes,
                  workInProgressUpdateTask
                );
                finalizeRender(lanes, yieldedFiber);
                yieldEndTime = lanes;
                0 !== (yieldEndTime & 127)
                  ? (blockingSuspendedTime = yieldedFiber)
                  : 0 !== (yieldEndTime & 4194048) &&
                    (transitionSuspendedTime = yieldedFiber);
                markRootSuspended(
                  forceSync,
                  lanes,
                  workInProgressDeferredLane,
                  !workInProgressRootDidSkipSuspendedSiblings
                );
                break a;
              case RootErrored:
                workInProgressRootRecoverableErrors = null;
                break;
              case RootSuspended:
              case RootCompleted:
                break;
              default:
                throw Error("Unknown root exit status.");
            }
            if (null !== ReactSharedInternals.actQueue)
              commitRoot(
                forceSync,
                yieldEndTime,
                lanes,
                workInProgressRootRecoverableErrors,
                workInProgressTransitions,
                workInProgressRootDidIncludeRecursiveRenderUpdate,
                workInProgressDeferredLane,
                workInProgressRootInterleavedUpdatedLanes,
                workInProgressSuspendedRetryLanes,
                startTime,
                null,
                null,
                renderStartTime,
                yieldedFiber
              );
            else {
              if (
                (lanes & 62914560) === lanes &&
                ((renderWasConcurrent =
                  globalMostRecentFallbackTime +
                  FALLBACK_THROTTLE_MS -
                  now$1()),
                10 < renderWasConcurrent)
              ) {
                markRootSuspended(
                  forceSync,
                  lanes,
                  workInProgressDeferredLane,
                  !workInProgressRootDidSkipSuspendedSiblings
                );
                if (0 !== getNextLanes(forceSync, 0, !0)) break a;
                pendingEffectsLanes = lanes;
                forceSync.timeoutHandle = scheduleTimeout(
                  commitRootWhenReady.bind(
                    null,
                    forceSync,
                    yieldEndTime,
                    workInProgressRootRecoverableErrors,
                    workInProgressTransitions,
                    workInProgressRootDidIncludeRecursiveRenderUpdate,
                    lanes,
                    workInProgressDeferredLane,
                    workInProgressRootInterleavedUpdatedLanes,
                    workInProgressSuspendedRetryLanes,
                    workInProgressRootDidSkipSuspendedSiblings,
                    startTime,
                    "Throttled",
                    renderStartTime,
                    yieldedFiber
                  ),
                  renderWasConcurrent
                );
                break a;
              }
              commitRootWhenReady(
                forceSync,
                yieldEndTime,
                workInProgressRootRecoverableErrors,
                workInProgressTransitions,
                workInProgressRootDidIncludeRecursiveRenderUpdate,
                lanes,
                workInProgressDeferredLane,
                workInProgressRootInterleavedUpdatedLanes,
                workInProgressSuspendedRetryLanes,
                workInProgressRootDidSkipSuspendedSiblings,
                startTime,
                null,
                renderStartTime,
                yieldedFiber
              );
            }
          }
        }
        break;
      } while (1);
      ensureRootIsScheduled(root);
    }
    function commitRootWhenReady(
      root,
      finishedWork,
      recoverableErrors,
      transitions,
      didIncludeRenderPhaseUpdate,
      lanes,
      spawnedLane,
      updatedLanes,
      suspendedRetryLanes,
      didSkipSuspendedSiblings,
      exitStatus,
      suspendedCommitReason,
      completedRenderStartTime,
      completedRenderEndTime
    ) {
      root.timeoutHandle = noTimeout;
      var subtreeFlags = finishedWork.subtreeFlags,
        suspendedState = null;
      if (subtreeFlags & 8192 || 16785408 === (subtreeFlags & 16785408))
        if (
          ((suspendedState = {
            stylesheets: null,
            count: 0,
            imgCount: 0,
            imgBytes: 0,
            suspenseyImages: [],
            waitingForImages: !0,
            waitingForViewTransition: !1,
            unsuspend: noop$1
          }),
          accumulateSuspenseyCommitOnFiber(finishedWork, lanes, suspendedState),
          (subtreeFlags =
            (lanes & 62914560) === lanes
              ? globalMostRecentFallbackTime - now$1()
              : (lanes & 4194048) === lanes
                ? globalMostRecentTransitionTime - now$1()
                : 0),
          (subtreeFlags = waitForCommitToBeReady(suspendedState, subtreeFlags)),
          null !== subtreeFlags)
        ) {
          pendingEffectsLanes = lanes;
          root.cancelPendingCommit = subtreeFlags(
            commitRoot.bind(
              null,
              root,
              finishedWork,
              lanes,
              recoverableErrors,
              transitions,
              didIncludeRenderPhaseUpdate,
              spawnedLane,
              updatedLanes,
              suspendedRetryLanes,
              exitStatus,
              suspendedState,
              suspendedState.waitingForViewTransition
                ? "Waiting for the previous Animation"
                : 0 < suspendedState.count
                  ? 0 < suspendedState.imgCount
                    ? "Suspended on CSS and Images"
                    : "Suspended on CSS"
                  : 1 === suspendedState.imgCount
                    ? "Suspended on an Image"
                    : 0 < suspendedState.imgCount
                      ? "Suspended on Images"
                      : null,
              completedRenderStartTime,
              completedRenderEndTime
            )
          );
          markRootSuspended(
            root,
            lanes,
            spawnedLane,
            !didSkipSuspendedSiblings
          );
          return;
        }
      commitRoot(
        root,
        finishedWork,
        lanes,
        recoverableErrors,
        transitions,
        didIncludeRenderPhaseUpdate,
        spawnedLane,
        updatedLanes,
        suspendedRetryLanes,
        exitStatus,
        suspendedState,
        suspendedCommitReason,
        completedRenderStartTime,
        completedRenderEndTime
      );
    }
    function isRenderConsistentWithExternalStores(finishedWork) {
      for (var node = finishedWork; ; ) {
        var tag = node.tag;
        if (
          (0 === tag || 11 === tag || 15 === tag) &&
          node.flags & 16384 &&
          ((tag = node.updateQueue),
          null !== tag && ((tag = tag.stores), null !== tag))
        )
          for (var i = 0; i < tag.length; i++) {
            var check = tag[i],
              getSnapshot = check.getSnapshot;
            check = check.value;
            try {
              if (!objectIs(getSnapshot(), check)) return !1;
            } catch (error) {
              return !1;
            }
          }
        tag = node.child;
        if (node.subtreeFlags & 16384 && null !== tag)
          (tag.return = node), (node = tag);
        else {
          if (node === finishedWork) break;
          for (; null === node.sibling; ) {
            if (null === node.return || node.return === finishedWork) return !0;
            node = node.return;
          }
          node.sibling.return = node.return;
          node = node.sibling;
        }
      }
      return !0;
    }
    function markRootSuspended(
      root,
      suspendedLanes,
      spawnedLane,
      didAttemptEntireTree
    ) {
      suspendedLanes &= ~workInProgressRootPingedLanes;
      suspendedLanes &= ~workInProgressRootInterleavedUpdatedLanes;
      root.suspendedLanes |= suspendedLanes;
      root.pingedLanes &= ~suspendedLanes;
      didAttemptEntireTree && (root.warmLanes |= suspendedLanes);
      didAttemptEntireTree = root.expirationTimes;
      for (var lanes = suspendedLanes; 0 < lanes; ) {
        var index = 31 - clz32(lanes),
          lane = 1 << index;
        didAttemptEntireTree[index] = -1;
        lanes &= ~lane;
      }
      0 !== spawnedLane &&
        markSpawnedDeferredLane(root, spawnedLane, suspendedLanes);
    }
    function flushSyncWork$1() {
      return (executionContext & (RenderContext | CommitContext)) === NoContext
        ? (flushSyncWorkAcrossRoots_impl(0, !1), !1)
        : !0;
    }
    function resetWorkInProgressStack() {
      if (null !== workInProgress) {
        if (workInProgressSuspendedReason === NotSuspended)
          var interruptedWork = workInProgress.return;
        else
          (interruptedWork = workInProgress),
            resetContextDependencies(),
            resetHooksOnUnwind(interruptedWork),
            (thenableState$1 = null),
            (thenableIndexCounter$1 = 0),
            (interruptedWork = workInProgress);
        for (; null !== interruptedWork; )
          unwindInterruptedWork(interruptedWork.alternate, interruptedWork),
            (interruptedWork = interruptedWork.return);
        workInProgress = null;
      }
    }
    function finalizeRender(lanes, finalizationTime) {
      0 !== (lanes & 127) && (blockingClampTime = finalizationTime);
      0 !== (lanes & 4194048) && (transitionClampTime = finalizationTime);
      0 !== (lanes & 62914560) && (retryClampTime = finalizationTime);
      0 !== (lanes & 2080374784) && (idleClampTime = finalizationTime);
    }
    function prepareFreshStack(root, lanes) {
      supportsUserTiming &&
        (console.timeStamp(
          "Blocking Track",
          0.003,
          0.003,
          "Blocking",
          LANES_TRACK_GROUP,
          "primary-light"
        ),
        console.timeStamp(
          "Transition Track",
          0.003,
          0.003,
          "Transition",
          LANES_TRACK_GROUP,
          "primary-light"
        ),
        console.timeStamp(
          "Suspense Track",
          0.003,
          0.003,
          "Suspense",
          LANES_TRACK_GROUP,
          "primary-light"
        ),
        console.timeStamp(
          "Idle Track",
          0.003,
          0.003,
          "Idle",
          LANES_TRACK_GROUP,
          "primary-light"
        ));
      var previousRenderStartTime = renderStartTime;
      renderStartTime = now();
      if (0 !== workInProgressRootRenderLanes && 0 < previousRenderStartTime) {
        setCurrentTrackFromLanes(workInProgressRootRenderLanes);
        if (
          workInProgressRootExitStatus === RootSuspended ||
          workInProgressRootExitStatus === RootSuspendedWithDelay
        )
          logSuspendedRenderPhase(
            previousRenderStartTime,
            renderStartTime,
            lanes,
            workInProgressUpdateTask
          );
        else {
          var endTime = renderStartTime,
            debugTask = workInProgressUpdateTask;
          if (supportsUserTiming && !(endTime <= previousRenderStartTime)) {
            var color =
                (lanes & 738197653) === lanes
                  ? "tertiary-dark"
                  : "primary-dark",
              label =
                (lanes & 536870912) === lanes
                  ? "Prewarm"
                  : (lanes & 201326741) === lanes
                    ? "Interrupted Hydration"
                    : "Interrupted Render";
            debugTask
              ? debugTask.run(
                  console.timeStamp.bind(
                    console,
                    label,
                    previousRenderStartTime,
                    endTime,
                    currentTrack,
                    LANES_TRACK_GROUP,
                    color
                  )
                )
              : console.timeStamp(
                  label,
                  previousRenderStartTime,
                  endTime,
                  currentTrack,
                  LANES_TRACK_GROUP,
                  color
                );
          }
        }
        finalizeRender(workInProgressRootRenderLanes, renderStartTime);
      }
      previousRenderStartTime = workInProgressUpdateTask;
      workInProgressUpdateTask = null;
      if (0 !== (lanes & 127)) {
        workInProgressUpdateTask = blockingUpdateTask;
        debugTask =
          0 <= blockingUpdateTime && blockingUpdateTime < blockingClampTime
            ? blockingClampTime
            : blockingUpdateTime;
        endTime =
          0 <= blockingEventTime && blockingEventTime < blockingClampTime
            ? blockingClampTime
            : blockingEventTime;
        color =
          0 <= endTime ? endTime : 0 <= debugTask ? debugTask : renderStartTime;
        0 <= blockingSuspendedTime
          ? (setCurrentTrackFromLanes(2),
            logSuspendedWithDelayPhase(
              blockingSuspendedTime,
              color,
              lanes,
              previousRenderStartTime
            ))
          : 0 !== (animatingLanes & 127) &&
            (setCurrentTrackFromLanes(2),
            logAnimatingPhase(blockingClampTime, color, animatingTask));
        previousRenderStartTime = debugTask;
        var eventTime = endTime,
          eventType = blockingEventType,
          eventIsRepeat = 0 < blockingEventRepeatTime,
          isSpawnedUpdate = blockingUpdateType === SPAWNED_UPDATE,
          isPingedUpdate = blockingUpdateType === PINGED_UPDATE;
        debugTask = renderStartTime;
        endTime = blockingUpdateTask;
        color = blockingUpdateMethodName;
        label = blockingUpdateComponentName;
        if (supportsUserTiming) {
          currentTrack = "Blocking";
          0 < previousRenderStartTime
            ? previousRenderStartTime > debugTask &&
              (previousRenderStartTime = debugTask)
            : (previousRenderStartTime = debugTask);
          0 < eventTime
            ? eventTime > previousRenderStartTime &&
              (eventTime = previousRenderStartTime)
            : (eventTime = previousRenderStartTime);
          if (null !== eventType && previousRenderStartTime > eventTime) {
            var color$jscomp$0 = eventIsRepeat ? "secondary-light" : "warning";
            endTime
              ? endTime.run(
                  console.timeStamp.bind(
                    console,
                    eventIsRepeat ? "Consecutive" : "Event: " + eventType,
                    eventTime,
                    previousRenderStartTime,
                    currentTrack,
                    LANES_TRACK_GROUP,
                    color$jscomp$0
                  )
                )
              : console.timeStamp(
                  eventIsRepeat ? "Consecutive" : "Event: " + eventType,
                  eventTime,
                  previousRenderStartTime,
                  currentTrack,
                  LANES_TRACK_GROUP,
                  color$jscomp$0
                );
          }
          debugTask > previousRenderStartTime &&
            ((eventTime = isSpawnedUpdate
              ? "error"
              : (lanes & 738197653) === lanes
                ? "tertiary-light"
                : "primary-light"),
            (isSpawnedUpdate = isPingedUpdate
              ? "Promise Resolved"
              : isSpawnedUpdate
                ? "Cascading Update"
                : 5 < debugTask - previousRenderStartTime
                  ? "Update Blocked"
                  : "Update"),
            (isPingedUpdate = []),
            null != label && isPingedUpdate.push(["Component name", label]),
            null != color && isPingedUpdate.push(["Method name", color]),
            (previousRenderStartTime = {
              start: previousRenderStartTime,
              end: debugTask,
              detail: {
                devtools: {
                  properties: isPingedUpdate,
                  track: currentTrack,
                  trackGroup: LANES_TRACK_GROUP,
                  color: eventTime
                }
              }
            }),
            endTime
              ? endTime.run(
                  performance.measure.bind(
                    performance,
                    isSpawnedUpdate,
                    previousRenderStartTime
                  )
                )
              : performance.measure(isSpawnedUpdate, previousRenderStartTime));
        }
        blockingUpdateTime = -1.1;
        blockingUpdateType = 0;
        blockingUpdateComponentName = blockingUpdateMethodName = null;
        blockingSuspendedTime = -1.1;
        blockingEventRepeatTime = blockingEventTime;
        blockingEventTime = -1.1;
        blockingClampTime = now();
      }
      0 !== (lanes & 4194048) &&
        ((workInProgressUpdateTask = transitionUpdateTask),
        (debugTask =
          0 <= transitionStartTime && transitionStartTime < transitionClampTime
            ? transitionClampTime
            : transitionStartTime),
        (previousRenderStartTime =
          0 <= transitionUpdateTime &&
          transitionUpdateTime < transitionClampTime
            ? transitionClampTime
            : transitionUpdateTime),
        (endTime =
          0 <= transitionEventTime && transitionEventTime < transitionClampTime
            ? transitionClampTime
            : transitionEventTime),
        (color =
          0 <= endTime
            ? endTime
            : 0 <= previousRenderStartTime
              ? previousRenderStartTime
              : renderStartTime),
        0 <= transitionSuspendedTime
          ? (setCurrentTrackFromLanes(256),
            logSuspendedWithDelayPhase(
              transitionSuspendedTime,
              color,
              lanes,
              workInProgressUpdateTask
            ))
          : 0 !== (animatingLanes & 4194048) &&
            (setCurrentTrackFromLanes(256),
            logAnimatingPhase(transitionClampTime, color, animatingTask)),
        (isPingedUpdate = endTime),
        (eventTime = transitionEventType),
        (eventType = 0 < transitionEventRepeatTime),
        (eventIsRepeat = transitionUpdateType === PINGED_UPDATE),
        (color = renderStartTime),
        (endTime = transitionUpdateTask),
        (label = transitionUpdateMethodName),
        (isSpawnedUpdate = transitionUpdateComponentName),
        supportsUserTiming &&
          ((currentTrack = "Transition"),
          0 < previousRenderStartTime
            ? previousRenderStartTime > color &&
              (previousRenderStartTime = color)
            : (previousRenderStartTime = color),
          0 < debugTask
            ? debugTask > previousRenderStartTime &&
              (debugTask = previousRenderStartTime)
            : (debugTask = previousRenderStartTime),
          0 < isPingedUpdate
            ? isPingedUpdate > debugTask && (isPingedUpdate = debugTask)
            : (isPingedUpdate = debugTask),
          debugTask > isPingedUpdate &&
            null !== eventTime &&
            ((color$jscomp$0 = eventType ? "secondary-light" : "warning"),
            endTime
              ? endTime.run(
                  console.timeStamp.bind(
                    console,
                    eventType ? "Consecutive" : "Event: " + eventTime,
                    isPingedUpdate,
                    debugTask,
                    currentTrack,
                    LANES_TRACK_GROUP,
                    color$jscomp$0
                  )
                )
              : console.timeStamp(
                  eventType ? "Consecutive" : "Event: " + eventTime,
                  isPingedUpdate,
                  debugTask,
                  currentTrack,
                  LANES_TRACK_GROUP,
                  color$jscomp$0
                )),
          previousRenderStartTime > debugTask &&
            (endTime
              ? endTime.run(
                  console.timeStamp.bind(
                    console,
                    "Action",
                    debugTask,
                    previousRenderStartTime,
                    currentTrack,
                    LANES_TRACK_GROUP,
                    "primary-dark"
                  )
                )
              : console.timeStamp(
                  "Action",
                  debugTask,
                  previousRenderStartTime,
                  currentTrack,
                  LANES_TRACK_GROUP,
                  "primary-dark"
                )),
          color > previousRenderStartTime &&
            ((debugTask = eventIsRepeat
              ? "Promise Resolved"
              : 5 < color - previousRenderStartTime
                ? "Update Blocked"
                : "Update"),
            (isPingedUpdate = []),
            null != isSpawnedUpdate &&
              isPingedUpdate.push(["Component name", isSpawnedUpdate]),
            null != label && isPingedUpdate.push(["Method name", label]),
            (previousRenderStartTime = {
              start: previousRenderStartTime,
              end: color,
              detail: {
                devtools: {
                  properties: isPingedUpdate,
                  track: currentTrack,
                  trackGroup: LANES_TRACK_GROUP,
                  color: "primary-light"
                }
              }
            }),
            endTime
              ? endTime.run(
                  performance.measure.bind(
                    performance,
                    debugTask,
                    previousRenderStartTime
                  )
                )
              : performance.measure(debugTask, previousRenderStartTime))),
        (transitionUpdateTime = transitionStartTime = -1.1),
        (transitionUpdateType = 0),
        (transitionSuspendedTime = -1.1),
        (transitionEventRepeatTime = transitionEventTime),
        (transitionEventTime = -1.1),
        (transitionClampTime = now()));
      0 !== (lanes & 62914560) &&
        0 !== (animatingLanes & 62914560) &&
        (setCurrentTrackFromLanes(4194304),
        logAnimatingPhase(retryClampTime, renderStartTime, animatingTask));
      0 !== (lanes & 2080374784) &&
        0 !== (animatingLanes & 2080374784) &&
        (setCurrentTrackFromLanes(268435456),
        logAnimatingPhase(idleClampTime, renderStartTime, animatingTask));
      previousRenderStartTime = root.timeoutHandle;
      previousRenderStartTime !== noTimeout &&
        ((root.timeoutHandle = noTimeout),
        cancelTimeout(previousRenderStartTime));
      previousRenderStartTime = root.cancelPendingCommit;
      null !== previousRenderStartTime &&
        ((root.cancelPendingCommit = null), previousRenderStartTime());
      pendingEffectsLanes = 0;
      resetWorkInProgressStack();
      workInProgressRoot = root;
      workInProgress = previousRenderStartTime = createWorkInProgress(
        root.current,
        null
      );
      workInProgressRootRenderLanes = lanes;
      workInProgressSuspendedReason = NotSuspended;
      workInProgressThrownValue = null;
      workInProgressRootDidSkipSuspendedSiblings = !1;
      workInProgressRootIsPrerendering = checkIfRootIsPrerendering(root, lanes);
      workInProgressRootDidAttachPingListener = !1;
      workInProgressRootExitStatus = RootInProgress;
      workInProgressSuspendedRetryLanes =
        workInProgressDeferredLane =
        workInProgressRootPingedLanes =
        workInProgressRootInterleavedUpdatedLanes =
        workInProgressRootSkippedLanes =
          0;
      workInProgressRootRecoverableErrors = workInProgressRootConcurrentErrors =
        null;
      workInProgressRootDidIncludeRecursiveRenderUpdate = !1;
      0 !== (lanes & 8) && (lanes |= lanes & 32);
      endTime = root.entangledLanes;
      if (0 !== endTime)
        for (root = root.entanglements, endTime &= lanes; 0 < endTime; )
          (debugTask = 31 - clz32(endTime)),
            (color = 1 << debugTask),
            (lanes |= root[debugTask]),
            (endTime &= ~color);
      entangledRenderLanes = lanes;
      finishQueueingConcurrentUpdates();
      root = getCurrentTime();
      1e3 < root - lastResetTime &&
        ((ReactSharedInternals.recentlyCreatedOwnerStacks = 0),
        (lastResetTime = root));
      ReactStrictModeWarnings.discardPendingWarnings();
      return previousRenderStartTime;
    }
    function handleThrow(root, thrownValue) {
      currentlyRenderingFiber = null;
      ReactSharedInternals.H = ContextOnlyDispatcher;
      ReactSharedInternals.getCurrentStack = null;
      isRendering = !1;
      current = null;
      thrownValue === SuspenseException ||
      thrownValue === SuspenseActionException
        ? ((thrownValue = getSuspendedThenable()),
          (workInProgressSuspendedReason = SuspendedOnImmediate))
        : thrownValue === SuspenseyCommitException
          ? ((thrownValue = getSuspendedThenable()),
            (workInProgressSuspendedReason = SuspendedOnInstance))
          : (workInProgressSuspendedReason =
              thrownValue === SelectiveHydrationException
                ? SuspendedOnHydration
                : null !== thrownValue &&
                    "object" === typeof thrownValue &&
                    "function" === typeof thrownValue.then
                  ? SuspendedOnDeprecatedThrowPromise
                  : SuspendedOnError);
      workInProgressThrownValue = thrownValue;
      var erroredWork = workInProgress;
      null === erroredWork
        ? ((workInProgressRootExitStatus = RootFatalErrored),
          logUncaughtError(
            root,
            createCapturedValueAtFiber(thrownValue, root.current)
          ))
        : erroredWork.mode & ProfileMode &&
          stopProfilerTimerIfRunningAndRecordDuration(erroredWork);
    }
    function shouldRemainOnPreviousScreen() {
      var handler = suspenseHandlerStackCursor.current;
      return null === handler
        ? !0
        : (workInProgressRootRenderLanes & 4194048) ===
            workInProgressRootRenderLanes
          ? null === shellBoundary
            ? !0
            : !1
          : (workInProgressRootRenderLanes & 62914560) ===
                workInProgressRootRenderLanes ||
              0 !== (workInProgressRootRenderLanes & 536870912)
            ? handler === shellBoundary
            : !1;
    }
    function pushDispatcher() {
      var prevDispatcher = ReactSharedInternals.H;
      ReactSharedInternals.H = ContextOnlyDispatcher;
      return null === prevDispatcher ? ContextOnlyDispatcher : prevDispatcher;
    }
    function pushAsyncDispatcher() {
      var prevAsyncDispatcher = ReactSharedInternals.A;
      ReactSharedInternals.A = DefaultAsyncDispatcher;
      return prevAsyncDispatcher;
    }
    function markRenderDerivedCause(fiber) {
      null === workInProgressUpdateTask &&
        (workInProgressUpdateTask =
          null == fiber._debugTask ? null : fiber._debugTask);
    }
    function renderDidSuspendDelayIfPossible() {
      workInProgressRootExitStatus = RootSuspendedWithDelay;
      workInProgressRootDidSkipSuspendedSiblings ||
        ((workInProgressRootRenderLanes & 4194048) !==
          workInProgressRootRenderLanes &&
          null !== suspenseHandlerStackCursor.current) ||
        (workInProgressRootIsPrerendering = !0);
      (0 === (workInProgressRootSkippedLanes & 134217727) &&
        0 === (workInProgressRootInterleavedUpdatedLanes & 134217727)) ||
        null === workInProgressRoot ||
        markRootSuspended(
          workInProgressRoot,
          workInProgressRootRenderLanes,
          workInProgressDeferredLane,
          !1
        );
    }
    function renderRootSync(root, lanes, shouldYieldForPrerendering) {
      var prevExecutionContext = executionContext;
      executionContext |= RenderContext;
      var prevDispatcher = pushDispatcher(),
        prevAsyncDispatcher = pushAsyncDispatcher();
      if (
        workInProgressRoot !== root ||
        workInProgressRootRenderLanes !== lanes
      ) {
        if (isDevToolsPresent) {
          var memoizedUpdaters = root.memoizedUpdaters;
          0 < memoizedUpdaters.size &&
            (restorePendingUpdaters(root, workInProgressRootRenderLanes),
            memoizedUpdaters.clear());
          movePendingFibersToMemoized(root, lanes);
        }
        workInProgressTransitions = null;
        prepareFreshStack(root, lanes);
      }
      lanes = !1;
      memoizedUpdaters = workInProgressRootExitStatus;
      a: do
        try {
          if (
            workInProgressSuspendedReason !== NotSuspended &&
            null !== workInProgress
          ) {
            var unitOfWork = workInProgress,
              thrownValue = workInProgressThrownValue;
            switch (workInProgressSuspendedReason) {
              case SuspendedOnHydration:
                resetWorkInProgressStack();
                memoizedUpdaters = RootSuspendedAtTheShell;
                break a;
              case SuspendedOnImmediate:
              case SuspendedOnData:
              case SuspendedOnAction:
              case SuspendedOnDeprecatedThrowPromise:
                null === suspenseHandlerStackCursor.current && (lanes = !0);
                var reason = workInProgressSuspendedReason;
                workInProgressSuspendedReason = NotSuspended;
                workInProgressThrownValue = null;
                throwAndUnwindWorkLoop(root, unitOfWork, thrownValue, reason);
                if (
                  shouldYieldForPrerendering &&
                  workInProgressRootIsPrerendering
                ) {
                  memoizedUpdaters = RootInProgress;
                  break a;
                }
                break;
              default:
                (reason = workInProgressSuspendedReason),
                  (workInProgressSuspendedReason = NotSuspended),
                  (workInProgressThrownValue = null),
                  throwAndUnwindWorkLoop(root, unitOfWork, thrownValue, reason);
            }
          }
          workLoopSync();
          memoizedUpdaters = workInProgressRootExitStatus;
          break;
        } catch (thrownValue$8) {
          handleThrow(root, thrownValue$8);
        }
      while (1);
      lanes && root.shellSuspendCounter++;
      resetContextDependencies();
      executionContext = prevExecutionContext;
      ReactSharedInternals.H = prevDispatcher;
      ReactSharedInternals.A = prevAsyncDispatcher;
      null === workInProgress &&
        ((workInProgressRoot = null),
        (workInProgressRootRenderLanes = 0),
        finishQueueingConcurrentUpdates());
      return memoizedUpdaters;
    }
    function workLoopSync() {
      for (; null !== workInProgress; ) performUnitOfWork(workInProgress);
    }
    function renderRootConcurrent(root, lanes) {
      var prevExecutionContext = executionContext;
      executionContext |= RenderContext;
      var prevDispatcher = pushDispatcher(),
        prevAsyncDispatcher = pushAsyncDispatcher();
      if (
        workInProgressRoot !== root ||
        workInProgressRootRenderLanes !== lanes
      ) {
        if (isDevToolsPresent) {
          var memoizedUpdaters = root.memoizedUpdaters;
          0 < memoizedUpdaters.size &&
            (restorePendingUpdaters(root, workInProgressRootRenderLanes),
            memoizedUpdaters.clear());
          movePendingFibersToMemoized(root, lanes);
        }
        workInProgressTransitions = null;
        workInProgressRootRenderTargetTime = now$1() + RENDER_TIMEOUT_MS;
        prepareFreshStack(root, lanes);
      } else
        workInProgressRootIsPrerendering = checkIfRootIsPrerendering(
          root,
          lanes
        );
      a: do
        try {
          if (
            workInProgressSuspendedReason !== NotSuspended &&
            null !== workInProgress
          )
            b: switch (
              ((lanes = workInProgress),
              (memoizedUpdaters = workInProgressThrownValue),
              workInProgressSuspendedReason)
            ) {
              case SuspendedOnError:
                workInProgressSuspendedReason = NotSuspended;
                workInProgressThrownValue = null;
                throwAndUnwindWorkLoop(
                  root,
                  lanes,
                  memoizedUpdaters,
                  SuspendedOnError
                );
                break;
              case SuspendedOnData:
              case SuspendedOnAction:
                if (isThenableResolved(memoizedUpdaters)) {
                  workInProgressSuspendedReason = NotSuspended;
                  workInProgressThrownValue = null;
                  replaySuspendedUnitOfWork(lanes);
                  break;
                }
                lanes = function () {
                  (workInProgressSuspendedReason !== SuspendedOnData &&
                    workInProgressSuspendedReason !== SuspendedOnAction) ||
                    workInProgressRoot !== root ||
                    (workInProgressSuspendedReason =
                      SuspendedAndReadyToContinue);
                  ensureRootIsScheduled(root);
                };
                memoizedUpdaters.then(lanes, lanes);
                break a;
              case SuspendedOnImmediate:
                workInProgressSuspendedReason = SuspendedAndReadyToContinue;
                break a;
              case SuspendedOnInstance:
                workInProgressSuspendedReason =
                  SuspendedOnInstanceAndReadyToContinue;
                break a;
              case SuspendedAndReadyToContinue:
                isThenableResolved(memoizedUpdaters)
                  ? ((workInProgressSuspendedReason = NotSuspended),
                    (workInProgressThrownValue = null),
                    replaySuspendedUnitOfWork(lanes))
                  : ((workInProgressSuspendedReason = NotSuspended),
                    (workInProgressThrownValue = null),
                    throwAndUnwindWorkLoop(
                      root,
                      lanes,
                      memoizedUpdaters,
                      SuspendedAndReadyToContinue
                    ));
                break;
              case SuspendedOnInstanceAndReadyToContinue:
                var resource = null;
                switch (workInProgress.tag) {
                  case 26:
                    resource = workInProgress.memoizedState;
                  case 5:
                  case 27:
                    var hostFiber = workInProgress;
                    if (
                      resource
                        ? preloadResource(resource)
                        : hostFiber.stateNode.complete
                    ) {
                      workInProgressSuspendedReason = NotSuspended;
                      workInProgressThrownValue = null;
                      var sibling = hostFiber.sibling;
                      if (null !== sibling) workInProgress = sibling;
                      else {
                        var returnFiber = hostFiber.return;
                        null !== returnFiber
                          ? ((workInProgress = returnFiber),
                            completeUnitOfWork(returnFiber))
                          : (workInProgress = null);
                      }
                      break b;
                    }
                    break;
                  default:
                    console.error(
                      "Unexpected type of fiber triggered a suspensey commit. This is a bug in React."
                    );
                }
                workInProgressSuspendedReason = NotSuspended;
                workInProgressThrownValue = null;
                throwAndUnwindWorkLoop(
                  root,
                  lanes,
                  memoizedUpdaters,
                  SuspendedOnInstanceAndReadyToContinue
                );
                break;
              case SuspendedOnDeprecatedThrowPromise:
                workInProgressSuspendedReason = NotSuspended;
                workInProgressThrownValue = null;
                throwAndUnwindWorkLoop(
                  root,
                  lanes,
                  memoizedUpdaters,
                  SuspendedOnDeprecatedThrowPromise
                );
                break;
              case SuspendedOnHydration:
                resetWorkInProgressStack();
                workInProgressRootExitStatus = RootSuspendedAtTheShell;
                break a;
              default:
                throw Error(
                  "Unexpected SuspendedReason. This is a bug in React."
                );
            }
          null !== ReactSharedInternals.actQueue
            ? workLoopSync()
            : workLoopConcurrentByScheduler();
          break;
        } catch (thrownValue$9) {
          handleThrow(root, thrownValue$9);
        }
      while (1);
      resetContextDependencies();
      ReactSharedInternals.H = prevDispatcher;
      ReactSharedInternals.A = prevAsyncDispatcher;
      executionContext = prevExecutionContext;
      if (null !== workInProgress) return RootInProgress;
      workInProgressRoot = null;
      workInProgressRootRenderLanes = 0;
      finishQueueingConcurrentUpdates();
      return workInProgressRootExitStatus;
    }
    function workLoopConcurrentByScheduler() {
      for (; null !== workInProgress && !shouldYield(); )
        performUnitOfWork(workInProgress);
    }
    function performUnitOfWork(unitOfWork) {
      var current = unitOfWork.alternate;
      (unitOfWork.mode & ProfileMode) !== NoMode
        ? (startProfilerTimer(unitOfWork),
          (current = runWithFiberInDEV(
            unitOfWork,
            beginWork,
            current,
            unitOfWork,
            entangledRenderLanes
          )),
          stopProfilerTimerIfRunningAndRecordDuration(unitOfWork))
        : (current = runWithFiberInDEV(
            unitOfWork,
            beginWork,
            current,
            unitOfWork,
            entangledRenderLanes
          ));
      unitOfWork.memoizedProps = unitOfWork.pendingProps;
      null === current
        ? completeUnitOfWork(unitOfWork)
        : (workInProgress = current);
    }
    function replaySuspendedUnitOfWork(unitOfWork) {
      var next = runWithFiberInDEV(unitOfWork, replayBeginWork, unitOfWork);
      unitOfWork.memoizedProps = unitOfWork.pendingProps;
      null === next ? completeUnitOfWork(unitOfWork) : (workInProgress = next);
    }
    function replayBeginWork(unitOfWork) {
      var current = unitOfWork.alternate,
        isProfilingMode = (unitOfWork.mode & ProfileMode) !== NoMode;
      isProfilingMode && startProfilerTimer(unitOfWork);
      switch (unitOfWork.tag) {
        case 15:
        case 0:
          current = replayFunctionComponent(
            current,
            unitOfWork,
            unitOfWork.pendingProps,
            unitOfWork.type,
            void 0,
            workInProgressRootRenderLanes
          );
          break;
        case 11:
          current = replayFunctionComponent(
            current,
            unitOfWork,
            unitOfWork.pendingProps,
            unitOfWork.type.render,
            unitOfWork.ref,
            workInProgressRootRenderLanes
          );
          break;
        case 5:
          resetHooksOnUnwind(unitOfWork);
        default:
          unwindInterruptedWork(current, unitOfWork),
            (unitOfWork = workInProgress =
              resetWorkInProgress(unitOfWork, entangledRenderLanes)),
            (current = beginWork(current, unitOfWork, entangledRenderLanes));
      }
      isProfilingMode &&
        stopProfilerTimerIfRunningAndRecordDuration(unitOfWork);
      return current;
    }
    function throwAndUnwindWorkLoop(
      root,
      unitOfWork,
      thrownValue,
      suspendedReason
    ) {
      resetContextDependencies();
      resetHooksOnUnwind(unitOfWork);
      thenableState$1 = null;
      thenableIndexCounter$1 = 0;
      var returnFiber = unitOfWork.return;
      try {
        if (
          throwException(
            root,
            returnFiber,
            unitOfWork,
            thrownValue,
            workInProgressRootRenderLanes
          )
        ) {
          workInProgressRootExitStatus = RootFatalErrored;
          logUncaughtError(
            root,
            createCapturedValueAtFiber(thrownValue, root.current)
          );
          workInProgress = null;
          return;
        }
      } catch (error) {
        if (null !== returnFiber) throw ((workInProgress = returnFiber), error);
        workInProgressRootExitStatus = RootFatalErrored;
        logUncaughtError(
          root,
          createCapturedValueAtFiber(thrownValue, root.current)
        );
        workInProgress = null;
        return;
      }
      if (unitOfWork.flags & 32768) {
        if (isHydrating || suspendedReason === SuspendedOnError) root = !0;
        else if (
          workInProgressRootIsPrerendering ||
          0 !== (workInProgressRootRenderLanes & 536870912)
        )
          root = !1;
        else if (
          ((workInProgressRootDidSkipSuspendedSiblings = root = !0),
          suspendedReason === SuspendedOnData ||
            suspendedReason === SuspendedOnAction ||
            suspendedReason === SuspendedOnImmediate ||
            suspendedReason === SuspendedOnDeprecatedThrowPromise)
        )
          (suspendedReason = suspenseHandlerStackCursor.current),
            null !== suspendedReason &&
              13 === suspendedReason.tag &&
              (suspendedReason.flags |= 16384);
        unwindUnitOfWork(unitOfWork, root);
      } else completeUnitOfWork(unitOfWork);
    }
    function completeUnitOfWork(unitOfWork) {
      var completedWork = unitOfWork;
      do {
        if (0 !== (completedWork.flags & 32768)) {
          unwindUnitOfWork(
            completedWork,
            workInProgressRootDidSkipSuspendedSiblings
          );
          return;
        }
        var current = completedWork.alternate;
        unitOfWork = completedWork.return;
        startProfilerTimer(completedWork);
        current = runWithFiberInDEV(
          completedWork,
          completeWork,
          current,
          completedWork,
          entangledRenderLanes
        );
        (completedWork.mode & ProfileMode) !== NoMode &&
          stopProfilerTimerIfRunningAndRecordIncompleteDuration(completedWork);
        if (null !== current) {
          workInProgress = current;
          return;
        }
        completedWork = completedWork.sibling;
        if (null !== completedWork) {
          workInProgress = completedWork;
          return;
        }
        workInProgress = completedWork = unitOfWork;
      } while (null !== completedWork);
      workInProgressRootExitStatus === RootInProgress &&
        (workInProgressRootExitStatus = RootCompleted);
    }
    function unwindUnitOfWork(unitOfWork, skipSiblings) {
      do {
        var next = unwindWork(unitOfWork.alternate, unitOfWork);
        if (null !== next) {
          next.flags &= 32767;
          workInProgress = next;
          return;
        }
        if ((unitOfWork.mode & ProfileMode) !== NoMode) {
          stopProfilerTimerIfRunningAndRecordIncompleteDuration(unitOfWork);
          next = unitOfWork.actualDuration;
          for (var child = unitOfWork.child; null !== child; )
            (next += child.actualDuration), (child = child.sibling);
          unitOfWork.actualDuration = next;
        }
        next = unitOfWork.return;
        null !== next &&
          ((next.flags |= 32768),
          (next.subtreeFlags = 0),
          (next.deletions = null));
        if (
          !skipSiblings &&
          ((unitOfWork = unitOfWork.sibling), null !== unitOfWork)
        ) {
          workInProgress = unitOfWork;
          return;
        }
        workInProgress = unitOfWork = next;
      } while (null !== unitOfWork);
      workInProgressRootExitStatus = RootSuspendedAtTheShell;
      workInProgress = null;
    }
    function commitRoot(
      root,
      finishedWork,
      lanes,
      recoverableErrors,
      transitions,
      didIncludeRenderPhaseUpdate,
      spawnedLane,
      updatedLanes,
      suspendedRetryLanes,
      exitStatus,
      suspendedState,
      suspendedCommitReason,
      completedRenderStartTime,
      completedRenderEndTime
    ) {
      root.cancelPendingCommit = null;
      do flushPendingEffects();
      while (pendingEffectsStatus !== NO_PENDING_EFFECTS);
      ReactStrictModeWarnings.flushLegacyContextWarning();
      ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();
      if ((executionContext & (RenderContext | CommitContext)) !== NoContext)
        throw Error("Should not already be working.");
      setCurrentTrackFromLanes(lanes);
      exitStatus === RootErrored
        ? logErroredRenderPhase(
            completedRenderStartTime,
            completedRenderEndTime,
            lanes,
            workInProgressUpdateTask
          )
        : null !== recoverableErrors
          ? logRecoveredRenderPhase(
              completedRenderStartTime,
              completedRenderEndTime,
              lanes,
              recoverableErrors,
              null !== finishedWork &&
                null !== finishedWork.alternate &&
                finishedWork.alternate.memoizedState.isDehydrated &&
                0 !== (finishedWork.flags & 256),
              workInProgressUpdateTask
            )
          : logRenderPhase(
              completedRenderStartTime,
              completedRenderEndTime,
              lanes,
              workInProgressUpdateTask
            );
      if (null !== finishedWork) {
        0 === lanes &&
          console.error(
            "finishedLanes should not be empty during a commit. This is a bug in React."
          );
        if (finishedWork === root.current)
          throw Error(
            "Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue."
          );
        didIncludeRenderPhaseUpdate =
          finishedWork.lanes | finishedWork.childLanes;
        didIncludeRenderPhaseUpdate |= concurrentlyUpdatedLanes;
        markRootFinished(
          root,
          lanes,
          didIncludeRenderPhaseUpdate,
          spawnedLane,
          updatedLanes,
          suspendedRetryLanes
        );
        root === workInProgressRoot &&
          ((workInProgress = workInProgressRoot = null),
          (workInProgressRootRenderLanes = 0));
        pendingFinishedWork = finishedWork;
        pendingEffectsRoot = root;
        pendingEffectsLanes = lanes;
        pendingEffectsRemainingLanes = didIncludeRenderPhaseUpdate;
        pendingPassiveTransitions = transitions;
        pendingRecoverableErrors = recoverableErrors;
        pendingEffectsRenderEndTime = completedRenderEndTime;
        pendingSuspendedCommitReason = suspendedCommitReason;
        pendingDelayedCommitReason = IMMEDIATE_COMMIT;
        pendingSuspendedViewTransitionReason = null;
        0 !== finishedWork.actualDuration ||
        0 !== (finishedWork.subtreeFlags & 10256) ||
        0 !== (finishedWork.flags & 10256)
          ? ((root.callbackNode = null),
            (root.callbackPriority = 0),
            scheduleCallback$1(NormalPriority$1, function () {
              schedulerEvent = window.event;
              pendingDelayedCommitReason === IMMEDIATE_COMMIT &&
                (pendingDelayedCommitReason = DELAYED_PASSIVE_COMMIT);
              flushPassiveEffects();
              return null;
            }))
          : ((root.callbackNode = null), (root.callbackPriority = 0));
        commitErrors = null;
        commitStartTime = now();
        null !== suspendedCommitReason &&
          logSuspendedCommitPhase(
            completedRenderEndTime,
            commitStartTime,
            suspendedCommitReason,
            workInProgressUpdateTask
          );
        recoverableErrors = 0 !== (finishedWork.flags & 13878);
        if (0 !== (finishedWork.subtreeFlags & 13878) || recoverableErrors) {
          recoverableErrors = ReactSharedInternals.T;
          ReactSharedInternals.T = null;
          transitions = ReactDOMSharedInternals.p;
          ReactDOMSharedInternals.p = DiscreteEventPriority;
          spawnedLane = executionContext;
          executionContext |= CommitContext;
          try {
            commitBeforeMutationEffects(root, finishedWork, lanes);
          } finally {
            (executionContext = spawnedLane),
              (ReactDOMSharedInternals.p = transitions),
              (ReactSharedInternals.T = recoverableErrors);
          }
        }
        pendingEffectsStatus = PENDING_MUTATION_PHASE;
        flushMutationEffects();
        flushLayoutEffects();
        flushSpawnedWork();
      }
    }
    function flushMutationEffects() {
      if (pendingEffectsStatus === PENDING_MUTATION_PHASE) {
        pendingEffectsStatus = NO_PENDING_EFFECTS;
        var root = pendingEffectsRoot,
          finishedWork = pendingFinishedWork,
          lanes = pendingEffectsLanes,
          rootMutationHasEffect = 0 !== (finishedWork.flags & 13878);
        if (
          0 !== (finishedWork.subtreeFlags & 13878) ||
          rootMutationHasEffect
        ) {
          rootMutationHasEffect = ReactSharedInternals.T;
          ReactSharedInternals.T = null;
          var previousPriority = ReactDOMSharedInternals.p;
          ReactDOMSharedInternals.p = DiscreteEventPriority;
          var prevExecutionContext = executionContext;
          executionContext |= CommitContext;
          try {
            inProgressLanes = lanes;
            inProgressRoot = root;
            resetComponentEffectTimers();
            commitMutationEffectsOnFiber(finishedWork, root);
            inProgressRoot = inProgressLanes = null;
            lanes = selectionInformation;
            var curFocusedElem = getActiveElementDeep(root.containerInfo),
              priorFocusedElem = lanes.focusedElem,
              priorSelectionRange = lanes.selectionRange;
            if (
              curFocusedElem !== priorFocusedElem &&
              priorFocusedElem &&
              priorFocusedElem.ownerDocument &&
              containsNode(
                priorFocusedElem.ownerDocument.documentElement,
                priorFocusedElem
              )
            ) {
              if (
                null !== priorSelectionRange &&
                hasSelectionCapabilities(priorFocusedElem)
              ) {
                var start = priorSelectionRange.start,
                  end = priorSelectionRange.end;
                void 0 === end && (end = start);
                if ("selectionStart" in priorFocusedElem)
                  (priorFocusedElem.selectionStart = start),
                    (priorFocusedElem.selectionEnd = Math.min(
                      end,
                      priorFocusedElem.value.length
                    ));
                else {
                  var doc = priorFocusedElem.ownerDocument || document,
                    win = (doc && doc.defaultView) || window;
                  if (win.getSelection) {
                    var selection = win.getSelection(),
                      length = priorFocusedElem.textContent.length,
                      start$jscomp$0 = Math.min(
                        priorSelectionRange.start,
                        length
                      ),
                      end$jscomp$0 =
                        void 0 === priorSelectionRange.end
                          ? start$jscomp$0
                          : Math.min(priorSelectionRange.end, length);
                    !selection.extend &&
                      start$jscomp$0 > end$jscomp$0 &&
                      ((curFocusedElem = end$jscomp$0),
                      (end$jscomp$0 = start$jscomp$0),
                      (start$jscomp$0 = curFocusedElem));
                    var startMarker = getNodeForCharacterOffset(
                        priorFocusedElem,
                        start$jscomp$0
                      ),
                      endMarker = getNodeForCharacterOffset(
                        priorFocusedElem,
                        end$jscomp$0
                      );
                    if (
                      startMarker &&
                      endMarker &&
                      (1 !== selection.rangeCount ||
                        selection.anchorNode !== startMarker.node ||
                        selection.anchorOffset !== startMarker.offset ||
                        selection.focusNode !== endMarker.node ||
                        selection.focusOffset !== endMarker.offset)
                    ) {
                      var range = doc.createRange();
                      range.setStart(startMarker.node, startMarker.offset);
                      selection.removeAllRanges();
                      start$jscomp$0 > end$jscomp$0
                        ? (selection.addRange(range),
                          selection.extend(endMarker.node, endMarker.offset))
                        : (range.setEnd(endMarker.node, endMarker.offset),
                          selection.addRange(range));
                    }
                  }
                }
              }
              doc = [];
              for (
                selection = priorFocusedElem;
                (selection = selection.parentNode);

              )
                1 === selection.nodeType &&
                  doc.push({
                    element: selection,
                    left: selection.scrollLeft,
                    top: selection.scrollTop
                  });
              "function" === typeof priorFocusedElem.focus &&
                priorFocusedElem.focus();
              for (
                priorFocusedElem = 0;
                priorFocusedElem < doc.length;
                priorFocusedElem++
              ) {
                var info = doc[priorFocusedElem];
                info.element.scrollLeft = info.left;
                info.element.scrollTop = info.top;
              }
            }
            _enabled = !!eventsEnabled;
            selectionInformation = eventsEnabled = null;
          } finally {
            (executionContext = prevExecutionContext),
              (ReactDOMSharedInternals.p = previousPriority),
              (ReactSharedInternals.T = rootMutationHasEffect);
          }
        }
        root.current = finishedWork;
        pendingEffectsStatus = PENDING_LAYOUT_PHASE;
      }
    }
    function flushLayoutEffects() {
      if (pendingEffectsStatus === PENDING_LAYOUT_PHASE) {
        pendingEffectsStatus = NO_PENDING_EFFECTS;
        var suspendedViewTransitionReason =
          pendingSuspendedViewTransitionReason;
        if (null !== suspendedViewTransitionReason) {
          commitStartTime = now();
          var startTime = commitEndTime,
            endTime = commitStartTime;
          !supportsUserTiming ||
            endTime <= startTime ||
            (animatingTask
              ? animatingTask.run(
                  console.timeStamp.bind(
                    console,
                    suspendedViewTransitionReason,
                    startTime,
                    endTime,
                    currentTrack,
                    LANES_TRACK_GROUP,
                    "secondary-light"
                  )
                )
              : console.timeStamp(
                  suspendedViewTransitionReason,
                  startTime,
                  endTime,
                  currentTrack,
                  LANES_TRACK_GROUP,
                  "secondary-light"
                ));
        }
        suspendedViewTransitionReason = pendingEffectsRoot;
        startTime = pendingFinishedWork;
        endTime = pendingEffectsLanes;
        var rootHasLayoutEffect = 0 !== (startTime.flags & 8772);
        if (0 !== (startTime.subtreeFlags & 8772) || rootHasLayoutEffect) {
          rootHasLayoutEffect = ReactSharedInternals.T;
          ReactSharedInternals.T = null;
          var _previousPriority = ReactDOMSharedInternals.p;
          ReactDOMSharedInternals.p = DiscreteEventPriority;
          var _prevExecutionContext = executionContext;
          executionContext |= CommitContext;
          try {
            (inProgressLanes = endTime),
              (inProgressRoot = suspendedViewTransitionReason),
              resetComponentEffectTimers(),
              commitLayoutEffectOnFiber(
                suspendedViewTransitionReason,
                startTime.alternate,
                startTime
              ),
              (inProgressRoot = inProgressLanes = null);
          } finally {
            (executionContext = _prevExecutionContext),
              (ReactDOMSharedInternals.p = _previousPriority),
              (ReactSharedInternals.T = rootHasLayoutEffect);
          }
        }
        suspendedViewTransitionReason = pendingEffectsRenderEndTime;
        startTime = pendingSuspendedCommitReason;
        commitEndTime = now();
        suspendedViewTransitionReason =
          null === startTime ? suspendedViewTransitionReason : commitStartTime;
        startTime = commitEndTime;
        endTime = pendingDelayedCommitReason === ABORTED_VIEW_TRANSITION_COMMIT;
        rootHasLayoutEffect = workInProgressUpdateTask;
        null !== commitErrors
          ? logCommitErrored(
              suspendedViewTransitionReason,
              startTime,
              commitErrors,
              !1,
              rootHasLayoutEffect
            )
          : !supportsUserTiming ||
            startTime <= suspendedViewTransitionReason ||
            (rootHasLayoutEffect
              ? rootHasLayoutEffect.run(
                  console.timeStamp.bind(
                    console,
                    endTime ? "Commit Interrupted View Transition" : "Commit",
                    suspendedViewTransitionReason,
                    startTime,
                    currentTrack,
                    LANES_TRACK_GROUP,
                    endTime ? "error" : "secondary-dark"
                  )
                )
              : console.timeStamp(
                  endTime ? "Commit Interrupted View Transition" : "Commit",
                  suspendedViewTransitionReason,
                  startTime,
                  currentTrack,
                  LANES_TRACK_GROUP,
                  endTime ? "error" : "secondary-dark"
                ));
        pendingEffectsStatus = PENDING_AFTER_MUTATION_PHASE;
      }
    }
    function flushSpawnedWork() {
      if (
        pendingEffectsStatus === PENDING_SPAWNED_WORK ||
        pendingEffectsStatus === PENDING_AFTER_MUTATION_PHASE
      ) {
        if (pendingEffectsStatus === PENDING_SPAWNED_WORK) {
          var startViewTransitionStartTime = commitEndTime;
          commitEndTime = now();
          var endTime = commitEndTime,
            abortedViewTransition =
              pendingDelayedCommitReason === ABORTED_VIEW_TRANSITION_COMMIT;
          !supportsUserTiming ||
            endTime <= startViewTransitionStartTime ||
            (animatingTask
              ? animatingTask.run(
                  console.timeStamp.bind(
                    console,
                    abortedViewTransition
                      ? "Interrupted View Transition"
                      : "Starting Animation",
                    startViewTransitionStartTime,
                    endTime,
                    currentTrack,
                    LANES_TRACK_GROUP,
                    abortedViewTransition ? "error" : "secondary-light"
                  )
                )
              : console.timeStamp(
                  abortedViewTransition
                    ? "Interrupted View Transition"
                    : "Starting Animation",
                  startViewTransitionStartTime,
                  endTime,
                  currentTrack,
                  LANES_TRACK_GROUP,
                  abortedViewTransition ? " error" : "secondary-light"
                ));
          pendingDelayedCommitReason !== ABORTED_VIEW_TRANSITION_COMMIT &&
            (pendingDelayedCommitReason = ANIMATION_STARTED_COMMIT);
        }
        pendingEffectsStatus = NO_PENDING_EFFECTS;
        requestPaint();
        startViewTransitionStartTime = pendingEffectsRoot;
        var finishedWork = pendingFinishedWork;
        endTime = pendingEffectsLanes;
        abortedViewTransition = pendingRecoverableErrors;
        var rootDidHavePassiveEffects =
          0 !== finishedWork.actualDuration ||
          0 !== (finishedWork.subtreeFlags & 10256) ||
          0 !== (finishedWork.flags & 10256);
        rootDidHavePassiveEffects
          ? (pendingEffectsStatus = PENDING_PASSIVE_PHASE)
          : ((pendingEffectsStatus = NO_PENDING_EFFECTS),
            (pendingFinishedWork = pendingEffectsRoot = null),
            releaseRootPooledCache(
              startViewTransitionStartTime,
              startViewTransitionStartTime.pendingLanes
            ),
            (nestedPassiveUpdateCount = 0),
            (rootWithPassiveNestedUpdates = null));
        var remainingLanes = startViewTransitionStartTime.pendingLanes;
        0 === remainingLanes && (legacyErrorBoundariesThatAlreadyFailed = null);
        rootDidHavePassiveEffects ||
          commitDoubleInvokeEffectsInDEV(startViewTransitionStartTime);
        remainingLanes = lanesToEventPriority(endTime);
        finishedWork = finishedWork.stateNode;
        if (
          injectedHook &&
          "function" === typeof injectedHook.onCommitFiberRoot
        )
          try {
            var didError = 128 === (finishedWork.current.flags & 128);
            switch (remainingLanes) {
              case DiscreteEventPriority:
                var schedulerPriority = ImmediatePriority;
                break;
              case ContinuousEventPriority:
                schedulerPriority = UserBlockingPriority;
                break;
              case DefaultEventPriority:
                schedulerPriority = NormalPriority$1;
                break;
              case IdleEventPriority:
                schedulerPriority = IdlePriority;
                break;
              default:
                schedulerPriority = NormalPriority$1;
            }
            injectedHook.onCommitFiberRoot(
              rendererID,
              finishedWork,
              schedulerPriority,
              didError
            );
          } catch (err) {
            hasLoggedError ||
              ((hasLoggedError = !0),
              console.error(
                "React instrumentation encountered an error: %o",
                err
              ));
          }
        isDevToolsPresent &&
          startViewTransitionStartTime.memoizedUpdaters.clear();
        onCommitRoot();
        if (null !== abortedViewTransition) {
          didError = ReactSharedInternals.T;
          schedulerPriority = ReactDOMSharedInternals.p;
          ReactDOMSharedInternals.p = DiscreteEventPriority;
          ReactSharedInternals.T = null;
          try {
            var onRecoverableError =
              startViewTransitionStartTime.onRecoverableError;
            for (
              finishedWork = 0;
              finishedWork < abortedViewTransition.length;
              finishedWork++
            ) {
              var recoverableError = abortedViewTransition[finishedWork],
                errorInfo = makeErrorInfo(recoverableError.stack);
              runWithFiberInDEV(
                recoverableError.source,
                onRecoverableError,
                recoverableError.value,
                errorInfo
              );
            }
          } finally {
            (ReactSharedInternals.T = didError),
              (ReactDOMSharedInternals.p = schedulerPriority);
          }
        }
        0 !== (pendingEffectsLanes & 3) && flushPendingEffects();
        ensureRootIsScheduled(startViewTransitionStartTime);
        remainingLanes = startViewTransitionStartTime.pendingLanes;
        0 !== (endTime & 261930) && 0 !== (remainingLanes & 42)
          ? ((nestedUpdateScheduled = !0),
            startViewTransitionStartTime === rootWithNestedUpdates
              ? nestedUpdateCount++
              : ((nestedUpdateCount = 0),
                (rootWithNestedUpdates = startViewTransitionStartTime)))
          : (nestedUpdateCount = 0);
        rootDidHavePassiveEffects || finalizeRender(endTime, commitEndTime);
        flushSyncWorkAcrossRoots_impl(0, !1);
      }
    }
    function makeErrorInfo(componentStack) {
      componentStack = { componentStack: componentStack };
      Object.defineProperty(componentStack, "digest", {
        get: function () {
          console.error(
            'You are accessing "digest" from the errorInfo object passed to onRecoverableError. This property is no longer provided as part of errorInfo but can be accessed as a property of the Error instance itself.'
          );
        }
      });
      return componentStack;
    }
    function releaseRootPooledCache(root, remainingLanes) {
      0 === (root.pooledCacheLanes &= remainingLanes) &&
        ((remainingLanes = root.pooledCache),
        null != remainingLanes &&
          ((root.pooledCache = null), releaseCache(remainingLanes)));
    }
    function flushPendingEffects() {
      flushMutationEffects();
      flushLayoutEffects();
      flushSpawnedWork();
      return flushPassiveEffects();
    }
    function flushPassiveEffects() {
      if (pendingEffectsStatus !== PENDING_PASSIVE_PHASE) return !1;
      var root = pendingEffectsRoot,
        remainingLanes = pendingEffectsRemainingLanes;
      pendingEffectsRemainingLanes = 0;
      var renderPriority = lanesToEventPriority(pendingEffectsLanes),
        priority =
          0 === DefaultEventPriority || DefaultEventPriority > renderPriority
            ? DefaultEventPriority
            : renderPriority;
      renderPriority = ReactSharedInternals.T;
      var previousPriority = ReactDOMSharedInternals.p;
      try {
        ReactDOMSharedInternals.p = priority;
        ReactSharedInternals.T = null;
        var transitions = pendingPassiveTransitions;
        pendingPassiveTransitions = null;
        priority = pendingEffectsRoot;
        var lanes = pendingEffectsLanes;
        pendingEffectsStatus = NO_PENDING_EFFECTS;
        pendingFinishedWork = pendingEffectsRoot = null;
        pendingEffectsLanes = 0;
        if ((executionContext & (RenderContext | CommitContext)) !== NoContext)
          throw Error("Cannot flush passive effects while already rendering.");
        setCurrentTrackFromLanes(lanes);
        isFlushingPassiveEffects = !0;
        didScheduleUpdateDuringPassiveEffects = !1;
        var passiveEffectStartTime = 0;
        commitErrors = null;
        passiveEffectStartTime = now$1();
        if (pendingDelayedCommitReason === ANIMATION_STARTED_COMMIT)
          logAnimatingPhase(
            commitEndTime,
            passiveEffectStartTime,
            animatingTask
          );
        else {
          var startTime = commitEndTime,
            endTime = passiveEffectStartTime,
            delayedUntilPaint =
              pendingDelayedCommitReason === DELAYED_PASSIVE_COMMIT;
          !supportsUserTiming ||
            endTime <= startTime ||
            (workInProgressUpdateTask
              ? workInProgressUpdateTask.run(
                  console.timeStamp.bind(
                    console,
                    delayedUntilPaint ? "Waiting for Paint" : "Waiting",
                    startTime,
                    endTime,
                    currentTrack,
                    LANES_TRACK_GROUP,
                    "secondary-light"
                  )
                )
              : console.timeStamp(
                  delayedUntilPaint ? "Waiting for Paint" : "Waiting",
                  startTime,
                  endTime,
                  currentTrack,
                  LANES_TRACK_GROUP,
                  "secondary-light"
                ));
        }
        startTime = executionContext;
        executionContext |= CommitContext;
        var finishedWork = priority.current;
        resetComponentEffectTimers();
        commitPassiveUnmountOnFiber(finishedWork);
        var finishedWork$jscomp$0 = priority.current;
        finishedWork = pendingEffectsRenderEndTime;
        resetComponentEffectTimers();
        commitPassiveMountOnFiber(
          priority,
          finishedWork$jscomp$0,
          lanes,
          transitions,
          finishedWork
        );
        commitDoubleInvokeEffectsInDEV(priority);
        executionContext = startTime;
        var passiveEffectsEndTime = now$1();
        finishedWork$jscomp$0 = passiveEffectStartTime;
        finishedWork = workInProgressUpdateTask;
        null !== commitErrors
          ? logCommitErrored(
              finishedWork$jscomp$0,
              passiveEffectsEndTime,
              commitErrors,
              !0,
              finishedWork
            )
          : !supportsUserTiming ||
            passiveEffectsEndTime <= finishedWork$jscomp$0 ||
            (finishedWork
              ? finishedWork.run(
                  console.timeStamp.bind(
                    console,
                    "Remaining Effects",
                    finishedWork$jscomp$0,
                    passiveEffectsEndTime,
                    currentTrack,
                    LANES_TRACK_GROUP,
                    "secondary-dark"
                  )
                )
              : console.timeStamp(
                  "Remaining Effects",
                  finishedWork$jscomp$0,
                  passiveEffectsEndTime,
                  currentTrack,
                  LANES_TRACK_GROUP,
                  "secondary-dark"
                ));
        finalizeRender(lanes, passiveEffectsEndTime);
        flushSyncWorkAcrossRoots_impl(0, !1);
        didScheduleUpdateDuringPassiveEffects
          ? priority === rootWithPassiveNestedUpdates
            ? nestedPassiveUpdateCount++
            : ((nestedPassiveUpdateCount = 0),
              (rootWithPassiveNestedUpdates = priority))
          : (nestedPassiveUpdateCount = 0);
        didScheduleUpdateDuringPassiveEffects = isFlushingPassiveEffects = !1;
        if (
          injectedHook &&
          "function" === typeof injectedHook.onPostCommitFiberRoot
        )
          try {
            injectedHook.onPostCommitFiberRoot(rendererID, priority);
          } catch (err) {
            hasLoggedError ||
              ((hasLoggedError = !0),
              console.error(
                "React instrumentation encountered an error: %o",
                err
              ));
          }
        var stateNode = priority.current.stateNode;
        stateNode.effectDuration = 0;
        stateNode.passiveEffectDuration = 0;
        return !0;
      } finally {
        (ReactDOMSharedInternals.p = previousPriority),
          (ReactSharedInternals.T = renderPriority),
          releaseRootPooledCache(root, remainingLanes);
      }
    }
    function captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {
      sourceFiber = createCapturedValueAtFiber(error, sourceFiber);
      recordEffectError(sourceFiber);
      sourceFiber = createRootErrorUpdate(rootFiber.stateNode, sourceFiber, 2);
      rootFiber = enqueueUpdate(rootFiber, sourceFiber, 2);
      null !== rootFiber &&
        (markRootUpdated$1(rootFiber, 2), ensureRootIsScheduled(rootFiber));
    }
    function captureCommitPhaseError(
      sourceFiber,
      nearestMountedAncestor,
      error
    ) {
      isRunningInsertionEffect = !1;
      if (3 === sourceFiber.tag)
        captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error);
      else {
        for (; null !== nearestMountedAncestor; ) {
          if (3 === nearestMountedAncestor.tag) {
            captureCommitPhaseErrorOnRoot(
              nearestMountedAncestor,
              sourceFiber,
              error
            );
            return;
          }
          if (1 === nearestMountedAncestor.tag) {
            var instance = nearestMountedAncestor.stateNode;
            if (
              "function" ===
                typeof nearestMountedAncestor.type.getDerivedStateFromError ||
              ("function" === typeof instance.componentDidCatch &&
                (null === legacyErrorBoundariesThatAlreadyFailed ||
                  !legacyErrorBoundariesThatAlreadyFailed.has(instance)))
            ) {
              sourceFiber = createCapturedValueAtFiber(error, sourceFiber);
              recordEffectError(sourceFiber);
              error = createClassErrorUpdate(2);
              instance = enqueueUpdate(nearestMountedAncestor, error, 2);
              null !== instance &&
                (initializeClassErrorUpdate(
                  error,
                  instance,
                  nearestMountedAncestor,
                  sourceFiber
                ),
                markRootUpdated$1(instance, 2),
                ensureRootIsScheduled(instance));
              return;
            }
          }
          nearestMountedAncestor = nearestMountedAncestor.return;
        }
        console.error(
          "Internal React error: Attempted to capture a commit phase error inside a detached tree. This indicates a bug in React. Potential causes include deleting the same fiber more than once, committing an already-finished tree, or an inconsistent return pointer.\n\nError message:\n\n%s",
          error
        );
      }
    }
    function attachPingListener(root, wakeable, lanes) {
      var pingCache = root.pingCache;
      if (null === pingCache) {
        pingCache = root.pingCache = new PossiblyWeakMap();
        var threadIDs = new Set();
        pingCache.set(wakeable, threadIDs);
      } else
        (threadIDs = pingCache.get(wakeable)),
          void 0 === threadIDs &&
            ((threadIDs = new Set()), pingCache.set(wakeable, threadIDs));
      threadIDs.has(lanes) ||
        ((workInProgressRootDidAttachPingListener = !0),
        threadIDs.add(lanes),
        (pingCache = pingSuspendedRoot.bind(null, root, wakeable, lanes)),
        isDevToolsPresent && restorePendingUpdaters(root, lanes),
        wakeable.then(pingCache, pingCache));
    }
    function pingSuspendedRoot(root, wakeable, pingedLanes) {
      var pingCache = root.pingCache;
      null !== pingCache && pingCache.delete(wakeable);
      root.pingedLanes |= root.suspendedLanes & pingedLanes;
      root.warmLanes &= ~pingedLanes;
      0 !== (pingedLanes & 127)
        ? 0 > blockingUpdateTime &&
          ((blockingClampTime = blockingUpdateTime = now()),
          (blockingUpdateTask = createTask("Promise Resolved")),
          (blockingUpdateType = PINGED_UPDATE))
        : 0 !== (pingedLanes & 4194048) &&
          0 > transitionUpdateTime &&
          ((transitionClampTime = transitionUpdateTime = now()),
          (transitionUpdateTask = createTask("Promise Resolved")),
          (transitionUpdateType = PINGED_UPDATE));
      isConcurrentActEnvironment() &&
        null === ReactSharedInternals.actQueue &&
        console.error(
          "A suspended resource finished loading inside a test, but the event was not wrapped in act(...).\n\nWhen testing, code that resolves suspended data should be wrapped into act(...):\n\nact(() => {\n  /* finish loading suspended data */\n});\n/* assert on the output */\n\nThis ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act"
        );
      workInProgressRoot === root &&
        (workInProgressRootRenderLanes & pingedLanes) === pingedLanes &&
        (workInProgressRootExitStatus === RootSuspendedWithDelay ||
        (workInProgressRootExitStatus === RootSuspended &&
          (workInProgressRootRenderLanes & 62914560) ===
            workInProgressRootRenderLanes &&
          now$1() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS)
          ? (executionContext & RenderContext) === NoContext &&
            prepareFreshStack(root, 0)
          : (workInProgressRootPingedLanes |= pingedLanes),
        workInProgressSuspendedRetryLanes === workInProgressRootRenderLanes &&
          (workInProgressSuspendedRetryLanes = 0));
      ensureRootIsScheduled(root);
    }
    function retryTimedOutBoundary(boundaryFiber, retryLane) {
      0 === retryLane && (retryLane = claimNextRetryLane());
      boundaryFiber = enqueueConcurrentRenderForLane(boundaryFiber, retryLane);
      null !== boundaryFiber &&
        (markRootUpdated$1(boundaryFiber, retryLane),
        ensureRootIsScheduled(boundaryFiber));
    }
    function retryDehydratedSuspenseBoundary(boundaryFiber) {
      var suspenseState = boundaryFiber.memoizedState,
        retryLane = 0;
      null !== suspenseState && (retryLane = suspenseState.retryLane);
      retryTimedOutBoundary(boundaryFiber, retryLane);
    }
    function resolveRetryWakeable(boundaryFiber, wakeable) {
      var retryLane = 0;
      switch (boundaryFiber.tag) {
        case 31:
        case 13:
          var retryCache = boundaryFiber.stateNode;
          var suspenseState = boundaryFiber.memoizedState;
          null !== suspenseState && (retryLane = suspenseState.retryLane);
          break;
        case 19:
          retryCache = boundaryFiber.stateNode;
          break;
        case 22:
          retryCache = boundaryFiber.stateNode._retryCache;
          break;
        default:
          throw Error(
            "Pinged unknown suspense boundary type. This is probably a bug in React."
          );
      }
      null !== retryCache && retryCache.delete(wakeable);
      retryTimedOutBoundary(boundaryFiber, retryLane);
    }
    function recursivelyTraverseAndDoubleInvokeEffectsInDEV(
      root$jscomp$0,
      parentFiber,
      isInStrictMode
    ) {
      if (0 !== (parentFiber.subtreeFlags & 67117056))
        for (parentFiber = parentFiber.child; null !== parentFiber; ) {
          var root = root$jscomp$0,
            fiber = parentFiber,
            isStrictModeFiber = fiber.type === REACT_STRICT_MODE_TYPE;
          isStrictModeFiber = isInStrictMode || isStrictModeFiber;
          22 !== fiber.tag
            ? fiber.flags & 67108864
              ? isStrictModeFiber &&
                runWithFiberInDEV(
                  fiber,
                  doubleInvokeEffectsOnFiber,
                  root,
                  fiber
                )
              : recursivelyTraverseAndDoubleInvokeEffectsInDEV(
                  root,
                  fiber,
                  isStrictModeFiber
                )
            : null === fiber.memoizedState &&
              (isStrictModeFiber && fiber.flags & 8192
                ? runWithFiberInDEV(
                    fiber,
                    doubleInvokeEffectsOnFiber,
                    root,
                    fiber
                  )
                : fiber.subtreeFlags & 67108864 &&
                  runWithFiberInDEV(
                    fiber,
                    recursivelyTraverseAndDoubleInvokeEffectsInDEV,
                    root,
                    fiber,
                    isStrictModeFiber
                  ));
          parentFiber = parentFiber.sibling;
        }
    }
    function doubleInvokeEffectsOnFiber(root, fiber) {
      setIsStrictModeForDevtools(!0);
      try {
        disappearLayoutEffects(fiber),
          disconnectPassiveEffect(fiber),
          reappearLayoutEffects(root, fiber.alternate, fiber, !1),
          reconnectPassiveEffects(root, fiber, 0, null, !1, 0);
      } finally {
        setIsStrictModeForDevtools(!1);
      }
    }
    function commitDoubleInvokeEffectsInDEV(root) {
      var doubleInvokeEffects = !0;
      root.current.mode & (StrictLegacyMode | StrictEffectsMode) ||
        (doubleInvokeEffects = !1);
      recursivelyTraverseAndDoubleInvokeEffectsInDEV(
        root,
        root.current,
        doubleInvokeEffects
      );
    }
    function warnAboutUpdateOnNotYetMountedFiberInDEV(fiber) {
      if ((executionContext & RenderContext) === NoContext) {
        var tag = fiber.tag;
        if (
          3 === tag ||
          1 === tag ||
          0 === tag ||
          11 === tag ||
          14 === tag ||
          15 === tag
        ) {
          tag = getComponentNameFromFiber(fiber) || "ReactComponent";
          if (null !== didWarnStateUpdateForNotYetMountedComponent) {
            if (didWarnStateUpdateForNotYetMountedComponent.has(tag)) return;
            didWarnStateUpdateForNotYetMountedComponent.add(tag);
          } else didWarnStateUpdateForNotYetMountedComponent = new Set([tag]);
          runWithFiberInDEV(fiber, function () {
            console.error(
              "Can't perform a React state update on a component that hasn't mounted yet. This indicates that you have a side-effect in your render function that asynchronously tries to update the component. Move this work to useEffect instead."
            );
          });
        }
      }
    }
    function restorePendingUpdaters(root, lanes) {
      isDevToolsPresent &&
        root.memoizedUpdaters.forEach(function (schedulingFiber) {
          addFiberToLanesMap(root, schedulingFiber, lanes);
        });
    }
    function scheduleCallback$1(priorityLevel, callback) {
      var actQueue = ReactSharedInternals.actQueue;
      return null !== actQueue
        ? (actQueue.push(callback), fakeActCallbackNode$1)
        : scheduleCallback$3(priorityLevel, callback);
    }
    function warnIfUpdatesNotWrappedWithActDEV(fiber) {
      isConcurrentActEnvironment() &&
        null === ReactSharedInternals.actQueue &&
        runWithFiberInDEV(fiber, function () {
          console.error(
            "An update to %s inside a test was not wrapped in act(...).\n\nWhen testing, code that causes React state updates should be wrapped into act(...):\n\nact(() => {\n  /* fire events that update state */\n});\n/* assert on the output */\n\nThis ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act",
            getComponentNameFromFiber(fiber)
          );
        });
    }
    function ensureRootIsScheduled(root) {
      root !== lastScheduledRoot &&
        null === root.next &&
        (null === lastScheduledRoot
          ? (firstScheduledRoot = lastScheduledRoot = root)
          : (lastScheduledRoot = lastScheduledRoot.next = root));
      mightHavePendingSyncWork = !0;
      null !== ReactSharedInternals.actQueue
        ? didScheduleMicrotask_act ||
          ((didScheduleMicrotask_act = !0), scheduleImmediateRootScheduleTask())
        : didScheduleMicrotask ||
          ((didScheduleMicrotask = !0), scheduleImmediateRootScheduleTask());
    }
    function flushSyncWorkAcrossRoots_impl(syncTransitionLanes, onlyLegacy) {
      if (!isFlushingWork && mightHavePendingSyncWork) {
        isFlushingWork = !0;
        do {
          var didPerformSomeWork = !1;
          for (var root = firstScheduledRoot; null !== root; ) {
            if (!onlyLegacy)
              if (0 !== syncTransitionLanes) {
                var pendingLanes = root.pendingLanes;
                if (0 === pendingLanes) var nextLanes = 0;
                else {
                  var suspendedLanes = root.suspendedLanes,
                    pingedLanes = root.pingedLanes;
                  nextLanes =
                    (1 << (31 - clz32(42 | syncTransitionLanes) + 1)) - 1;
                  nextLanes &= pendingLanes & ~(suspendedLanes & ~pingedLanes);
                  nextLanes =
                    nextLanes & 201326741
                      ? (nextLanes & 201326741) | 1
                      : nextLanes
                        ? nextLanes | 2
                        : 0;
                }
                0 !== nextLanes &&
                  ((didPerformSomeWork = !0),
                  performSyncWorkOnRoot(root, nextLanes));
              } else
                (nextLanes = workInProgressRootRenderLanes),
                  (nextLanes = getNextLanes(
                    root,
                    root === workInProgressRoot ? nextLanes : 0,
                    null !== root.cancelPendingCommit ||
                      root.timeoutHandle !== noTimeout
                  )),
                  0 === (nextLanes & 3) ||
                    checkIfRootIsPrerendering(root, nextLanes) ||
                    ((didPerformSomeWork = !0),
                    performSyncWorkOnRoot(root, nextLanes));
            root = root.next;
          }
        } while (didPerformSomeWork);
        isFlushingWork = !1;
      }
    }
    function processRootScheduleInImmediateTask() {
      schedulerEvent = window.event;
      processRootScheduleInMicrotask();
    }
    function processRootScheduleInMicrotask() {
      mightHavePendingSyncWork =
        didScheduleMicrotask_act =
        didScheduleMicrotask =
          !1;
      var syncTransitionLanes = 0;
      0 !== currentEventTransitionLane &&
        shouldAttemptEagerTransition() &&
        (syncTransitionLanes = currentEventTransitionLane);
      for (
        var currentTime = now$1(), prev = null, root = firstScheduledRoot;
        null !== root;

      ) {
        var next = root.next,
          nextLanes = scheduleTaskForRootDuringMicrotask(root, currentTime);
        if (0 === nextLanes)
          (root.next = null),
            null === prev ? (firstScheduledRoot = next) : (prev.next = next),
            null === next && (lastScheduledRoot = prev);
        else if (
          ((prev = root), 0 !== syncTransitionLanes || 0 !== (nextLanes & 3))
        )
          mightHavePendingSyncWork = !0;
        root = next;
      }
      (pendingEffectsStatus !== NO_PENDING_EFFECTS &&
        pendingEffectsStatus !== PENDING_PASSIVE_PHASE) ||
        flushSyncWorkAcrossRoots_impl(syncTransitionLanes, !1);
      0 !== currentEventTransitionLane && (currentEventTransitionLane = 0);
    }
    function scheduleTaskForRootDuringMicrotask(root, currentTime) {
      for (
        var suspendedLanes = root.suspendedLanes,
          pingedLanes = root.pingedLanes,
          expirationTimes = root.expirationTimes,
          lanes = root.pendingLanes & -62914561;
        0 < lanes;

      ) {
        var index = 31 - clz32(lanes),
          lane = 1 << index,
          expirationTime = expirationTimes[index];
        if (-1 === expirationTime) {
          if (0 === (lane & suspendedLanes) || 0 !== (lane & pingedLanes))
            expirationTimes[index] = computeExpirationTime(lane, currentTime);
        } else expirationTime <= currentTime && (root.expiredLanes |= lane);
        lanes &= ~lane;
      }
      currentTime = workInProgressRoot;
      suspendedLanes = workInProgressRootRenderLanes;
      suspendedLanes = getNextLanes(
        root,
        root === currentTime ? suspendedLanes : 0,
        null !== root.cancelPendingCommit || root.timeoutHandle !== noTimeout
      );
      pingedLanes = root.callbackNode;
      if (
        0 === suspendedLanes ||
        (root === currentTime &&
          (workInProgressSuspendedReason === SuspendedOnData ||
            workInProgressSuspendedReason === SuspendedOnAction)) ||
        null !== root.cancelPendingCommit
      )
        return (
          null !== pingedLanes && cancelCallback(pingedLanes),
          (root.callbackNode = null),
          (root.callbackPriority = 0)
        );
      if (
        0 === (suspendedLanes & 3) ||
        checkIfRootIsPrerendering(root, suspendedLanes)
      ) {
        currentTime = suspendedLanes & -suspendedLanes;
        if (
          currentTime !== root.callbackPriority ||
          (null !== ReactSharedInternals.actQueue &&
            pingedLanes !== fakeActCallbackNode)
        )
          cancelCallback(pingedLanes);
        else return currentTime;
        switch (lanesToEventPriority(suspendedLanes)) {
          case DiscreteEventPriority:
          case ContinuousEventPriority:
            suspendedLanes = UserBlockingPriority;
            break;
          case DefaultEventPriority:
            suspendedLanes = NormalPriority$1;
            break;
          case IdleEventPriority:
            suspendedLanes = IdlePriority;
            break;
          default:
            suspendedLanes = NormalPriority$1;
        }
        pingedLanes = performWorkOnRootViaSchedulerTask.bind(null, root);
        null !== ReactSharedInternals.actQueue
          ? (ReactSharedInternals.actQueue.push(pingedLanes),
            (suspendedLanes = fakeActCallbackNode))
          : (suspendedLanes = scheduleCallback$3(suspendedLanes, pingedLanes));
        root.callbackPriority = currentTime;
        root.callbackNode = suspendedLanes;
        return currentTime;
      }
      null !== pingedLanes && cancelCallback(pingedLanes);
      root.callbackPriority = 2;
      root.callbackNode = null;
      return 2;
    }
    function performWorkOnRootViaSchedulerTask(root, didTimeout) {
      nestedUpdateScheduled = currentUpdateIsNested = !1;
      schedulerEvent = window.event;
      if (
        pendingEffectsStatus !== NO_PENDING_EFFECTS &&
        pendingEffectsStatus !== PENDING_PASSIVE_PHASE
      )
        return (root.callbackNode = null), (root.callbackPriority = 0), null;
      var originalCallbackNode = root.callbackNode;
      pendingDelayedCommitReason === IMMEDIATE_COMMIT &&
        (pendingDelayedCommitReason = DELAYED_PASSIVE_COMMIT);
      if (flushPendingEffects() && root.callbackNode !== originalCallbackNode)
        return null;
      var workInProgressRootRenderLanes$jscomp$0 =
        workInProgressRootRenderLanes;
      workInProgressRootRenderLanes$jscomp$0 = getNextLanes(
        root,
        root === workInProgressRoot
          ? workInProgressRootRenderLanes$jscomp$0
          : 0,
        null !== root.cancelPendingCommit || root.timeoutHandle !== noTimeout
      );
      if (0 === workInProgressRootRenderLanes$jscomp$0) return null;
      performWorkOnRoot(
        root,
        workInProgressRootRenderLanes$jscomp$0,
        didTimeout
      );
      scheduleTaskForRootDuringMicrotask(root, now$1());
      return null != root.callbackNode &&
        root.callbackNode === originalCallbackNode
        ? performWorkOnRootViaSchedulerTask.bind(null, root)
        : null;
    }
    function performSyncWorkOnRoot(root, lanes) {
      if (flushPendingEffects()) return null;
      currentUpdateIsNested = nestedUpdateScheduled;
      nestedUpdateScheduled = !1;
      performWorkOnRoot(root, lanes, !0);
    }
    function cancelCallback(callbackNode) {
      callbackNode !== fakeActCallbackNode &&
        null !== callbackNode &&
        cancelCallback$1(callbackNode);
    }
    function scheduleImmediateRootScheduleTask() {
      null !== ReactSharedInternals.actQueue &&
        ReactSharedInternals.actQueue.push(function () {
          processRootScheduleInMicrotask();
          return null;
        });
      scheduleMicrotask(function () {
        (executionContext & (RenderContext | CommitContext)) !== NoContext
          ? scheduleCallback$3(
              ImmediatePriority,
              processRootScheduleInImmediateTask
            )
          : processRootScheduleInMicrotask();
      });
    }
    function requestTransitionLane() {
      if (0 === currentEventTransitionLane) {
        var actionScopeLane = currentEntangledLane;
        0 === actionScopeLane &&
          ((actionScopeLane = nextTransitionUpdateLane),
          (nextTransitionUpdateLane <<= 1),
          0 === (nextTransitionUpdateLane & 261888) &&
            (nextTransitionUpdateLane = 256));
        currentEventTransitionLane = actionScopeLane;
      }
      return currentEventTransitionLane;
    }
    function coerceFormActionProp(actionProp) {
      if (
        null == actionProp ||
        "symbol" === typeof actionProp ||
        "boolean" === typeof actionProp
      )
        return null;
      if ("function" === typeof actionProp) return actionProp;
      checkAttributeStringCoercion(actionProp, "action");
      return sanitizeURL("" + actionProp);
    }
    function createFormDataWithSubmitter(form, submitter) {
      var temp = submitter.ownerDocument.createElement("input");
      temp.name = submitter.name;
      temp.value = submitter.value;
      form.id && temp.setAttribute("form", form.id);
      submitter.parentNode.insertBefore(temp, submitter);
      form = new FormData(form);
      temp.parentNode.removeChild(temp);
      return form;
    }
    function extractEvents$1(
      dispatchQueue,
      domEventName,
      maybeTargetInst,
      nativeEvent,
      nativeEventTarget
    ) {
      if (
        "submit" === domEventName &&
        maybeTargetInst &&
        maybeTargetInst.stateNode === nativeEventTarget
      ) {
        var action = coerceFormActionProp(
            (nativeEventTarget[internalPropsKey] || null).action
          ),
          submitter = nativeEvent.submitter;
        submitter &&
          ((domEventName = (domEventName = submitter[internalPropsKey] || null)
            ? coerceFormActionProp(domEventName.formAction)
            : submitter.getAttribute("formAction")),
          null !== domEventName &&
            ((action = domEventName), (submitter = null)));
        var event = new SyntheticEvent(
          "action",
          "action",
          null,
          nativeEvent,
          nativeEventTarget
        );
        dispatchQueue.push({
          event: event,
          listeners: [
            {
              instance: null,
              listener: function () {
                if (nativeEvent.defaultPrevented) {
                  if (0 !== currentEventTransitionLane) {
                    var formData = submitter
                        ? createFormDataWithSubmitter(
                            nativeEventTarget,
                            submitter
                          )
                        : new FormData(nativeEventTarget),
                      pendingState = {
                        pending: !0,
                        data: formData,
                        method: nativeEventTarget.method,
                        action: action
                      };
                    Object.freeze(pendingState);
                    startHostTransition(
                      maybeTargetInst,
                      pendingState,
                      null,
                      formData
                    );
                  }
                } else
                  "function" === typeof action &&
                    (event.preventDefault(),
                    (formData = submitter
                      ? createFormDataWithSubmitter(
                          nativeEventTarget,
                          submitter
                        )
                      : new FormData(nativeEventTarget)),
                    (pendingState = {
                      pending: !0,
                      data: formData,
                      method: nativeEventTarget.method,
                      action: action
                    }),
                    Object.freeze(pendingState),
                    startHostTransition(
                      maybeTargetInst,
                      pendingState,
                      action,
                      formData
                    ));
              },
              currentTarget: nativeEventTarget
            }
          ]
        });
      }
    }
    function executeDispatch(event, listener, currentTarget) {
      event.currentTarget = currentTarget;
      try {
        listener(event);
      } catch (error) {
        reportGlobalError(error);
      }
      event.currentTarget = null;
    }
    function processDispatchQueue(dispatchQueue, eventSystemFlags) {
      eventSystemFlags = 0 !== (eventSystemFlags & 4);
      for (var i = 0; i < dispatchQueue.length; i++) {
        var _dispatchQueue$i = dispatchQueue[i];
        a: {
          var previousInstance = void 0,
            event = _dispatchQueue$i.event;
          _dispatchQueue$i = _dispatchQueue$i.listeners;
          if (eventSystemFlags)
            for (
              var i$jscomp$0 = _dispatchQueue$i.length - 1;
              0 <= i$jscomp$0;
              i$jscomp$0--
            ) {
              var _dispatchListeners$i = _dispatchQueue$i[i$jscomp$0],
                instance = _dispatchListeners$i.instance,
                currentTarget = _dispatchListeners$i.currentTarget;
              _dispatchListeners$i = _dispatchListeners$i.listener;
              if (instance !== previousInstance && event.isPropagationStopped())
                break a;
              null !== instance
                ? runWithFiberInDEV(
                    instance,
                    executeDispatch,
                    event,
                    _dispatchListeners$i,
                    currentTarget
                  )
                : executeDispatch(event, _dispatchListeners$i, currentTarget);
              previousInstance = instance;
            }
          else
            for (
              i$jscomp$0 = 0;
              i$jscomp$0 < _dispatchQueue$i.length;
              i$jscomp$0++
            ) {
              _dispatchListeners$i = _dispatchQueue$i[i$jscomp$0];
              instance = _dispatchListeners$i.instance;
              currentTarget = _dispatchListeners$i.currentTarget;
              _dispatchListeners$i = _dispatchListeners$i.listener;
              if (instance !== previousInstance && event.isPropagationStopped())
                break a;
              null !== instance
                ? runWithFiberInDEV(
                    instance,
                    executeDispatch,
                    event,
                    _dispatchListeners$i,
                    currentTarget
                  )
                : executeDispatch(event, _dispatchListeners$i, currentTarget);
              previousInstance = instance;
            }
        }
      }
    }
    function listenToNonDelegatedEvent(domEventName, targetElement) {
      nonDelegatedEvents.has(domEventName) ||
        console.error(
          'Did not expect a listenToNonDelegatedEvent() call for "%s". This is a bug in React. Please file an issue.',
          domEventName
        );
      var listenerSet = targetElement[internalEventHandlersKey];
      void 0 === listenerSet &&
        (listenerSet = targetElement[internalEventHandlersKey] = new Set());
      var listenerSetKey = domEventName + "__bubble";
      listenerSet.has(listenerSetKey) ||
        (addTrappedEventListener(targetElement, domEventName, 2, !1),
        listenerSet.add(listenerSetKey));
    }
    function listenToNativeEvent(domEventName, isCapturePhaseListener, target) {
      nonDelegatedEvents.has(domEventName) &&
        !isCapturePhaseListener &&
        console.error(
          'Did not expect a listenToNativeEvent() call for "%s" in the bubble phase. This is a bug in React. Please file an issue.',
          domEventName
        );
      var eventSystemFlags = 0;
      isCapturePhaseListener && (eventSystemFlags |= 4);
      addTrappedEventListener(
        target,
        domEventName,
        eventSystemFlags,
        isCapturePhaseListener
      );
    }
    function listenToAllSupportedEvents(rootContainerElement) {
      if (!rootContainerElement[listeningMarker]) {
        rootContainerElement[listeningMarker] = !0;
        allNativeEvents.forEach(function (domEventName) {
          "selectionchange" !== domEventName &&
            (nonDelegatedEvents.has(domEventName) ||
              listenToNativeEvent(domEventName, !1, rootContainerElement),
            listenToNativeEvent(domEventName, !0, rootContainerElement));
        });
        var ownerDocument =
          9 === rootContainerElement.nodeType
            ? rootContainerElement
            : rootContainerElement.ownerDocument;
        null === ownerDocument ||
          ownerDocument[listeningMarker] ||
          ((ownerDocument[listeningMarker] = !0),
          listenToNativeEvent("selectionchange", !1, ownerDocument));
      }
    }
    function addTrappedEventListener(
      targetContainer,
      domEventName,
      eventSystemFlags,
      isCapturePhaseListener
    ) {
      switch (getEventPriority(domEventName)) {
        case DiscreteEventPriority:
          var listenerWrapper = dispatchDiscreteEvent;
          break;
        case ContinuousEventPriority:
          listenerWrapper = dispatchContinuousEvent;
          break;
        default:
          listenerWrapper = dispatchEvent;
      }
      eventSystemFlags = listenerWrapper.bind(
        null,
        domEventName,
        eventSystemFlags,
        targetContainer
      );
      listenerWrapper = void 0;
      !passiveBrowserEventsSupported ||
        ("touchstart" !== domEventName &&
          "touchmove" !== domEventName &&
          "wheel" !== domEventName) ||
        (listenerWrapper = !0);
      isCapturePhaseListener
        ? void 0 !== listenerWrapper
          ? targetContainer.addEventListener(domEventName, eventSystemFlags, {
              capture: !0,
              passive: listenerWrapper
            })
          : targetContainer.addEventListener(domEventName, eventSystemFlags, !0)
        : void 0 !== listenerWrapper
          ? targetContainer.addEventListener(domEventName, eventSystemFlags, {
              passive: listenerWrapper
            })
          : targetContainer.addEventListener(
              domEventName,
              eventSystemFlags,
              !1
            );
    }
    function dispatchEventForPluginEventSystem(
      domEventName,
      eventSystemFlags,
      nativeEvent,
      targetInst$jscomp$0,
      targetContainer
    ) {
      var ancestorInst = targetInst$jscomp$0;
      if (
        0 === (eventSystemFlags & 1) &&
        0 === (eventSystemFlags & 2) &&
        null !== targetInst$jscomp$0
      )
        a: for (;;) {
          if (null === targetInst$jscomp$0) return;
          var nodeTag = targetInst$jscomp$0.tag;
          if (3 === nodeTag || 4 === nodeTag) {
            var container = targetInst$jscomp$0.stateNode.containerInfo;
            if (container === targetContainer) break;
            if (4 === nodeTag)
              for (nodeTag = targetInst$jscomp$0.return; null !== nodeTag; ) {
                var grandTag = nodeTag.tag;
                if (
                  (3 === grandTag || 4 === grandTag) &&
                  nodeTag.stateNode.containerInfo === targetContainer
                )
                  return;
                nodeTag = nodeTag.return;
              }
            for (; null !== container; ) {
              nodeTag = getClosestInstanceFromNode(container);
              if (null === nodeTag) return;
              grandTag = nodeTag.tag;
              if (
                5 === grandTag ||
                6 === grandTag ||
                26 === grandTag ||
                27 === grandTag
              ) {
                targetInst$jscomp$0 = ancestorInst = nodeTag;
                continue a;
              }
              container = container.parentNode;
            }
          }
          targetInst$jscomp$0 = targetInst$jscomp$0.return;
        }
      batchedUpdates$1(function () {
        var targetInst = ancestorInst,
          nativeEventTarget = getEventTarget(nativeEvent),
          dispatchQueue = [];
        a: {
          var reactName = topLevelEventsToReactNames.get(domEventName);
          if (void 0 !== reactName) {
            var SyntheticEventCtor = SyntheticEvent,
              reactEventType = domEventName;
            switch (domEventName) {
              case "keypress":
                if (0 === getEventCharCode(nativeEvent)) break a;
              case "keydown":
              case "keyup":
                SyntheticEventCtor = SyntheticKeyboardEvent;
                break;
              case "focusin":
                reactEventType = "focus";
                SyntheticEventCtor = SyntheticFocusEvent;
                break;
              case "focusout":
                reactEventType = "blur";
                SyntheticEventCtor = SyntheticFocusEvent;
                break;
              case "beforeblur":
              case "afterblur":
                SyntheticEventCtor = SyntheticFocusEvent;
                break;
              case "click":
                if (2 === nativeEvent.button) break a;
              case "auxclick":
              case "dblclick":
              case "mousedown":
              case "mousemove":
              case "mouseup":
              case "mouseout":
              case "mouseover":
              case "contextmenu":
                SyntheticEventCtor = SyntheticMouseEvent;
                break;
              case "drag":
              case "dragend":
              case "dragenter":
              case "dragexit":
              case "dragleave":
              case "dragover":
              case "dragstart":
              case "drop":
                SyntheticEventCtor = SyntheticDragEvent;
                break;
              case "touchcancel":
              case "touchend":
              case "touchmove":
              case "touchstart":
                SyntheticEventCtor = SyntheticTouchEvent;
                break;
              case ANIMATION_END:
              case ANIMATION_ITERATION:
              case ANIMATION_START:
                SyntheticEventCtor = SyntheticAnimationEvent;
                break;
              case TRANSITION_END:
                SyntheticEventCtor = SyntheticTransitionEvent;
                break;
              case "scroll":
              case "scrollend":
                SyntheticEventCtor = SyntheticUIEvent;
                break;
              case "wheel":
                SyntheticEventCtor = SyntheticWheelEvent;
                break;
              case "copy":
              case "cut":
              case "paste":
                SyntheticEventCtor = SyntheticClipboardEvent;
                break;
              case "gotpointercapture":
              case "lostpointercapture":
              case "pointercancel":
              case "pointerdown":
              case "pointermove":
              case "pointerout":
              case "pointerover":
              case "pointerup":
                SyntheticEventCtor = SyntheticPointerEvent;
                break;
              case "toggle":
              case "beforetoggle":
                SyntheticEventCtor = SyntheticToggleEvent;
            }
            var inCapturePhase = 0 !== (eventSystemFlags & 4),
              accumulateTargetOnly =
                !inCapturePhase &&
                ("scroll" === domEventName || "scrollend" === domEventName),
              reactEventName = inCapturePhase
                ? null !== reactName
                  ? reactName + "Capture"
                  : null
                : reactName;
            inCapturePhase = [];
            for (
              var instance = targetInst, lastHostComponent;
              null !== instance;

            ) {
              var _instance2 = instance;
              lastHostComponent = _instance2.stateNode;
              _instance2 = _instance2.tag;
              (5 !== _instance2 && 26 !== _instance2 && 27 !== _instance2) ||
                null === lastHostComponent ||
                null === reactEventName ||
                ((_instance2 = getListener(instance, reactEventName)),
                null != _instance2 &&
                  inCapturePhase.push(
                    createDispatchListener(
                      instance,
                      _instance2,
                      lastHostComponent
                    )
                  ));
              if (accumulateTargetOnly) break;
              instance = instance.return;
            }
            0 < inCapturePhase.length &&
              ((reactName = new SyntheticEventCtor(
                reactName,
                reactEventType,
                null,
                nativeEvent,
                nativeEventTarget
              )),
              dispatchQueue.push({
                event: reactName,
                listeners: inCapturePhase
              }));
          }
        }
        if (0 === (eventSystemFlags & 7)) {
          a: {
            reactName =
              "mouseover" === domEventName || "pointerover" === domEventName;
            SyntheticEventCtor =
              "mouseout" === domEventName || "pointerout" === domEventName;
            if (
              reactName &&
              nativeEvent !== currentReplayingEvent &&
              (reactEventType =
                nativeEvent.relatedTarget || nativeEvent.fromElement) &&
              (getClosestInstanceFromNode(reactEventType) ||
                reactEventType[internalContainerInstanceKey])
            )
              break a;
            if (SyntheticEventCtor || reactName) {
              reactName =
                nativeEventTarget.window === nativeEventTarget
                  ? nativeEventTarget
                  : (reactName = nativeEventTarget.ownerDocument)
                    ? reactName.defaultView || reactName.parentWindow
                    : window;
              if (SyntheticEventCtor) {
                if (
                  ((reactEventType =
                    nativeEvent.relatedTarget || nativeEvent.toElement),
                  (SyntheticEventCtor = targetInst),
                  (reactEventType = reactEventType
                    ? getClosestInstanceFromNode(reactEventType)
                    : null),
                  null !== reactEventType &&
                    ((accumulateTargetOnly =
                      getNearestMountedFiber(reactEventType)),
                    (inCapturePhase = reactEventType.tag),
                    reactEventType !== accumulateTargetOnly ||
                      (5 !== inCapturePhase &&
                        27 !== inCapturePhase &&
                        6 !== inCapturePhase)))
                )
                  reactEventType = null;
              } else (SyntheticEventCtor = null), (reactEventType = targetInst);
              if (SyntheticEventCtor !== reactEventType) {
                inCapturePhase = SyntheticMouseEvent;
                _instance2 = "onMouseLeave";
                reactEventName = "onMouseEnter";
                instance = "mouse";
                if (
                  "pointerout" === domEventName ||
                  "pointerover" === domEventName
                )
                  (inCapturePhase = SyntheticPointerEvent),
                    (_instance2 = "onPointerLeave"),
                    (reactEventName = "onPointerEnter"),
                    (instance = "pointer");
                accumulateTargetOnly =
                  null == SyntheticEventCtor
                    ? reactName
                    : getNodeFromInstance(SyntheticEventCtor);
                lastHostComponent =
                  null == reactEventType
                    ? reactName
                    : getNodeFromInstance(reactEventType);
                reactName = new inCapturePhase(
                  _instance2,
                  instance + "leave",
                  SyntheticEventCtor,
                  nativeEvent,
                  nativeEventTarget
                );
                reactName.target = accumulateTargetOnly;
                reactName.relatedTarget = lastHostComponent;
                _instance2 = null;
                getClosestInstanceFromNode(nativeEventTarget) === targetInst &&
                  ((inCapturePhase = new inCapturePhase(
                    reactEventName,
                    instance + "enter",
                    reactEventType,
                    nativeEvent,
                    nativeEventTarget
                  )),
                  (inCapturePhase.target = lastHostComponent),
                  (inCapturePhase.relatedTarget = accumulateTargetOnly),
                  (_instance2 = inCapturePhase));
                accumulateTargetOnly = _instance2;
                if (SyntheticEventCtor && reactEventType)
                  b: {
                    inCapturePhase = getParent;
                    reactEventName = SyntheticEventCtor;
                    instance = reactEventType;
                    lastHostComponent = 0;
                    for (
                      _instance2 = reactEventName;
                      _instance2;
                      _instance2 = inCapturePhase(_instance2)
                    )
                      lastHostComponent++;
                    _instance2 = 0;
                    for (
                      var tempB = instance;
                      tempB;
                      tempB = inCapturePhase(tempB)
                    )
                      _instance2++;
                    for (; 0 < lastHostComponent - _instance2; )
                      (reactEventName = inCapturePhase(reactEventName)),
                        lastHostComponent--;
                    for (; 0 < _instance2 - lastHostComponent; )
                      (instance = inCapturePhase(instance)), _instance2--;
                    for (; lastHostComponent--; ) {
                      if (
                        reactEventName === instance ||
                        (null !== instance &&
                          reactEventName === instance.alternate)
                      ) {
                        inCapturePhase = reactEventName;
                        break b;
                      }
                      reactEventName = inCapturePhase(reactEventName);
                      instance = inCapturePhase(instance);
                    }
                    inCapturePhase = null;
                  }
                else inCapturePhase = null;
                null !== SyntheticEventCtor &&
                  accumulateEnterLeaveListenersForEvent(
                    dispatchQueue,
                    reactName,
                    SyntheticEventCtor,
                    inCapturePhase,
                    !1
                  );
                null !== reactEventType &&
                  null !== accumulateTargetOnly &&
                  accumulateEnterLeaveListenersForEvent(
                    dispatchQueue,
                    accumulateTargetOnly,
                    reactEventType,
                    inCapturePhase,
                    !0
                  );
              }
            }
          }
          a: {
            reactName = targetInst ? getNodeFromInstance(targetInst) : window;
            SyntheticEventCtor =
              reactName.nodeName && reactName.nodeName.toLowerCase();
            if (
              "select" === SyntheticEventCtor ||
              ("input" === SyntheticEventCtor && "file" === reactName.type)
            )
              var getTargetInstFunc = getTargetInstForChangeEvent;
            else if (isTextInputElement(reactName))
              if (isInputEventSupported)
                getTargetInstFunc = getTargetInstForInputOrChangeEvent;
              else {
                getTargetInstFunc = getTargetInstForInputEventPolyfill;
                var handleEventFunc = handleEventsForInputEventPolyfill;
              }
            else
              (SyntheticEventCtor = reactName.nodeName),
                !SyntheticEventCtor ||
                "input" !== SyntheticEventCtor.toLowerCase() ||
                ("checkbox" !== reactName.type && "radio" !== reactName.type)
                  ? targetInst &&
                    isCustomElement(targetInst.elementType) &&
                    (getTargetInstFunc = getTargetInstForChangeEvent)
                  : (getTargetInstFunc = getTargetInstForClickEvent);
            if (
              getTargetInstFunc &&
              (getTargetInstFunc = getTargetInstFunc(domEventName, targetInst))
            ) {
              createAndAccumulateChangeEvent(
                dispatchQueue,
                getTargetInstFunc,
                nativeEvent,
                nativeEventTarget
              );
              break a;
            }
            handleEventFunc &&
              handleEventFunc(domEventName, reactName, targetInst);
            "focusout" === domEventName &&
              targetInst &&
              "number" === reactName.type &&
              null != targetInst.memoizedProps.value &&
              setDefaultValue(reactName, "number", reactName.value);
          }
          handleEventFunc = targetInst
            ? getNodeFromInstance(targetInst)
            : window;
          switch (domEventName) {
            case "focusin":
              if (
                isTextInputElement(handleEventFunc) ||
                "true" === handleEventFunc.contentEditable
              )
                (activeElement = handleEventFunc),
                  (activeElementInst = targetInst),
                  (lastSelection = null);
              break;
            case "focusout":
              lastSelection = activeElementInst = activeElement = null;
              break;
            case "mousedown":
              mouseDown = !0;
              break;
            case "contextmenu":
            case "mouseup":
            case "dragend":
              mouseDown = !1;
              constructSelectEvent(
                dispatchQueue,
                nativeEvent,
                nativeEventTarget
              );
              break;
            case "selectionchange":
              if (skipSelectionChangeEvent) break;
            case "keydown":
            case "keyup":
              constructSelectEvent(
                dispatchQueue,
                nativeEvent,
                nativeEventTarget
              );
          }
          var fallbackData;
          if (canUseCompositionEvent)
            b: {
              switch (domEventName) {
                case "compositionstart":
                  var eventType = "onCompositionStart";
                  break b;
                case "compositionend":
                  eventType = "onCompositionEnd";
                  break b;
                case "compositionupdate":
                  eventType = "onCompositionUpdate";
                  break b;
              }
              eventType = void 0;
            }
          else
            isComposing
              ? isFallbackCompositionEnd(domEventName, nativeEvent) &&
                (eventType = "onCompositionEnd")
              : "keydown" === domEventName &&
                nativeEvent.keyCode === START_KEYCODE &&
                (eventType = "onCompositionStart");
          eventType &&
            (useFallbackCompositionData &&
              "ko" !== nativeEvent.locale &&
              (isComposing || "onCompositionStart" !== eventType
                ? "onCompositionEnd" === eventType &&
                  isComposing &&
                  (fallbackData = getData())
                : ((root = nativeEventTarget),
                  (startText = "value" in root ? root.value : root.textContent),
                  (isComposing = !0))),
            (handleEventFunc = accumulateTwoPhaseListeners(
              targetInst,
              eventType
            )),
            0 < handleEventFunc.length &&
              ((eventType = new SyntheticCompositionEvent(
                eventType,
                domEventName,
                null,
                nativeEvent,
                nativeEventTarget
              )),
              dispatchQueue.push({
                event: eventType,
                listeners: handleEventFunc
              }),
              fallbackData
                ? (eventType.data = fallbackData)
                : ((fallbackData = getDataFromCustomEvent(nativeEvent)),
                  null !== fallbackData && (eventType.data = fallbackData))));
          if (
            (fallbackData = canUseTextInputEvent
              ? getNativeBeforeInputChars(domEventName, nativeEvent)
              : getFallbackBeforeInputChars(domEventName, nativeEvent))
          )
            (eventType = accumulateTwoPhaseListeners(
              targetInst,
              "onBeforeInput"
            )),
              0 < eventType.length &&
                ((handleEventFunc = new SyntheticInputEvent(
                  "onBeforeInput",
                  "beforeinput",
                  null,
                  nativeEvent,
                  nativeEventTarget
                )),
                dispatchQueue.push({
                  event: handleEventFunc,
                  listeners: eventType
                }),
                (handleEventFunc.data = fallbackData));
          extractEvents$1(
            dispatchQueue,
            domEventName,
            targetInst,
            nativeEvent,
            nativeEventTarget
          );
        }
        processDispatchQueue(dispatchQueue, eventSystemFlags);
      });
    }
    function createDispatchListener(instance, listener, currentTarget) {
      return {
        instance: instance,
        listener: listener,
        currentTarget: currentTarget
      };
    }
    function accumulateTwoPhaseListeners(targetFiber, reactName) {
      for (
        var captureName = reactName + "Capture", listeners = [];
        null !== targetFiber;

      ) {
        var _instance3 = targetFiber,
          stateNode = _instance3.stateNode;
        _instance3 = _instance3.tag;
        (5 !== _instance3 && 26 !== _instance3 && 27 !== _instance3) ||
          null === stateNode ||
          ((_instance3 = getListener(targetFiber, captureName)),
          null != _instance3 &&
            listeners.unshift(
              createDispatchListener(targetFiber, _instance3, stateNode)
            ),
          (_instance3 = getListener(targetFiber, reactName)),
          null != _instance3 &&
            listeners.push(
              createDispatchListener(targetFiber, _instance3, stateNode)
            ));
        if (3 === targetFiber.tag) return listeners;
        targetFiber = targetFiber.return;
      }
      return [];
    }
    function getParent(inst) {
      if (null === inst) return null;
      do inst = inst.return;
      while (inst && 5 !== inst.tag && 27 !== inst.tag);
      return inst ? inst : null;
    }
    function accumulateEnterLeaveListenersForEvent(
      dispatchQueue,
      event,
      target,
      common,
      inCapturePhase
    ) {
      for (
        var registrationName = event._reactName, listeners = [];
        null !== target && target !== common;

      ) {
        var _instance4 = target,
          alternate = _instance4.alternate,
          stateNode = _instance4.stateNode;
        _instance4 = _instance4.tag;
        if (null !== alternate && alternate === common) break;
        (5 !== _instance4 && 26 !== _instance4 && 27 !== _instance4) ||
          null === stateNode ||
          ((alternate = stateNode),
          inCapturePhase
            ? ((stateNode = getListener(target, registrationName)),
              null != stateNode &&
                listeners.unshift(
                  createDispatchListener(target, stateNode, alternate)
                ))
            : inCapturePhase ||
              ((stateNode = getListener(target, registrationName)),
              null != stateNode &&
                listeners.push(
                  createDispatchListener(target, stateNode, alternate)
                )));
        target = target.return;
      }
      0 !== listeners.length &&
        dispatchQueue.push({ event: event, listeners: listeners });
    }
    function validatePropertiesInDevelopment(type, props) {
      validateProperties$2(type, props);
      ("input" !== type && "textarea" !== type && "select" !== type) ||
        null == props ||
        null !== props.value ||
        didWarnValueNull ||
        ((didWarnValueNull = !0),
        "select" === type && props.multiple
          ? console.error(
              "`value` prop on `%s` should not be null. Consider using an empty array when `multiple` is set to `true` to clear the component or `undefined` for uncontrolled components.",
              type
            )
          : console.error(
              "`value` prop on `%s` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.",
              type
            ));
      var eventRegistry = {
        registrationNameDependencies: registrationNameDependencies,
        possibleRegistrationNames: possibleRegistrationNames
      };
      isCustomElement(type) ||
        "string" === typeof props.is ||
        warnUnknownProperties(type, props, eventRegistry);
      props.contentEditable &&
        !props.suppressContentEditableWarning &&
        null != props.children &&
        console.error(
          "A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional."
        );
    }
    function warnForPropDifference(
      propName,
      serverValue,
      clientValue,
      serverDifferences
    ) {
      serverValue !== clientValue &&
        ((clientValue = normalizeMarkupForTextOrAttribute(clientValue)),
        normalizeMarkupForTextOrAttribute(serverValue) !== clientValue &&
          (serverDifferences[propName] = serverValue));
    }
    function warnForExtraAttributes(
      domElement,
      attributeNames,
      serverDifferences
    ) {
      attributeNames.forEach(function (attributeName) {
        serverDifferences[getPropNameFromAttributeName(attributeName)] =
          "style" === attributeName
            ? getStylesObjectFromElement(domElement)
            : domElement.getAttribute(attributeName);
      });
    }
    function warnForInvalidEventListener(registrationName, listener) {
      !1 === listener
        ? console.error(
            "Expected `%s` listener to be a function, instead got `false`.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.",
            registrationName,
            registrationName,
            registrationName
          )
        : console.error(
            "Expected `%s` listener to be a function, instead got a value of `%s` type.",
            registrationName,
            typeof listener
          );
    }
    function normalizeHTML(parent, html) {
      parent =
        parent.namespaceURI === MATH_NAMESPACE ||
        parent.namespaceURI === SVG_NAMESPACE
          ? parent.ownerDocument.createElementNS(
              parent.namespaceURI,
              parent.tagName
            )
          : parent.ownerDocument.createElement(parent.tagName);
      parent.innerHTML = html;
      return parent.innerHTML;
    }
    function normalizeMarkupForTextOrAttribute(markup) {
      willCoercionThrow(markup) &&
        (console.error(
          "The provided HTML markup uses a value of unsupported type %s. This value must be coerced to a string before using it here.",
          typeName(markup)
        ),
        testStringCoercion(markup));
      return ("string" === typeof markup ? markup : "" + markup)
        .replace(NORMALIZE_NEWLINES_REGEX, "\n")
        .replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, "");
    }
    function checkForUnmatchedText(serverText, clientText) {
      clientText = normalizeMarkupForTextOrAttribute(clientText);
      return normalizeMarkupForTextOrAttribute(serverText) === clientText
        ? !0
        : !1;
    }
    function setProp(domElement, tag, key, value, props, prevValue) {
      switch (key) {
        case "children":
          if ("string" === typeof value)
            validateTextNesting(value, tag, !1),
              "body" === tag ||
                ("textarea" === tag && "" === value) ||
                setTextContent(domElement, value);
          else if ("number" === typeof value || "bigint" === typeof value)
            validateTextNesting("" + value, tag, !1),
              "body" !== tag && setTextContent(domElement, "" + value);
          break;
        case "className":
          setValueForKnownAttribute(domElement, "class", value);
          break;
        case "tabIndex":
          setValueForKnownAttribute(domElement, "tabindex", value);
          break;
        case "dir":
        case "role":
        case "viewBox":
        case "width":
        case "height":
          setValueForKnownAttribute(domElement, key, value);
          break;
        case "style":
          setValueForStyles(domElement, value, prevValue);
          break;
        case "data":
          if ("object" !== tag) {
            setValueForKnownAttribute(domElement, "data", value);
            break;
          }
        case "src":
        case "href":
          if ("" === value && ("a" !== tag || "href" !== key)) {
            "src" === key
              ? console.error(
                  'An empty string ("") was passed to the %s attribute. This may cause the browser to download the whole page again over the network. To fix this, either do not render the element at all or pass null to %s instead of an empty string.',
                  key,
                  key
                )
              : console.error(
                  'An empty string ("") was passed to the %s attribute. To fix this, either do not render the element at all or pass null to %s instead of an empty string.',
                  key,
                  key
                );
            domElement.removeAttribute(key);
            break;
          }
          if (
            null == value ||
            "function" === typeof value ||
            "symbol" === typeof value ||
            "boolean" === typeof value
          ) {
            domElement.removeAttribute(key);
            break;
          }
          checkAttributeStringCoercion(value, key);
          value = sanitizeURL("" + value);
          domElement.setAttribute(key, value);
          break;
        case "action":
        case "formAction":
          null != value &&
            ("form" === tag
              ? "formAction" === key
                ? console.error(
                    "You can only pass the formAction prop to <input> or <button>. Use the action prop on <form>."
                  )
                : "function" === typeof value &&
                  ((null == props.encType && null == props.method) ||
                    didWarnFormActionMethod ||
                    ((didWarnFormActionMethod = !0),
                    console.error(
                      "Cannot specify a encType or method for a form that specifies a function as the action. React provides those automatically. They will get overridden."
                    )),
                  null == props.target ||
                    didWarnFormActionTarget ||
                    ((didWarnFormActionTarget = !0),
                    console.error(
                      "Cannot specify a target for a form that specifies a function as the action. The function will always be executed in the same window."
                    )))
              : "input" === tag || "button" === tag
                ? "action" === key
                  ? console.error(
                      "You can only pass the action prop to <form>. Use the formAction prop on <input> or <button>."
                    )
                  : "input" !== tag ||
                      "submit" === props.type ||
                      "image" === props.type ||
                      didWarnFormActionType
                    ? "button" !== tag ||
                      null == props.type ||
                      "submit" === props.type ||
                      didWarnFormActionType
                      ? "function" === typeof value &&
                        (null == props.name ||
                          didWarnFormActionName ||
                          ((didWarnFormActionName = !0),
                          console.error(
                            'Cannot specify a "name" prop for a button that specifies a function as a formAction. React needs it to encode which action should be invoked. It will get overridden.'
                          )),
                        (null == props.formEncType &&
                          null == props.formMethod) ||
                          didWarnFormActionMethod ||
                          ((didWarnFormActionMethod = !0),
                          console.error(
                            "Cannot specify a formEncType or formMethod for a button that specifies a function as a formAction. React provides those automatically. They will get overridden."
                          )),
                        null == props.formTarget ||
                          didWarnFormActionTarget ||
                          ((didWarnFormActionTarget = !0),
                          console.error(
                            "Cannot specify a formTarget for a button that specifies a function as a formAction. The function will always be executed in the same window."
                          )))
                      : ((didWarnFormActionType = !0),
                        console.error(
                          'A button can only specify a formAction along with type="submit" or no type.'
                        ))
                    : ((didWarnFormActionType = !0),
                      console.error(
                        'An input can only specify a formAction along with type="submit" or type="image".'
                      ))
                : "action" === key
                  ? console.error(
                      "You can only pass the action prop to <form>."
                    )
                  : console.error(
                      "You can only pass the formAction prop to <input> or <button>."
                    ));
          if ("function" === typeof value) {
            domElement.setAttribute(
              key,
              "javascript:throw new Error('A React form was unexpectedly submitted. If you called form.submit() manually, consider using form.requestSubmit() instead. If you\\'re trying to use event.stopPropagation() in a submit event handler, consider also calling event.preventDefault().')"
            );
            break;
          } else
            "function" === typeof prevValue &&
              ("formAction" === key
                ? ("input" !== tag &&
                    setProp(domElement, tag, "name", props.name, props, null),
                  setProp(
                    domElement,
                    tag,
                    "formEncType",
                    props.formEncType,
                    props,
                    null
                  ),
                  setProp(
                    domElement,
                    tag,
                    "formMethod",
                    props.formMethod,
                    props,
                    null
                  ),
                  setProp(
                    domElement,
                    tag,
                    "formTarget",
                    props.formTarget,
                    props,
                    null
                  ))
                : (setProp(
                    domElement,
                    tag,
                    "encType",
                    props.encType,
                    props,
                    null
                  ),
                  setProp(domElement, tag, "method", props.method, props, null),
                  setProp(
                    domElement,
                    tag,
                    "target",
                    props.target,
                    props,
                    null
                  )));
          if (
            null == value ||
            "symbol" === typeof value ||
            "boolean" === typeof value
          ) {
            domElement.removeAttribute(key);
            break;
          }
          checkAttributeStringCoercion(value, key);
          value = sanitizeURL("" + value);
          domElement.setAttribute(key, value);
          break;
        case "onClick":
          null != value &&
            ("function" !== typeof value &&
              warnForInvalidEventListener(key, value),
            (domElement.onclick = noop$1));
          break;
        case "onScroll":
          null != value &&
            ("function" !== typeof value &&
              warnForInvalidEventListener(key, value),
            listenToNonDelegatedEvent("scroll", domElement));
          break;
        case "onScrollEnd":
          null != value &&
            ("function" !== typeof value &&
              warnForInvalidEventListener(key, value),
            listenToNonDelegatedEvent("scrollend", domElement));
          break;
        case "dangerouslySetInnerHTML":
          if (null != value) {
            if ("object" !== typeof value || !("__html" in value))
              throw Error(
                "`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://react.dev/link/dangerously-set-inner-html for more information."
              );
            key = value.__html;
            if (null != key) {
              if (null != props.children)
                throw Error(
                  "Can only set one of `children` or `props.dangerouslySetInnerHTML`."
                );
              domElement.innerHTML = key;
            }
          }
          break;
        case "multiple":
          domElement.multiple =
            value && "function" !== typeof value && "symbol" !== typeof value;
          break;
        case "muted":
          domElement.muted =
            value && "function" !== typeof value && "symbol" !== typeof value;
          break;
        case "suppressContentEditableWarning":
        case "suppressHydrationWarning":
        case "defaultValue":
        case "defaultChecked":
        case "innerHTML":
        case "ref":
          break;
        case "autoFocus":
          break;
        case "xlinkHref":
          if (
            null == value ||
            "function" === typeof value ||
            "boolean" === typeof value ||
            "symbol" === typeof value
          ) {
            domElement.removeAttribute("xlink:href");
            break;
          }
          checkAttributeStringCoercion(value, key);
          key = sanitizeURL("" + value);
          domElement.setAttributeNS(xlinkNamespace, "xlink:href", key);
          break;
        case "contentEditable":
        case "spellCheck":
        case "draggable":
        case "value":
        case "autoReverse":
        case "externalResourcesRequired":
        case "focusable":
        case "preserveAlpha":
          null != value &&
          "function" !== typeof value &&
          "symbol" !== typeof value
            ? (checkAttributeStringCoercion(value, key),
              domElement.setAttribute(key, "" + value))
            : domElement.removeAttribute(key);
          break;
        case "inert":
          "" !== value ||
            didWarnForNewBooleanPropsWithEmptyValue[key] ||
            ((didWarnForNewBooleanPropsWithEmptyValue[key] = !0),
            console.error(
              "Received an empty string for a boolean attribute `%s`. This will treat the attribute as if it were false. Either pass `false` to silence this warning, or pass `true` if you used an empty string in earlier versions of React to indicate this attribute is true.",
              key
            ));
        case "allowFullScreen":
        case "async":
        case "autoPlay":
        case "controls":
        case "default":
        case "defer":
        case "disabled":
        case "disablePictureInPicture":
        case "disableRemotePlayback":
        case "formNoValidate":
        case "hidden":
        case "loop":
        case "noModule":
        case "noValidate":
        case "open":
        case "playsInline":
        case "readOnly":
        case "required":
        case "reversed":
        case "scoped":
        case "seamless":
        case "itemScope":
          value && "function" !== typeof value && "symbol" !== typeof value
            ? domElement.setAttribute(key, "")
            : domElement.removeAttribute(key);
          break;
        case "capture":
        case "download":
          !0 === value
            ? domElement.setAttribute(key, "")
            : !1 !== value &&
                null != value &&
                "function" !== typeof value &&
                "symbol" !== typeof value
              ? (checkAttributeStringCoercion(value, key),
                domElement.setAttribute(key, value))
              : domElement.removeAttribute(key);
          break;
        case "cols":
        case "rows":
        case "size":
        case "span":
          null != value &&
          "function" !== typeof value &&
          "symbol" !== typeof value &&
          !isNaN(value) &&
          1 <= value
            ? (checkAttributeStringCoercion(value, key),
              domElement.setAttribute(key, value))
            : domElement.removeAttribute(key);
          break;
        case "rowSpan":
        case "start":
          null == value ||
          "function" === typeof value ||
          "symbol" === typeof value ||
          isNaN(value)
            ? domElement.removeAttribute(key)
            : (checkAttributeStringCoercion(value, key),
              domElement.setAttribute(key, value));
          break;
        case "popover":
          listenToNonDelegatedEvent("beforetoggle", domElement);
          listenToNonDelegatedEvent("toggle", domElement);
          setValueForAttribute(domElement, "popover", value);
          break;
        case "xlinkActuate":
          setValueForNamespacedAttribute(
            domElement,
            xlinkNamespace,
            "xlink:actuate",
            value
          );
          break;
        case "xlinkArcrole":
          setValueForNamespacedAttribute(
            domElement,
            xlinkNamespace,
            "xlink:arcrole",
            value
          );
          break;
        case "xlinkRole":
          setValueForNamespacedAttribute(
            domElement,
            xlinkNamespace,
            "xlink:role",
            value
          );
          break;
        case "xlinkShow":
          setValueForNamespacedAttribute(
            domElement,
            xlinkNamespace,
            "xlink:show",
            value
          );
          break;
        case "xlinkTitle":
          setValueForNamespacedAttribute(
            domElement,
            xlinkNamespace,
            "xlink:title",
            value
          );
          break;
        case "xlinkType":
          setValueForNamespacedAttribute(
            domElement,
            xlinkNamespace,
            "xlink:type",
            value
          );
          break;
        case "xmlBase":
          setValueForNamespacedAttribute(
            domElement,
            xmlNamespace,
            "xml:base",
            value
          );
          break;
        case "xmlLang":
          setValueForNamespacedAttribute(
            domElement,
            xmlNamespace,
            "xml:lang",
            value
          );
          break;
        case "xmlSpace":
          setValueForNamespacedAttribute(
            domElement,
            xmlNamespace,
            "xml:space",
            value
          );
          break;
        case "is":
          null != prevValue &&
            console.error(
              'Cannot update the "is" prop after it has been initialized.'
            );
          setValueForAttribute(domElement, "is", value);
          break;
        case "innerText":
        case "textContent":
          break;
        case "popoverTarget":
          didWarnPopoverTargetObject ||
            null == value ||
            "object" !== typeof value ||
            ((didWarnPopoverTargetObject = !0),
            console.error(
              "The `popoverTarget` prop expects the ID of an Element as a string. Received %s instead.",
              value
            ));
        default:
          !(2 < key.length) ||
          ("o" !== key[0] && "O" !== key[0]) ||
          ("n" !== key[1] && "N" !== key[1])
            ? ((key = getAttributeAlias(key)),
              setValueForAttribute(domElement, key, value))
            : registrationNameDependencies.hasOwnProperty(key) &&
              null != value &&
              "function" !== typeof value &&
              warnForInvalidEventListener(key, value);
      }
    }
    function setPropOnCustomElement(
      domElement,
      tag,
      key,
      value,
      props,
      prevValue
    ) {
      switch (key) {
        case "style":
          setValueForStyles(domElement, value, prevValue);
          break;
        case "dangerouslySetInnerHTML":
          if (null != value) {
            if ("object" !== typeof value || !("__html" in value))
              throw Error(
                "`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://react.dev/link/dangerously-set-inner-html for more information."
              );
            key = value.__html;
            if (null != key) {
              if (null != props.children)
                throw Error(
                  "Can only set one of `children` or `props.dangerouslySetInnerHTML`."
                );
              domElement.innerHTML = key;
            }
          }
          break;
        case "children":
          "string" === typeof value
            ? setTextContent(domElement, value)
            : ("number" === typeof value || "bigint" === typeof value) &&
              setTextContent(domElement, "" + value);
          break;
        case "onScroll":
          null != value &&
            ("function" !== typeof value &&
              warnForInvalidEventListener(key, value),
            listenToNonDelegatedEvent("scroll", domElement));
          break;
        case "onScrollEnd":
          null != value &&
            ("function" !== typeof value &&
              warnForInvalidEventListener(key, value),
            listenToNonDelegatedEvent("scrollend", domElement));
          break;
        case "onClick":
          null != value &&
            ("function" !== typeof value &&
              warnForInvalidEventListener(key, value),
            (domElement.onclick = noop$1));
          break;
        case "suppressContentEditableWarning":
        case "suppressHydrationWarning":
        case "innerHTML":
        case "ref":
          break;
        case "innerText":
        case "textContent":
          break;
        default:
          if (registrationNameDependencies.hasOwnProperty(key))
            null != value &&
              "function" !== typeof value &&
              warnForInvalidEventListener(key, value);
          else
            a: {
              if (
                "o" === key[0] &&
                "n" === key[1] &&
                ((props = key.endsWith("Capture")),
                (tag = key.slice(2, props ? key.length - 7 : void 0)),
                (prevValue = domElement[internalPropsKey] || null),
                (prevValue = null != prevValue ? prevValue[key] : null),
                "function" === typeof prevValue &&
                  domElement.removeEventListener(tag, prevValue, props),
                "function" === typeof value)
              ) {
                "function" !== typeof prevValue &&
                  null !== prevValue &&
                  (key in domElement
                    ? (domElement[key] = null)
                    : domElement.hasAttribute(key) &&
                      domElement.removeAttribute(key));
                domElement.addEventListener(tag, value, props);
                break a;
              }
              key in domElement
                ? (domElement[key] = value)
                : !0 === value
                  ? domElement.setAttribute(key, "")
                  : setValueForAttribute(domElement, key, value);
            }
      }
    }
    function setInitialProperties(domElement, tag, props) {
      validatePropertiesInDevelopment(tag, props);
      switch (tag) {
        case "div":
        case "span":
        case "svg":
        case "path":
        case "a":
        case "g":
        case "p":
        case "li":
          break;
        case "img":
          listenToNonDelegatedEvent("error", domElement);
          listenToNonDelegatedEvent("load", domElement);
          var hasSrc = !1,
            hasSrcSet = !1,
            propKey;
          for (propKey in props)
            if (props.hasOwnProperty(propKey)) {
              var propValue = props[propKey];
              if (null != propValue)
                switch (propKey) {
                  case "src":
                    hasSrc = !0;
                    break;
                  case "srcSet":
                    hasSrcSet = !0;
                    break;
                  case "children":
                  case "dangerouslySetInnerHTML":
                    throw Error(
                      tag +
                        " is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`."
                    );
                  default:
                    setProp(domElement, tag, propKey, propValue, props, null);
                }
            }
          hasSrcSet &&
            setProp(domElement, tag, "srcSet", props.srcSet, props, null);
          hasSrc && setProp(domElement, tag, "src", props.src, props, null);
          return;
        case "input":
          checkControlledValueProps("input", props);
          listenToNonDelegatedEvent("invalid", domElement);
          var defaultValue = (propKey = propValue = hasSrcSet = null),
            checked = null,
            defaultChecked = null;
          for (hasSrc in props)
            if (props.hasOwnProperty(hasSrc)) {
              var _propValue = props[hasSrc];
              if (null != _propValue)
                switch (hasSrc) {
                  case "name":
                    hasSrcSet = _propValue;
                    break;
                  case "type":
                    propValue = _propValue;
                    break;
                  case "checked":
                    checked = _propValue;
                    break;
                  case "defaultChecked":
                    defaultChecked = _propValue;
                    break;
                  case "value":
                    propKey = _propValue;
                    break;
                  case "defaultValue":
                    defaultValue = _propValue;
                    break;
                  case "children":
                  case "dangerouslySetInnerHTML":
                    if (null != _propValue)
                      throw Error(
                        tag +
                          " is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`."
                      );
                    break;
                  default:
                    setProp(domElement, tag, hasSrc, _propValue, props, null);
                }
            }
          validateInputProps(domElement, props);
          initInput(
            domElement,
            propKey,
            defaultValue,
            checked,
            defaultChecked,
            propValue,
            hasSrcSet,
            !1
          );
          return;
        case "select":
          checkControlledValueProps("select", props);
          listenToNonDelegatedEvent("invalid", domElement);
          hasSrc = propValue = propKey = null;
          for (hasSrcSet in props)
            if (
              props.hasOwnProperty(hasSrcSet) &&
              ((defaultValue = props[hasSrcSet]), null != defaultValue)
            )
              switch (hasSrcSet) {
                case "value":
                  propKey = defaultValue;
                  break;
                case "defaultValue":
                  propValue = defaultValue;
                  break;
                case "multiple":
                  hasSrc = defaultValue;
                default:
                  setProp(
                    domElement,
                    tag,
                    hasSrcSet,
                    defaultValue,
                    props,
                    null
                  );
              }
          validateSelectProps(domElement, props);
          tag = propKey;
          props = propValue;
          domElement.multiple = !!hasSrc;
          null != tag
            ? updateOptions(domElement, !!hasSrc, tag, !1)
            : null != props && updateOptions(domElement, !!hasSrc, props, !0);
          return;
        case "textarea":
          checkControlledValueProps("textarea", props);
          listenToNonDelegatedEvent("invalid", domElement);
          propKey = hasSrcSet = hasSrc = null;
          for (propValue in props)
            if (
              props.hasOwnProperty(propValue) &&
              ((defaultValue = props[propValue]), null != defaultValue)
            )
              switch (propValue) {
                case "value":
                  hasSrc = defaultValue;
                  break;
                case "defaultValue":
                  hasSrcSet = defaultValue;
                  break;
                case "children":
                  propKey = defaultValue;
                  break;
                case "dangerouslySetInnerHTML":
                  if (null != defaultValue)
                    throw Error(
                      "`dangerouslySetInnerHTML` does not make sense on <textarea>."
                    );
                  break;
                default:
                  setProp(
                    domElement,
                    tag,
                    propValue,
                    defaultValue,
                    props,
                    null
                  );
              }
          validateTextareaProps(domElement, props);
          initTextarea(domElement, hasSrc, hasSrcSet, propKey);
          return;
        case "option":
          validateOptionProps(domElement, props);
          for (checked in props)
            if (
              props.hasOwnProperty(checked) &&
              ((hasSrc = props[checked]), null != hasSrc)
            )
              switch (checked) {
                case "selected":
                  domElement.selected =
                    hasSrc &&
                    "function" !== typeof hasSrc &&
                    "symbol" !== typeof hasSrc;
                  break;
                default:
                  setProp(domElement, tag, checked, hasSrc, props, null);
              }
          return;
        case "dialog":
          listenToNonDelegatedEvent("beforetoggle", domElement);
          listenToNonDelegatedEvent("toggle", domElement);
          listenToNonDelegatedEvent("cancel", domElement);
          listenToNonDelegatedEvent("close", domElement);
          break;
        case "iframe":
        case "object":
          listenToNonDelegatedEvent("load", domElement);
          break;
        case "video":
        case "audio":
          for (hasSrc = 0; hasSrc < mediaEventTypes.length; hasSrc++)
            listenToNonDelegatedEvent(mediaEventTypes[hasSrc], domElement);
          break;
        case "image":
          listenToNonDelegatedEvent("error", domElement);
          listenToNonDelegatedEvent("load", domElement);
          break;
        case "details":
          listenToNonDelegatedEvent("toggle", domElement);
          break;
        case "embed":
        case "source":
        case "link":
          listenToNonDelegatedEvent("error", domElement),
            listenToNonDelegatedEvent("load", domElement);
        case "area":
        case "base":
        case "br":
        case "col":
        case "hr":
        case "keygen":
        case "meta":
        case "param":
        case "track":
        case "wbr":
        case "menuitem":
          for (defaultChecked in props)
            if (
              props.hasOwnProperty(defaultChecked) &&
              ((hasSrc = props[defaultChecked]), null != hasSrc)
            )
              switch (defaultChecked) {
                case "children":
                case "dangerouslySetInnerHTML":
                  throw Error(
                    tag +
                      " is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`."
                  );
                default:
                  setProp(domElement, tag, defaultChecked, hasSrc, props, null);
              }
          return;
        default:
          if (isCustomElement(tag)) {
            for (_propValue in props)
              props.hasOwnProperty(_propValue) &&
                ((hasSrc = props[_propValue]),
                void 0 !== hasSrc &&
                  setPropOnCustomElement(
                    domElement,
                    tag,
                    _propValue,
                    hasSrc,
                    props,
                    void 0
                  ));
            return;
          }
      }
      for (defaultValue in props)
        props.hasOwnProperty(defaultValue) &&
          ((hasSrc = props[defaultValue]),
          null != hasSrc &&
            setProp(domElement, tag, defaultValue, hasSrc, props, null));
    }
    function updateProperties(domElement, tag, lastProps, nextProps) {
      validatePropertiesInDevelopment(tag, nextProps);
      switch (tag) {
        case "div":
        case "span":
        case "svg":
        case "path":
        case "a":
        case "g":
        case "p":
        case "li":
          break;
        case "input":
          var name = null,
            type = null,
            value = null,
            defaultValue = null,
            lastDefaultValue = null,
            checked = null,
            defaultChecked = null;
          for (propKey in lastProps) {
            var lastProp = lastProps[propKey];
            if (lastProps.hasOwnProperty(propKey) && null != lastProp)
              switch (propKey) {
                case "checked":
                  break;
                case "value":
                  break;
                case "defaultValue":
                  lastDefaultValue = lastProp;
                default:
                  nextProps.hasOwnProperty(propKey) ||
                    setProp(
                      domElement,
                      tag,
                      propKey,
                      null,
                      nextProps,
                      lastProp
                    );
              }
          }
          for (var _propKey8 in nextProps) {
            var propKey = nextProps[_propKey8];
            lastProp = lastProps[_propKey8];
            if (
              nextProps.hasOwnProperty(_propKey8) &&
              (null != propKey || null != lastProp)
            )
              switch (_propKey8) {
                case "type":
                  type = propKey;
                  break;
                case "name":
                  name = propKey;
                  break;
                case "checked":
                  checked = propKey;
                  break;
                case "defaultChecked":
                  defaultChecked = propKey;
                  break;
                case "value":
                  value = propKey;
                  break;
                case "defaultValue":
                  defaultValue = propKey;
                  break;
                case "children":
                case "dangerouslySetInnerHTML":
                  if (null != propKey)
                    throw Error(
                      tag +
                        " is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`."
                    );
                  break;
                default:
                  propKey !== lastProp &&
                    setProp(
                      domElement,
                      tag,
                      _propKey8,
                      propKey,
                      nextProps,
                      lastProp
                    );
              }
          }
          tag =
            "checkbox" === lastProps.type || "radio" === lastProps.type
              ? null != lastProps.checked
              : null != lastProps.value;
          nextProps =
            "checkbox" === nextProps.type || "radio" === nextProps.type
              ? null != nextProps.checked
              : null != nextProps.value;
          tag ||
            !nextProps ||
            didWarnUncontrolledToControlled ||
            (console.error(
              "A component is changing an uncontrolled input to be controlled. This is likely caused by the value changing from undefined to a defined value, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://react.dev/link/controlled-components"
            ),
            (didWarnUncontrolledToControlled = !0));
          !tag ||
            nextProps ||
            didWarnControlledToUncontrolled ||
            (console.error(
              "A component is changing a controlled input to be uncontrolled. This is likely caused by the value changing from a defined to undefined, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://react.dev/link/controlled-components"
            ),
            (didWarnControlledToUncontrolled = !0));
          updateInput(
            domElement,
            value,
            defaultValue,
            lastDefaultValue,
            checked,
            defaultChecked,
            type,
            name
          );
          return;
        case "select":
          propKey = value = defaultValue = _propKey8 = null;
          for (type in lastProps)
            if (
              ((lastDefaultValue = lastProps[type]),
              lastProps.hasOwnProperty(type) && null != lastDefaultValue)
            )
              switch (type) {
                case "value":
                  break;
                case "multiple":
                  propKey = lastDefaultValue;
                default:
                  nextProps.hasOwnProperty(type) ||
                    setProp(
                      domElement,
                      tag,
                      type,
                      null,
                      nextProps,
                      lastDefaultValue
                    );
              }
          for (name in nextProps)
            if (
              ((type = nextProps[name]),
              (lastDefaultValue = lastProps[name]),
              nextProps.hasOwnProperty(name) &&
                (null != type || null != lastDefaultValue))
            )
              switch (name) {
                case "value":
                  _propKey8 = type;
                  break;
                case "defaultValue":
                  defaultValue = type;
                  break;
                case "multiple":
                  value = type;
                default:
                  type !== lastDefaultValue &&
                    setProp(
                      domElement,
                      tag,
                      name,
                      type,
                      nextProps,
                      lastDefaultValue
                    );
              }
          nextProps = defaultValue;
          tag = value;
          lastProps = propKey;
          null != _propKey8
            ? updateOptions(domElement, !!tag, _propKey8, !1)
            : !!lastProps !== !!tag &&
              (null != nextProps
                ? updateOptions(domElement, !!tag, nextProps, !0)
                : updateOptions(domElement, !!tag, tag ? [] : "", !1));
          return;
        case "textarea":
          propKey = _propKey8 = null;
          for (defaultValue in lastProps)
            if (
              ((name = lastProps[defaultValue]),
              lastProps.hasOwnProperty(defaultValue) &&
                null != name &&
                !nextProps.hasOwnProperty(defaultValue))
            )
              switch (defaultValue) {
                case "value":
                  break;
                case "children":
                  break;
                default:
                  setProp(domElement, tag, defaultValue, null, nextProps, name);
              }
          for (value in nextProps)
            if (
              ((name = nextProps[value]),
              (type = lastProps[value]),
              nextProps.hasOwnProperty(value) && (null != name || null != type))
            )
              switch (value) {
                case "value":
                  _propKey8 = name;
                  break;
                case "defaultValue":
                  propKey = name;
                  break;
                case "children":
                  break;
                case "dangerouslySetInnerHTML":
                  if (null != name)
                    throw Error(
                      "`dangerouslySetInnerHTML` does not make sense on <textarea>."
                    );
                  break;
                default:
                  name !== type &&
                    setProp(domElement, tag, value, name, nextProps, type);
              }
          updateTextarea(domElement, _propKey8, propKey);
          return;
        case "option":
          for (var _propKey13 in lastProps)
            if (
              ((_propKey8 = lastProps[_propKey13]),
              lastProps.hasOwnProperty(_propKey13) &&
                null != _propKey8 &&
                !nextProps.hasOwnProperty(_propKey13))
            )
              switch (_propKey13) {
                case "selected":
                  domElement.selected = !1;
                  break;
                default:
                  setProp(
                    domElement,
                    tag,
                    _propKey13,
                    null,
                    nextProps,
                    _propKey8
                  );
              }
          for (lastDefaultValue in nextProps)
            if (
              ((_propKey8 = nextProps[lastDefaultValue]),
              (propKey = lastProps[lastDefaultValue]),
              nextProps.hasOwnProperty(lastDefaultValue) &&
                _propKey8 !== propKey &&
                (null != _propKey8 || null != propKey))
            )
              switch (lastDefaultValue) {
                case "selected":
                  domElement.selected =
                    _propKey8 &&
                    "function" !== typeof _propKey8 &&
                    "symbol" !== typeof _propKey8;
                  break;
                default:
                  setProp(
                    domElement,
                    tag,
                    lastDefaultValue,
                    _propKey8,
                    nextProps,
                    propKey
                  );
              }
          return;
        case "img":
        case "link":
        case "area":
        case "base":
        case "br":
        case "col":
        case "embed":
        case "hr":
        case "keygen":
        case "meta":
        case "param":
        case "source":
        case "track":
        case "wbr":
        case "menuitem":
          for (var _propKey15 in lastProps)
            (_propKey8 = lastProps[_propKey15]),
              lastProps.hasOwnProperty(_propKey15) &&
                null != _propKey8 &&
                !nextProps.hasOwnProperty(_propKey15) &&
                setProp(
                  domElement,
                  tag,
                  _propKey15,
                  null,
                  nextProps,
                  _propKey8
                );
          for (checked in nextProps)
            if (
              ((_propKey8 = nextProps[checked]),
              (propKey = lastProps[checked]),
              nextProps.hasOwnProperty(checked) &&
                _propKey8 !== propKey &&
                (null != _propKey8 || null != propKey))
            )
              switch (checked) {
                case "children":
                case "dangerouslySetInnerHTML":
                  if (null != _propKey8)
                    throw Error(
                      tag +
                        " is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`."
                    );
                  break;
                default:
                  setProp(
                    domElement,
                    tag,
                    checked,
                    _propKey8,
                    nextProps,
                    propKey
                  );
              }
          return;
        default:
          if (isCustomElement(tag)) {
            for (var _propKey17 in lastProps)
              (_propKey8 = lastProps[_propKey17]),
                lastProps.hasOwnProperty(_propKey17) &&
                  void 0 !== _propKey8 &&
                  !nextProps.hasOwnProperty(_propKey17) &&
                  setPropOnCustomElement(
                    domElement,
                    tag,
                    _propKey17,
                    void 0,
                    nextProps,
                    _propKey8
                  );
            for (defaultChecked in nextProps)
              (_propKey8 = nextProps[defaultChecked]),
                (propKey = lastProps[defaultChecked]),
                !nextProps.hasOwnProperty(defaultChecked) ||
                  _propKey8 === propKey ||
                  (void 0 === _propKey8 && void 0 === propKey) ||
                  setPropOnCustomElement(
                    domElement,
                    tag,
                    defaultChecked,
                    _propKey8,
                    nextProps,
                    propKey
                  );
            return;
          }
      }
      for (var _propKey19 in lastProps)
        (_propKey8 = lastProps[_propKey19]),
          lastProps.hasOwnProperty(_propKey19) &&
            null != _propKey8 &&
            !nextProps.hasOwnProperty(_propKey19) &&
            setProp(domElement, tag, _propKey19, null, nextProps, _propKey8);
      for (lastProp in nextProps)
        (_propKey8 = nextProps[lastProp]),
          (propKey = lastProps[lastProp]),
          !nextProps.hasOwnProperty(lastProp) ||
            _propKey8 === propKey ||
            (null == _propKey8 && null == propKey) ||
            setProp(domElement, tag, lastProp, _propKey8, nextProps, propKey);
    }
    function getPropNameFromAttributeName(attrName) {
      switch (attrName) {
        case "class":
          return "className";
        case "for":
          return "htmlFor";
        default:
          return attrName;
      }
    }
    function getStylesObjectFromElement(domElement) {
      var serverValueInObjectForm = {};
      domElement = domElement.style;
      for (var i = 0; i < domElement.length; i++) {
        var styleName = domElement[i];
        serverValueInObjectForm[styleName] =
          domElement.getPropertyValue(styleName);
      }
      return serverValueInObjectForm;
    }
    function diffHydratedStyles(domElement, value$jscomp$0, serverDifferences) {
      if (null != value$jscomp$0 && "object" !== typeof value$jscomp$0)
        console.error(
          "The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX."
        );
      else {
        var clientValue;
        var delimiter = (clientValue = ""),
          styleName;
        for (styleName in value$jscomp$0)
          if (value$jscomp$0.hasOwnProperty(styleName)) {
            var value = value$jscomp$0[styleName];
            null != value &&
              "boolean" !== typeof value &&
              "" !== value &&
              (0 === styleName.indexOf("--")
                ? (checkCSSPropertyStringCoercion(value, styleName),
                  (clientValue +=
                    delimiter + styleName + ":" + ("" + value).trim()))
                : "number" !== typeof value ||
                    0 === value ||
                    unitlessNumbers.has(styleName)
                  ? (checkCSSPropertyStringCoercion(value, styleName),
                    (clientValue +=
                      delimiter +
                      styleName
                        .replace(uppercasePattern, "-$1")
                        .toLowerCase()
                        .replace(msPattern$1, "-ms-") +
                      ":" +
                      ("" + value).trim()))
                  : (clientValue +=
                      delimiter +
                      styleName
                        .replace(uppercasePattern, "-$1")
                        .toLowerCase()
                        .replace(msPattern$1, "-ms-") +
                      ":" +
                      value +
                      "px"),
              (delimiter = ";"));
          }
        clientValue = clientValue || null;
        value$jscomp$0 = domElement.getAttribute("style");
        value$jscomp$0 !== clientValue &&
          ((clientValue = normalizeMarkupForTextOrAttribute(clientValue)),
          normalizeMarkupForTextOrAttribute(value$jscomp$0) !== clientValue &&
            (serverDifferences.style = getStylesObjectFromElement(domElement)));
      }
    }
    function hydrateAttribute(
      domElement,
      propKey,
      attributeName,
      value,
      extraAttributes,
      serverDifferences
    ) {
      extraAttributes.delete(attributeName);
      domElement = domElement.getAttribute(attributeName);
      if (null === domElement)
        switch (typeof value) {
          case "undefined":
          case "function":
          case "symbol":
          case "boolean":
            return;
        }
      else if (null != value)
        switch (typeof value) {
          case "function":
          case "symbol":
          case "boolean":
            break;
          default:
            if (
              (checkAttributeStringCoercion(value, propKey),
              domElement === "" + value)
            )
              return;
        }
      warnForPropDifference(propKey, domElement, value, serverDifferences);
    }
    function hydrateBooleanAttribute(
      domElement,
      propKey,
      attributeName,
      value,
      extraAttributes,
      serverDifferences
    ) {
      extraAttributes.delete(attributeName);
      domElement = domElement.getAttribute(attributeName);
      if (null === domElement) {
        switch (typeof value) {
          case "function":
          case "symbol":
            return;
        }
        if (!value) return;
      } else
        switch (typeof value) {
          case "function":
          case "symbol":
            break;
          default:
            if (value) return;
        }
      warnForPropDifference(propKey, domElement, value, serverDifferences);
    }
    function hydrateBooleanishAttribute(
      domElement,
      propKey,
      attributeName,
      value,
      extraAttributes,
      serverDifferences
    ) {
      extraAttributes.delete(attributeName);
      domElement = domElement.getAttribute(attributeName);
      if (null === domElement)
        switch (typeof value) {
          case "undefined":
          case "function":
          case "symbol":
            return;
        }
      else if (null != value)
        switch (typeof value) {
          case "function":
          case "symbol":
            break;
          default:
            if (
              (checkAttributeStringCoercion(value, attributeName),
              domElement === "" + value)
            )
              return;
        }
      warnForPropDifference(propKey, domElement, value, serverDifferences);
    }
    function hydrateNumericAttribute(
      domElement,
      propKey,
      attributeName,
      value,
      extraAttributes,
      serverDifferences
    ) {
      extraAttributes.delete(attributeName);
      domElement = domElement.getAttribute(attributeName);
      if (null === domElement)
        switch (typeof value) {
          case "undefined":
          case "function":
          case "symbol":
          case "boolean":
            return;
          default:
            if (isNaN(value)) return;
        }
      else if (null != value)
        switch (typeof value) {
          case "function":
          case "symbol":
          case "boolean":
            break;
          default:
            if (
              !isNaN(value) &&
              (checkAttributeStringCoercion(value, propKey),
              domElement === "" + value)
            )
              return;
        }
      warnForPropDifference(propKey, domElement, value, serverDifferences);
    }
    function hydrateSanitizedAttribute(
      domElement,
      propKey,
      attributeName,
      value,
      extraAttributes,
      serverDifferences
    ) {
      extraAttributes.delete(attributeName);
      domElement = domElement.getAttribute(attributeName);
      if (null === domElement)
        switch (typeof value) {
          case "undefined":
          case "function":
          case "symbol":
          case "boolean":
            return;
        }
      else if (null != value)
        switch (typeof value) {
          case "function":
          case "symbol":
          case "boolean":
            break;
          default:
            if (
              (checkAttributeStringCoercion(value, propKey),
              (attributeName = sanitizeURL("" + value)),
              domElement === attributeName)
            )
              return;
        }
      warnForPropDifference(propKey, domElement, value, serverDifferences);
    }
    function diffHydratedProperties(domElement, tag, props, hostContext) {
      for (
        var serverDifferences = {},
          extraAttributes = new Set(),
          attributes = domElement.attributes,
          i = 0;
        i < attributes.length;
        i++
      )
        switch (attributes[i].name.toLowerCase()) {
          case "value":
            break;
          case "checked":
            break;
          case "selected":
            break;
          default:
            extraAttributes.add(attributes[i].name);
        }
      if (isCustomElement(tag))
        for (var propKey in props) {
          if (props.hasOwnProperty(propKey)) {
            var value = props[propKey];
            if (null != value)
              if (registrationNameDependencies.hasOwnProperty(propKey))
                "function" !== typeof value &&
                  warnForInvalidEventListener(propKey, value);
              else if (!0 !== props.suppressHydrationWarning)
                switch (propKey) {
                  case "children":
                    ("string" !== typeof value && "number" !== typeof value) ||
                      warnForPropDifference(
                        "children",
                        domElement.textContent,
                        value,
                        serverDifferences
                      );
                    continue;
                  case "suppressContentEditableWarning":
                  case "suppressHydrationWarning":
                  case "defaultValue":
                  case "defaultChecked":
                  case "innerHTML":
                  case "ref":
                    continue;
                  case "dangerouslySetInnerHTML":
                    attributes = domElement.innerHTML;
                    value = value ? value.__html : void 0;
                    null != value &&
                      ((value = normalizeHTML(domElement, value)),
                      warnForPropDifference(
                        propKey,
                        attributes,
                        value,
                        serverDifferences
                      ));
                    continue;
                  case "style":
                    extraAttributes.delete(propKey);
                    diffHydratedStyles(domElement, value, serverDifferences);
                    continue;
                  case "offsetParent":
                  case "offsetTop":
                  case "offsetLeft":
                  case "offsetWidth":
                  case "offsetHeight":
                  case "isContentEditable":
                  case "outerText":
                  case "outerHTML":
                    extraAttributes.delete(propKey.toLowerCase());
                    console.error(
                      "Assignment to read-only property will result in a no-op: `%s`",
                      propKey
                    );
                    continue;
                  case "className":
                    extraAttributes.delete("class");
                    attributes = getValueForAttributeOnCustomComponent(
                      domElement,
                      "class",
                      value
                    );
                    warnForPropDifference(
                      "className",
                      attributes,
                      value,
                      serverDifferences
                    );
                    continue;
                  default:
                    hostContext.context === HostContextNamespaceNone &&
                    "svg" !== tag &&
                    "math" !== tag
                      ? extraAttributes.delete(propKey.toLowerCase())
                      : extraAttributes.delete(propKey),
                      (attributes = getValueForAttributeOnCustomComponent(
                        domElement,
                        propKey,
                        value
                      )),
                      warnForPropDifference(
                        propKey,
                        attributes,
                        value,
                        serverDifferences
                      );
                }
          }
        }
      else
        for (value in props)
          if (
            props.hasOwnProperty(value) &&
            ((propKey = props[value]), null != propKey)
          )
            if (registrationNameDependencies.hasOwnProperty(value))
              "function" !== typeof propKey &&
                warnForInvalidEventListener(value, propKey);
            else if (!0 !== props.suppressHydrationWarning)
              switch (value) {
                case "children":
                  ("string" !== typeof propKey &&
                    "number" !== typeof propKey) ||
                    warnForPropDifference(
                      "children",
                      domElement.textContent,
                      propKey,
                      serverDifferences
                    );
                  continue;
                case "suppressContentEditableWarning":
                case "suppressHydrationWarning":
                case "value":
                case "checked":
                case "selected":
                case "defaultValue":
                case "defaultChecked":
                case "innerHTML":
                case "ref":
                  continue;
                case "dangerouslySetInnerHTML":
                  attributes = domElement.innerHTML;
                  propKey = propKey ? propKey.__html : void 0;
                  null != propKey &&
                    ((propKey = normalizeHTML(domElement, propKey)),
                    attributes !== propKey &&
                      (serverDifferences[value] = { __html: attributes }));
                  continue;
                case "className":
                  hydrateAttribute(
                    domElement,
                    value,
                    "class",
                    propKey,
                    extraAttributes,
                    serverDifferences
                  );
                  continue;
                case "tabIndex":
                  hydrateAttribute(
                    domElement,
                    value,
                    "tabindex",
                    propKey,
                    extraAttributes,
                    serverDifferences
                  );
                  continue;
                case "style":
                  extraAttributes.delete(value);
                  diffHydratedStyles(domElement, propKey, serverDifferences);
                  continue;
                case "multiple":
                  extraAttributes.delete(value);
                  warnForPropDifference(
                    value,
                    domElement.multiple,
                    propKey,
                    serverDifferences
                  );
                  continue;
                case "muted":
                  extraAttributes.delete(value);
                  warnForPropDifference(
                    value,
                    domElement.muted,
                    propKey,
                    serverDifferences
                  );
                  continue;
                case "autoFocus":
                  extraAttributes.delete("autofocus");
                  warnForPropDifference(
                    value,
                    domElement.autofocus,
                    propKey,
                    serverDifferences
                  );
                  continue;
                case "data":
                  if ("object" !== tag) {
                    extraAttributes.delete(value);
                    attributes = domElement.getAttribute("data");
                    warnForPropDifference(
                      value,
                      attributes,
                      propKey,
                      serverDifferences
                    );
                    continue;
                  }
                case "src":
                case "href":
                  if (
                    !(
                      "" !== propKey ||
                      ("a" === tag && "href" === value) ||
                      ("object" === tag && "data" === value)
                    )
                  ) {
                    "src" === value
                      ? console.error(
                          'An empty string ("") was passed to the %s attribute. This may cause the browser to download the whole page again over the network. To fix this, either do not render the element at all or pass null to %s instead of an empty string.',
                          value,
                          value
                        )
                      : console.error(
                          'An empty string ("") was passed to the %s attribute. To fix this, either do not render the element at all or pass null to %s instead of an empty string.',
                          value,
                          value
                        );
                    continue;
                  }
                  hydrateSanitizedAttribute(
                    domElement,
                    value,
                    value,
                    propKey,
                    extraAttributes,
                    serverDifferences
                  );
                  continue;
                case "action":
                case "formAction":
                  attributes = domElement.getAttribute(value);
                  if ("function" === typeof propKey) {
                    extraAttributes.delete(value.toLowerCase());
                    "formAction" === value
                      ? (extraAttributes.delete("name"),
                        extraAttributes.delete("formenctype"),
                        extraAttributes.delete("formmethod"),
                        extraAttributes.delete("formtarget"))
                      : (extraAttributes.delete("enctype"),
                        extraAttributes.delete("method"),
                        extraAttributes.delete("target"));
                    continue;
                  } else if (attributes === EXPECTED_FORM_ACTION_URL) {
                    extraAttributes.delete(value.toLowerCase());
                    warnForPropDifference(
                      value,
                      "function",
                      propKey,
                      serverDifferences
                    );
                    continue;
                  }
                  hydrateSanitizedAttribute(
                    domElement,
                    value,
                    value.toLowerCase(),
                    propKey,
                    extraAttributes,
                    serverDifferences
                  );
                  continue;
                case "xlinkHref":
                  hydrateSanitizedAttribute(
                    domElement,
                    value,
                    "xlink:href",
                    propKey,
                    extraAttributes,
                    serverDifferences
                  );
                  continue;
                case "contentEditable":
                  hydrateBooleanishAttribute(
                    domElement,
                    value,
                    "contenteditable",
                    propKey,
                    extraAttributes,
                    serverDifferences
                  );
                  continue;
                case "spellCheck":
                  hydrateBooleanishAttribute(
                    domElement,
                    value,
                    "spellcheck",
                    propKey,
                    extraAttributes,
                    serverDifferences
                  );
                  continue;
                case "draggable":
                case "autoReverse":
                case "externalResourcesRequired":
                case "focusable":
                case "preserveAlpha":
                  hydrateBooleanishAttribute(
                    domElement,
                    value,
                    value,
                    propKey,
                    extraAttributes,
                    serverDifferences
                  );
                  continue;
                case "allowFullScreen":
                case "async":
                case "autoPlay":
                case "controls":
                case "default":
                case "defer":
                case "disabled":
                case "disablePictureInPicture":
                case "disableRemotePlayback":
                case "formNoValidate":
                case "hidden":
                case "loop":
                case "noModule":
                case "noValidate":
                case "open":
                case "playsInline":
                case "readOnly":
                case "required":
                case "reversed":
                case "scoped":
                case "seamless":
                case "itemScope":
                  hydrateBooleanAttribute(
                    domElement,
                    value,
                    value.toLowerCase(),
                    propKey,
                    extraAttributes,
                    serverDifferences
                  );
                  continue;
                case "capture":
                case "download":
                  a: {
                    i = domElement;
                    var attributeName = (attributes = value),
                      serverDifferences$jscomp$0 = serverDifferences;
                    extraAttributes.delete(attributeName);
                    i = i.getAttribute(attributeName);
                    if (null === i)
                      switch (typeof propKey) {
                        case "undefined":
                        case "function":
                        case "symbol":
                          break a;
                        default:
                          if (!1 === propKey) break a;
                      }
                    else if (null != propKey)
                      switch (typeof propKey) {
                        case "function":
                        case "symbol":
                          break;
                        case "boolean":
                          if (!0 === propKey && "" === i) break a;
                          break;
                        default:
                          if (
                            (checkAttributeStringCoercion(propKey, attributes),
                            i === "" + propKey)
                          )
                            break a;
                      }
                    warnForPropDifference(
                      attributes,
                      i,
                      propKey,
                      serverDifferences$jscomp$0
                    );
                  }
                  continue;
                case "cols":
                case "rows":
                case "size":
                case "span":
                  a: {
                    i = domElement;
                    attributeName = attributes = value;
                    serverDifferences$jscomp$0 = serverDifferences;
                    extraAttributes.delete(attributeName);
                    i = i.getAttribute(attributeName);
                    if (null === i)
                      switch (typeof propKey) {
                        case "undefined":
                        case "function":
                        case "symbol":
                        case "boolean":
                          break a;
                        default:
                          if (isNaN(propKey) || 1 > propKey) break a;
                      }
                    else if (null != propKey)
                      switch (typeof propKey) {
                        case "function":
                        case "symbol":
                        case "boolean":
                          break;
                        default:
                          if (
                            !(isNaN(propKey) || 1 > propKey) &&
                            (checkAttributeStringCoercion(propKey, attributes),
                            i === "" + propKey)
                          )
                            break a;
                      }
                    warnForPropDifference(
                      attributes,
                      i,
                      propKey,
                      serverDifferences$jscomp$0
                    );
                  }
                  continue;
                case "rowSpan":
                  hydrateNumericAttribute(
                    domElement,
                    value,
                    "rowspan",
                    propKey,
                    extraAttributes,
                    serverDifferences
                  );
                  continue;
                case "start":
                  hydrateNumericAttribute(
                    domElement,
                    value,
                    value,
                    propKey,
                    extraAttributes,
                    serverDifferences
                  );
                  continue;
                case "xHeight":
                  hydrateAttribute(
                    domElement,
                    value,
                    "x-height",
                    propKey,
                    extraAttributes,
                    serverDifferences
                  );
                  continue;
                case "xlinkActuate":
                  hydrateAttribute(
                    domElement,
                    value,
                    "xlink:actuate",
                    propKey,
                    extraAttributes,
                    serverDifferences
                  );
                  continue;
                case "xlinkArcrole":
                  hydrateAttribute(
                    domElement,
                    value,
                    "xlink:arcrole",
                    propKey,
                    extraAttributes,
                    serverDifferences
                  );
                  continue;
                case "xlinkRole":
                  hydrateAttribute(
                    domElement,
                    value,
                    "xlink:role",
                    propKey,
                    extraAttributes,
                    serverDifferences
                  );
                  continue;
                case "xlinkShow":
                  hydrateAttribute(
                    domElement,
                    value,
                    "xlink:show",
                    propKey,
                    extraAttributes,
                    serverDifferences
                  );
                  continue;
                case "xlinkTitle":
                  hydrateAttribute(
                    domElement,
                    value,
                    "xlink:title",
                    propKey,
                    extraAttributes,
                    serverDifferences
                  );
                  continue;
                case "xlinkType":
                  hydrateAttribute(
                    domElement,
                    value,
                    "xlink:type",
                    propKey,
                    extraAttributes,
                    serverDifferences
                  );
                  continue;
                case "xmlBase":
                  hydrateAttribute(
                    domElement,
                    value,
                    "xml:base",
                    propKey,
                    extraAttributes,
                    serverDifferences
                  );
                  continue;
                case "xmlLang":
                  hydrateAttribute(
                    domElement,
                    value,
                    "xml:lang",
                    propKey,
                    extraAttributes,
                    serverDifferences
                  );
                  continue;
                case "xmlSpace":
                  hydrateAttribute(
                    domElement,
                    value,
                    "xml:space",
                    propKey,
                    extraAttributes,
                    serverDifferences
                  );
                  continue;
                case "inert":
                  "" !== propKey ||
                    didWarnForNewBooleanPropsWithEmptyValue[value] ||
                    ((didWarnForNewBooleanPropsWithEmptyValue[value] = !0),
                    console.error(
                      "Received an empty string for a boolean attribute `%s`. This will treat the attribute as if it were false. Either pass `false` to silence this warning, or pass `true` if you used an empty string in earlier versions of React to indicate this attribute is true.",
                      value
                    ));
                  hydrateBooleanAttribute(
                    domElement,
                    value,
                    value,
                    propKey,
                    extraAttributes,
                    serverDifferences
                  );
                  continue;
                default:
                  if (
                    !(2 < value.length) ||
                    ("o" !== value[0] && "O" !== value[0]) ||
                    ("n" !== value[1] && "N" !== value[1])
                  ) {
                    i = getAttributeAlias(value);
                    attributes = !1;
                    hostContext.context === HostContextNamespaceNone &&
                    "svg" !== tag &&
                    "math" !== tag
                      ? extraAttributes.delete(i.toLowerCase())
                      : ((attributeName = value.toLowerCase()),
                        (attributeName = possibleStandardNames.hasOwnProperty(
                          attributeName
                        )
                          ? possibleStandardNames[attributeName] || null
                          : null),
                        null !== attributeName &&
                          attributeName !== value &&
                          ((attributes = !0),
                          extraAttributes.delete(attributeName)),
                        extraAttributes.delete(i));
                    a: if (
                      ((attributeName = domElement),
                      (serverDifferences$jscomp$0 = i),
                      (i = propKey),
                      isAttributeNameSafe(serverDifferences$jscomp$0))
                    )
                      if (
                        attributeName.hasAttribute(serverDifferences$jscomp$0)
                      )
                        (attributeName = attributeName.getAttribute(
                          serverDifferences$jscomp$0
                        )),
                          checkAttributeStringCoercion(
                            i,
                            serverDifferences$jscomp$0
                          ),
                          (i = attributeName === "" + i ? i : attributeName);
                      else {
                        switch (typeof i) {
                          case "function":
                          case "symbol":
                            break a;
                          case "boolean":
                            if (
                              ((attributeName = serverDifferences$jscomp$0
                                .toLowerCase()
                                .slice(0, 5)),
                              "data-" !== attributeName &&
                                "aria-" !== attributeName)
                            )
                              break a;
                        }
                        i = void 0 === i ? void 0 : null;
                      }
                    else i = void 0;
                    attributes ||
                      warnForPropDifference(
                        value,
                        i,
                        propKey,
                        serverDifferences
                      );
                  }
              }
      0 < extraAttributes.size &&
        !0 !== props.suppressHydrationWarning &&
        warnForExtraAttributes(domElement, extraAttributes, serverDifferences);
      return 0 === Object.keys(serverDifferences).length
        ? null
        : serverDifferences;
    }
    function propNamesListJoin(list, combinator) {
      switch (list.length) {
        case 0:
          return "";
        case 1:
          return list[0];
        case 2:
          return list[0] + " " + combinator + " " + list[1];
        default:
          return (
            list.slice(0, -1).join(", ") +
            ", " +
            combinator +
            " " +
            list[list.length - 1]
          );
      }
    }
    function isLikelyStaticResource(initiatorType) {
      switch (initiatorType) {
        case "css":
        case "script":
        case "font":
        case "img":
        case "image":
        case "input":
        case "link":
          return !0;
        default:
          return !1;
      }
    }
    function estimateBandwidth() {
      if ("function" === typeof performance.getEntriesByType) {
        for (
          var count = 0,
            bits = 0,
            resourceEntries = performance.getEntriesByType("resource"),
            i = 0;
          i < resourceEntries.length;
          i++
        ) {
          var entry = resourceEntries[i],
            transferSize = entry.transferSize,
            initiatorType = entry.initiatorType,
            duration = entry.duration;
          if (
            transferSize &&
            duration &&
            isLikelyStaticResource(initiatorType)
          ) {
            initiatorType = 0;
            duration = entry.responseEnd;
            for (i += 1; i < resourceEntries.length; i++) {
              var overlapEntry = resourceEntries[i],
                overlapStartTime = overlapEntry.startTime;
              if (overlapStartTime > duration) break;
              var overlapTransferSize = overlapEntry.transferSize,
                overlapInitiatorType = overlapEntry.initiatorType;
              overlapTransferSize &&
                isLikelyStaticResource(overlapInitiatorType) &&
                ((overlapEntry = overlapEntry.responseEnd),
                (initiatorType +=
                  overlapTransferSize *
                  (overlapEntry < duration
                    ? 1
                    : (duration - overlapStartTime) /
                      (overlapEntry - overlapStartTime))));
            }
            --i;
            bits +=
              (8 * (transferSize + initiatorType)) / (entry.duration / 1e3);
            count++;
            if (10 < count) break;
          }
        }
        if (0 < count) return bits / count / 1e6;
      }
      return navigator.connection &&
        ((count = navigator.connection.downlink), "number" === typeof count)
        ? count
        : 5;
    }
    function getOwnerDocumentFromRootContainer(rootContainerElement) {
      return 9 === rootContainerElement.nodeType
        ? rootContainerElement
        : rootContainerElement.ownerDocument;
    }
    function getOwnHostContext(namespaceURI) {
      switch (namespaceURI) {
        case SVG_NAMESPACE:
          return HostContextNamespaceSvg;
        case MATH_NAMESPACE:
          return HostContextNamespaceMath;
        default:
          return HostContextNamespaceNone;
      }
    }
    function getChildHostContextProd(parentNamespace, type) {
      if (parentNamespace === HostContextNamespaceNone)
        switch (type) {
          case "svg":
            return HostContextNamespaceSvg;
          case "math":
            return HostContextNamespaceMath;
          default:
            return HostContextNamespaceNone;
        }
      return parentNamespace === HostContextNamespaceSvg &&
        "foreignObject" === type
        ? HostContextNamespaceNone
        : parentNamespace;
    }
    function shouldSetTextContent(type, props) {
      return (
        "textarea" === type ||
        "noscript" === type ||
        "string" === typeof props.children ||
        "number" === typeof props.children ||
        "bigint" === typeof props.children ||
        ("object" === typeof props.dangerouslySetInnerHTML &&
          null !== props.dangerouslySetInnerHTML &&
          null != props.dangerouslySetInnerHTML.__html)
      );
    }
    function shouldAttemptEagerTransition() {
      var event = window.event;
      if (event && "popstate" === event.type) {
        if (event === currentPopstateTransitionEvent) return !1;
        currentPopstateTransitionEvent = event;
        return !0;
      }
      currentPopstateTransitionEvent = null;
      return !1;
    }
    function resolveEventType() {
      var event = window.event;
      return event && event !== schedulerEvent ? event.type : null;
    }
    function resolveEventTimeStamp() {
      var event = window.event;
      return event && event !== schedulerEvent ? event.timeStamp : -1.1;
    }
    function handleErrorInNextTick(error) {
      setTimeout(function () {
        throw error;
      });
    }
    function commitMount(domElement, type, newProps) {
      switch (type) {
        case "button":
        case "input":
        case "select":
        case "textarea":
          newProps.autoFocus && domElement.focus();
          break;
        case "img":
          newProps.src
            ? (domElement.src = newProps.src)
            : newProps.srcSet && (domElement.srcset = newProps.srcSet);
      }
    }
    function commitHydratedInstance() {}
    function commitUpdate(domElement, type, oldProps, newProps) {
      updateProperties(domElement, type, oldProps, newProps);
      domElement[internalPropsKey] = newProps;
    }
    function resetTextContent(domElement) {
      setTextContent(domElement, "");
    }
    function commitTextUpdate(textInstance, oldText, newText) {
      textInstance.nodeValue = newText;
    }
    function warnForReactChildrenConflict(container) {
      if (!container.__reactWarnedAboutChildrenConflict) {
        var props = container[internalPropsKey] || null;
        if (null !== props) {
          var fiber = getInstanceFromNode(container);
          null !== fiber &&
            ("string" === typeof props.children ||
            "number" === typeof props.children
              ? ((container.__reactWarnedAboutChildrenConflict = !0),
                runWithFiberInDEV(fiber, function () {
                  console.error(
                    'Cannot use a ref on a React element as a container to `createRoot` or `createPortal` if that element also sets "children" text content using React. It should be a leaf with no children. Otherwise it\'s ambiguous which children should be used.'
                  );
                }))
              : null != props.dangerouslySetInnerHTML &&
                ((container.__reactWarnedAboutChildrenConflict = !0),
                runWithFiberInDEV(fiber, function () {
                  console.error(
                    'Cannot use a ref on a React element as a container to `createRoot` or `createPortal` if that element also sets "dangerouslySetInnerHTML" using React. It should be a leaf with no children. Otherwise it\'s ambiguous which children should be used.'
                  );
                })));
        }
      }
    }
    function isSingletonScope(type) {
      return "head" === type;
    }
    function removeChild(parentInstance, child) {
      parentInstance.removeChild(child);
    }
    function removeChildFromContainer(container, child) {
      (9 === container.nodeType
        ? container.body
        : "HTML" === container.nodeName
          ? container.ownerDocument.body
          : container
      ).removeChild(child);
    }
    function clearHydrationBoundary(parentInstance, hydrationInstance) {
      var node = hydrationInstance,
        depth = 0;
      do {
        var nextNode = node.nextSibling;
        parentInstance.removeChild(node);
        if (nextNode && 8 === nextNode.nodeType)
          if (
            ((node = nextNode.data),
            node === SUSPENSE_END_DATA || node === ACTIVITY_END_DATA)
          ) {
            if (0 === depth) {
              parentInstance.removeChild(nextNode);
              retryIfBlockedOn(hydrationInstance);
              return;
            }
            depth--;
          } else if (
            node === SUSPENSE_START_DATA ||
            node === SUSPENSE_PENDING_START_DATA ||
            node === SUSPENSE_QUEUED_START_DATA ||
            node === SUSPENSE_FALLBACK_START_DATA ||
            node === ACTIVITY_START_DATA
          )
            depth++;
          else if (node === PREAMBLE_CONTRIBUTION_HTML)
            releaseSingletonInstance(
              parentInstance.ownerDocument.documentElement
            );
          else if (node === PREAMBLE_CONTRIBUTION_HEAD) {
            node = parentInstance.ownerDocument.head;
            releaseSingletonInstance(node);
            for (var node$jscomp$0 = node.firstChild; node$jscomp$0; ) {
              var nextNode$jscomp$0 = node$jscomp$0.nextSibling,
                nodeName = node$jscomp$0.nodeName;
              node$jscomp$0[internalHoistableMarker] ||
                "SCRIPT" === nodeName ||
                "STYLE" === nodeName ||
                ("LINK" === nodeName &&
                  "stylesheet" === node$jscomp$0.rel.toLowerCase()) ||
                node.removeChild(node$jscomp$0);
              node$jscomp$0 = nextNode$jscomp$0;
            }
          } else
            node === PREAMBLE_CONTRIBUTION_BODY &&
              releaseSingletonInstance(parentInstance.ownerDocument.body);
        node = nextNode;
      } while (node);
      retryIfBlockedOn(hydrationInstance);
    }
    function hideOrUnhideDehydratedBoundary(suspenseInstance, isHidden) {
      var node = suspenseInstance;
      suspenseInstance = 0;
      do {
        var nextNode = node.nextSibling;
        1 === node.nodeType
          ? isHidden
            ? ((node._stashedDisplay = node.style.display),
              (node.style.display = "none"))
            : ((node.style.display = node._stashedDisplay || ""),
              "" === node.getAttribute("style") &&
                node.removeAttribute("style"))
          : 3 === node.nodeType &&
            (isHidden
              ? ((node._stashedText = node.nodeValue), (node.nodeValue = ""))
              : (node.nodeValue = node._stashedText || ""));
        if (nextNode && 8 === nextNode.nodeType)
          if (((node = nextNode.data), node === SUSPENSE_END_DATA))
            if (0 === suspenseInstance) break;
            else suspenseInstance--;
          else
            (node !== SUSPENSE_START_DATA &&
              node !== SUSPENSE_PENDING_START_DATA &&
              node !== SUSPENSE_QUEUED_START_DATA &&
              node !== SUSPENSE_FALLBACK_START_DATA) ||
              suspenseInstance++;
        node = nextNode;
      } while (node);
    }
    function hideDehydratedBoundary(suspenseInstance) {
      hideOrUnhideDehydratedBoundary(suspenseInstance, !0);
    }
    function hideInstance(instance) {
      instance = instance.style;
      "function" === typeof instance.setProperty
        ? instance.setProperty("display", "none", "important")
        : (instance.display = "none");
    }
    function hideTextInstance(textInstance) {
      textInstance.nodeValue = "";
    }
    function unhideDehydratedBoundary(dehydratedInstance) {
      hideOrUnhideDehydratedBoundary(dehydratedInstance, !1);
    }
    function unhideInstance(instance, props) {
      props = props[STYLE];
      props =
        void 0 !== props && null !== props && props.hasOwnProperty("display")
          ? props.display
          : null;
      instance.style.display =
        null == props || "boolean" === typeof props ? "" : ("" + props).trim();
    }
    function unhideTextInstance(textInstance, text) {
      textInstance.nodeValue = text;
    }
    function clearContainerSparingly(container) {
      var nextNode = container.firstChild;
      nextNode && 10 === nextNode.nodeType && (nextNode = nextNode.nextSibling);
      for (; nextNode; ) {
        var node = nextNode;
        nextNode = nextNode.nextSibling;
        switch (node.nodeName) {
          case "HTML":
          case "HEAD":
          case "BODY":
            clearContainerSparingly(node);
            detachDeletedInstance(node);
            continue;
          case "SCRIPT":
          case "STYLE":
            continue;
          case "LINK":
            if ("stylesheet" === node.rel.toLowerCase()) continue;
        }
        container.removeChild(node);
      }
    }
    function canHydrateInstance(instance, type, props, inRootOrSingleton) {
      for (; 1 === instance.nodeType; ) {
        var anyProps = props;
        if (instance.nodeName.toLowerCase() !== type.toLowerCase()) {
          if (
            !inRootOrSingleton &&
            ("INPUT" !== instance.nodeName || "hidden" !== instance.type)
          )
            break;
        } else if (!inRootOrSingleton)
          if ("input" === type && "hidden" === instance.type) {
            checkAttributeStringCoercion(anyProps.name, "name");
            var name = null == anyProps.name ? null : "" + anyProps.name;
            if (
              "hidden" === anyProps.type &&
              instance.getAttribute("name") === name
            )
              return instance;
          } else return instance;
        else if (!instance[internalHoistableMarker])
          switch (type) {
            case "meta":
              if (!instance.hasAttribute("itemprop")) break;
              return instance;
            case "link":
              name = instance.getAttribute("rel");
              if (
                "stylesheet" === name &&
                instance.hasAttribute("data-precedence")
              )
                break;
              else if (
                name !== anyProps.rel ||
                instance.getAttribute("href") !==
                  (null == anyProps.href || "" === anyProps.href
                    ? null
                    : anyProps.href) ||
                instance.getAttribute("crossorigin") !==
                  (null == anyProps.crossOrigin
                    ? null
                    : anyProps.crossOrigin) ||
                instance.getAttribute("title") !==
                  (null == anyProps.title ? null : anyProps.title)
              )
                break;
              return instance;
            case "style":
              if (instance.hasAttribute("data-precedence")) break;
              return instance;
            case "script":
              name = instance.getAttribute("src");
              if (
                (name !== (null == anyProps.src ? null : anyProps.src) ||
                  instance.getAttribute("type") !==
                    (null == anyProps.type ? null : anyProps.type) ||
                  instance.getAttribute("crossorigin") !==
                    (null == anyProps.crossOrigin
                      ? null
                      : anyProps.crossOrigin)) &&
                name &&
                instance.hasAttribute("async") &&
                !instance.hasAttribute("itemprop")
              )
                break;
              return instance;
            default:
              return instance;
          }
        instance = getNextHydratable(instance.nextSibling);
        if (null === instance) break;
      }
      return null;
    }
    function canHydrateTextInstance(instance, text, inRootOrSingleton) {
      if ("" === text) return null;
      for (; 3 !== instance.nodeType; ) {
        if (
          (1 !== instance.nodeType ||
            "INPUT" !== instance.nodeName ||
            "hidden" !== instance.type) &&
          !inRootOrSingleton
        )
          return null;
        instance = getNextHydratable(instance.nextSibling);
        if (null === instance) return null;
      }
      return instance;
    }
    function canHydrateHydrationBoundary(instance, inRootOrSingleton) {
      for (; 8 !== instance.nodeType; ) {
        if (
          (1 !== instance.nodeType ||
            "INPUT" !== instance.nodeName ||
            "hidden" !== instance.type) &&
          !inRootOrSingleton
        )
          return null;
        instance = getNextHydratable(instance.nextSibling);
        if (null === instance) return null;
      }
      return instance;
    }
    function isSuspenseInstancePending(instance) {
      return (
        instance.data === SUSPENSE_PENDING_START_DATA ||
        instance.data === SUSPENSE_QUEUED_START_DATA
      );
    }
    function isSuspenseInstanceFallback(instance) {
      return (
        instance.data === SUSPENSE_FALLBACK_START_DATA ||
        (instance.data === SUSPENSE_PENDING_START_DATA &&
          instance.ownerDocument.readyState !== DOCUMENT_READY_STATE_LOADING)
      );
    }
    function registerSuspenseInstanceRetry(instance, callback) {
      var ownerDocument = instance.ownerDocument;
      if (instance.data === SUSPENSE_QUEUED_START_DATA)
        instance._reactRetry = callback;
      else if (
        instance.data !== SUSPENSE_PENDING_START_DATA ||
        ownerDocument.readyState !== DOCUMENT_READY_STATE_LOADING
      )
        callback();
      else {
        var listener = function () {
          callback();
          ownerDocument.removeEventListener("DOMContentLoaded", listener);
        };
        ownerDocument.addEventListener("DOMContentLoaded", listener);
        instance._reactRetry = listener;
      }
    }
    function getNextHydratable(node) {
      for (; null != node; node = node.nextSibling) {
        var nodeType = node.nodeType;
        if (1 === nodeType || 3 === nodeType) break;
        if (8 === nodeType) {
          nodeType = node.data;
          if (
            nodeType === SUSPENSE_START_DATA ||
            nodeType === SUSPENSE_FALLBACK_START_DATA ||
            nodeType === SUSPENSE_PENDING_START_DATA ||
            nodeType === SUSPENSE_QUEUED_START_DATA ||
            nodeType === ACTIVITY_START_DATA ||
            nodeType === FORM_STATE_IS_MATCHING ||
            nodeType === FORM_STATE_IS_NOT_MATCHING
          )
            break;
          if (nodeType === SUSPENSE_END_DATA || nodeType === ACTIVITY_END_DATA)
            return null;
        }
      }
      return node;
    }
    function describeHydratableInstanceForDevWarnings(instance) {
      if (1 === instance.nodeType) {
        for (
          var JSCompiler_temp_const = instance.nodeName.toLowerCase(),
            serverDifferences = {},
            attributes = instance.attributes,
            i = 0;
          i < attributes.length;
          i++
        ) {
          var attr = attributes[i];
          serverDifferences[getPropNameFromAttributeName(attr.name)] =
            "style" === attr.name.toLowerCase()
              ? getStylesObjectFromElement(instance)
              : attr.value;
        }
        return { type: JSCompiler_temp_const, props: serverDifferences };
      }
      return 8 === instance.nodeType
        ? instance.data === ACTIVITY_START_DATA
          ? { type: "Activity", props: {} }
          : { type: "Suspense", props: {} }
        : instance.nodeValue;
    }
    function diffHydratedTextForDevWarnings(textInstance, text, parentProps) {
      return null === parentProps ||
        !0 !== parentProps[SUPPRESS_HYDRATION_WARNING]
        ? (textInstance.nodeValue === text
            ? (textInstance = null)
            : ((text = normalizeMarkupForTextOrAttribute(text)),
              (textInstance =
                normalizeMarkupForTextOrAttribute(textInstance.nodeValue) ===
                text
                  ? null
                  : textInstance.nodeValue)),
          textInstance)
        : null;
    }
    function getNextHydratableInstanceAfterHydrationBoundary(
      hydrationInstance
    ) {
      hydrationInstance = hydrationInstance.nextSibling;
      for (var depth = 0; hydrationInstance; ) {
        if (8 === hydrationInstance.nodeType) {
          var data = hydrationInstance.data;
          if (data === SUSPENSE_END_DATA || data === ACTIVITY_END_DATA) {
            if (0 === depth)
              return getNextHydratable(hydrationInstance.nextSibling);
            depth--;
          } else
            (data !== SUSPENSE_START_DATA &&
              data !== SUSPENSE_FALLBACK_START_DATA &&
              data !== SUSPENSE_PENDING_START_DATA &&
              data !== SUSPENSE_QUEUED_START_DATA &&
              data !== ACTIVITY_START_DATA) ||
              depth++;
        }
        hydrationInstance = hydrationInstance.nextSibling;
      }
      return null;
    }
    function getParentHydrationBoundary(targetInstance) {
      targetInstance = targetInstance.previousSibling;
      for (var depth = 0; targetInstance; ) {
        if (8 === targetInstance.nodeType) {
          var data = targetInstance.data;
          if (
            data === SUSPENSE_START_DATA ||
            data === SUSPENSE_FALLBACK_START_DATA ||
            data === SUSPENSE_PENDING_START_DATA ||
            data === SUSPENSE_QUEUED_START_DATA ||
            data === ACTIVITY_START_DATA
          ) {
            if (0 === depth) return targetInstance;
            depth--;
          } else
            (data !== SUSPENSE_END_DATA && data !== ACTIVITY_END_DATA) ||
              depth++;
        }
        targetInstance = targetInstance.previousSibling;
      }
      return null;
    }
    function commitHydratedContainer(container) {
      retryIfBlockedOn(container);
    }
    function commitHydratedActivityInstance(activityInstance) {
      retryIfBlockedOn(activityInstance);
    }
    function commitHydratedSuspenseInstance(suspenseInstance) {
      retryIfBlockedOn(suspenseInstance);
    }
    function resolveSingletonInstance(
      type,
      props,
      rootContainerInstance,
      hostContext,
      validateDOMNestingDev
    ) {
      validateDOMNestingDev &&
        validateDOMNesting(type, hostContext.ancestorInfo);
      props = getOwnerDocumentFromRootContainer(rootContainerInstance);
      switch (type) {
        case "html":
          type = props.documentElement;
          if (!type)
            throw Error(
              "React expected an <html> element (document.documentElement) to exist in the Document but one was not found. React never removes the documentElement for any Document it renders into so the cause is likely in some other script running on this page."
            );
          return type;
        case "head":
          type = props.head;
          if (!type)
            throw Error(
              "React expected a <head> element (document.head) to exist in the Document but one was not found. React never removes the head for any Document it renders into so the cause is likely in some other script running on this page."
            );
          return type;
        case "body":
          type = props.body;
          if (!type)
            throw Error(
              "React expected a <body> element (document.body) to exist in the Document but one was not found. React never removes the body for any Document it renders into so the cause is likely in some other script running on this page."
            );
          return type;
        default:
          throw Error(
            "resolveSingletonInstance was called with an element type that is not supported. This is a bug in React."
          );
      }
    }
    function acquireSingletonInstance(
      type,
      props,
      instance,
      internalInstanceHandle
    ) {
      if (
        !instance[internalContainerInstanceKey] &&
        getInstanceFromNode(instance)
      ) {
        var tagName = instance.tagName.toLowerCase();
        console.error(
          "You are mounting a new %s component when a previous one has not first unmounted. It is an error to render more than one %s component at a time and attributes and children of these components will likely fail in unpredictable ways. Please only render a single instance of <%s> and if you need to mount a new one, ensure any previous ones have unmounted first.",
          tagName,
          tagName,
          tagName
        );
      }
      switch (type) {
        case "html":
        case "head":
        case "body":
          break;
        default:
          console.error(
            "acquireSingletonInstance was called with an element type that is not supported. This is a bug in React."
          );
      }
      for (tagName = instance.attributes; tagName.length; )
        instance.removeAttributeNode(tagName[0]);
      setInitialProperties(instance, type, props);
      instance[internalInstanceKey] = internalInstanceHandle;
      instance[internalPropsKey] = props;
    }
    function releaseSingletonInstance(instance) {
      for (var attributes = instance.attributes; attributes.length; )
        instance.removeAttributeNode(attributes[0]);
      detachDeletedInstance(instance);
    }
    function getHoistableRoot(container) {
      return "function" === typeof container.getRootNode
        ? container.getRootNode()
        : 9 === container.nodeType
          ? container
          : container.ownerDocument;
    }
    function preconnectAs(rel, href, crossOrigin) {
      var ownerDocument = globalDocument;
      if (ownerDocument && "string" === typeof href && href) {
        var limitedEscapedHref =
          escapeSelectorAttributeValueInsideDoubleQuotes(href);
        limitedEscapedHref =
          'link[rel="' + rel + '"][href="' + limitedEscapedHref + '"]';
        "string" === typeof crossOrigin &&
          (limitedEscapedHref += '[crossorigin="' + crossOrigin + '"]');
        preconnectsSet.has(limitedEscapedHref) ||
          (preconnectsSet.add(limitedEscapedHref),
          (rel = { rel: rel, crossOrigin: crossOrigin, href: href }),
          null === ownerDocument.querySelector(limitedEscapedHref) &&
            ((href = ownerDocument.createElement("link")),
            setInitialProperties(href, "link", rel),
            markNodeAsHoistable(href),
            ownerDocument.head.appendChild(href)));
      }
    }
    function getResource(type, currentProps, pendingProps, currentResource) {
      var resourceRoot = (resourceRoot = rootInstanceStackCursor.current)
        ? getHoistableRoot(resourceRoot)
        : null;
      if (!resourceRoot)
        throw Error(
          '"resourceRoot" was expected to exist. This is a bug in React.'
        );
      switch (type) {
        case "meta":
        case "title":
          return null;
        case "style":
          return "string" === typeof pendingProps.precedence &&
            "string" === typeof pendingProps.href
            ? ((pendingProps = getStyleKey(pendingProps.href)),
              (currentProps =
                getResourcesFromRoot(resourceRoot).hoistableStyles),
              (currentResource = currentProps.get(pendingProps)),
              currentResource ||
                ((currentResource = {
                  type: "style",
                  instance: null,
                  count: 0,
                  state: null
                }),
                currentProps.set(pendingProps, currentResource)),
              currentResource)
            : { type: "void", instance: null, count: 0, state: null };
        case "link":
          if (
            "stylesheet" === pendingProps.rel &&
            "string" === typeof pendingProps.href &&
            "string" === typeof pendingProps.precedence
          ) {
            type = getStyleKey(pendingProps.href);
            var _styles = getResourcesFromRoot(resourceRoot).hoistableStyles,
              _resource = _styles.get(type);
            if (
              !_resource &&
              ((resourceRoot = resourceRoot.ownerDocument || resourceRoot),
              (_resource = {
                type: "stylesheet",
                instance: null,
                count: 0,
                state: { loading: NotLoaded, preload: null }
              }),
              _styles.set(type, _resource),
              (_styles = resourceRoot.querySelector(
                getStylesheetSelectorFromKey(type)
              )) &&
                !_styles._p &&
                ((_resource.instance = _styles),
                (_resource.state.loading = Loaded | Inserted)),
              !preloadPropsMap.has(type))
            ) {
              var preloadProps = {
                rel: "preload",
                as: "style",
                href: pendingProps.href,
                crossOrigin: pendingProps.crossOrigin,
                integrity: pendingProps.integrity,
                media: pendingProps.media,
                hrefLang: pendingProps.hrefLang,
                referrerPolicy: pendingProps.referrerPolicy
              };
              preloadPropsMap.set(type, preloadProps);
              _styles ||
                preloadStylesheet(
                  resourceRoot,
                  type,
                  preloadProps,
                  _resource.state
                );
            }
            if (currentProps && null === currentResource)
              throw (
                ((pendingProps =
                  "\n\n  - " +
                  describeLinkForResourceErrorDEV(currentProps) +
                  "\n  + " +
                  describeLinkForResourceErrorDEV(pendingProps)),
                Error(
                  "Expected <link> not to update to be updated to a stylesheet with precedence. Check the `rel`, `href`, and `precedence` props of this component. Alternatively, check whether two different <link> components render in the same slot or share the same key." +
                    pendingProps
                ))
              );
            return _resource;
          }
          if (currentProps && null !== currentResource)
            throw (
              ((pendingProps =
                "\n\n  - " +
                describeLinkForResourceErrorDEV(currentProps) +
                "\n  + " +
                describeLinkForResourceErrorDEV(pendingProps)),
              Error(
                "Expected stylesheet with precedence to not be updated to a different kind of <link>. Check the `rel`, `href`, and `precedence` props of this component. Alternatively, check whether two different <link> components render in the same slot or share the same key." +
                  pendingProps
              ))
            );
          return null;
        case "script":
          return (
            (currentProps = pendingProps.async),
            (pendingProps = pendingProps.src),
            "string" === typeof pendingProps &&
            currentProps &&
            "function" !== typeof currentProps &&
            "symbol" !== typeof currentProps
              ? ((pendingProps = getScriptKey(pendingProps)),
                (currentProps =
                  getResourcesFromRoot(resourceRoot).hoistableScripts),
                (currentResource = currentProps.get(pendingProps)),
                currentResource ||
                  ((currentResource = {
                    type: "script",
                    instance: null,
                    count: 0,
                    state: null
                  }),
                  currentProps.set(pendingProps, currentResource)),
                currentResource)
              : { type: "void", instance: null, count: 0, state: null }
          );
        default:
          throw Error(
            'getResource encountered a type it did not expect: "' +
              type +
              '". this is a bug in React.'
          );
      }
    }
    function describeLinkForResourceErrorDEV(props) {
      var describedProps = 0,
        description = "<link";
      "string" === typeof props.rel
        ? (describedProps++, (description += ' rel="' + props.rel + '"'))
        : hasOwnProperty.call(props, "rel") &&
          (describedProps++,
          (description +=
            ' rel="' +
            (null === props.rel ? "null" : "invalid type " + typeof props.rel) +
            '"'));
      "string" === typeof props.href
        ? (describedProps++, (description += ' href="' + props.href + '"'))
        : hasOwnProperty.call(props, "href") &&
          (describedProps++,
          (description +=
            ' href="' +
            (null === props.href
              ? "null"
              : "invalid type " + typeof props.href) +
            '"'));
      "string" === typeof props.precedence
        ? (describedProps++,
          (description += ' precedence="' + props.precedence + '"'))
        : hasOwnProperty.call(props, "precedence") &&
          (describedProps++,
          (description +=
            " precedence={" +
            (null === props.precedence
              ? "null"
              : "invalid type " + typeof props.precedence) +
            "}"));
      Object.getOwnPropertyNames(props).length > describedProps &&
        (description += " ...");
      return description + " />";
    }
    function getStyleKey(href) {
      return (
        'href="' + escapeSelectorAttributeValueInsideDoubleQuotes(href) + '"'
      );
    }
    function getStylesheetSelectorFromKey(key) {
      return 'link[rel="stylesheet"][' + key + "]";
    }
    function stylesheetPropsFromRawProps(rawProps) {
      return assign({}, rawProps, {
        "data-precedence": rawProps.precedence,
        precedence: null
      });
    }
    function preloadStylesheet(ownerDocument, key, preloadProps, state) {
      ownerDocument.querySelector(
        'link[rel="preload"][as="style"][' + key + "]"
      )
        ? (state.loading = Loaded)
        : ((key = ownerDocument.createElement("link")),
          (state.preload = key),
          key.addEventListener("load", function () {
            return (state.loading |= Loaded);
          }),
          key.addEventListener("error", function () {
            return (state.loading |= Errored);
          }),
          setInitialProperties(key, "link", preloadProps),
          markNodeAsHoistable(key),
          ownerDocument.head.appendChild(key));
    }
    function getScriptKey(src) {
      return (
        '[src="' + escapeSelectorAttributeValueInsideDoubleQuotes(src) + '"]'
      );
    }
    function getScriptSelectorFromKey(key) {
      return "script[async]" + key;
    }
    function acquireResource(hoistableRoot, resource, props) {
      resource.count++;
      if (null === resource.instance)
        switch (resource.type) {
          case "style":
            var instance = hoistableRoot.querySelector(
              'style[data-href~="' +
                escapeSelectorAttributeValueInsideDoubleQuotes(props.href) +
                '"]'
            );
            if (instance)
              return (
                (resource.instance = instance),
                markNodeAsHoistable(instance),
                instance
              );
            var styleProps = assign({}, props, {
              "data-href": props.href,
              "data-precedence": props.precedence,
              href: null,
              precedence: null
            });
            instance = (
              hoistableRoot.ownerDocument || hoistableRoot
            ).createElement("style");
            markNodeAsHoistable(instance);
            setInitialProperties(instance, "style", styleProps);
            insertStylesheet(instance, props.precedence, hoistableRoot);
            return (resource.instance = instance);
          case "stylesheet":
            styleProps = getStyleKey(props.href);
            var _instance = hoistableRoot.querySelector(
              getStylesheetSelectorFromKey(styleProps)
            );
            if (_instance)
              return (
                (resource.state.loading |= Inserted),
                (resource.instance = _instance),
                markNodeAsHoistable(_instance),
                _instance
              );
            instance = stylesheetPropsFromRawProps(props);
            (styleProps = preloadPropsMap.get(styleProps)) &&
              adoptPreloadPropsForStylesheet(instance, styleProps);
            _instance = (
              hoistableRoot.ownerDocument || hoistableRoot
            ).createElement("link");
            markNodeAsHoistable(_instance);
            var linkInstance = _instance;
            linkInstance._p = new Promise(function (resolve, reject) {
              linkInstance.onload = resolve;
              linkInstance.onerror = reject;
            });
            setInitialProperties(_instance, "link", instance);
            resource.state.loading |= Inserted;
            insertStylesheet(_instance, props.precedence, hoistableRoot);
            return (resource.instance = _instance);
          case "script":
            _instance = getScriptKey(props.src);
            if (
              (styleProps = hoistableRoot.querySelector(
                getScriptSelectorFromKey(_instance)
              ))
            )
              return (
                (resource.instance = styleProps),
                markNodeAsHoistable(styleProps),
                styleProps
              );
            instance = props;
            if ((styleProps = preloadPropsMap.get(_instance)))
              (instance = assign({}, props)),
                adoptPreloadPropsForScript(instance, styleProps);
            hoistableRoot = hoistableRoot.ownerDocument || hoistableRoot;
            styleProps = hoistableRoot.createElement("script");
            markNodeAsHoistable(styleProps);
            setInitialProperties(styleProps, "link", instance);
            hoistableRoot.head.appendChild(styleProps);
            return (resource.instance = styleProps);
          case "void":
            return null;
          default:
            throw Error(
              'acquireResource encountered a resource type it did not expect: "' +
                resource.type +
                '". this is a bug in React.'
            );
        }
      else
        "stylesheet" === resource.type &&
          (resource.state.loading & Inserted) === NotLoaded &&
          ((instance = resource.instance),
          (resource.state.loading |= Inserted),
          insertStylesheet(instance, props.precedence, hoistableRoot));
      return resource.instance;
    }
    function insertStylesheet(instance, precedence, root) {
      for (
        var nodes = root.querySelectorAll(
            'link[rel="stylesheet"][data-precedence],style[data-precedence]'
          ),
          last = nodes.length ? nodes[nodes.length - 1] : null,
          prior = last,
          i = 0;
        i < nodes.length;
        i++
      ) {
        var node = nodes[i];
        if (node.dataset.precedence === precedence) prior = node;
        else if (prior !== last) break;
      }
      prior
        ? prior.parentNode.insertBefore(instance, prior.nextSibling)
        : ((precedence = 9 === root.nodeType ? root.head : root),
          precedence.insertBefore(instance, precedence.firstChild));
    }
    function adoptPreloadPropsForStylesheet(stylesheetProps, preloadProps) {
      null == stylesheetProps.crossOrigin &&
        (stylesheetProps.crossOrigin = preloadProps.crossOrigin);
      null == stylesheetProps.referrerPolicy &&
        (stylesheetProps.referrerPolicy = preloadProps.referrerPolicy);
      null == stylesheetProps.title &&
        (stylesheetProps.title = preloadProps.title);
    }
    function adoptPreloadPropsForScript(scriptProps, preloadProps) {
      null == scriptProps.crossOrigin &&
        (scriptProps.crossOrigin = preloadProps.crossOrigin);
      null == scriptProps.referrerPolicy &&
        (scriptProps.referrerPolicy = preloadProps.referrerPolicy);
      null == scriptProps.integrity &&
        (scriptProps.integrity = preloadProps.integrity);
    }
    function getHydratableHoistableCache(type, keyAttribute, ownerDocument) {
      if (null === tagCaches) {
        var cache = new Map();
        var caches = (tagCaches = new Map());
        caches.set(ownerDocument, cache);
      } else
        (caches = tagCaches),
          (cache = caches.get(ownerDocument)),
          cache || ((cache = new Map()), caches.set(ownerDocument, cache));
      if (cache.has(type)) return cache;
      cache.set(type, null);
      ownerDocument = ownerDocument.getElementsByTagName(type);
      for (caches = 0; caches < ownerDocument.length; caches++) {
        var node = ownerDocument[caches];
        if (
          !(
            node[internalHoistableMarker] ||
            node[internalInstanceKey] ||
            ("link" === type && "stylesheet" === node.getAttribute("rel"))
          ) &&
          node.namespaceURI !== SVG_NAMESPACE
        ) {
          var nodeKey = node.getAttribute(keyAttribute) || "";
          nodeKey = type + nodeKey;
          var existing = cache.get(nodeKey);
          existing ? existing.push(node) : cache.set(nodeKey, [node]);
        }
      }
      return cache;
    }
    function mountHoistable(hoistableRoot, type, instance) {
      hoistableRoot = hoistableRoot.ownerDocument || hoistableRoot;
      hoistableRoot.head.insertBefore(
        instance,
        "title" === type ? hoistableRoot.querySelector("head > title") : null
      );
    }
    function isHostHoistableType(type, props, hostContext) {
      var outsideHostContainerContext =
        !hostContext.ancestorInfo.containerTagInScope;
      if (
        hostContext.context === HostContextNamespaceSvg ||
        null != props.itemProp
      )
        return (
          !outsideHostContainerContext ||
            null == props.itemProp ||
            ("meta" !== type &&
              "title" !== type &&
              "style" !== type &&
              "link" !== type &&
              "script" !== type) ||
            console.error(
              "Cannot render a <%s> outside the main document if it has an `itemProp` prop. `itemProp` suggests the tag belongs to an `itemScope` which can appear anywhere in the DOM. If you were intending for React to hoist this <%s> remove the `itemProp` prop. Otherwise, try moving this tag into the <head> or <body> of the Document.",
              type,
              type
            ),
          !1
        );
      switch (type) {
        case "meta":
        case "title":
          return !0;
        case "style":
          if (
            "string" !== typeof props.precedence ||
            "string" !== typeof props.href ||
            "" === props.href
          ) {
            outsideHostContainerContext &&
              console.error(
                'Cannot render a <style> outside the main document without knowing its precedence and a unique href key. React can hoist and deduplicate <style> tags if you provide a `precedence` prop along with an `href` prop that does not conflict with the `href` values used in any other hoisted <style> or <link rel="stylesheet" ...> tags.  Note that hoisting <style> tags is considered an advanced feature that most will not use directly. Consider moving the <style> tag to the <head> or consider adding a `precedence="default"` and `href="some unique resource identifier"`.'
              );
            break;
          }
          return !0;
        case "link":
          if (
            "string" !== typeof props.rel ||
            "string" !== typeof props.href ||
            "" === props.href ||
            props.onLoad ||
            props.onError
          ) {
            if (
              "stylesheet" === props.rel &&
              "string" === typeof props.precedence
            ) {
              type = props.href;
              var onError = props.onError,
                disabled = props.disabled;
              hostContext = [];
              props.onLoad && hostContext.push("`onLoad`");
              onError && hostContext.push("`onError`");
              null != disabled && hostContext.push("`disabled`");
              onError = propNamesListJoin(hostContext, "and");
              onError += 1 === hostContext.length ? " prop" : " props";
              disabled =
                1 === hostContext.length ? "an " + onError : "the " + onError;
              hostContext.length &&
                console.error(
                  'React encountered a <link rel="stylesheet" href="%s" ... /> with a `precedence` prop that also included %s. The presence of loading and error handlers indicates an intent to manage the stylesheet loading state from your from your Component code and React will not hoist or deduplicate this stylesheet. If your intent was to have React hoist and deduplciate this stylesheet using the `precedence` prop remove the %s, otherwise remove the `precedence` prop.',
                  type,
                  disabled,
                  onError
                );
            }
            outsideHostContainerContext &&
              ("string" !== typeof props.rel ||
              "string" !== typeof props.href ||
              "" === props.href
                ? console.error(
                    "Cannot render a <link> outside the main document without a `rel` and `href` prop. Try adding a `rel` and/or `href` prop to this <link> or moving the link into the <head> tag"
                  )
                : (props.onError || props.onLoad) &&
                  console.error(
                    "Cannot render a <link> with onLoad or onError listeners outside the main document. Try removing onLoad={...} and onError={...} or moving it into the root <head> tag or somewhere in the <body>."
                  ));
            break;
          }
          switch (props.rel) {
            case "stylesheet":
              return (
                (type = props.precedence),
                (props = props.disabled),
                "string" !== typeof type &&
                  outsideHostContainerContext &&
                  console.error(
                    'Cannot render a <link rel="stylesheet" /> outside the main document without knowing its precedence. Consider adding precedence="default" or moving it into the root <head> tag.'
                  ),
                "string" === typeof type && null == props
              );
            default:
              return !0;
          }
        case "script":
          type =
            props.async &&
            "function" !== typeof props.async &&
            "symbol" !== typeof props.async;
          if (
            !type ||
            props.onLoad ||
            props.onError ||
            !props.src ||
            "string" !== typeof props.src
          ) {
            outsideHostContainerContext &&
              (type
                ? props.onLoad || props.onError
                  ? console.error(
                      "Cannot render a <script> with onLoad or onError listeners outside the main document. Try removing onLoad={...} and onError={...} or moving it into the root <head> tag or somewhere in the <body>."
                    )
                  : console.error(
                      "Cannot render a <script> outside the main document without `async={true}` and a non-empty `src` prop. Ensure there is a valid `src` and either make the script async or move it into the root <head> tag or somewhere in the <body>."
                    )
                : console.error(
                    'Cannot render a sync or defer <script> outside the main document without knowing its order. Try adding async="" or moving it into the root <head> tag.'
                  ));
            break;
          }
          return !0;
        case "noscript":
        case "template":
          outsideHostContainerContext &&
            console.error(
              "Cannot render <%s> outside the main document. Try moving it into the root <head> tag.",
              type
            );
      }
      return !1;
    }
    function preloadResource(resource) {
      return "stylesheet" === resource.type &&
        (resource.state.loading & Settled) === NotLoaded
        ? !1
        : !0;
    }
    function suspendResource(state, hoistableRoot, resource, props) {
      if (
        "stylesheet" === resource.type &&
        ("string" !== typeof props.media ||
          !1 !== matchMedia(props.media).matches) &&
        (resource.state.loading & Inserted) === NotLoaded
      ) {
        if (null === resource.instance) {
          var key = getStyleKey(props.href),
            instance = hoistableRoot.querySelector(
              getStylesheetSelectorFromKey(key)
            );
          if (instance) {
            hoistableRoot = instance._p;
            null !== hoistableRoot &&
              "object" === typeof hoistableRoot &&
              "function" === typeof hoistableRoot.then &&
              (state.count++,
              (state = onUnsuspend.bind(state)),
              hoistableRoot.then(state, state));
            resource.state.loading |= Inserted;
            resource.instance = instance;
            markNodeAsHoistable(instance);
            return;
          }
          instance = hoistableRoot.ownerDocument || hoistableRoot;
          props = stylesheetPropsFromRawProps(props);
          (key = preloadPropsMap.get(key)) &&
            adoptPreloadPropsForStylesheet(props, key);
          instance = instance.createElement("link");
          markNodeAsHoistable(instance);
          var linkInstance = instance;
          linkInstance._p = new Promise(function (resolve, reject) {
            linkInstance.onload = resolve;
            linkInstance.onerror = reject;
          });
          setInitialProperties(instance, "link", props);
          resource.instance = instance;
        }
        null === state.stylesheets && (state.stylesheets = new Map());
        state.stylesheets.set(resource, hoistableRoot);
        (hoistableRoot = resource.state.preload) &&
          (resource.state.loading & Settled) === NotLoaded &&
          (state.count++,
          (resource = onUnsuspend.bind(state)),
          hoistableRoot.addEventListener("load", resource),
          hoistableRoot.addEventListener("error", resource));
      }
    }
    function waitForCommitToBeReady(state, timeoutOffset) {
      state.stylesheets &&
        0 === state.count &&
        insertSuspendedStylesheets(state, state.stylesheets);
      return 0 < state.count || 0 < state.imgCount
        ? function (commit) {
            var stylesheetTimer = setTimeout(function () {
              state.stylesheets &&
                insertSuspendedStylesheets(state, state.stylesheets);
              if (state.unsuspend) {
                var unsuspend = state.unsuspend;
                state.unsuspend = null;
                unsuspend();
              }
            }, SUSPENSEY_STYLESHEET_TIMEOUT + timeoutOffset);
            0 < state.imgBytes &&
              0 === estimatedBytesWithinLimit &&
              (estimatedBytesWithinLimit =
                125 * estimateBandwidth() * SUSPENSEY_IMAGE_TIME_ESTIMATE);
            var imgTimer = setTimeout(
              function () {
                state.waitingForImages = !1;
                if (
                  0 === state.count &&
                  (state.stylesheets &&
                    insertSuspendedStylesheets(state, state.stylesheets),
                  state.unsuspend)
                ) {
                  var unsuspend = state.unsuspend;
                  state.unsuspend = null;
                  unsuspend();
                }
              },
              (state.imgBytes > estimatedBytesWithinLimit
                ? 50
                : SUSPENSEY_IMAGE_TIMEOUT) + timeoutOffset
            );
            state.unsuspend = commit;
            return function () {
              state.unsuspend = null;
              clearTimeout(stylesheetTimer);
              clearTimeout(imgTimer);
            };
          }
        : null;
    }
    function onUnsuspend() {
      this.count--;
      if (0 === this.count && (0 === this.imgCount || !this.waitingForImages))
        if (this.stylesheets)
          insertSuspendedStylesheets(this, this.stylesheets);
        else if (this.unsuspend) {
          var unsuspend = this.unsuspend;
          this.unsuspend = null;
          unsuspend();
        }
    }
    function insertSuspendedStylesheets(state, resources) {
      state.stylesheets = null;
      null !== state.unsuspend &&
        (state.count++,
        (precedencesByRoot = new Map()),
        resources.forEach(insertStylesheetIntoRoot, state),
        (precedencesByRoot = null),
        onUnsuspend.call(state));
    }
    function insertStylesheetIntoRoot(root, resource) {
      if (!(resource.state.loading & Inserted)) {
        var precedences = precedencesByRoot.get(root);
        if (precedences) var last = precedences.get(LAST_PRECEDENCE);
        else {
          precedences = new Map();
          precedencesByRoot.set(root, precedences);
          for (
            var nodes = root.querySelectorAll(
                "link[data-precedence],style[data-precedence]"
              ),
              i = 0;
            i < nodes.length;
            i++
          ) {
            var node = nodes[i];
            if (
              "LINK" === node.nodeName ||
              "not all" !== node.getAttribute("media")
            )
              precedences.set(node.dataset.precedence, node), (last = node);
          }
          last && precedences.set(LAST_PRECEDENCE, last);
        }
        nodes = resource.instance;
        node = nodes.getAttribute("data-precedence");
        i = precedences.get(node) || last;
        i === last && precedences.set(LAST_PRECEDENCE, nodes);
        precedences.set(node, nodes);
        this.count++;
        last = onUnsuspend.bind(this);
        nodes.addEventListener("load", last);
        nodes.addEventListener("error", last);
        i
          ? i.parentNode.insertBefore(nodes, i.nextSibling)
          : ((root = 9 === root.nodeType ? root.head : root),
            root.insertBefore(nodes, root.firstChild));
        resource.state.loading |= Inserted;
      }
    }
    function FiberRootNode(
      containerInfo,
      tag,
      hydrate,
      identifierPrefix,
      onUncaughtError,
      onCaughtError,
      onRecoverableError,
      onDefaultTransitionIndicator,
      formState
    ) {
      this.tag = 1;
      this.containerInfo = containerInfo;
      this.pingCache = this.current = this.pendingChildren = null;
      this.timeoutHandle = noTimeout;
      this.callbackNode =
        this.next =
        this.pendingContext =
        this.context =
        this.cancelPendingCommit =
          null;
      this.callbackPriority = 0;
      this.expirationTimes = createLaneMap(-1);
      this.entangledLanes =
        this.shellSuspendCounter =
        this.errorRecoveryDisabledLanes =
        this.expiredLanes =
        this.warmLanes =
        this.pingedLanes =
        this.suspendedLanes =
        this.pendingLanes =
          0;
      this.entanglements = createLaneMap(0);
      this.hiddenUpdates = createLaneMap(null);
      this.identifierPrefix = identifierPrefix;
      this.onUncaughtError = onUncaughtError;
      this.onCaughtError = onCaughtError;
      this.onRecoverableError = onRecoverableError;
      this.pooledCache = null;
      this.pooledCacheLanes = 0;
      this.formState = formState;
      this.incompleteTransitions = new Map();
      this.passiveEffectDuration = this.effectDuration = -0;
      this.memoizedUpdaters = new Set();
      containerInfo = this.pendingUpdatersLaneMap = [];
      for (tag = 0; 31 > tag; tag++) containerInfo.push(new Set());
      this._debugRootType = hydrate ? "hydrateRoot()" : "createRoot()";
    }
    function createFiberRoot(
      containerInfo,
      tag,
      hydrate,
      initialChildren,
      hydrationCallbacks,
      isStrictMode,
      identifierPrefix,
      formState,
      onUncaughtError,
      onCaughtError,
      onRecoverableError,
      onDefaultTransitionIndicator
    ) {
      containerInfo = new FiberRootNode(
        containerInfo,
        tag,
        hydrate,
        identifierPrefix,
        onUncaughtError,
        onCaughtError,
        onRecoverableError,
        onDefaultTransitionIndicator,
        formState
      );
      tag = ConcurrentMode;
      !0 === isStrictMode && (tag |= StrictLegacyMode | StrictEffectsMode);
      tag |= ProfileMode;
      isStrictMode = createFiber(3, null, null, tag);
      containerInfo.current = isStrictMode;
      isStrictMode.stateNode = containerInfo;
      tag = createCache();
      retainCache(tag);
      containerInfo.pooledCache = tag;
      retainCache(tag);
      isStrictMode.memoizedState = {
        element: initialChildren,
        isDehydrated: hydrate,
        cache: tag
      };
      initializeUpdateQueue(isStrictMode);
      return containerInfo;
    }
    function getContextForSubtree(parentComponent) {
      if (!parentComponent) return emptyContextObject;
      parentComponent = emptyContextObject;
      return parentComponent;
    }
    function updateContainerImpl(
      rootFiber,
      lane,
      element,
      container,
      parentComponent,
      callback
    ) {
      if (
        injectedHook &&
        "function" === typeof injectedHook.onScheduleFiberRoot
      )
        try {
          injectedHook.onScheduleFiberRoot(rendererID, container, element);
        } catch (err) {
          hasLoggedError ||
            ((hasLoggedError = !0),
            console.error(
              "React instrumentation encountered an error: %o",
              err
            ));
        }
      parentComponent = getContextForSubtree(parentComponent);
      null === container.context
        ? (container.context = parentComponent)
        : (container.pendingContext = parentComponent);
      isRendering &&
        null !== current &&
        !didWarnAboutNestedUpdates &&
        ((didWarnAboutNestedUpdates = !0),
        console.error(
          "Render methods should be a pure function of props and state; triggering nested component updates from render is not allowed. If necessary, trigger nested updates in componentDidUpdate.\n\nCheck the render method of %s.",
          getComponentNameFromFiber(current) || "Unknown"
        ));
      container = createUpdate(lane);
      container.payload = { element: element };
      callback = void 0 === callback ? null : callback;
      null !== callback &&
        ("function" !== typeof callback &&
          console.error(
            "Expected the last optional `callback` argument to be a function. Instead received: %s.",
            callback
          ),
        (container.callback = callback));
      element = enqueueUpdate(rootFiber, container, lane);
      null !== element &&
        (startUpdateTimerByLane(lane, "root.render()", null),
        scheduleUpdateOnFiber(element, rootFiber, lane),
        entangleTransitions(element, rootFiber, lane));
    }
    function markRetryLaneImpl(fiber, retryLane) {
      fiber = fiber.memoizedState;
      if (null !== fiber && null !== fiber.dehydrated) {
        var a = fiber.retryLane;
        fiber.retryLane = 0 !== a && a < retryLane ? a : retryLane;
      }
    }
    function markRetryLaneIfNotHydrated(fiber, retryLane) {
      markRetryLaneImpl(fiber, retryLane);
      (fiber = fiber.alternate) && markRetryLaneImpl(fiber, retryLane);
    }
    function attemptContinuousHydration(fiber) {
      if (13 === fiber.tag || 31 === fiber.tag) {
        var root = enqueueConcurrentRenderForLane(fiber, 67108864);
        null !== root && scheduleUpdateOnFiber(root, fiber, 67108864);
        markRetryLaneIfNotHydrated(fiber, 67108864);
      }
    }
    function attemptHydrationAtCurrentPriority(fiber) {
      if (13 === fiber.tag || 31 === fiber.tag) {
        var lane = requestUpdateLane(fiber);
        lane = getBumpedLaneForHydrationByLane(lane);
        var root = enqueueConcurrentRenderForLane(fiber, lane);
        null !== root && scheduleUpdateOnFiber(root, fiber, lane);
        markRetryLaneIfNotHydrated(fiber, lane);
      }
    }
    function getCurrentFiberForDevTools() {
      return current;
    }
    function dispatchDiscreteEvent(
      domEventName,
      eventSystemFlags,
      container,
      nativeEvent
    ) {
      var prevTransition = ReactSharedInternals.T;
      ReactSharedInternals.T = null;
      var previousPriority = ReactDOMSharedInternals.p;
      try {
        (ReactDOMSharedInternals.p = DiscreteEventPriority),
          dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);
      } finally {
        (ReactDOMSharedInternals.p = previousPriority),
          (ReactSharedInternals.T = prevTransition);
      }
    }
    function dispatchContinuousEvent(
      domEventName,
      eventSystemFlags,
      container,
      nativeEvent
    ) {
      var prevTransition = ReactSharedInternals.T;
      ReactSharedInternals.T = null;
      var previousPriority = ReactDOMSharedInternals.p;
      try {
        (ReactDOMSharedInternals.p = ContinuousEventPriority),
          dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);
      } finally {
        (ReactDOMSharedInternals.p = previousPriority),
          (ReactSharedInternals.T = prevTransition);
      }
    }
    function dispatchEvent(
      domEventName,
      eventSystemFlags,
      targetContainer,
      nativeEvent
    ) {
      if (_enabled) {
        var blockedOn = findInstanceBlockingEvent(nativeEvent);
        if (null === blockedOn)
          dispatchEventForPluginEventSystem(
            domEventName,
            eventSystemFlags,
            nativeEvent,
            return_targetInst,
            targetContainer
          ),
            clearIfContinuousEvent(domEventName, nativeEvent);
        else if (
          queueIfContinuousEvent(
            blockedOn,
            domEventName,
            eventSystemFlags,
            targetContainer,
            nativeEvent
          )
        )
          nativeEvent.stopPropagation();
        else if (
          (clearIfContinuousEvent(domEventName, nativeEvent),
          eventSystemFlags & 4 &&
            -1 < discreteReplayableEvents.indexOf(domEventName))
        ) {
          for (; null !== blockedOn; ) {
            var fiber = getInstanceFromNode(blockedOn);
            if (null !== fiber)
              switch (fiber.tag) {
                case 3:
                  fiber = fiber.stateNode;
                  if (fiber.current.memoizedState.isDehydrated) {
                    var lanes = getHighestPriorityLanes(fiber.pendingLanes);
                    if (0 !== lanes) {
                      var root = fiber;
                      root.pendingLanes |= 2;
                      for (root.entangledLanes |= 2; lanes; ) {
                        var lane = 1 << (31 - clz32(lanes));
                        root.entanglements[1] |= lane;
                        lanes &= ~lane;
                      }
                      ensureRootIsScheduled(fiber);
                      (executionContext & (RenderContext | CommitContext)) ===
                        NoContext &&
                        ((workInProgressRootRenderTargetTime =
                          now$1() + RENDER_TIMEOUT_MS),
                        flushSyncWorkAcrossRoots_impl(0, !1));
                    }
                  }
                  break;
                case 31:
                case 13:
                  (root = enqueueConcurrentRenderForLane(fiber, 2)),
                    null !== root && scheduleUpdateOnFiber(root, fiber, 2),
                    flushSyncWork$1(),
                    markRetryLaneIfNotHydrated(fiber, 2);
              }
            fiber = findInstanceBlockingEvent(nativeEvent);
            null === fiber &&
              dispatchEventForPluginEventSystem(
                domEventName,
                eventSystemFlags,
                nativeEvent,
                return_targetInst,
                targetContainer
              );
            if (fiber === blockedOn) break;
            blockedOn = fiber;
          }
          null !== blockedOn && nativeEvent.stopPropagation();
        } else
          dispatchEventForPluginEventSystem(
            domEventName,
            eventSystemFlags,
            nativeEvent,
            null,
            targetContainer
          );
      }
    }
    function findInstanceBlockingEvent(nativeEvent) {
      nativeEvent = getEventTarget(nativeEvent);
      return findInstanceBlockingTarget(nativeEvent);
    }
    function findInstanceBlockingTarget(targetNode) {
      return_targetInst = null;
      targetNode = getClosestInstanceFromNode(targetNode);
      if (null !== targetNode) {
        var nearestMounted = getNearestMountedFiber(targetNode);
        if (null === nearestMounted) targetNode = null;
        else {
          var tag = nearestMounted.tag;
          if (13 === tag) {
            targetNode = getSuspenseInstanceFromFiber(nearestMounted);
            if (null !== targetNode) return targetNode;
            targetNode = null;
          } else if (31 === tag) {
            targetNode = getActivityInstanceFromFiber(nearestMounted);
            if (null !== targetNode) return targetNode;
            targetNode = null;
          } else if (3 === tag) {
            if (nearestMounted.stateNode.current.memoizedState.isDehydrated)
              return 3 === nearestMounted.tag
                ? nearestMounted.stateNode.containerInfo
                : null;
            targetNode = null;
          } else nearestMounted !== targetNode && (targetNode = null);
        }
      }
      return_targetInst = targetNode;
      return null;
    }
    function getEventPriority(domEventName) {
      switch (domEventName) {
        case "beforetoggle":
        case "cancel":
        case "click":
        case "close":
        case "contextmenu":
        case "copy":
        case "cut":
        case "auxclick":
        case "dblclick":
        case "dragend":
        case "dragstart":
        case "drop":
        case "focusin":
        case "focusout":
        case "input":
        case "invalid":
        case "keydown":
        case "keypress":
        case "keyup":
        case "mousedown":
        case "mouseup":
        case "paste":
        case "pause":
        case "play":
        case "pointercancel":
        case "pointerdown":
        case "pointerup":
        case "ratechange":
        case "reset":
        case "resize":
        case "seeked":
        case "submit":
        case "toggle":
        case "touchcancel":
        case "touchend":
        case "touchstart":
        case "volumechange":
        case "change":
        case "selectionchange":
        case "textInput":
        case "compositionstart":
        case "compositionend":
        case "compositionupdate":
        case "beforeblur":
        case "afterblur":
        case "beforeinput":
        case "blur":
        case "fullscreenchange":
        case "focus":
        case "hashchange":
        case "popstate":
        case "select":
        case "selectstart":
          return DiscreteEventPriority;
        case "drag":
        case "dragenter":
        case "dragexit":
        case "dragleave":
        case "dragover":
        case "mousemove":
        case "mouseout":
        case "mouseover":
        case "pointermove":
        case "pointerout":
        case "pointerover":
        case "scroll":
        case "touchmove":
        case "wheel":
        case "mouseenter":
        case "mouseleave":
        case "pointerenter":
        case "pointerleave":
          return ContinuousEventPriority;
        case "message":
          switch (getCurrentPriorityLevel()) {
            case ImmediatePriority:
              return DiscreteEventPriority;
            case UserBlockingPriority:
              return ContinuousEventPriority;
            case NormalPriority$1:
            case LowPriority:
              return DefaultEventPriority;
            case IdlePriority:
              return IdleEventPriority;
            default:
              return DefaultEventPriority;
          }
        default:
          return DefaultEventPriority;
      }
    }
    function clearIfContinuousEvent(domEventName, nativeEvent) {
      switch (domEventName) {
        case "focusin":
        case "focusout":
          queuedFocus = null;
          break;
        case "dragenter":
        case "dragleave":
          queuedDrag = null;
          break;
        case "mouseover":
        case "mouseout":
          queuedMouse = null;
          break;
        case "pointerover":
        case "pointerout":
          queuedPointers.delete(nativeEvent.pointerId);
          break;
        case "gotpointercapture":
        case "lostpointercapture":
          queuedPointerCaptures.delete(nativeEvent.pointerId);
      }
    }
    function accumulateOrCreateContinuousQueuedReplayableEvent(
      existingQueuedEvent,
      blockedOn,
      domEventName,
      eventSystemFlags,
      targetContainer,
      nativeEvent
    ) {
      if (
        null === existingQueuedEvent ||
        existingQueuedEvent.nativeEvent !== nativeEvent
      )
        return (
          (existingQueuedEvent = {
            blockedOn: blockedOn,
            domEventName: domEventName,
            eventSystemFlags: eventSystemFlags,
            nativeEvent: nativeEvent,
            targetContainers: [targetContainer]
          }),
          null !== blockedOn &&
            ((blockedOn = getInstanceFromNode(blockedOn)),
            null !== blockedOn && attemptContinuousHydration(blockedOn)),
          existingQueuedEvent
        );
      existingQueuedEvent.eventSystemFlags |= eventSystemFlags;
      blockedOn = existingQueuedEvent.targetContainers;
      null !== targetContainer &&
        -1 === blockedOn.indexOf(targetContainer) &&
        blockedOn.push(targetContainer);
      return existingQueuedEvent;
    }
    function queueIfContinuousEvent(
      blockedOn,
      domEventName,
      eventSystemFlags,
      targetContainer,
      nativeEvent
    ) {
      switch (domEventName) {
        case "focusin":
          return (
            (queuedFocus = accumulateOrCreateContinuousQueuedReplayableEvent(
              queuedFocus,
              blockedOn,
              domEventName,
              eventSystemFlags,
              targetContainer,
              nativeEvent
            )),
            !0
          );
        case "dragenter":
          return (
            (queuedDrag = accumulateOrCreateContinuousQueuedReplayableEvent(
              queuedDrag,
              blockedOn,
              domEventName,
              eventSystemFlags,
              targetContainer,
              nativeEvent
            )),
            !0
          );
        case "mouseover":
          return (
            (queuedMouse = accumulateOrCreateContinuousQueuedReplayableEvent(
              queuedMouse,
              blockedOn,
              domEventName,
              eventSystemFlags,
              targetContainer,
              nativeEvent
            )),
            !0
          );
        case "pointerover":
          var pointerId = nativeEvent.pointerId;
          queuedPointers.set(
            pointerId,
            accumulateOrCreateContinuousQueuedReplayableEvent(
              queuedPointers.get(pointerId) || null,
              blockedOn,
              domEventName,
              eventSystemFlags,
              targetContainer,
              nativeEvent
            )
          );
          return !0;
        case "gotpointercapture":
          return (
            (pointerId = nativeEvent.pointerId),
            queuedPointerCaptures.set(
              pointerId,
              accumulateOrCreateContinuousQueuedReplayableEvent(
                queuedPointerCaptures.get(pointerId) || null,
                blockedOn,
                domEventName,
                eventSystemFlags,
                targetContainer,
                nativeEvent
              )
            ),
            !0
          );
      }
      return !1;
    }
    function attemptExplicitHydrationTarget(queuedTarget) {
      var targetInst = getClosestInstanceFromNode(queuedTarget.target);
      if (null !== targetInst) {
        var nearestMounted = getNearestMountedFiber(targetInst);
        if (null !== nearestMounted)
          if (((targetInst = nearestMounted.tag), 13 === targetInst)) {
            if (
              ((targetInst = getSuspenseInstanceFromFiber(nearestMounted)),
              null !== targetInst)
            ) {
              queuedTarget.blockedOn = targetInst;
              runWithPriority(queuedTarget.priority, function () {
                attemptHydrationAtCurrentPriority(nearestMounted);
              });
              return;
            }
          } else if (31 === targetInst) {
            if (
              ((targetInst = getActivityInstanceFromFiber(nearestMounted)),
              null !== targetInst)
            ) {
              queuedTarget.blockedOn = targetInst;
              runWithPriority(queuedTarget.priority, function () {
                attemptHydrationAtCurrentPriority(nearestMounted);
              });
              return;
            }
          } else if (
            3 === targetInst &&
            nearestMounted.stateNode.current.memoizedState.isDehydrated
          ) {
            queuedTarget.blockedOn =
              3 === nearestMounted.tag
                ? nearestMounted.stateNode.containerInfo
                : null;
            return;
          }
      }
      queuedTarget.blockedOn = null;
    }
    function attemptReplayContinuousQueuedEvent(queuedEvent) {
      if (null !== queuedEvent.blockedOn) return !1;
      for (
        var targetContainers = queuedEvent.targetContainers;
        0 < targetContainers.length;

      ) {
        var nextBlockedOn = findInstanceBlockingEvent(queuedEvent.nativeEvent);
        if (null === nextBlockedOn) {
          nextBlockedOn = queuedEvent.nativeEvent;
          var nativeEventClone = new nextBlockedOn.constructor(
              nextBlockedOn.type,
              nextBlockedOn
            ),
            event = nativeEventClone;
          null !== currentReplayingEvent &&
            console.error(
              "Expected currently replaying event to be null. This error is likely caused by a bug in React. Please file an issue."
            );
          currentReplayingEvent = event;
          nextBlockedOn.target.dispatchEvent(nativeEventClone);
          null === currentReplayingEvent &&
            console.error(
              "Expected currently replaying event to not be null. This error is likely caused by a bug in React. Please file an issue."
            );
          currentReplayingEvent = null;
        } else
          return (
            (targetContainers = getInstanceFromNode(nextBlockedOn)),
            null !== targetContainers &&
              attemptContinuousHydration(targetContainers),
            (queuedEvent.blockedOn = nextBlockedOn),
            !1
          );
        targetContainers.shift();
      }
      return !0;
    }
    function attemptReplayContinuousQueuedEventInMap(queuedEvent, key, map) {
      attemptReplayContinuousQueuedEvent(queuedEvent) && map.delete(key);
    }
    function replayUnblockedEvents() {
      hasScheduledReplayAttempt = !1;
      null !== queuedFocus &&
        attemptReplayContinuousQueuedEvent(queuedFocus) &&
        (queuedFocus = null);
      null !== queuedDrag &&
        attemptReplayContinuousQueuedEvent(queuedDrag) &&
        (queuedDrag = null);
      null !== queuedMouse &&
        attemptReplayContinuousQueuedEvent(queuedMouse) &&
        (queuedMouse = null);
      queuedPointers.forEach(attemptReplayContinuousQueuedEventInMap);
      queuedPointerCaptures.forEach(attemptReplayContinuousQueuedEventInMap);
    }
    function scheduleCallbackIfUnblocked(queuedEvent, unblocked) {
      queuedEvent.blockedOn === unblocked &&
        ((queuedEvent.blockedOn = null),
        hasScheduledReplayAttempt ||
          ((hasScheduledReplayAttempt = !0),
          Scheduler.unstable_scheduleCallback(
            Scheduler.unstable_NormalPriority,
            replayUnblockedEvents
          )));
    }
    function scheduleReplayQueueIfNeeded(formReplayingQueue) {
      lastScheduledReplayQueue !== formReplayingQueue &&
        ((lastScheduledReplayQueue = formReplayingQueue),
        Scheduler.unstable_scheduleCallback(
          Scheduler.unstable_NormalPriority,
          function () {
            lastScheduledReplayQueue === formReplayingQueue &&
              (lastScheduledReplayQueue = null);
            for (var i = 0; i < formReplayingQueue.length; i += 3) {
              var form = formReplayingQueue[i],
                submitterOrAction = formReplayingQueue[i + 1],
                formData = formReplayingQueue[i + 2];
              if ("function" !== typeof submitterOrAction)
                if (
                  null === findInstanceBlockingTarget(submitterOrAction || form)
                )
                  continue;
                else break;
              var formInst = getInstanceFromNode(form);
              null !== formInst &&
                (formReplayingQueue.splice(i, 3),
                (i -= 3),
                (form = {
                  pending: !0,
                  data: formData,
                  method: form.method,
                  action: submitterOrAction
                }),
                Object.freeze(form),
                startHostTransition(
                  formInst,
                  form,
                  submitterOrAction,
                  formData
                ));
            }
          }
        ));
    }
    function retryIfBlockedOn(unblocked) {
      function unblock(queuedEvent) {
        return scheduleCallbackIfUnblocked(queuedEvent, unblocked);
      }
      null !== queuedFocus &&
        scheduleCallbackIfUnblocked(queuedFocus, unblocked);
      null !== queuedDrag && scheduleCallbackIfUnblocked(queuedDrag, unblocked);
      null !== queuedMouse &&
        scheduleCallbackIfUnblocked(queuedMouse, unblocked);
      queuedPointers.forEach(unblock);
      queuedPointerCaptures.forEach(unblock);
      for (var i = 0; i < queuedExplicitHydrationTargets.length; i++) {
        var queuedTarget = queuedExplicitHydrationTargets[i];
        queuedTarget.blockedOn === unblocked && (queuedTarget.blockedOn = null);
      }
      for (
        ;
        0 < queuedExplicitHydrationTargets.length &&
        ((i = queuedExplicitHydrationTargets[0]), null === i.blockedOn);

      )
        attemptExplicitHydrationTarget(i),
          null === i.blockedOn && queuedExplicitHydrationTargets.shift();
      i = (unblocked.ownerDocument || unblocked).$$reactFormReplay;
      if (null != i)
        for (queuedTarget = 0; queuedTarget < i.length; queuedTarget += 3) {
          var form = i[queuedTarget],
            submitterOrAction = i[queuedTarget + 1],
            formProps = form[internalPropsKey] || null;
          if ("function" === typeof submitterOrAction)
            formProps || scheduleReplayQueueIfNeeded(i);
          else if (formProps) {
            var action = null;
            if (
              submitterOrAction &&
              submitterOrAction.hasAttribute("formAction")
            )
              if (
                ((form = submitterOrAction),
                (formProps = submitterOrAction[internalPropsKey] || null))
              )
                action = formProps.formAction;
              else {
                if (null !== findInstanceBlockingTarget(form)) continue;
              }
            else action = formProps.action;
            "function" === typeof action
              ? (i[queuedTarget + 1] = action)
              : (i.splice(queuedTarget, 3), (queuedTarget -= 3));
            scheduleReplayQueueIfNeeded(i);
          }
        }
    }
    function defaultOnDefaultTransitionIndicator() {
      function handleNavigate(event) {
        event.canIntercept &&
          "react-transition" === event.info &&
          event.intercept({
            handler: function () {
              return new Promise(function (resolve) {
                return (pendingResolve = resolve);
              });
            },
            focusReset: "manual",
            scroll: "manual"
          });
      }
      function handleNavigateComplete() {
        null !== pendingResolve && (pendingResolve(), (pendingResolve = null));
        isCancelled || setTimeout(startFakeNavigation, 20);
      }
      function startFakeNavigation() {
        if (!isCancelled && !navigation.transition) {
          var currentEntry = navigation.currentEntry;
          currentEntry &&
            null != currentEntry.url &&
            navigation.navigate(currentEntry.url, {
              state: currentEntry.getState(),
              info: "react-transition",
              history: "replace"
            });
        }
      }
      if ("object" === typeof navigation) {
        var isCancelled = !1,
          pendingResolve = null;
        navigation.addEventListener("navigate", handleNavigate);
        navigation.addEventListener("navigatesuccess", handleNavigateComplete);
        navigation.addEventListener("navigateerror", handleNavigateComplete);
        setTimeout(startFakeNavigation, 100);
        return function () {
          isCancelled = !0;
          navigation.removeEventListener("navigate", handleNavigate);
          navigation.removeEventListener(
            "navigatesuccess",
            handleNavigateComplete
          );
          navigation.removeEventListener(
            "navigateerror",
            handleNavigateComplete
          );
          null !== pendingResolve &&
            (pendingResolve(), (pendingResolve = null));
        };
      }
    }
    function ReactDOMRoot(internalRoot) {
      this._internalRoot = internalRoot;
    }
    function ReactDOMHydrationRoot(internalRoot) {
      this._internalRoot = internalRoot;
    }
    function warnIfReactDOMContainerInDEV(container) {
      container[internalContainerInstanceKey] &&
        (container._reactRootContainer
          ? console.error(
              "You are calling ReactDOMClient.createRoot() on a container that was previously passed to ReactDOM.render(). This is not supported."
            )
          : console.error(
              "You are calling ReactDOMClient.createRoot() on a container that has already been passed to createRoot() before. Instead, call root.render() on the existing root instead if you want to update it."
            ));
    }
    "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
      "function" ===
        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart &&
      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());
    var Scheduler = __webpack_require__(/*! scheduler */ "./node_modules/scheduler/index.js"),
      React = __webpack_require__(/*! react */ "./node_modules/react/index.js"),
      ReactDOM = __webpack_require__(/*! react-dom */ "./node_modules/react-dom/index.js"),
      assign = Object.assign,
      REACT_LEGACY_ELEMENT_TYPE = Symbol.for("react.element"),
      REACT_ELEMENT_TYPE = Symbol.for("react.transitional.element"),
      REACT_PORTAL_TYPE = Symbol.for("react.portal"),
      REACT_FRAGMENT_TYPE = Symbol.for("react.fragment"),
      REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode"),
      REACT_PROFILER_TYPE = Symbol.for("react.profiler"),
      REACT_CONSUMER_TYPE = Symbol.for("react.consumer"),
      REACT_CONTEXT_TYPE = Symbol.for("react.context"),
      REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref"),
      REACT_SUSPENSE_TYPE = Symbol.for("react.suspense"),
      REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list"),
      REACT_MEMO_TYPE = Symbol.for("react.memo"),
      REACT_LAZY_TYPE = Symbol.for("react.lazy");
    Symbol.for("react.scope");
    var REACT_ACTIVITY_TYPE = Symbol.for("react.activity");
    Symbol.for("react.legacy_hidden");
    Symbol.for("react.tracing_marker");
    var REACT_MEMO_CACHE_SENTINEL = Symbol.for("react.memo_cache_sentinel");
    Symbol.for("react.view_transition");
    var MAYBE_ITERATOR_SYMBOL = Symbol.iterator,
      REACT_CLIENT_REFERENCE = Symbol.for("react.client.reference"),
      isArrayImpl = Array.isArray,
      ReactSharedInternals =
        React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,
      ReactDOMSharedInternals =
        ReactDOM.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,
      NotPending = Object.freeze({
        pending: !1,
        data: null,
        method: null,
        action: null
      }),
      valueStack = [];
    var fiberStack = [];
    var index$jscomp$0 = -1,
      contextStackCursor = createCursor(null),
      contextFiberStackCursor = createCursor(null),
      rootInstanceStackCursor = createCursor(null),
      hostTransitionProviderCursor = createCursor(null),
      disabledDepth = 0,
      prevLog,
      prevInfo,
      prevWarn,
      prevError,
      prevGroup,
      prevGroupCollapsed,
      prevGroupEnd;
    disabledLog.__reactDisabledLog = !0;
    var prefix,
      suffix,
      reentry = !1;
    var componentFrameCache = new (
      "function" === typeof WeakMap ? WeakMap : Map
    )();
    var current = null,
      isRendering = !1,
      hasOwnProperty = Object.prototype.hasOwnProperty,
      scheduleCallback$3 = Scheduler.unstable_scheduleCallback,
      cancelCallback$1 = Scheduler.unstable_cancelCallback,
      shouldYield = Scheduler.unstable_shouldYield,
      requestPaint = Scheduler.unstable_requestPaint,
      now$1 = Scheduler.unstable_now,
      getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel,
      ImmediatePriority = Scheduler.unstable_ImmediatePriority,
      UserBlockingPriority = Scheduler.unstable_UserBlockingPriority,
      NormalPriority$1 = Scheduler.unstable_NormalPriority,
      LowPriority = Scheduler.unstable_LowPriority,
      IdlePriority = Scheduler.unstable_IdlePriority,
      log$1 = Scheduler.log,
      unstable_setDisableYieldValue = Scheduler.unstable_setDisableYieldValue,
      rendererID = null,
      injectedHook = null,
      hasLoggedError = !1,
      isDevToolsPresent = "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__,
      clz32 = Math.clz32 ? Math.clz32 : clz32Fallback,
      log = Math.log,
      LN2 = Math.LN2,
      nextTransitionUpdateLane = 256,
      nextTransitionDeferredLane = 262144,
      nextRetryLane = 4194304,
      DiscreteEventPriority = 2,
      ContinuousEventPriority = 8,
      DefaultEventPriority = 32,
      IdleEventPriority = 268435456,
      randomKey = Math.random().toString(36).slice(2),
      internalInstanceKey = "__reactFiber$" + randomKey,
      internalPropsKey = "__reactProps$" + randomKey,
      internalContainerInstanceKey = "__reactContainer$" + randomKey,
      internalEventHandlersKey = "__reactEvents$" + randomKey,
      internalEventHandlerListenersKey = "__reactListeners$" + randomKey,
      internalEventHandlesSetKey = "__reactHandles$" + randomKey,
      internalRootNodeResourcesKey = "__reactResources$" + randomKey,
      internalHoistableMarker = "__reactMarker$" + randomKey,
      allNativeEvents = new Set(),
      registrationNameDependencies = {},
      possibleRegistrationNames = {},
      hasReadOnlyValue = {
        button: !0,
        checkbox: !0,
        image: !0,
        hidden: !0,
        radio: !0,
        reset: !0,
        submit: !0
      },
      VALID_ATTRIBUTE_NAME_REGEX = RegExp(
        "^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$"
      ),
      illegalAttributeNameCache = {},
      validatedAttributeNameCache = {},
      escapeSelectorAttributeValueInsideDoubleQuotesRegex = /[\n"\\]/g,
      didWarnValueDefaultValue$1 = !1,
      didWarnCheckedDefaultChecked = !1,
      didWarnSelectedSetOnOption = !1,
      didWarnInvalidChild = !1,
      didWarnInvalidInnerHTML = !1;
    var didWarnValueDefaultValue = !1;
    var valuePropNames = ["value", "defaultValue"],
      didWarnValDefaultVal = !1,
      needsEscaping = /["'&<>\n\t]|^\s|\s$/,
      specialTags =
        "address applet area article aside base basefont bgsound blockquote body br button caption center col colgroup dd details dir div dl dt embed fieldset figcaption figure footer form frame frameset h1 h2 h3 h4 h5 h6 head header hgroup hr html iframe img input isindex li link listing main marquee menu menuitem meta nav noembed noframes noscript object ol p param plaintext pre script section select source style summary table tbody td template textarea tfoot th thead title tr track ul wbr xmp".split(
          " "
        ),
      inScopeTags =
        "applet caption html table td th marquee object template foreignObject desc title".split(
          " "
        ),
      buttonScopeTags = inScopeTags.concat(["button"]),
      impliedEndTags = "dd dt li option optgroup p rp rt".split(" "),
      emptyAncestorInfoDev = {
        current: null,
        formTag: null,
        aTagInScope: null,
        buttonTagInScope: null,
        nobrTagInScope: null,
        pTagInButtonScope: null,
        listItemTagAutoclosing: null,
        dlItemTagAutoclosing: null,
        containerTagInScope: null,
        implicitRootScope: !1
      },
      didWarn = {},
      shorthandToLonghand = {
        animation:
          "animationDelay animationDirection animationDuration animationFillMode animationIterationCount animationName animationPlayState animationTimingFunction".split(
            " "
          ),
        background:
          "backgroundAttachment backgroundClip backgroundColor backgroundImage backgroundOrigin backgroundPositionX backgroundPositionY backgroundRepeat backgroundSize".split(
            " "
          ),
        backgroundPosition: ["backgroundPositionX", "backgroundPositionY"],
        border:
          "borderBottomColor borderBottomStyle borderBottomWidth borderImageOutset borderImageRepeat borderImageSlice borderImageSource borderImageWidth borderLeftColor borderLeftStyle borderLeftWidth borderRightColor borderRightStyle borderRightWidth borderTopColor borderTopStyle borderTopWidth".split(
            " "
          ),
        borderBlockEnd: [
          "borderBlockEndColor",
          "borderBlockEndStyle",
          "borderBlockEndWidth"
        ],
        borderBlockStart: [
          "borderBlockStartColor",
          "borderBlockStartStyle",
          "borderBlockStartWidth"
        ],
        borderBottom: [
          "borderBottomColor",
          "borderBottomStyle",
          "borderBottomWidth"
        ],
        borderColor: [
          "borderBottomColor",
          "borderLeftColor",
          "borderRightColor",
          "borderTopColor"
        ],
        borderImage: [
          "borderImageOutset",
          "borderImageRepeat",
          "borderImageSlice",
          "borderImageSource",
          "borderImageWidth"
        ],
        borderInlineEnd: [
          "borderInlineEndColor",
          "borderInlineEndStyle",
          "borderInlineEndWidth"
        ],
        borderInlineStart: [
          "borderInlineStartColor",
          "borderInlineStartStyle",
          "borderInlineStartWidth"
        ],
        borderLeft: ["borderLeftColor", "borderLeftStyle", "borderLeftWidth"],
        borderRadius: [
          "borderBottomLeftRadius",
          "borderBottomRightRadius",
          "borderTopLeftRadius",
          "borderTopRightRadius"
        ],
        borderRight: [
          "borderRightColor",
          "borderRightStyle",
          "borderRightWidth"
        ],
        borderStyle: [
          "borderBottomStyle",
          "borderLeftStyle",
          "borderRightStyle",
          "borderTopStyle"
        ],
        borderTop: ["borderTopColor", "borderTopStyle", "borderTopWidth"],
        borderWidth: [
          "borderBottomWidth",
          "borderLeftWidth",
          "borderRightWidth",
          "borderTopWidth"
        ],
        columnRule: ["columnRuleColor", "columnRuleStyle", "columnRuleWidth"],
        columns: ["columnCount", "columnWidth"],
        flex: ["flexBasis", "flexGrow", "flexShrink"],
        flexFlow: ["flexDirection", "flexWrap"],
        font: "fontFamily fontFeatureSettings fontKerning fontLanguageOverride fontSize fontSizeAdjust fontStretch fontStyle fontVariant fontVariantAlternates fontVariantCaps fontVariantEastAsian fontVariantLigatures fontVariantNumeric fontVariantPosition fontWeight lineHeight".split(
          " "
        ),
        fontVariant:
          "fontVariantAlternates fontVariantCaps fontVariantEastAsian fontVariantLigatures fontVariantNumeric fontVariantPosition".split(
            " "
          ),
        gap: ["columnGap", "rowGap"],
        grid: "gridAutoColumns gridAutoFlow gridAutoRows gridTemplateAreas gridTemplateColumns gridTemplateRows".split(
          " "
        ),
        gridArea: [
          "gridColumnEnd",
          "gridColumnStart",
          "gridRowEnd",
          "gridRowStart"
        ],
        gridColumn: ["gridColumnEnd", "gridColumnStart"],
        gridColumnGap: ["columnGap"],
        gridGap: ["columnGap", "rowGap"],
        gridRow: ["gridRowEnd", "gridRowStart"],
        gridRowGap: ["rowGap"],
        gridTemplate: [
          "gridTemplateAreas",
          "gridTemplateColumns",
          "gridTemplateRows"
        ],
        listStyle: ["listStyleImage", "listStylePosition", "listStyleType"],
        margin: ["marginBottom", "marginLeft", "marginRight", "marginTop"],
        marker: ["markerEnd", "markerMid", "markerStart"],
        mask: "maskClip maskComposite maskImage maskMode maskOrigin maskPositionX maskPositionY maskRepeat maskSize".split(
          " "
        ),
        maskPosition: ["maskPositionX", "maskPositionY"],
        outline: ["outlineColor", "outlineStyle", "outlineWidth"],
        overflow: ["overflowX", "overflowY"],
        padding: ["paddingBottom", "paddingLeft", "paddingRight", "paddingTop"],
        placeContent: ["alignContent", "justifyContent"],
        placeItems: ["alignItems", "justifyItems"],
        placeSelf: ["alignSelf", "justifySelf"],
        textDecoration: [
          "textDecorationColor",
          "textDecorationLine",
          "textDecorationStyle"
        ],
        textEmphasis: ["textEmphasisColor", "textEmphasisStyle"],
        transition: [
          "transitionDelay",
          "transitionDuration",
          "transitionProperty",
          "transitionTimingFunction"
        ],
        wordWrap: ["overflowWrap"]
      },
      uppercasePattern = /([A-Z])/g,
      msPattern$1 = /^ms-/,
      badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/,
      msPattern = /^-ms-/,
      hyphenPattern = /-(.)/g,
      badStyleValueWithSemicolonPattern = /;\s*$/,
      warnedStyleNames = {},
      warnedStyleValues = {},
      warnedForNaNValue = !1,
      warnedForInfinityValue = !1,
      unitlessNumbers = new Set(
        "animationIterationCount aspectRatio borderImageOutset borderImageSlice borderImageWidth boxFlex boxFlexGroup boxOrdinalGroup columnCount columns flex flexGrow flexPositive flexShrink flexNegative flexOrder gridArea gridRow gridRowEnd gridRowSpan gridRowStart gridColumn gridColumnEnd gridColumnSpan gridColumnStart fontWeight lineClamp lineHeight opacity order orphans scale tabSize widows zIndex zoom fillOpacity floodOpacity stopOpacity strokeDasharray strokeDashoffset strokeMiterlimit strokeOpacity strokeWidth MozAnimationIterationCount MozBoxFlex MozBoxFlexGroup MozLineClamp msAnimationIterationCount msFlex msZoom msFlexGrow msFlexNegative msFlexOrder msFlexPositive msFlexShrink msGridColumn msGridColumnSpan msGridRow msGridRowSpan WebkitAnimationIterationCount WebkitBoxFlex WebKitBoxFlexGroup WebkitBoxOrdinalGroup WebkitColumnCount WebkitColumns WebkitFlex WebkitFlexGrow WebkitFlexPositive WebkitFlexShrink WebkitLineClamp".split(
          " "
        )
      ),
      MATH_NAMESPACE = "http://www.w3.org/1998/Math/MathML",
      SVG_NAMESPACE = "http://www.w3.org/2000/svg",
      aliases = new Map([
        ["acceptCharset", "accept-charset"],
        ["htmlFor", "for"],
        ["httpEquiv", "http-equiv"],
        ["crossOrigin", "crossorigin"],
        ["accentHeight", "accent-height"],
        ["alignmentBaseline", "alignment-baseline"],
        ["arabicForm", "arabic-form"],
        ["baselineShift", "baseline-shift"],
        ["capHeight", "cap-height"],
        ["clipPath", "clip-path"],
        ["clipRule", "clip-rule"],
        ["colorInterpolation", "color-interpolation"],
        ["colorInterpolationFilters", "color-interpolation-filters"],
        ["colorProfile", "color-profile"],
        ["colorRendering", "color-rendering"],
        ["dominantBaseline", "dominant-baseline"],
        ["enableBackground", "enable-background"],
        ["fillOpacity", "fill-opacity"],
        ["fillRule", "fill-rule"],
        ["floodColor", "flood-color"],
        ["floodOpacity", "flood-opacity"],
        ["fontFamily", "font-family"],
        ["fontSize", "font-size"],
        ["fontSizeAdjust", "font-size-adjust"],
        ["fontStretch", "font-stretch"],
        ["fontStyle", "font-style"],
        ["fontVariant", "font-variant"],
        ["fontWeight", "font-weight"],
        ["glyphName", "glyph-name"],
        ["glyphOrientationHorizontal", "glyph-orientation-horizontal"],
        ["glyphOrientationVertical", "glyph-orientation-vertical"],
        ["horizAdvX", "horiz-adv-x"],
        ["horizOriginX", "horiz-origin-x"],
        ["imageRendering", "image-rendering"],
        ["letterSpacing", "letter-spacing"],
        ["lightingColor", "lighting-color"],
        ["markerEnd", "marker-end"],
        ["markerMid", "marker-mid"],
        ["markerStart", "marker-start"],
        ["overlinePosition", "overline-position"],
        ["overlineThickness", "overline-thickness"],
        ["paintOrder", "paint-order"],
        ["panose-1", "panose-1"],
        ["pointerEvents", "pointer-events"],
        ["renderingIntent", "rendering-intent"],
        ["shapeRendering", "shape-rendering"],
        ["stopColor", "stop-color"],
        ["stopOpacity", "stop-opacity"],
        ["strikethroughPosition", "strikethrough-position"],
        ["strikethroughThickness", "strikethrough-thickness"],
        ["strokeDasharray", "stroke-dasharray"],
        ["strokeDashoffset", "stroke-dashoffset"],
        ["strokeLinecap", "stroke-linecap"],
        ["strokeLinejoin", "stroke-linejoin"],
        ["strokeMiterlimit", "stroke-miterlimit"],
        ["strokeOpacity", "stroke-opacity"],
        ["strokeWidth", "stroke-width"],
        ["textAnchor", "text-anchor"],
        ["textDecoration", "text-decoration"],
        ["textRendering", "text-rendering"],
        ["transformOrigin", "transform-origin"],
        ["underlinePosition", "underline-position"],
        ["underlineThickness", "underline-thickness"],
        ["unicodeBidi", "unicode-bidi"],
        ["unicodeRange", "unicode-range"],
        ["unitsPerEm", "units-per-em"],
        ["vAlphabetic", "v-alphabetic"],
        ["vHanging", "v-hanging"],
        ["vIdeographic", "v-ideographic"],
        ["vMathematical", "v-mathematical"],
        ["vectorEffect", "vector-effect"],
        ["vertAdvY", "vert-adv-y"],
        ["vertOriginX", "vert-origin-x"],
        ["vertOriginY", "vert-origin-y"],
        ["wordSpacing", "word-spacing"],
        ["writingMode", "writing-mode"],
        ["xmlnsXlink", "xmlns:xlink"],
        ["xHeight", "x-height"]
      ]),
      possibleStandardNames = {
        accept: "accept",
        acceptcharset: "acceptCharset",
        "accept-charset": "acceptCharset",
        accesskey: "accessKey",
        action: "action",
        allowfullscreen: "allowFullScreen",
        alt: "alt",
        as: "as",
        async: "async",
        autocapitalize: "autoCapitalize",
        autocomplete: "autoComplete",
        autocorrect: "autoCorrect",
        autofocus: "autoFocus",
        autoplay: "autoPlay",
        autosave: "autoSave",
        capture: "capture",
        cellpadding: "cellPadding",
        cellspacing: "cellSpacing",
        challenge: "challenge",
        charset: "charSet",
        checked: "checked",
        children: "children",
        cite: "cite",
        class: "className",
        classid: "classID",
        classname: "className",
        cols: "cols",
        colspan: "colSpan",
        content: "content",
        contenteditable: "contentEditable",
        contextmenu: "contextMenu",
        controls: "controls",
        controlslist: "controlsList",
        coords: "coords",
        crossorigin: "crossOrigin",
        dangerouslysetinnerhtml: "dangerouslySetInnerHTML",
        data: "data",
        datetime: "dateTime",
        default: "default",
        defaultchecked: "defaultChecked",
        defaultvalue: "defaultValue",
        defer: "defer",
        dir: "dir",
        disabled: "disabled",
        disablepictureinpicture: "disablePictureInPicture",
        disableremoteplayback: "disableRemotePlayback",
        download: "download",
        draggable: "draggable",
        enctype: "encType",
        enterkeyhint: "enterKeyHint",
        fetchpriority: "fetchPriority",
        for: "htmlFor",
        form: "form",
        formmethod: "formMethod",
        formaction: "formAction",
        formenctype: "formEncType",
        formnovalidate: "formNoValidate",
        formtarget: "formTarget",
        frameborder: "frameBorder",
        headers: "headers",
        height: "height",
        hidden: "hidden",
        high: "high",
        href: "href",
        hreflang: "hrefLang",
        htmlfor: "htmlFor",
        httpequiv: "httpEquiv",
        "http-equiv": "httpEquiv",
        icon: "icon",
        id: "id",
        imagesizes: "imageSizes",
        imagesrcset: "imageSrcSet",
        inert: "inert",
        innerhtml: "innerHTML",
        inputmode: "inputMode",
        integrity: "integrity",
        is: "is",
        itemid: "itemID",
        itemprop: "itemProp",
        itemref: "itemRef",
        itemscope: "itemScope",
        itemtype: "itemType",
        keyparams: "keyParams",
        keytype: "keyType",
        kind: "kind",
        label: "label",
        lang: "lang",
        list: "list",
        loop: "loop",
        low: "low",
        manifest: "manifest",
        marginwidth: "marginWidth",
        marginheight: "marginHeight",
        max: "max",
        maxlength: "maxLength",
        media: "media",
        mediagroup: "mediaGroup",
        method: "method",
        min: "min",
        minlength: "minLength",
        multiple: "multiple",
        muted: "muted",
        name: "name",
        nomodule: "noModule",
        nonce: "nonce",
        novalidate: "noValidate",
        open: "open",
        optimum: "optimum",
        pattern: "pattern",
        placeholder: "placeholder",
        playsinline: "playsInline",
        poster: "poster",
        preload: "preload",
        profile: "profile",
        radiogroup: "radioGroup",
        readonly: "readOnly",
        referrerpolicy: "referrerPolicy",
        rel: "rel",
        required: "required",
        reversed: "reversed",
        role: "role",
        rows: "rows",
        rowspan: "rowSpan",
        sandbox: "sandbox",
        scope: "scope",
        scoped: "scoped",
        scrolling: "scrolling",
        seamless: "seamless",
        selected: "selected",
        shape: "shape",
        size: "size",
        sizes: "sizes",
        span: "span",
        spellcheck: "spellCheck",
        src: "src",
        srcdoc: "srcDoc",
        srclang: "srcLang",
        srcset: "srcSet",
        start: "start",
        step: "step",
        style: "style",
        summary: "summary",
        tabindex: "tabIndex",
        target: "target",
        title: "title",
        type: "type",
        usemap: "useMap",
        value: "value",
        width: "width",
        wmode: "wmode",
        wrap: "wrap",
        about: "about",
        accentheight: "accentHeight",
        "accent-height": "accentHeight",
        accumulate: "accumulate",
        additive: "additive",
        alignmentbaseline: "alignmentBaseline",
        "alignment-baseline": "alignmentBaseline",
        allowreorder: "allowReorder",
        alphabetic: "alphabetic",
        amplitude: "amplitude",
        arabicform: "arabicForm",
        "arabic-form": "arabicForm",
        ascent: "ascent",
        attributename: "attributeName",
        attributetype: "attributeType",
        autoreverse: "autoReverse",
        azimuth: "azimuth",
        basefrequency: "baseFrequency",
        baselineshift: "baselineShift",
        "baseline-shift": "baselineShift",
        baseprofile: "baseProfile",
        bbox: "bbox",
        begin: "begin",
        bias: "bias",
        by: "by",
        calcmode: "calcMode",
        capheight: "capHeight",
        "cap-height": "capHeight",
        clip: "clip",
        clippath: "clipPath",
        "clip-path": "clipPath",
        clippathunits: "clipPathUnits",
        cliprule: "clipRule",
        "clip-rule": "clipRule",
        color: "color",
        colorinterpolation: "colorInterpolation",
        "color-interpolation": "colorInterpolation",
        colorinterpolationfilters: "colorInterpolationFilters",
        "color-interpolation-filters": "colorInterpolationFilters",
        colorprofile: "colorProfile",
        "color-profile": "colorProfile",
        colorrendering: "colorRendering",
        "color-rendering": "colorRendering",
        contentscripttype: "contentScriptType",
        contentstyletype: "contentStyleType",
        cursor: "cursor",
        cx: "cx",
        cy: "cy",
        d: "d",
        datatype: "datatype",
        decelerate: "decelerate",
        descent: "descent",
        diffuseconstant: "diffuseConstant",
        direction: "direction",
        display: "display",
        divisor: "divisor",
        dominantbaseline: "dominantBaseline",
        "dominant-baseline": "dominantBaseline",
        dur: "dur",
        dx: "dx",
        dy: "dy",
        edgemode: "edgeMode",
        elevation: "elevation",
        enablebackground: "enableBackground",
        "enable-background": "enableBackground",
        end: "end",
        exponent: "exponent",
        externalresourcesrequired: "externalResourcesRequired",
        fill: "fill",
        fillopacity: "fillOpacity",
        "fill-opacity": "fillOpacity",
        fillrule: "fillRule",
        "fill-rule": "fillRule",
        filter: "filter",
        filterres: "filterRes",
        filterunits: "filterUnits",
        floodopacity: "floodOpacity",
        "flood-opacity": "floodOpacity",
        floodcolor: "floodColor",
        "flood-color": "floodColor",
        focusable: "focusable",
        fontfamily: "fontFamily",
        "font-family": "fontFamily",
        fontsize: "fontSize",
        "font-size": "fontSize",
        fontsizeadjust: "fontSizeAdjust",
        "font-size-adjust": "fontSizeAdjust",
        fontstretch: "fontStretch",
        "font-stretch": "fontStretch",
        fontstyle: "fontStyle",
        "font-style": "fontStyle",
        fontvariant: "fontVariant",
        "font-variant": "fontVariant",
        fontweight: "fontWeight",
        "font-weight": "fontWeight",
        format: "format",
        from: "from",
        fx: "fx",
        fy: "fy",
        g1: "g1",
        g2: "g2",
        glyphname: "glyphName",
        "glyph-name": "glyphName",
        glyphorientationhorizontal: "glyphOrientationHorizontal",
        "glyph-orientation-horizontal": "glyphOrientationHorizontal",
        glyphorientationvertical: "glyphOrientationVertical",
        "glyph-orientation-vertical": "glyphOrientationVertical",
        glyphref: "glyphRef",
        gradienttransform: "gradientTransform",
        gradientunits: "gradientUnits",
        hanging: "hanging",
        horizadvx: "horizAdvX",
        "horiz-adv-x": "horizAdvX",
        horizoriginx: "horizOriginX",
        "horiz-origin-x": "horizOriginX",
        ideographic: "ideographic",
        imagerendering: "imageRendering",
        "image-rendering": "imageRendering",
        in2: "in2",
        in: "in",
        inlist: "inlist",
        intercept: "intercept",
        k1: "k1",
        k2: "k2",
        k3: "k3",
        k4: "k4",
        k: "k",
        kernelmatrix: "kernelMatrix",
        kernelunitlength: "kernelUnitLength",
        kerning: "kerning",
        keypoints: "keyPoints",
        keysplines: "keySplines",
        keytimes: "keyTimes",
        lengthadjust: "lengthAdjust",
        letterspacing: "letterSpacing",
        "letter-spacing": "letterSpacing",
        lightingcolor: "lightingColor",
        "lighting-color": "lightingColor",
        limitingconeangle: "limitingConeAngle",
        local: "local",
        markerend: "markerEnd",
        "marker-end": "markerEnd",
        markerheight: "markerHeight",
        markermid: "markerMid",
        "marker-mid": "markerMid",
        markerstart: "markerStart",
        "marker-start": "markerStart",
        markerunits: "markerUnits",
        markerwidth: "markerWidth",
        mask: "mask",
        maskcontentunits: "maskContentUnits",
        maskunits: "maskUnits",
        mathematical: "mathematical",
        mode: "mode",
        numoctaves: "numOctaves",
        offset: "offset",
        opacity: "opacity",
        operator: "operator",
        order: "order",
        orient: "orient",
        orientation: "orientation",
        origin: "origin",
        overflow: "overflow",
        overlineposition: "overlinePosition",
        "overline-position": "overlinePosition",
        overlinethickness: "overlineThickness",
        "overline-thickness": "overlineThickness",
        paintorder: "paintOrder",
        "paint-order": "paintOrder",
        panose1: "panose1",
        "panose-1": "panose1",
        pathlength: "pathLength",
        patterncontentunits: "patternContentUnits",
        patterntransform: "patternTransform",
        patternunits: "patternUnits",
        pointerevents: "pointerEvents",
        "pointer-events": "pointerEvents",
        points: "points",
        pointsatx: "pointsAtX",
        pointsaty: "pointsAtY",
        pointsatz: "pointsAtZ",
        popover: "popover",
        popovertarget: "popoverTarget",
        popovertargetaction: "popoverTargetAction",
        prefix: "prefix",
        preservealpha: "preserveAlpha",
        preserveaspectratio: "preserveAspectRatio",
        primitiveunits: "primitiveUnits",
        property: "property",
        r: "r",
        radius: "radius",
        refx: "refX",
        refy: "refY",
        renderingintent: "renderingIntent",
        "rendering-intent": "renderingIntent",
        repeatcount: "repeatCount",
        repeatdur: "repeatDur",
        requiredextensions: "requiredExtensions",
        requiredfeatures: "requiredFeatures",
        resource: "resource",
        restart: "restart",
        result: "result",
        results: "results",
        rotate: "rotate",
        rx: "rx",
        ry: "ry",
        scale: "scale",
        security: "security",
        seed: "seed",
        shaperendering: "shapeRendering",
        "shape-rendering": "shapeRendering",
        slope: "slope",
        spacing: "spacing",
        specularconstant: "specularConstant",
        specularexponent: "specularExponent",
        speed: "speed",
        spreadmethod: "spreadMethod",
        startoffset: "startOffset",
        stddeviation: "stdDeviation",
        stemh: "stemh",
        stemv: "stemv",
        stitchtiles: "stitchTiles",
        stopcolor: "stopColor",
        "stop-color": "stopColor",
        stopopacity: "stopOpacity",
        "stop-opacity": "stopOpacity",
        strikethroughposition: "strikethroughPosition",
        "strikethrough-position": "strikethroughPosition",
        strikethroughthickness: "strikethroughThickness",
        "strikethrough-thickness": "strikethroughThickness",
        string: "string",
        stroke: "stroke",
        strokedasharray: "strokeDasharray",
        "stroke-dasharray": "strokeDasharray",
        strokedashoffset: "strokeDashoffset",
        "stroke-dashoffset": "strokeDashoffset",
        strokelinecap: "strokeLinecap",
        "stroke-linecap": "strokeLinecap",
        strokelinejoin: "strokeLinejoin",
        "stroke-linejoin": "strokeLinejoin",
        strokemiterlimit: "strokeMiterlimit",
        "stroke-miterlimit": "strokeMiterlimit",
        strokewidth: "strokeWidth",
        "stroke-width": "strokeWidth",
        strokeopacity: "strokeOpacity",
        "stroke-opacity": "strokeOpacity",
        suppresscontenteditablewarning: "suppressContentEditableWarning",
        suppresshydrationwarning: "suppressHydrationWarning",
        surfacescale: "surfaceScale",
        systemlanguage: "systemLanguage",
        tablevalues: "tableValues",
        targetx: "targetX",
        targety: "targetY",
        textanchor: "textAnchor",
        "text-anchor": "textAnchor",
        textdecoration: "textDecoration",
        "text-decoration": "textDecoration",
        textlength: "textLength",
        textrendering: "textRendering",
        "text-rendering": "textRendering",
        to: "to",
        transform: "transform",
        transformorigin: "transformOrigin",
        "transform-origin": "transformOrigin",
        typeof: "typeof",
        u1: "u1",
        u2: "u2",
        underlineposition: "underlinePosition",
        "underline-position": "underlinePosition",
        underlinethickness: "underlineThickness",
        "underline-thickness": "underlineThickness",
        unicode: "unicode",
        unicodebidi: "unicodeBidi",
        "unicode-bidi": "unicodeBidi",
        unicoderange: "unicodeRange",
        "unicode-range": "unicodeRange",
        unitsperem: "unitsPerEm",
        "units-per-em": "unitsPerEm",
        unselectable: "unselectable",
        valphabetic: "vAlphabetic",
        "v-alphabetic": "vAlphabetic",
        values: "values",
        vectoreffect: "vectorEffect",
        "vector-effect": "vectorEffect",
        version: "version",
        vertadvy: "vertAdvY",
        "vert-adv-y": "vertAdvY",
        vertoriginx: "vertOriginX",
        "vert-origin-x": "vertOriginX",
        vertoriginy: "vertOriginY",
        "vert-origin-y": "vertOriginY",
        vhanging: "vHanging",
        "v-hanging": "vHanging",
        videographic: "vIdeographic",
        "v-ideographic": "vIdeographic",
        viewbox: "viewBox",
        viewtarget: "viewTarget",
        visibility: "visibility",
        vmathematical: "vMathematical",
        "v-mathematical": "vMathematical",
        vocab: "vocab",
        widths: "widths",
        wordspacing: "wordSpacing",
        "word-spacing": "wordSpacing",
        writingmode: "writingMode",
        "writing-mode": "writingMode",
        x1: "x1",
        x2: "x2",
        x: "x",
        xchannelselector: "xChannelSelector",
        xheight: "xHeight",
        "x-height": "xHeight",
        xlinkactuate: "xlinkActuate",
        "xlink:actuate": "xlinkActuate",
        xlinkarcrole: "xlinkArcrole",
        "xlink:arcrole": "xlinkArcrole",
        xlinkhref: "xlinkHref",
        "xlink:href": "xlinkHref",
        xlinkrole: "xlinkRole",
        "xlink:role": "xlinkRole",
        xlinkshow: "xlinkShow",
        "xlink:show": "xlinkShow",
        xlinktitle: "xlinkTitle",
        "xlink:title": "xlinkTitle",
        xlinktype: "xlinkType",
        "xlink:type": "xlinkType",
        xmlbase: "xmlBase",
        "xml:base": "xmlBase",
        xmllang: "xmlLang",
        "xml:lang": "xmlLang",
        xmlns: "xmlns",
        "xml:space": "xmlSpace",
        xmlnsxlink: "xmlnsXlink",
        "xmlns:xlink": "xmlnsXlink",
        xmlspace: "xmlSpace",
        y1: "y1",
        y2: "y2",
        y: "y",
        ychannelselector: "yChannelSelector",
        z: "z",
        zoomandpan: "zoomAndPan"
      },
      ariaProperties = {
        "aria-current": 0,
        "aria-description": 0,
        "aria-details": 0,
        "aria-disabled": 0,
        "aria-hidden": 0,
        "aria-invalid": 0,
        "aria-keyshortcuts": 0,
        "aria-label": 0,
        "aria-roledescription": 0,
        "aria-autocomplete": 0,
        "aria-checked": 0,
        "aria-expanded": 0,
        "aria-haspopup": 0,
        "aria-level": 0,
        "aria-modal": 0,
        "aria-multiline": 0,
        "aria-multiselectable": 0,
        "aria-orientation": 0,
        "aria-placeholder": 0,
        "aria-pressed": 0,
        "aria-readonly": 0,
        "aria-required": 0,
        "aria-selected": 0,
        "aria-sort": 0,
        "aria-valuemax": 0,
        "aria-valuemin": 0,
        "aria-valuenow": 0,
        "aria-valuetext": 0,
        "aria-atomic": 0,
        "aria-busy": 0,
        "aria-live": 0,
        "aria-relevant": 0,
        "aria-dropeffect": 0,
        "aria-grabbed": 0,
        "aria-activedescendant": 0,
        "aria-colcount": 0,
        "aria-colindex": 0,
        "aria-colspan": 0,
        "aria-controls": 0,
        "aria-describedby": 0,
        "aria-errormessage": 0,
        "aria-flowto": 0,
        "aria-labelledby": 0,
        "aria-owns": 0,
        "aria-posinset": 0,
        "aria-rowcount": 0,
        "aria-rowindex": 0,
        "aria-rowspan": 0,
        "aria-setsize": 0,
        "aria-braillelabel": 0,
        "aria-brailleroledescription": 0,
        "aria-colindextext": 0,
        "aria-rowindextext": 0
      },
      warnedProperties$1 = {},
      rARIA$1 = RegExp(
        "^(aria)-[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$"
      ),
      rARIACamel$1 = RegExp(
        "^(aria)[A-Z][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$"
      ),
      didWarnValueNull = !1,
      warnedProperties = {},
      EVENT_NAME_REGEX = /^on./,
      INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/,
      rARIA = RegExp(
        "^(aria)-[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$"
      ),
      rARIACamel = RegExp(
        "^(aria)[A-Z][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$"
      ),
      isJavaScriptProtocol =
        /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*:/i,
      currentReplayingEvent = null,
      restoreTarget = null,
      restoreQueue = null,
      isInsideEventHandler = !1,
      canUseDOM = !(
        "undefined" === typeof window ||
        "undefined" === typeof window.document ||
        "undefined" === typeof window.document.createElement
      ),
      passiveBrowserEventsSupported = !1;
    if (canUseDOM)
      try {
        var options$jscomp$0 = {};
        Object.defineProperty(options$jscomp$0, "passive", {
          get: function () {
            passiveBrowserEventsSupported = !0;
          }
        });
        window.addEventListener("test", options$jscomp$0, options$jscomp$0);
        window.removeEventListener("test", options$jscomp$0, options$jscomp$0);
      } catch (e) {
        passiveBrowserEventsSupported = !1;
      }
    var root = null,
      startText = null,
      fallbackText = null,
      EventInterface = {
        eventPhase: 0,
        bubbles: 0,
        cancelable: 0,
        timeStamp: function (event) {
          return event.timeStamp || Date.now();
        },
        defaultPrevented: 0,
        isTrusted: 0
      },
      SyntheticEvent = createSyntheticEvent(EventInterface),
      UIEventInterface = assign({}, EventInterface, { view: 0, detail: 0 }),
      SyntheticUIEvent = createSyntheticEvent(UIEventInterface),
      lastMovementX,
      lastMovementY,
      lastMouseEvent,
      MouseEventInterface = assign({}, UIEventInterface, {
        screenX: 0,
        screenY: 0,
        clientX: 0,
        clientY: 0,
        pageX: 0,
        pageY: 0,
        ctrlKey: 0,
        shiftKey: 0,
        altKey: 0,
        metaKey: 0,
        getModifierState: getEventModifierState,
        button: 0,
        buttons: 0,
        relatedTarget: function (event) {
          return void 0 === event.relatedTarget
            ? event.fromElement === event.srcElement
              ? event.toElement
              : event.fromElement
            : event.relatedTarget;
        },
        movementX: function (event) {
          if ("movementX" in event) return event.movementX;
          event !== lastMouseEvent &&
            (lastMouseEvent && "mousemove" === event.type
              ? ((lastMovementX = event.screenX - lastMouseEvent.screenX),
                (lastMovementY = event.screenY - lastMouseEvent.screenY))
              : (lastMovementY = lastMovementX = 0),
            (lastMouseEvent = event));
          return lastMovementX;
        },
        movementY: function (event) {
          return "movementY" in event ? event.movementY : lastMovementY;
        }
      }),
      SyntheticMouseEvent = createSyntheticEvent(MouseEventInterface),
      DragEventInterface = assign({}, MouseEventInterface, { dataTransfer: 0 }),
      SyntheticDragEvent = createSyntheticEvent(DragEventInterface),
      FocusEventInterface = assign({}, UIEventInterface, { relatedTarget: 0 }),
      SyntheticFocusEvent = createSyntheticEvent(FocusEventInterface),
      AnimationEventInterface = assign({}, EventInterface, {
        animationName: 0,
        elapsedTime: 0,
        pseudoElement: 0
      }),
      SyntheticAnimationEvent = createSyntheticEvent(AnimationEventInterface),
      ClipboardEventInterface = assign({}, EventInterface, {
        clipboardData: function (event) {
          return "clipboardData" in event
            ? event.clipboardData
            : window.clipboardData;
        }
      }),
      SyntheticClipboardEvent = createSyntheticEvent(ClipboardEventInterface),
      CompositionEventInterface = assign({}, EventInterface, { data: 0 }),
      SyntheticCompositionEvent = createSyntheticEvent(
        CompositionEventInterface
      ),
      SyntheticInputEvent = SyntheticCompositionEvent,
      normalizeKey = {
        Esc: "Escape",
        Spacebar: " ",
        Left: "ArrowLeft",
        Up: "ArrowUp",
        Right: "ArrowRight",
        Down: "ArrowDown",
        Del: "Delete",
        Win: "OS",
        Menu: "ContextMenu",
        Apps: "ContextMenu",
        Scroll: "ScrollLock",
        MozPrintableKey: "Unidentified"
      },
      translateToKey = {
        8: "Backspace",
        9: "Tab",
        12: "Clear",
        13: "Enter",
        16: "Shift",
        17: "Control",
        18: "Alt",
        19: "Pause",
        20: "CapsLock",
        27: "Escape",
        32: " ",
        33: "PageUp",
        34: "PageDown",
        35: "End",
        36: "Home",
        37: "ArrowLeft",
        38: "ArrowUp",
        39: "ArrowRight",
        40: "ArrowDown",
        45: "Insert",
        46: "Delete",
        112: "F1",
        113: "F2",
        114: "F3",
        115: "F4",
        116: "F5",
        117: "F6",
        118: "F7",
        119: "F8",
        120: "F9",
        121: "F10",
        122: "F11",
        123: "F12",
        144: "NumLock",
        145: "ScrollLock",
        224: "Meta"
      },
      modifierKeyToProp = {
        Alt: "altKey",
        Control: "ctrlKey",
        Meta: "metaKey",
        Shift: "shiftKey"
      },
      KeyboardEventInterface = assign({}, UIEventInterface, {
        key: function (nativeEvent) {
          if (nativeEvent.key) {
            var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
            if ("Unidentified" !== key) return key;
          }
          return "keypress" === nativeEvent.type
            ? ((nativeEvent = getEventCharCode(nativeEvent)),
              13 === nativeEvent ? "Enter" : String.fromCharCode(nativeEvent))
            : "keydown" === nativeEvent.type || "keyup" === nativeEvent.type
              ? translateToKey[nativeEvent.keyCode] || "Unidentified"
              : "";
        },
        code: 0,
        location: 0,
        ctrlKey: 0,
        shiftKey: 0,
        altKey: 0,
        metaKey: 0,
        repeat: 0,
        locale: 0,
        getModifierState: getEventModifierState,
        charCode: function (event) {
          return "keypress" === event.type ? getEventCharCode(event) : 0;
        },
        keyCode: function (event) {
          return "keydown" === event.type || "keyup" === event.type
            ? event.keyCode
            : 0;
        },
        which: function (event) {
          return "keypress" === event.type
            ? getEventCharCode(event)
            : "keydown" === event.type || "keyup" === event.type
              ? event.keyCode
              : 0;
        }
      }),
      SyntheticKeyboardEvent = createSyntheticEvent(KeyboardEventInterface),
      PointerEventInterface = assign({}, MouseEventInterface, {
        pointerId: 0,
        width: 0,
        height: 0,
        pressure: 0,
        tangentialPressure: 0,
        tiltX: 0,
        tiltY: 0,
        twist: 0,
        pointerType: 0,
        isPrimary: 0
      }),
      SyntheticPointerEvent = createSyntheticEvent(PointerEventInterface),
      TouchEventInterface = assign({}, UIEventInterface, {
        touches: 0,
        targetTouches: 0,
        changedTouches: 0,
        altKey: 0,
        metaKey: 0,
        ctrlKey: 0,
        shiftKey: 0,
        getModifierState: getEventModifierState
      }),
      SyntheticTouchEvent = createSyntheticEvent(TouchEventInterface),
      TransitionEventInterface = assign({}, EventInterface, {
        propertyName: 0,
        elapsedTime: 0,
        pseudoElement: 0
      }),
      SyntheticTransitionEvent = createSyntheticEvent(TransitionEventInterface),
      WheelEventInterface = assign({}, MouseEventInterface, {
        deltaX: function (event) {
          return "deltaX" in event
            ? event.deltaX
            : "wheelDeltaX" in event
              ? -event.wheelDeltaX
              : 0;
        },
        deltaY: function (event) {
          return "deltaY" in event
            ? event.deltaY
            : "wheelDeltaY" in event
              ? -event.wheelDeltaY
              : "wheelDelta" in event
                ? -event.wheelDelta
                : 0;
        },
        deltaZ: 0,
        deltaMode: 0
      }),
      SyntheticWheelEvent = createSyntheticEvent(WheelEventInterface),
      ToggleEventInterface = assign({}, EventInterface, {
        newState: 0,
        oldState: 0
      }),
      SyntheticToggleEvent = createSyntheticEvent(ToggleEventInterface),
      END_KEYCODES = [9, 13, 27, 32],
      START_KEYCODE = 229,
      canUseCompositionEvent = canUseDOM && "CompositionEvent" in window,
      documentMode = null;
    canUseDOM &&
      "documentMode" in document &&
      (documentMode = document.documentMode);
    var canUseTextInputEvent =
        canUseDOM && "TextEvent" in window && !documentMode,
      useFallbackCompositionData =
        canUseDOM &&
        (!canUseCompositionEvent ||
          (documentMode && 8 < documentMode && 11 >= documentMode)),
      SPACEBAR_CODE = 32,
      SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE),
      hasSpaceKeypress = !1,
      isComposing = !1,
      supportedInputTypes = {
        color: !0,
        date: !0,
        datetime: !0,
        "datetime-local": !0,
        email: !0,
        month: !0,
        number: !0,
        password: !0,
        range: !0,
        search: !0,
        tel: !0,
        text: !0,
        time: !0,
        url: !0,
        week: !0
      },
      activeElement$1 = null,
      activeElementInst$1 = null,
      isInputEventSupported = !1;
    canUseDOM &&
      (isInputEventSupported =
        isEventSupported("input") &&
        (!document.documentMode || 9 < document.documentMode));
    var objectIs = "function" === typeof Object.is ? Object.is : is,
      skipSelectionChangeEvent =
        canUseDOM && "documentMode" in document && 11 >= document.documentMode,
      activeElement = null,
      activeElementInst = null,
      lastSelection = null,
      mouseDown = !1,
      vendorPrefixes = {
        animationend: makePrefixMap("Animation", "AnimationEnd"),
        animationiteration: makePrefixMap("Animation", "AnimationIteration"),
        animationstart: makePrefixMap("Animation", "AnimationStart"),
        transitionrun: makePrefixMap("Transition", "TransitionRun"),
        transitionstart: makePrefixMap("Transition", "TransitionStart"),
        transitioncancel: makePrefixMap("Transition", "TransitionCancel"),
        transitionend: makePrefixMap("Transition", "TransitionEnd")
      },
      prefixedEventNames = {},
      style = {};
    canUseDOM &&
      ((style = document.createElement("div").style),
      "AnimationEvent" in window ||
        (delete vendorPrefixes.animationend.animation,
        delete vendorPrefixes.animationiteration.animation,
        delete vendorPrefixes.animationstart.animation),
      "TransitionEvent" in window ||
        delete vendorPrefixes.transitionend.transition);
    var ANIMATION_END = getVendorPrefixedEventName("animationend"),
      ANIMATION_ITERATION = getVendorPrefixedEventName("animationiteration"),
      ANIMATION_START = getVendorPrefixedEventName("animationstart"),
      TRANSITION_RUN = getVendorPrefixedEventName("transitionrun"),
      TRANSITION_START = getVendorPrefixedEventName("transitionstart"),
      TRANSITION_CANCEL = getVendorPrefixedEventName("transitioncancel"),
      TRANSITION_END = getVendorPrefixedEventName("transitionend"),
      topLevelEventsToReactNames = new Map(),
      simpleEventPluginEvents =
        "abort auxClick beforeToggle cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(
          " "
        );
    simpleEventPluginEvents.push("scrollEnd");
    var lastResetTime = 0;
    if (
      "object" === typeof performance &&
      "function" === typeof performance.now
    ) {
      var localPerformance = performance;
      var getCurrentTime = function () {
        return localPerformance.now();
      };
    } else {
      var localDate = Date;
      getCurrentTime = function () {
        return localDate.now();
      };
    }
    var reportGlobalError =
        "function" === typeof reportError
          ? reportError
          : function (error) {
              if (
                "object" === typeof window &&
                "function" === typeof window.ErrorEvent
              ) {
                var event = new window.ErrorEvent("error", {
                  bubbles: !0,
                  cancelable: !0,
                  message:
                    "object" === typeof error &&
                    null !== error &&
                    "string" === typeof error.message
                      ? String(error.message)
                      : String(error),
                  error: error
                });
                if (!window.dispatchEvent(event)) return;
              } else if (
                "object" === typeof process &&
                "function" === typeof process.emit
              ) {
                process.emit("uncaughtException", error);
                return;
              }
              console.error(error);
            },
      OMITTED_PROP_ERROR =
        "This object has been omitted by React in the console log to avoid sending too much data from the server. Try logging smaller or more specific objects.",
      EMPTY_ARRAY = 0,
      COMPLEX_ARRAY = 1,
      PRIMITIVE_ARRAY = 2,
      ENTRIES_ARRAY = 3,
      REMOVED = "\u2013\u00a0",
      ADDED = "+\u00a0",
      UNCHANGED = "\u2007\u00a0",
      supportsUserTiming =
        "undefined" !== typeof console &&
        "function" === typeof console.timeStamp &&
        "undefined" !== typeof performance &&
        "function" === typeof performance.measure,
      COMPONENTS_TRACK = "Components \u269b",
      LANES_TRACK_GROUP = "Scheduler \u269b",
      currentTrack = "Blocking",
      alreadyWarnedForDeepEquality = !1,
      reusableComponentDevToolDetails = {
        color: "primary",
        properties: null,
        tooltipText: "",
        track: COMPONENTS_TRACK
      },
      reusableComponentOptions = {
        start: -0,
        end: -0,
        detail: { devtools: reusableComponentDevToolDetails }
      },
      resuableChangedPropsEntry = ["Changed Props", ""],
      DEEP_EQUALITY_WARNING =
        "This component received deeply equal props. It might benefit from useMemo or the React Compiler in its owner.",
      reusableDeeplyEqualPropsEntry = ["Changed Props", DEEP_EQUALITY_WARNING],
      OffscreenVisible = 1,
      OffscreenPassiveEffectsConnected = 2,
      concurrentQueues = [],
      concurrentQueuesIndex = 0,
      concurrentlyUpdatedLanes = 0,
      emptyContextObject = {};
    Object.freeze(emptyContextObject);
    var resolveFamily = null,
      failedBoundaries = null,
      NoMode = 0,
      ConcurrentMode = 1,
      ProfileMode = 2,
      StrictLegacyMode = 8,
      StrictEffectsMode = 16,
      SuspenseyImagesMode = 32;
    var hasBadMapPolyfill = !1;
    try {
      var nonExtensibleObject = Object.preventExtensions({});
      new Map([[nonExtensibleObject, null]]);
      new Set([nonExtensibleObject]);
    } catch (e$3) {
      hasBadMapPolyfill = !0;
    }
    var CapturedStacks = new WeakMap(),
      forkStack = [],
      forkStackIndex = 0,
      treeForkProvider = null,
      treeForkCount = 0,
      idStack = [],
      idStackIndex = 0,
      treeContextProvider = null,
      treeContextId = 1,
      treeContextOverflow = "",
      hydrationParentFiber = null,
      nextHydratableInstance = null,
      isHydrating = !1,
      didSuspendOrErrorDEV = !1,
      hydrationDiffRootDEV = null,
      hydrationErrors = null,
      rootOrSingletonContext = !1,
      HydrationMismatchException = Error(
        "Hydration Mismatch Exception: This is not a real error, and should not leak into userspace. If you're seeing this, it's likely a bug in React."
      ),
      valueCursor = createCursor(null);
    var rendererCursorDEV = createCursor(null);
    var rendererSigil = {};
    var currentlyRenderingFiber$1 = null,
      lastContextDependency = null,
      isDisallowedContextReadInDEV = !1,
      AbortControllerLocal =
        "undefined" !== typeof AbortController
          ? AbortController
          : function () {
              var listeners = [],
                signal = (this.signal = {
                  aborted: !1,
                  addEventListener: function (type, listener) {
                    listeners.push(listener);
                  }
                });
              this.abort = function () {
                signal.aborted = !0;
                listeners.forEach(function (listener) {
                  return listener();
                });
              };
            },
      scheduleCallback$2 = Scheduler.unstable_scheduleCallback,
      NormalPriority = Scheduler.unstable_NormalPriority,
      CacheContext = {
        $$typeof: REACT_CONTEXT_TYPE,
        Consumer: null,
        Provider: null,
        _currentValue: null,
        _currentValue2: null,
        _threadCount: 0,
        _currentRenderer: null,
        _currentRenderer2: null
      },
      now = Scheduler.unstable_now,
      createTask = console.createTask
        ? console.createTask
        : function () {
            return null;
          },
      SPAWNED_UPDATE = 1,
      PINGED_UPDATE = 2,
      renderStartTime = -0,
      commitStartTime = -0,
      commitEndTime = -0,
      commitErrors = null,
      profilerStartTime = -1.1,
      profilerEffectDuration = -0,
      componentEffectDuration = -0,
      componentEffectStartTime = -1.1,
      componentEffectEndTime = -1.1,
      componentEffectErrors = null,
      componentEffectSpawnedUpdate = !1,
      blockingClampTime = -0,
      blockingUpdateTime = -1.1,
      blockingUpdateTask = null,
      blockingUpdateType = 0,
      blockingUpdateMethodName = null,
      blockingUpdateComponentName = null,
      blockingEventTime = -1.1,
      blockingEventType = null,
      blockingEventRepeatTime = -1.1,
      blockingSuspendedTime = -1.1,
      transitionClampTime = -0,
      transitionStartTime = -1.1,
      transitionUpdateTime = -1.1,
      transitionUpdateType = 0,
      transitionUpdateTask = null,
      transitionUpdateMethodName = null,
      transitionUpdateComponentName = null,
      transitionEventTime = -1.1,
      transitionEventType = null,
      transitionEventRepeatTime = -1.1,
      transitionSuspendedTime = -1.1,
      retryClampTime = -0,
      idleClampTime = -0,
      animatingLanes = 0,
      animatingTask = null,
      yieldReason = 0,
      yieldStartTime = -1.1,
      currentUpdateIsNested = !1,
      nestedUpdateScheduled = !1,
      currentEntangledListeners = null,
      currentEntangledPendingCount = 0,
      currentEntangledLane = 0,
      currentEntangledActionThenable = null,
      prevOnStartTransitionFinish = ReactSharedInternals.S;
    ReactSharedInternals.S = function (transition, returnValue) {
      globalMostRecentTransitionTime = now$1();
      if (
        "object" === typeof returnValue &&
        null !== returnValue &&
        "function" === typeof returnValue.then
      ) {
        if (0 > transitionStartTime && 0 > transitionUpdateTime) {
          transitionStartTime = now();
          var newEventTime = resolveEventTimeStamp(),
            newEventType = resolveEventType();
          if (
            newEventTime !== transitionEventRepeatTime ||
            newEventType !== transitionEventType
          )
            transitionEventRepeatTime = -1.1;
          transitionEventTime = newEventTime;
          transitionEventType = newEventType;
        }
        entangleAsyncAction(transition, returnValue);
      }
      null !== prevOnStartTransitionFinish &&
        prevOnStartTransitionFinish(transition, returnValue);
    };
    var resumedCache = createCursor(null),
      ReactStrictModeWarnings = {
        recordUnsafeLifecycleWarnings: function () {},
        flushPendingUnsafeLifecycleWarnings: function () {},
        recordLegacyContextWarning: function () {},
        flushLegacyContextWarning: function () {},
        discardPendingWarnings: function () {}
      },
      pendingComponentWillMountWarnings = [],
      pendingUNSAFE_ComponentWillMountWarnings = [],
      pendingComponentWillReceivePropsWarnings = [],
      pendingUNSAFE_ComponentWillReceivePropsWarnings = [],
      pendingComponentWillUpdateWarnings = [],
      pendingUNSAFE_ComponentWillUpdateWarnings = [],
      didWarnAboutUnsafeLifecycles = new Set();
    ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function (
      fiber,
      instance
    ) {
      didWarnAboutUnsafeLifecycles.has(fiber.type) ||
        ("function" === typeof instance.componentWillMount &&
          !0 !== instance.componentWillMount.__suppressDeprecationWarning &&
          pendingComponentWillMountWarnings.push(fiber),
        fiber.mode & StrictLegacyMode &&
          "function" === typeof instance.UNSAFE_componentWillMount &&
          pendingUNSAFE_ComponentWillMountWarnings.push(fiber),
        "function" === typeof instance.componentWillReceiveProps &&
          !0 !==
            instance.componentWillReceiveProps.__suppressDeprecationWarning &&
          pendingComponentWillReceivePropsWarnings.push(fiber),
        fiber.mode & StrictLegacyMode &&
          "function" === typeof instance.UNSAFE_componentWillReceiveProps &&
          pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber),
        "function" === typeof instance.componentWillUpdate &&
          !0 !== instance.componentWillUpdate.__suppressDeprecationWarning &&
          pendingComponentWillUpdateWarnings.push(fiber),
        fiber.mode & StrictLegacyMode &&
          "function" === typeof instance.UNSAFE_componentWillUpdate &&
          pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber));
    };
    ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function () {
      var componentWillMountUniqueNames = new Set();
      0 < pendingComponentWillMountWarnings.length &&
        (pendingComponentWillMountWarnings.forEach(function (fiber) {
          componentWillMountUniqueNames.add(
            getComponentNameFromFiber(fiber) || "Component"
          );
          didWarnAboutUnsafeLifecycles.add(fiber.type);
        }),
        (pendingComponentWillMountWarnings = []));
      var UNSAFE_componentWillMountUniqueNames = new Set();
      0 < pendingUNSAFE_ComponentWillMountWarnings.length &&
        (pendingUNSAFE_ComponentWillMountWarnings.forEach(function (fiber) {
          UNSAFE_componentWillMountUniqueNames.add(
            getComponentNameFromFiber(fiber) || "Component"
          );
          didWarnAboutUnsafeLifecycles.add(fiber.type);
        }),
        (pendingUNSAFE_ComponentWillMountWarnings = []));
      var componentWillReceivePropsUniqueNames = new Set();
      0 < pendingComponentWillReceivePropsWarnings.length &&
        (pendingComponentWillReceivePropsWarnings.forEach(function (fiber) {
          componentWillReceivePropsUniqueNames.add(
            getComponentNameFromFiber(fiber) || "Component"
          );
          didWarnAboutUnsafeLifecycles.add(fiber.type);
        }),
        (pendingComponentWillReceivePropsWarnings = []));
      var UNSAFE_componentWillReceivePropsUniqueNames = new Set();
      0 < pendingUNSAFE_ComponentWillReceivePropsWarnings.length &&
        (pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(
          function (fiber) {
            UNSAFE_componentWillReceivePropsUniqueNames.add(
              getComponentNameFromFiber(fiber) || "Component"
            );
            didWarnAboutUnsafeLifecycles.add(fiber.type);
          }
        ),
        (pendingUNSAFE_ComponentWillReceivePropsWarnings = []));
      var componentWillUpdateUniqueNames = new Set();
      0 < pendingComponentWillUpdateWarnings.length &&
        (pendingComponentWillUpdateWarnings.forEach(function (fiber) {
          componentWillUpdateUniqueNames.add(
            getComponentNameFromFiber(fiber) || "Component"
          );
          didWarnAboutUnsafeLifecycles.add(fiber.type);
        }),
        (pendingComponentWillUpdateWarnings = []));
      var UNSAFE_componentWillUpdateUniqueNames = new Set();
      0 < pendingUNSAFE_ComponentWillUpdateWarnings.length &&
        (pendingUNSAFE_ComponentWillUpdateWarnings.forEach(function (fiber) {
          UNSAFE_componentWillUpdateUniqueNames.add(
            getComponentNameFromFiber(fiber) || "Component"
          );
          didWarnAboutUnsafeLifecycles.add(fiber.type);
        }),
        (pendingUNSAFE_ComponentWillUpdateWarnings = []));
      if (0 < UNSAFE_componentWillMountUniqueNames.size) {
        var sortedNames = setToSortedString(
          UNSAFE_componentWillMountUniqueNames
        );
        console.error(
          "Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. See https://react.dev/link/unsafe-component-lifecycles for details.\n\n* Move code with side effects to componentDidMount, and set initial state in the constructor.\n\nPlease update the following components: %s",
          sortedNames
        );
      }
      0 < UNSAFE_componentWillReceivePropsUniqueNames.size &&
        ((sortedNames = setToSortedString(
          UNSAFE_componentWillReceivePropsUniqueNames
        )),
        console.error(
          "Using UNSAFE_componentWillReceiveProps in strict mode is not recommended and may indicate bugs in your code. See https://react.dev/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://react.dev/link/derived-state\n\nPlease update the following components: %s",
          sortedNames
        ));
      0 < UNSAFE_componentWillUpdateUniqueNames.size &&
        ((sortedNames = setToSortedString(
          UNSAFE_componentWillUpdateUniqueNames
        )),
        console.error(
          "Using UNSAFE_componentWillUpdate in strict mode is not recommended and may indicate bugs in your code. See https://react.dev/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n\nPlease update the following components: %s",
          sortedNames
        ));
      0 < componentWillMountUniqueNames.size &&
        ((sortedNames = setToSortedString(componentWillMountUniqueNames)),
        console.warn(
          "componentWillMount has been renamed, and is not recommended for use. See https://react.dev/link/unsafe-component-lifecycles for details.\n\n* Move code with side effects to componentDidMount, and set initial state in the constructor.\n* Rename componentWillMount to UNSAFE_componentWillMount to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s",
          sortedNames
        ));
      0 < componentWillReceivePropsUniqueNames.size &&
        ((sortedNames = setToSortedString(
          componentWillReceivePropsUniqueNames
        )),
        console.warn(
          "componentWillReceiveProps has been renamed, and is not recommended for use. See https://react.dev/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://react.dev/link/derived-state\n* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s",
          sortedNames
        ));
      0 < componentWillUpdateUniqueNames.size &&
        ((sortedNames = setToSortedString(componentWillUpdateUniqueNames)),
        console.warn(
          "componentWillUpdate has been renamed, and is not recommended for use. See https://react.dev/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s",
          sortedNames
        ));
    };
    var pendingLegacyContextWarning = new Map(),
      didWarnAboutLegacyContext = new Set();
    ReactStrictModeWarnings.recordLegacyContextWarning = function (
      fiber,
      instance
    ) {
      var strictRoot = null;
      for (var node = fiber; null !== node; )
        node.mode & StrictLegacyMode && (strictRoot = node),
          (node = node.return);
      null === strictRoot
        ? console.error(
            "Expected to find a StrictMode component in a strict mode tree. This error is likely caused by a bug in React. Please file an issue."
          )
        : !didWarnAboutLegacyContext.has(fiber.type) &&
          ((node = pendingLegacyContextWarning.get(strictRoot)),
          null != fiber.type.contextTypes ||
            null != fiber.type.childContextTypes ||
            (null !== instance &&
              "function" === typeof instance.getChildContext)) &&
          (void 0 === node &&
            ((node = []), pendingLegacyContextWarning.set(strictRoot, node)),
          node.push(fiber));
    };
    ReactStrictModeWarnings.flushLegacyContextWarning = function () {
      pendingLegacyContextWarning.forEach(function (fiberArray) {
        if (0 !== fiberArray.length) {
          var firstFiber = fiberArray[0],
            uniqueNames = new Set();
          fiberArray.forEach(function (fiber) {
            uniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
            didWarnAboutLegacyContext.add(fiber.type);
          });
          var sortedNames = setToSortedString(uniqueNames);
          runWithFiberInDEV(firstFiber, function () {
            console.error(
              "Legacy context API has been detected within a strict-mode tree.\n\nThe old API will be supported in all 16.x releases, but applications using it should migrate to the new version.\n\nPlease update the following components: %s\n\nLearn more about this warning here: https://react.dev/link/legacy-context",
              sortedNames
            );
          });
        }
      });
    };
    ReactStrictModeWarnings.discardPendingWarnings = function () {
      pendingComponentWillMountWarnings = [];
      pendingUNSAFE_ComponentWillMountWarnings = [];
      pendingComponentWillReceivePropsWarnings = [];
      pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
      pendingComponentWillUpdateWarnings = [];
      pendingUNSAFE_ComponentWillUpdateWarnings = [];
      pendingLegacyContextWarning = new Map();
    };
    var callComponent = {
        react_stack_bottom_frame: function (Component, props, secondArg) {
          var wasRendering = isRendering;
          isRendering = !0;
          try {
            return Component(props, secondArg);
          } finally {
            isRendering = wasRendering;
          }
        }
      },
      callComponentInDEV =
        callComponent.react_stack_bottom_frame.bind(callComponent),
      callRender = {
        react_stack_bottom_frame: function (instance) {
          var wasRendering = isRendering;
          isRendering = !0;
          try {
            return instance.render();
          } finally {
            isRendering = wasRendering;
          }
        }
      },
      callRenderInDEV = callRender.react_stack_bottom_frame.bind(callRender),
      callComponentDidMount = {
        react_stack_bottom_frame: function (finishedWork, instance) {
          try {
            instance.componentDidMount();
          } catch (error) {
            captureCommitPhaseError(finishedWork, finishedWork.return, error);
          }
        }
      },
      callComponentDidMountInDEV =
        callComponentDidMount.react_stack_bottom_frame.bind(
          callComponentDidMount
        ),
      callComponentDidUpdate = {
        react_stack_bottom_frame: function (
          finishedWork,
          instance,
          prevProps,
          prevState,
          snapshot
        ) {
          try {
            instance.componentDidUpdate(prevProps, prevState, snapshot);
          } catch (error) {
            captureCommitPhaseError(finishedWork, finishedWork.return, error);
          }
        }
      },
      callComponentDidUpdateInDEV =
        callComponentDidUpdate.react_stack_bottom_frame.bind(
          callComponentDidUpdate
        ),
      callComponentDidCatch = {
        react_stack_bottom_frame: function (instance, errorInfo) {
          var stack = errorInfo.stack;
          instance.componentDidCatch(errorInfo.value, {
            componentStack: null !== stack ? stack : ""
          });
        }
      },
      callComponentDidCatchInDEV =
        callComponentDidCatch.react_stack_bottom_frame.bind(
          callComponentDidCatch
        ),
      callComponentWillUnmount = {
        react_stack_bottom_frame: function (
          current,
          nearestMountedAncestor,
          instance
        ) {
          try {
            instance.componentWillUnmount();
          } catch (error) {
            captureCommitPhaseError(current, nearestMountedAncestor, error);
          }
        }
      },
      callComponentWillUnmountInDEV =
        callComponentWillUnmount.react_stack_bottom_frame.bind(
          callComponentWillUnmount
        ),
      callCreate = {
        react_stack_bottom_frame: function (effect) {
          var create = effect.create;
          effect = effect.inst;
          create = create();
          return (effect.destroy = create);
        }
      },
      callCreateInDEV = callCreate.react_stack_bottom_frame.bind(callCreate),
      callDestroy = {
        react_stack_bottom_frame: function (
          current,
          nearestMountedAncestor,
          destroy
        ) {
          try {
            destroy();
          } catch (error) {
            captureCommitPhaseError(current, nearestMountedAncestor, error);
          }
        }
      },
      callDestroyInDEV = callDestroy.react_stack_bottom_frame.bind(callDestroy),
      callLazyInit = {
        react_stack_bottom_frame: function (lazy) {
          var init = lazy._init;
          return init(lazy._payload);
        }
      },
      callLazyInitInDEV =
        callLazyInit.react_stack_bottom_frame.bind(callLazyInit),
      SuspenseException = Error(
        "Suspense Exception: This is not a real error! It's an implementation detail of `use` to interrupt the current render. You must either rethrow it immediately, or move the `use` call outside of the `try/catch` block. Capturing without rethrowing will lead to unexpected behavior.\n\nTo handle async errors, wrap your component in an error boundary, or call the promise's `.catch` method and pass the result to `use`."
      ),
      SuspenseyCommitException = Error(
        "Suspense Exception: This is not a real error, and should not leak into userspace. If you're seeing this, it's likely a bug in React."
      ),
      SuspenseActionException = Error(
        "Suspense Exception: This is not a real error! It's an implementation detail of `useActionState` to interrupt the current render. You must either rethrow it immediately, or move the `useActionState` call outside of the `try/catch` block. Capturing without rethrowing will lead to unexpected behavior.\n\nTo handle async errors, wrap your component in an error boundary."
      ),
      noopSuspenseyCommitThenable = {
        then: function () {
          console.error(
            'Internal React error: A listener was unexpectedly attached to a "noop" thenable. This is a bug in React. Please file an issue.'
          );
        }
      },
      suspendedThenable = null,
      needsToResetSuspendedThenableDEV = !1,
      thenableState$1 = null,
      thenableIndexCounter$1 = 0,
      currentDebugInfo = null,
      didWarnAboutMaps;
    var didWarnAboutGenerators = (didWarnAboutMaps = !1);
    var ownerHasKeyUseWarning = {};
    var ownerHasFunctionTypeWarning = {};
    var ownerHasSymbolTypeWarning = {};
    warnForMissingKey = function (returnFiber, workInProgress, child) {
      if (
        null !== child &&
        "object" === typeof child &&
        child._store &&
        ((!child._store.validated && null == child.key) ||
          2 === child._store.validated)
      ) {
        if ("object" !== typeof child._store)
          throw Error(
            "React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue."
          );
        child._store.validated = 1;
        var componentName = getComponentNameFromFiber(returnFiber),
          componentKey = componentName || "null";
        if (!ownerHasKeyUseWarning[componentKey]) {
          ownerHasKeyUseWarning[componentKey] = !0;
          child = child._owner;
          returnFiber = returnFiber._debugOwner;
          var currentComponentErrorInfo = "";
          returnFiber &&
            "number" === typeof returnFiber.tag &&
            (componentKey = getComponentNameFromFiber(returnFiber)) &&
            (currentComponentErrorInfo =
              "\n\nCheck the render method of `" + componentKey + "`.");
          currentComponentErrorInfo ||
            (componentName &&
              (currentComponentErrorInfo =
                "\n\nCheck the top-level render call using <" +
                componentName +
                ">."));
          var childOwnerAppendix = "";
          null != child &&
            returnFiber !== child &&
            ((componentName = null),
            "number" === typeof child.tag
              ? (componentName = getComponentNameFromFiber(child))
              : "string" === typeof child.name && (componentName = child.name),
            componentName &&
              (childOwnerAppendix =
                " It was passed a child from " + componentName + "."));
          runWithFiberInDEV(workInProgress, function () {
            console.error(
              'Each child in a list should have a unique "key" prop.%s%s See https://react.dev/link/warning-keys for more information.',
              currentComponentErrorInfo,
              childOwnerAppendix
            );
          });
        }
      }
    };
    var reconcileChildFibers = createChildReconciler(!0),
      mountChildFibers = createChildReconciler(!1),
      UpdateState = 0,
      ReplaceState = 1,
      ForceUpdate = 2,
      CaptureUpdate = 3,
      hasForceUpdate = !1;
    var didWarnUpdateInsideUpdate = !1;
    var currentlyProcessingQueue = null;
    var didReadFromEntangledAsyncAction = !1,
      currentTreeHiddenStackCursor = createCursor(null),
      prevEntangledRenderLanesCursor = createCursor(0),
      suspenseHandlerStackCursor = createCursor(null),
      shellBoundary = null,
      SubtreeSuspenseContextMask = 1,
      ForceSuspenseFallback = 2,
      suspenseStackCursor = createCursor(0),
      NoFlags = 0,
      HasEffect = 1,
      Insertion = 2,
      Layout = 4,
      Passive = 8,
      didWarnUncachedGetSnapshot;
    var didWarnAboutMismatchedHooksForComponent = new Set();
    var didWarnAboutUseWrappedInTryCatch = new Set();
    var didWarnAboutAsyncClientComponent = new Set();
    var didWarnAboutUseFormState = new Set();
    var renderLanes = 0,
      currentlyRenderingFiber = null,
      currentHook = null,
      workInProgressHook = null,
      didScheduleRenderPhaseUpdate = !1,
      didScheduleRenderPhaseUpdateDuringThisPass = !1,
      shouldDoubleInvokeUserFnsInHooksDEV = !1,
      localIdCounter = 0,
      thenableIndexCounter = 0,
      thenableState = null,
      globalClientIdCounter = 0,
      RE_RENDER_LIMIT = 25,
      currentHookNameInDev = null,
      hookTypesDev = null,
      hookTypesUpdateIndexDev = -1,
      ignorePreviousDependencies = !1,
      ContextOnlyDispatcher = {
        readContext: readContext,
        use: use,
        useCallback: throwInvalidHookError,
        useContext: throwInvalidHookError,
        useEffect: throwInvalidHookError,
        useImperativeHandle: throwInvalidHookError,
        useLayoutEffect: throwInvalidHookError,
        useInsertionEffect: throwInvalidHookError,
        useMemo: throwInvalidHookError,
        useReducer: throwInvalidHookError,
        useRef: throwInvalidHookError,
        useState: throwInvalidHookError,
        useDebugValue: throwInvalidHookError,
        useDeferredValue: throwInvalidHookError,
        useTransition: throwInvalidHookError,
        useSyncExternalStore: throwInvalidHookError,
        useId: throwInvalidHookError,
        useHostTransitionStatus: throwInvalidHookError,
        useFormState: throwInvalidHookError,
        useActionState: throwInvalidHookError,
        useOptimistic: throwInvalidHookError,
        useMemoCache: throwInvalidHookError,
        useCacheRefresh: throwInvalidHookError
      };
    ContextOnlyDispatcher.useEffectEvent = throwInvalidHookError;
    var HooksDispatcherOnMountInDEV = null,
      HooksDispatcherOnMountWithHookTypesInDEV = null,
      HooksDispatcherOnUpdateInDEV = null,
      HooksDispatcherOnRerenderInDEV = null,
      InvalidNestedHooksDispatcherOnMountInDEV = null,
      InvalidNestedHooksDispatcherOnUpdateInDEV = null,
      InvalidNestedHooksDispatcherOnRerenderInDEV = null;
    HooksDispatcherOnMountInDEV = {
      readContext: function (context) {
        return readContext(context);
      },
      use: use,
      useCallback: function (callback, deps) {
        currentHookNameInDev = "useCallback";
        mountHookTypesDev();
        checkDepsAreArrayDev(deps);
        return mountCallback(callback, deps);
      },
      useContext: function (context) {
        currentHookNameInDev = "useContext";
        mountHookTypesDev();
        return readContext(context);
      },
      useEffect: function (create, deps) {
        currentHookNameInDev = "useEffect";
        mountHookTypesDev();
        checkDepsAreArrayDev(deps);
        return mountEffect(create, deps);
      },
      useImperativeHandle: function (ref, create, deps) {
        currentHookNameInDev = "useImperativeHandle";
        mountHookTypesDev();
        checkDepsAreArrayDev(deps);
        return mountImperativeHandle(ref, create, deps);
      },
      useInsertionEffect: function (create, deps) {
        currentHookNameInDev = "useInsertionEffect";
        mountHookTypesDev();
        checkDepsAreArrayDev(deps);
        mountEffectImpl(4, Insertion, create, deps);
      },
      useLayoutEffect: function (create, deps) {
        currentHookNameInDev = "useLayoutEffect";
        mountHookTypesDev();
        checkDepsAreArrayDev(deps);
        return mountLayoutEffect(create, deps);
      },
      useMemo: function (create, deps) {
        currentHookNameInDev = "useMemo";
        mountHookTypesDev();
        checkDepsAreArrayDev(deps);
        var prevDispatcher = ReactSharedInternals.H;
        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;
        try {
          return mountMemo(create, deps);
        } finally {
          ReactSharedInternals.H = prevDispatcher;
        }
      },
      useReducer: function (reducer, initialArg, init) {
        currentHookNameInDev = "useReducer";
        mountHookTypesDev();
        var prevDispatcher = ReactSharedInternals.H;
        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;
        try {
          return mountReducer(reducer, initialArg, init);
        } finally {
          ReactSharedInternals.H = prevDispatcher;
        }
      },
      useRef: function (initialValue) {
        currentHookNameInDev = "useRef";
        mountHookTypesDev();
        return mountRef(initialValue);
      },
      useState: function (initialState) {
        currentHookNameInDev = "useState";
        mountHookTypesDev();
        var prevDispatcher = ReactSharedInternals.H;
        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;
        try {
          return mountState(initialState);
        } finally {
          ReactSharedInternals.H = prevDispatcher;
        }
      },
      useDebugValue: function () {
        currentHookNameInDev = "useDebugValue";
        mountHookTypesDev();
      },
      useDeferredValue: function (value, initialValue) {
        currentHookNameInDev = "useDeferredValue";
        mountHookTypesDev();
        return mountDeferredValue(value, initialValue);
      },
      useTransition: function () {
        currentHookNameInDev = "useTransition";
        mountHookTypesDev();
        return mountTransition();
      },
      useSyncExternalStore: function (
        subscribe,
        getSnapshot,
        getServerSnapshot
      ) {
        currentHookNameInDev = "useSyncExternalStore";
        mountHookTypesDev();
        return mountSyncExternalStore(
          subscribe,
          getSnapshot,
          getServerSnapshot
        );
      },
      useId: function () {
        currentHookNameInDev = "useId";
        mountHookTypesDev();
        return mountId();
      },
      useFormState: function (action, initialState) {
        currentHookNameInDev = "useFormState";
        mountHookTypesDev();
        warnOnUseFormStateInDev();
        return mountActionState(action, initialState);
      },
      useActionState: function (action, initialState) {
        currentHookNameInDev = "useActionState";
        mountHookTypesDev();
        return mountActionState(action, initialState);
      },
      useOptimistic: function (passthrough) {
        currentHookNameInDev = "useOptimistic";
        mountHookTypesDev();
        return mountOptimistic(passthrough);
      },
      useHostTransitionStatus: useHostTransitionStatus,
      useMemoCache: useMemoCache,
      useCacheRefresh: function () {
        currentHookNameInDev = "useCacheRefresh";
        mountHookTypesDev();
        return mountRefresh();
      },
      useEffectEvent: function (callback) {
        currentHookNameInDev = "useEffectEvent";
        mountHookTypesDev();
        return mountEvent(callback);
      }
    };
    HooksDispatcherOnMountWithHookTypesInDEV = {
      readContext: function (context) {
        return readContext(context);
      },
      use: use,
      useCallback: function (callback, deps) {
        currentHookNameInDev = "useCallback";
        updateHookTypesDev();
        return mountCallback(callback, deps);
      },
      useContext: function (context) {
        currentHookNameInDev = "useContext";
        updateHookTypesDev();
        return readContext(context);
      },
      useEffect: function (create, deps) {
        currentHookNameInDev = "useEffect";
        updateHookTypesDev();
        return mountEffect(create, deps);
      },
      useImperativeHandle: function (ref, create, deps) {
        currentHookNameInDev = "useImperativeHandle";
        updateHookTypesDev();
        return mountImperativeHandle(ref, create, deps);
      },
      useInsertionEffect: function (create, deps) {
        currentHookNameInDev = "useInsertionEffect";
        updateHookTypesDev();
        mountEffectImpl(4, Insertion, create, deps);
      },
      useLayoutEffect: function (create, deps) {
        currentHookNameInDev = "useLayoutEffect";
        updateHookTypesDev();
        return mountLayoutEffect(create, deps);
      },
      useMemo: function (create, deps) {
        currentHookNameInDev = "useMemo";
        updateHookTypesDev();
        var prevDispatcher = ReactSharedInternals.H;
        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;
        try {
          return mountMemo(create, deps);
        } finally {
          ReactSharedInternals.H = prevDispatcher;
        }
      },
      useReducer: function (reducer, initialArg, init) {
        currentHookNameInDev = "useReducer";
        updateHookTypesDev();
        var prevDispatcher = ReactSharedInternals.H;
        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;
        try {
          return mountReducer(reducer, initialArg, init);
        } finally {
          ReactSharedInternals.H = prevDispatcher;
        }
      },
      useRef: function (initialValue) {
        currentHookNameInDev = "useRef";
        updateHookTypesDev();
        return mountRef(initialValue);
      },
      useState: function (initialState) {
        currentHookNameInDev = "useState";
        updateHookTypesDev();
        var prevDispatcher = ReactSharedInternals.H;
        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;
        try {
          return mountState(initialState);
        } finally {
          ReactSharedInternals.H = prevDispatcher;
        }
      },
      useDebugValue: function () {
        currentHookNameInDev = "useDebugValue";
        updateHookTypesDev();
      },
      useDeferredValue: function (value, initialValue) {
        currentHookNameInDev = "useDeferredValue";
        updateHookTypesDev();
        return mountDeferredValue(value, initialValue);
      },
      useTransition: function () {
        currentHookNameInDev = "useTransition";
        updateHookTypesDev();
        return mountTransition();
      },
      useSyncExternalStore: function (
        subscribe,
        getSnapshot,
        getServerSnapshot
      ) {
        currentHookNameInDev = "useSyncExternalStore";
        updateHookTypesDev();
        return mountSyncExternalStore(
          subscribe,
          getSnapshot,
          getServerSnapshot
        );
      },
      useId: function () {
        currentHookNameInDev = "useId";
        updateHookTypesDev();
        return mountId();
      },
      useActionState: function (action, initialState) {
        currentHookNameInDev = "useActionState";
        updateHookTypesDev();
        return mountActionState(action, initialState);
      },
      useFormState: function (action, initialState) {
        currentHookNameInDev = "useFormState";
        updateHookTypesDev();
        warnOnUseFormStateInDev();
        return mountActionState(action, initialState);
      },
      useOptimistic: function (passthrough) {
        currentHookNameInDev = "useOptimistic";
        updateHookTypesDev();
        return mountOptimistic(passthrough);
      },
      useHostTransitionStatus: useHostTransitionStatus,
      useMemoCache: useMemoCache,
      useCacheRefresh: function () {
        currentHookNameInDev = "useCacheRefresh";
        updateHookTypesDev();
        return mountRefresh();
      },
      useEffectEvent: function (callback) {
        currentHookNameInDev = "useEffectEvent";
        updateHookTypesDev();
        return mountEvent(callback);
      }
    };
    HooksDispatcherOnUpdateInDEV = {
      readContext: function (context) {
        return readContext(context);
      },
      use: use,
      useCallback: function (callback, deps) {
        currentHookNameInDev = "useCallback";
        updateHookTypesDev();
        return updateCallback(callback, deps);
      },
      useContext: function (context) {
        currentHookNameInDev = "useContext";
        updateHookTypesDev();
        return readContext(context);
      },
      useEffect: function (create, deps) {
        currentHookNameInDev = "useEffect";
        updateHookTypesDev();
        updateEffectImpl(2048, Passive, create, deps);
      },
      useImperativeHandle: function (ref, create, deps) {
        currentHookNameInDev = "useImperativeHandle";
        updateHookTypesDev();
        return updateImperativeHandle(ref, create, deps);
      },
      useInsertionEffect: function (create, deps) {
        currentHookNameInDev = "useInsertionEffect";
        updateHookTypesDev();
        return updateEffectImpl(4, Insertion, create, deps);
      },
      useLayoutEffect: function (create, deps) {
        currentHookNameInDev = "useLayoutEffect";
        updateHookTypesDev();
        return updateEffectImpl(4, Layout, create, deps);
      },
      useMemo: function (create, deps) {
        currentHookNameInDev = "useMemo";
        updateHookTypesDev();
        var prevDispatcher = ReactSharedInternals.H;
        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;
        try {
          return updateMemo(create, deps);
        } finally {
          ReactSharedInternals.H = prevDispatcher;
        }
      },
      useReducer: function (reducer, initialArg, init) {
        currentHookNameInDev = "useReducer";
        updateHookTypesDev();
        var prevDispatcher = ReactSharedInternals.H;
        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;
        try {
          return updateReducer(reducer, initialArg, init);
        } finally {
          ReactSharedInternals.H = prevDispatcher;
        }
      },
      useRef: function () {
        currentHookNameInDev = "useRef";
        updateHookTypesDev();
        return updateWorkInProgressHook().memoizedState;
      },
      useState: function () {
        currentHookNameInDev = "useState";
        updateHookTypesDev();
        var prevDispatcher = ReactSharedInternals.H;
        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;
        try {
          return updateReducer(basicStateReducer);
        } finally {
          ReactSharedInternals.H = prevDispatcher;
        }
      },
      useDebugValue: function () {
        currentHookNameInDev = "useDebugValue";
        updateHookTypesDev();
      },
      useDeferredValue: function (value, initialValue) {
        currentHookNameInDev = "useDeferredValue";
        updateHookTypesDev();
        return updateDeferredValue(value, initialValue);
      },
      useTransition: function () {
        currentHookNameInDev = "useTransition";
        updateHookTypesDev();
        return updateTransition();
      },
      useSyncExternalStore: function (
        subscribe,
        getSnapshot,
        getServerSnapshot
      ) {
        currentHookNameInDev = "useSyncExternalStore";
        updateHookTypesDev();
        return updateSyncExternalStore(
          subscribe,
          getSnapshot,
          getServerSnapshot
        );
      },
      useId: function () {
        currentHookNameInDev = "useId";
        updateHookTypesDev();
        return updateWorkInProgressHook().memoizedState;
      },
      useFormState: function (action) {
        currentHookNameInDev = "useFormState";
        updateHookTypesDev();
        warnOnUseFormStateInDev();
        return updateActionState(action);
      },
      useActionState: function (action) {
        currentHookNameInDev = "useActionState";
        updateHookTypesDev();
        return updateActionState(action);
      },
      useOptimistic: function (passthrough, reducer) {
        currentHookNameInDev = "useOptimistic";
        updateHookTypesDev();
        return updateOptimistic(passthrough, reducer);
      },
      useHostTransitionStatus: useHostTransitionStatus,
      useMemoCache: useMemoCache,
      useCacheRefresh: function () {
        currentHookNameInDev = "useCacheRefresh";
        updateHookTypesDev();
        return updateWorkInProgressHook().memoizedState;
      },
      useEffectEvent: function (callback) {
        currentHookNameInDev = "useEffectEvent";
        updateHookTypesDev();
        return updateEvent(callback);
      }
    };
    HooksDispatcherOnRerenderInDEV = {
      readContext: function (context) {
        return readContext(context);
      },
      use: use,
      useCallback: function (callback, deps) {
        currentHookNameInDev = "useCallback";
        updateHookTypesDev();
        return updateCallback(callback, deps);
      },
      useContext: function (context) {
        currentHookNameInDev = "useContext";
        updateHookTypesDev();
        return readContext(context);
      },
      useEffect: function (create, deps) {
        currentHookNameInDev = "useEffect";
        updateHookTypesDev();
        updateEffectImpl(2048, Passive, create, deps);
      },
      useImperativeHandle: function (ref, create, deps) {
        currentHookNameInDev = "useImperativeHandle";
        updateHookTypesDev();
        return updateImperativeHandle(ref, create, deps);
      },
      useInsertionEffect: function (create, deps) {
        currentHookNameInDev = "useInsertionEffect";
        updateHookTypesDev();
        return updateEffectImpl(4, Insertion, create, deps);
      },
      useLayoutEffect: function (create, deps) {
        currentHookNameInDev = "useLayoutEffect";
        updateHookTypesDev();
        return updateEffectImpl(4, Layout, create, deps);
      },
      useMemo: function (create, deps) {
        currentHookNameInDev = "useMemo";
        updateHookTypesDev();
        var prevDispatcher = ReactSharedInternals.H;
        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnRerenderInDEV;
        try {
          return updateMemo(create, deps);
        } finally {
          ReactSharedInternals.H = prevDispatcher;
        }
      },
      useReducer: function (reducer, initialArg, init) {
        currentHookNameInDev = "useReducer";
        updateHookTypesDev();
        var prevDispatcher = ReactSharedInternals.H;
        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnRerenderInDEV;
        try {
          return rerenderReducer(reducer, initialArg, init);
        } finally {
          ReactSharedInternals.H = prevDispatcher;
        }
      },
      useRef: function () {
        currentHookNameInDev = "useRef";
        updateHookTypesDev();
        return updateWorkInProgressHook().memoizedState;
      },
      useState: function () {
        currentHookNameInDev = "useState";
        updateHookTypesDev();
        var prevDispatcher = ReactSharedInternals.H;
        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnRerenderInDEV;
        try {
          return rerenderReducer(basicStateReducer);
        } finally {
          ReactSharedInternals.H = prevDispatcher;
        }
      },
      useDebugValue: function () {
        currentHookNameInDev = "useDebugValue";
        updateHookTypesDev();
      },
      useDeferredValue: function (value, initialValue) {
        currentHookNameInDev = "useDeferredValue";
        updateHookTypesDev();
        return rerenderDeferredValue(value, initialValue);
      },
      useTransition: function () {
        currentHookNameInDev = "useTransition";
        updateHookTypesDev();
        return rerenderTransition();
      },
      useSyncExternalStore: function (
        subscribe,
        getSnapshot,
        getServerSnapshot
      ) {
        currentHookNameInDev = "useSyncExternalStore";
        updateHookTypesDev();
        return updateSyncExternalStore(
          subscribe,
          getSnapshot,
          getServerSnapshot
        );
      },
      useId: function () {
        currentHookNameInDev = "useId";
        updateHookTypesDev();
        return updateWorkInProgressHook().memoizedState;
      },
      useFormState: function (action) {
        currentHookNameInDev = "useFormState";
        updateHookTypesDev();
        warnOnUseFormStateInDev();
        return rerenderActionState(action);
      },
      useActionState: function (action) {
        currentHookNameInDev = "useActionState";
        updateHookTypesDev();
        return rerenderActionState(action);
      },
      useOptimistic: function (passthrough, reducer) {
        currentHookNameInDev = "useOptimistic";
        updateHookTypesDev();
        return rerenderOptimistic(passthrough, reducer);
      },
      useHostTransitionStatus: useHostTransitionStatus,
      useMemoCache: useMemoCache,
      useCacheRefresh: function () {
        currentHookNameInDev = "useCacheRefresh";
        updateHookTypesDev();
        return updateWorkInProgressHook().memoizedState;
      },
      useEffectEvent: function (callback) {
        currentHookNameInDev = "useEffectEvent";
        updateHookTypesDev();
        return updateEvent(callback);
      }
    };
    InvalidNestedHooksDispatcherOnMountInDEV = {
      readContext: function (context) {
        warnInvalidContextAccess();
        return readContext(context);
      },
      use: function (usable) {
        warnInvalidHookAccess();
        return use(usable);
      },
      useCallback: function (callback, deps) {
        currentHookNameInDev = "useCallback";
        warnInvalidHookAccess();
        mountHookTypesDev();
        return mountCallback(callback, deps);
      },
      useContext: function (context) {
        currentHookNameInDev = "useContext";
        warnInvalidHookAccess();
        mountHookTypesDev();
        return readContext(context);
      },
      useEffect: function (create, deps) {
        currentHookNameInDev = "useEffect";
        warnInvalidHookAccess();
        mountHookTypesDev();
        return mountEffect(create, deps);
      },
      useImperativeHandle: function (ref, create, deps) {
        currentHookNameInDev = "useImperativeHandle";
        warnInvalidHookAccess();
        mountHookTypesDev();
        return mountImperativeHandle(ref, create, deps);
      },
      useInsertionEffect: function (create, deps) {
        currentHookNameInDev = "useInsertionEffect";
        warnInvalidHookAccess();
        mountHookTypesDev();
        mountEffectImpl(4, Insertion, create, deps);
      },
      useLayoutEffect: function (create, deps) {
        currentHookNameInDev = "useLayoutEffect";
        warnInvalidHookAccess();
        mountHookTypesDev();
        return mountLayoutEffect(create, deps);
      },
      useMemo: function (create, deps) {
        currentHookNameInDev = "useMemo";
        warnInvalidHookAccess();
        mountHookTypesDev();
        var prevDispatcher = ReactSharedInternals.H;
        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;
        try {
          return mountMemo(create, deps);
        } finally {
          ReactSharedInternals.H = prevDispatcher;
        }
      },
      useReducer: function (reducer, initialArg, init) {
        currentHookNameInDev = "useReducer";
        warnInvalidHookAccess();
        mountHookTypesDev();
        var prevDispatcher = ReactSharedInternals.H;
        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;
        try {
          return mountReducer(reducer, initialArg, init);
        } finally {
          ReactSharedInternals.H = prevDispatcher;
        }
      },
      useRef: function (initialValue) {
        currentHookNameInDev = "useRef";
        warnInvalidHookAccess();
        mountHookTypesDev();
        return mountRef(initialValue);
      },
      useState: function (initialState) {
        currentHookNameInDev = "useState";
        warnInvalidHookAccess();
        mountHookTypesDev();
        var prevDispatcher = ReactSharedInternals.H;
        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnMountInDEV;
        try {
          return mountState(initialState);
        } finally {
          ReactSharedInternals.H = prevDispatcher;
        }
      },
      useDebugValue: function () {
        currentHookNameInDev = "useDebugValue";
        warnInvalidHookAccess();
        mountHookTypesDev();
      },
      useDeferredValue: function (value, initialValue) {
        currentHookNameInDev = "useDeferredValue";
        warnInvalidHookAccess();
        mountHookTypesDev();
        return mountDeferredValue(value, initialValue);
      },
      useTransition: function () {
        currentHookNameInDev = "useTransition";
        warnInvalidHookAccess();
        mountHookTypesDev();
        return mountTransition();
      },
      useSyncExternalStore: function (
        subscribe,
        getSnapshot,
        getServerSnapshot
      ) {
        currentHookNameInDev = "useSyncExternalStore";
        warnInvalidHookAccess();
        mountHookTypesDev();
        return mountSyncExternalStore(
          subscribe,
          getSnapshot,
          getServerSnapshot
        );
      },
      useId: function () {
        currentHookNameInDev = "useId";
        warnInvalidHookAccess();
        mountHookTypesDev();
        return mountId();
      },
      useFormState: function (action, initialState) {
        currentHookNameInDev = "useFormState";
        warnInvalidHookAccess();
        mountHookTypesDev();
        return mountActionState(action, initialState);
      },
      useActionState: function (action, initialState) {
        currentHookNameInDev = "useActionState";
        warnInvalidHookAccess();
        mountHookTypesDev();
        return mountActionState(action, initialState);
      },
      useOptimistic: function (passthrough) {
        currentHookNameInDev = "useOptimistic";
        warnInvalidHookAccess();
        mountHookTypesDev();
        return mountOptimistic(passthrough);
      },
      useMemoCache: function (size) {
        warnInvalidHookAccess();
        return useMemoCache(size);
      },
      useHostTransitionStatus: useHostTransitionStatus,
      useCacheRefresh: function () {
        currentHookNameInDev = "useCacheRefresh";
        mountHookTypesDev();
        return mountRefresh();
      },
      useEffectEvent: function (callback) {
        currentHookNameInDev = "useEffectEvent";
        warnInvalidHookAccess();
        mountHookTypesDev();
        return mountEvent(callback);
      }
    };
    InvalidNestedHooksDispatcherOnUpdateInDEV = {
      readContext: function (context) {
        warnInvalidContextAccess();
        return readContext(context);
      },
      use: function (usable) {
        warnInvalidHookAccess();
        return use(usable);
      },
      useCallback: function (callback, deps) {
        currentHookNameInDev = "useCallback";
        warnInvalidHookAccess();
        updateHookTypesDev();
        return updateCallback(callback, deps);
      },
      useContext: function (context) {
        currentHookNameInDev = "useContext";
        warnInvalidHookAccess();
        updateHookTypesDev();
        return readContext(context);
      },
      useEffect: function (create, deps) {
        currentHookNameInDev = "useEffect";
        warnInvalidHookAccess();
        updateHookTypesDev();
        updateEffectImpl(2048, Passive, create, deps);
      },
      useImperativeHandle: function (ref, create, deps) {
        currentHookNameInDev = "useImperativeHandle";
        warnInvalidHookAccess();
        updateHookTypesDev();
        return updateImperativeHandle(ref, create, deps);
      },
      useInsertionEffect: function (create, deps) {
        currentHookNameInDev = "useInsertionEffect";
        warnInvalidHookAccess();
        updateHookTypesDev();
        return updateEffectImpl(4, Insertion, create, deps);
      },
      useLayoutEffect: function (create, deps) {
        currentHookNameInDev = "useLayoutEffect";
        warnInvalidHookAccess();
        updateHookTypesDev();
        return updateEffectImpl(4, Layout, create, deps);
      },
      useMemo: function (create, deps) {
        currentHookNameInDev = "useMemo";
        warnInvalidHookAccess();
        updateHookTypesDev();
        var prevDispatcher = ReactSharedInternals.H;
        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;
        try {
          return updateMemo(create, deps);
        } finally {
          ReactSharedInternals.H = prevDispatcher;
        }
      },
      useReducer: function (reducer, initialArg, init) {
        currentHookNameInDev = "useReducer";
        warnInvalidHookAccess();
        updateHookTypesDev();
        var prevDispatcher = ReactSharedInternals.H;
        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;
        try {
          return updateReducer(reducer, initialArg, init);
        } finally {
          ReactSharedInternals.H = prevDispatcher;
        }
      },
      useRef: function () {
        currentHookNameInDev = "useRef";
        warnInvalidHookAccess();
        updateHookTypesDev();
        return updateWorkInProgressHook().memoizedState;
      },
      useState: function () {
        currentHookNameInDev = "useState";
        warnInvalidHookAccess();
        updateHookTypesDev();
        var prevDispatcher = ReactSharedInternals.H;
        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;
        try {
          return updateReducer(basicStateReducer);
        } finally {
          ReactSharedInternals.H = prevDispatcher;
        }
      },
      useDebugValue: function () {
        currentHookNameInDev = "useDebugValue";
        warnInvalidHookAccess();
        updateHookTypesDev();
      },
      useDeferredValue: function (value, initialValue) {
        currentHookNameInDev = "useDeferredValue";
        warnInvalidHookAccess();
        updateHookTypesDev();
        return updateDeferredValue(value, initialValue);
      },
      useTransition: function () {
        currentHookNameInDev = "useTransition";
        warnInvalidHookAccess();
        updateHookTypesDev();
        return updateTransition();
      },
      useSyncExternalStore: function (
        subscribe,
        getSnapshot,
        getServerSnapshot
      ) {
        currentHookNameInDev = "useSyncExternalStore";
        warnInvalidHookAccess();
        updateHookTypesDev();
        return updateSyncExternalStore(
          subscribe,
          getSnapshot,
          getServerSnapshot
        );
      },
      useId: function () {
        currentHookNameInDev = "useId";
        warnInvalidHookAccess();
        updateHookTypesDev();
        return updateWorkInProgressHook().memoizedState;
      },
      useFormState: function (action) {
        currentHookNameInDev = "useFormState";
        warnInvalidHookAccess();
        updateHookTypesDev();
        return updateActionState(action);
      },
      useActionState: function (action) {
        currentHookNameInDev = "useActionState";
        warnInvalidHookAccess();
        updateHookTypesDev();
        return updateActionState(action);
      },
      useOptimistic: function (passthrough, reducer) {
        currentHookNameInDev = "useOptimistic";
        warnInvalidHookAccess();
        updateHookTypesDev();
        return updateOptimistic(passthrough, reducer);
      },
      useMemoCache: function (size) {
        warnInvalidHookAccess();
        return useMemoCache(size);
      },
      useHostTransitionStatus: useHostTransitionStatus,
      useCacheRefresh: function () {
        currentHookNameInDev = "useCacheRefresh";
        updateHookTypesDev();
        return updateWorkInProgressHook().memoizedState;
      },
      useEffectEvent: function (callback) {
        currentHookNameInDev = "useEffectEvent";
        warnInvalidHookAccess();
        updateHookTypesDev();
        return updateEvent(callback);
      }
    };
    InvalidNestedHooksDispatcherOnRerenderInDEV = {
      readContext: function (context) {
        warnInvalidContextAccess();
        return readContext(context);
      },
      use: function (usable) {
        warnInvalidHookAccess();
        return use(usable);
      },
      useCallback: function (callback, deps) {
        currentHookNameInDev = "useCallback";
        warnInvalidHookAccess();
        updateHookTypesDev();
        return updateCallback(callback, deps);
      },
      useContext: function (context) {
        currentHookNameInDev = "useContext";
        warnInvalidHookAccess();
        updateHookTypesDev();
        return readContext(context);
      },
      useEffect: function (create, deps) {
        currentHookNameInDev = "useEffect";
        warnInvalidHookAccess();
        updateHookTypesDev();
        updateEffectImpl(2048, Passive, create, deps);
      },
      useImperativeHandle: function (ref, create, deps) {
        currentHookNameInDev = "useImperativeHandle";
        warnInvalidHookAccess();
        updateHookTypesDev();
        return updateImperativeHandle(ref, create, deps);
      },
      useInsertionEffect: function (create, deps) {
        currentHookNameInDev = "useInsertionEffect";
        warnInvalidHookAccess();
        updateHookTypesDev();
        return updateEffectImpl(4, Insertion, create, deps);
      },
      useLayoutEffect: function (create, deps) {
        currentHookNameInDev = "useLayoutEffect";
        warnInvalidHookAccess();
        updateHookTypesDev();
        return updateEffectImpl(4, Layout, create, deps);
      },
      useMemo: function (create, deps) {
        currentHookNameInDev = "useMemo";
        warnInvalidHookAccess();
        updateHookTypesDev();
        var prevDispatcher = ReactSharedInternals.H;
        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;
        try {
          return updateMemo(create, deps);
        } finally {
          ReactSharedInternals.H = prevDispatcher;
        }
      },
      useReducer: function (reducer, initialArg, init) {
        currentHookNameInDev = "useReducer";
        warnInvalidHookAccess();
        updateHookTypesDev();
        var prevDispatcher = ReactSharedInternals.H;
        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;
        try {
          return rerenderReducer(reducer, initialArg, init);
        } finally {
          ReactSharedInternals.H = prevDispatcher;
        }
      },
      useRef: function () {
        currentHookNameInDev = "useRef";
        warnInvalidHookAccess();
        updateHookTypesDev();
        return updateWorkInProgressHook().memoizedState;
      },
      useState: function () {
        currentHookNameInDev = "useState";
        warnInvalidHookAccess();
        updateHookTypesDev();
        var prevDispatcher = ReactSharedInternals.H;
        ReactSharedInternals.H = InvalidNestedHooksDispatcherOnUpdateInDEV;
        try {
          return rerenderReducer(basicStateReducer);
        } finally {
          ReactSharedInternals.H = prevDispatcher;
        }
      },
      useDebugValue: function () {
        currentHookNameInDev = "useDebugValue";
        warnInvalidHookAccess();
        updateHookTypesDev();
      },
      useDeferredValue: function (value, initialValue) {
        currentHookNameInDev = "useDeferredValue";
        warnInvalidHookAccess();
        updateHookTypesDev();
        return rerenderDeferredValue(value, initialValue);
      },
      useTransition: function () {
        currentHookNameInDev = "useTransition";
        warnInvalidHookAccess();
        updateHookTypesDev();
        return rerenderTransition();
      },
      useSyncExternalStore: function (
        subscribe,
        getSnapshot,
        getServerSnapshot
      ) {
        currentHookNameInDev = "useSyncExternalStore";
        warnInvalidHookAccess();
        updateHookTypesDev();
        return updateSyncExternalStore(
          subscribe,
          getSnapshot,
          getServerSnapshot
        );
      },
      useId: function () {
        currentHookNameInDev = "useId";
        warnInvalidHookAccess();
        updateHookTypesDev();
        return updateWorkInProgressHook().memoizedState;
      },
      useFormState: function (action) {
        currentHookNameInDev = "useFormState";
        warnInvalidHookAccess();
        updateHookTypesDev();
        return rerenderActionState(action);
      },
      useActionState: function (action) {
        currentHookNameInDev = "useActionState";
        warnInvalidHookAccess();
        updateHookTypesDev();
        return rerenderActionState(action);
      },
      useOptimistic: function (passthrough, reducer) {
        currentHookNameInDev = "useOptimistic";
        warnInvalidHookAccess();
        updateHookTypesDev();
        return rerenderOptimistic(passthrough, reducer);
      },
      useMemoCache: function (size) {
        warnInvalidHookAccess();
        return useMemoCache(size);
      },
      useHostTransitionStatus: useHostTransitionStatus,
      useCacheRefresh: function () {
        currentHookNameInDev = "useCacheRefresh";
        updateHookTypesDev();
        return updateWorkInProgressHook().memoizedState;
      },
      useEffectEvent: function (callback) {
        currentHookNameInDev = "useEffectEvent";
        warnInvalidHookAccess();
        updateHookTypesDev();
        return updateEvent(callback);
      }
    };
    var fakeInternalInstance = {};
    var didWarnAboutStateAssignmentForComponent = new Set();
    var didWarnAboutUninitializedState = new Set();
    var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();
    var didWarnAboutLegacyLifecyclesAndDerivedState = new Set();
    var didWarnAboutDirectlyAssigningPropsToState = new Set();
    var didWarnAboutUndefinedDerivedState = new Set();
    var didWarnAboutContextTypes$1 = new Set();
    var didWarnAboutChildContextTypes = new Set();
    var didWarnAboutInvalidateContextType = new Set();
    var didWarnOnInvalidCallback = new Set();
    Object.freeze(fakeInternalInstance);
    var classComponentUpdater = {
        enqueueSetState: function (inst, payload, callback) {
          inst = inst._reactInternals;
          var lane = requestUpdateLane(inst),
            update = createUpdate(lane);
          update.payload = payload;
          void 0 !== callback &&
            null !== callback &&
            (warnOnInvalidCallback(callback), (update.callback = callback));
          payload = enqueueUpdate(inst, update, lane);
          null !== payload &&
            (startUpdateTimerByLane(lane, "this.setState()", inst),
            scheduleUpdateOnFiber(payload, inst, lane),
            entangleTransitions(payload, inst, lane));
        },
        enqueueReplaceState: function (inst, payload, callback) {
          inst = inst._reactInternals;
          var lane = requestUpdateLane(inst),
            update = createUpdate(lane);
          update.tag = ReplaceState;
          update.payload = payload;
          void 0 !== callback &&
            null !== callback &&
            (warnOnInvalidCallback(callback), (update.callback = callback));
          payload = enqueueUpdate(inst, update, lane);
          null !== payload &&
            (startUpdateTimerByLane(lane, "this.replaceState()", inst),
            scheduleUpdateOnFiber(payload, inst, lane),
            entangleTransitions(payload, inst, lane));
        },
        enqueueForceUpdate: function (inst, callback) {
          inst = inst._reactInternals;
          var lane = requestUpdateLane(inst),
            update = createUpdate(lane);
          update.tag = ForceUpdate;
          void 0 !== callback &&
            null !== callback &&
            (warnOnInvalidCallback(callback), (update.callback = callback));
          callback = enqueueUpdate(inst, update, lane);
          null !== callback &&
            (startUpdateTimerByLane(lane, "this.forceUpdate()", inst),
            scheduleUpdateOnFiber(callback, inst, lane),
            entangleTransitions(callback, inst, lane));
        }
      },
      componentName = null,
      errorBoundaryName = null,
      SelectiveHydrationException = Error(
        "This is not a real error. It's an implementation detail of React's selective hydration feature. If this leaks into userspace, it's a bug in React. Please file an issue."
      ),
      didReceiveUpdate = !1;
    var didWarnAboutBadClass = {};
    var didWarnAboutContextTypeOnFunctionComponent = {};
    var didWarnAboutContextTypes = {};
    var didWarnAboutGetDerivedStateOnFunctionComponent = {};
    var didWarnAboutReassigningProps = !1;
    var didWarnAboutRevealOrder = {};
    var didWarnAboutTailOptions = {};
    var SUSPENDED_MARKER = {
        dehydrated: null,
        treeContext: null,
        retryLane: 0,
        hydrationErrors: null
      },
      hasWarnedAboutUsingNoValuePropOnContextProvider = !1,
      didWarnAboutUndefinedSnapshotBeforeUpdate = null;
    didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();
    var offscreenSubtreeIsHidden = !1,
      offscreenSubtreeWasHidden = !1,
      needsFormReset = !1,
      PossiblyWeakSet = "function" === typeof WeakSet ? WeakSet : Set,
      nextEffect = null,
      inProgressLanes = null,
      inProgressRoot = null,
      hostParent = null,
      hostParentIsContainer = !1,
      currentHoistableRoot = null,
      inHydratedSubtree = !1,
      suspenseyCommitFlag = 8192,
      DefaultAsyncDispatcher = {
        getCacheForType: function (resourceType) {
          var cache = readContext(CacheContext),
            cacheForType = cache.data.get(resourceType);
          void 0 === cacheForType &&
            ((cacheForType = resourceType()),
            cache.data.set(resourceType, cacheForType));
          return cacheForType;
        },
        cacheSignal: function () {
          return readContext(CacheContext).controller.signal;
        },
        getOwner: function () {
          return current;
        }
      };
    if ("function" === typeof Symbol && Symbol.for) {
      var symbolFor = Symbol.for;
      symbolFor("selector.component");
      symbolFor("selector.has_pseudo_class");
      symbolFor("selector.role");
      symbolFor("selector.test_id");
      symbolFor("selector.text");
    }
    var commitHooks = [],
      PossiblyWeakMap = "function" === typeof WeakMap ? WeakMap : Map,
      NoContext = 0,
      RenderContext = 2,
      CommitContext = 4,
      RootInProgress = 0,
      RootFatalErrored = 1,
      RootErrored = 2,
      RootSuspended = 3,
      RootSuspendedWithDelay = 4,
      RootSuspendedAtTheShell = 6,
      RootCompleted = 5,
      executionContext = NoContext,
      workInProgressRoot = null,
      workInProgress = null,
      workInProgressRootRenderLanes = 0,
      NotSuspended = 0,
      SuspendedOnError = 1,
      SuspendedOnData = 2,
      SuspendedOnImmediate = 3,
      SuspendedOnInstance = 4,
      SuspendedOnInstanceAndReadyToContinue = 5,
      SuspendedOnDeprecatedThrowPromise = 6,
      SuspendedAndReadyToContinue = 7,
      SuspendedOnHydration = 8,
      SuspendedOnAction = 9,
      workInProgressSuspendedReason = NotSuspended,
      workInProgressThrownValue = null,
      workInProgressRootDidSkipSuspendedSiblings = !1,
      workInProgressRootIsPrerendering = !1,
      workInProgressRootDidAttachPingListener = !1,
      entangledRenderLanes = 0,
      workInProgressRootExitStatus = RootInProgress,
      workInProgressRootSkippedLanes = 0,
      workInProgressRootInterleavedUpdatedLanes = 0,
      workInProgressRootPingedLanes = 0,
      workInProgressDeferredLane = 0,
      workInProgressSuspendedRetryLanes = 0,
      workInProgressRootConcurrentErrors = null,
      workInProgressRootRecoverableErrors = null,
      workInProgressRootDidIncludeRecursiveRenderUpdate = !1,
      globalMostRecentFallbackTime = 0,
      globalMostRecentTransitionTime = 0,
      FALLBACK_THROTTLE_MS = 300,
      workInProgressRootRenderTargetTime = Infinity,
      RENDER_TIMEOUT_MS = 500,
      workInProgressTransitions = null,
      workInProgressUpdateTask = null,
      legacyErrorBoundariesThatAlreadyFailed = null,
      IMMEDIATE_COMMIT = 0,
      ABORTED_VIEW_TRANSITION_COMMIT = 1,
      DELAYED_PASSIVE_COMMIT = 2,
      ANIMATION_STARTED_COMMIT = 3,
      NO_PENDING_EFFECTS = 0,
      PENDING_MUTATION_PHASE = 1,
      PENDING_LAYOUT_PHASE = 2,
      PENDING_AFTER_MUTATION_PHASE = 3,
      PENDING_SPAWNED_WORK = 4,
      PENDING_PASSIVE_PHASE = 5,
      pendingEffectsStatus = 0,
      pendingEffectsRoot = null,
      pendingFinishedWork = null,
      pendingEffectsLanes = 0,
      pendingEffectsRemainingLanes = 0,
      pendingEffectsRenderEndTime = -0,
      pendingPassiveTransitions = null,
      pendingRecoverableErrors = null,
      pendingSuspendedCommitReason = null,
      pendingDelayedCommitReason = IMMEDIATE_COMMIT,
      pendingSuspendedViewTransitionReason = null,
      NESTED_UPDATE_LIMIT = 50,
      nestedUpdateCount = 0,
      rootWithNestedUpdates = null,
      isFlushingPassiveEffects = !1,
      didScheduleUpdateDuringPassiveEffects = !1,
      NESTED_PASSIVE_UPDATE_LIMIT = 50,
      nestedPassiveUpdateCount = 0,
      rootWithPassiveNestedUpdates = null,
      isRunningInsertionEffect = !1,
      didWarnStateUpdateForNotYetMountedComponent = null,
      didWarnAboutUpdateInRender = !1;
    var didWarnAboutUpdateInRenderForAnotherComponent = new Set();
    var fakeActCallbackNode$1 = {},
      firstScheduledRoot = null,
      lastScheduledRoot = null,
      didScheduleMicrotask = !1,
      didScheduleMicrotask_act = !1,
      mightHavePendingSyncWork = !1,
      isFlushingWork = !1,
      currentEventTransitionLane = 0,
      fakeActCallbackNode = {};
    (function () {
      for (var i = 0; i < simpleEventPluginEvents.length; i++) {
        var eventName = simpleEventPluginEvents[i],
          domEventName = eventName.toLowerCase();
        eventName = eventName[0].toUpperCase() + eventName.slice(1);
        registerSimpleEvent(domEventName, "on" + eventName);
      }
      registerSimpleEvent(ANIMATION_END, "onAnimationEnd");
      registerSimpleEvent(ANIMATION_ITERATION, "onAnimationIteration");
      registerSimpleEvent(ANIMATION_START, "onAnimationStart");
      registerSimpleEvent("dblclick", "onDoubleClick");
      registerSimpleEvent("focusin", "onFocus");
      registerSimpleEvent("focusout", "onBlur");
      registerSimpleEvent(TRANSITION_RUN, "onTransitionRun");
      registerSimpleEvent(TRANSITION_START, "onTransitionStart");
      registerSimpleEvent(TRANSITION_CANCEL, "onTransitionCancel");
      registerSimpleEvent(TRANSITION_END, "onTransitionEnd");
    })();
    registerDirectEvent("onMouseEnter", ["mouseout", "mouseover"]);
    registerDirectEvent("onMouseLeave", ["mouseout", "mouseover"]);
    registerDirectEvent("onPointerEnter", ["pointerout", "pointerover"]);
    registerDirectEvent("onPointerLeave", ["pointerout", "pointerover"]);
    registerTwoPhaseEvent(
      "onChange",
      "change click focusin focusout input keydown keyup selectionchange".split(
        " "
      )
    );
    registerTwoPhaseEvent(
      "onSelect",
      "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(
        " "
      )
    );
    registerTwoPhaseEvent("onBeforeInput", [
      "compositionend",
      "keypress",
      "textInput",
      "paste"
    ]);
    registerTwoPhaseEvent(
      "onCompositionEnd",
      "compositionend focusout keydown keypress keyup mousedown".split(" ")
    );
    registerTwoPhaseEvent(
      "onCompositionStart",
      "compositionstart focusout keydown keypress keyup mousedown".split(" ")
    );
    registerTwoPhaseEvent(
      "onCompositionUpdate",
      "compositionupdate focusout keydown keypress keyup mousedown".split(" ")
    );
    var mediaEventTypes =
        "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(
          " "
        ),
      nonDelegatedEvents = new Set(
        "beforetoggle cancel close invalid load scroll scrollend toggle"
          .split(" ")
          .concat(mediaEventTypes)
      ),
      listeningMarker = "_reactListening" + Math.random().toString(36).slice(2),
      didWarnControlledToUncontrolled = !1,
      didWarnUncontrolledToControlled = !1,
      didWarnFormActionType = !1,
      didWarnFormActionName = !1,
      didWarnFormActionTarget = !1,
      didWarnFormActionMethod = !1,
      didWarnPopoverTargetObject = !1;
    var didWarnForNewBooleanPropsWithEmptyValue = {};
    var NORMALIZE_NEWLINES_REGEX = /\r\n?/g,
      NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\u0000|\uFFFD/g,
      xlinkNamespace = "http://www.w3.org/1999/xlink",
      xmlNamespace = "http://www.w3.org/XML/1998/namespace",
      EXPECTED_FORM_ACTION_URL =
        "javascript:throw new Error('React form unexpectedly submitted.')",
      SUPPRESS_HYDRATION_WARNING = "suppressHydrationWarning",
      ACTIVITY_START_DATA = "&",
      ACTIVITY_END_DATA = "/&",
      SUSPENSE_START_DATA = "$",
      SUSPENSE_END_DATA = "/$",
      SUSPENSE_PENDING_START_DATA = "$?",
      SUSPENSE_QUEUED_START_DATA = "$~",
      SUSPENSE_FALLBACK_START_DATA = "$!",
      PREAMBLE_CONTRIBUTION_HTML = "html",
      PREAMBLE_CONTRIBUTION_BODY = "body",
      PREAMBLE_CONTRIBUTION_HEAD = "head",
      FORM_STATE_IS_MATCHING = "F!",
      FORM_STATE_IS_NOT_MATCHING = "F",
      DOCUMENT_READY_STATE_LOADING = "loading",
      STYLE = "style",
      HostContextNamespaceNone = 0,
      HostContextNamespaceSvg = 1,
      HostContextNamespaceMath = 2,
      eventsEnabled = null,
      selectionInformation = null,
      warnedUnknownTags = { dialog: !0, webview: !0 },
      currentPopstateTransitionEvent = null,
      schedulerEvent = void 0,
      scheduleTimeout = "function" === typeof setTimeout ? setTimeout : void 0,
      cancelTimeout =
        "function" === typeof clearTimeout ? clearTimeout : void 0,
      noTimeout = -1,
      localPromise = "function" === typeof Promise ? Promise : void 0,
      scheduleMicrotask =
        "function" === typeof queueMicrotask
          ? queueMicrotask
          : "undefined" !== typeof localPromise
            ? function (callback) {
                return localPromise
                  .resolve(null)
                  .then(callback)
                  .catch(handleErrorInNextTick);
              }
            : scheduleTimeout,
      previousHydratableOnEnteringScopedSingleton = null,
      NotLoaded = 0,
      Loaded = 1,
      Errored = 2,
      Settled = 3,
      Inserted = 4,
      preloadPropsMap = new Map(),
      preconnectsSet = new Set(),
      previousDispatcher = ReactDOMSharedInternals.d;
    ReactDOMSharedInternals.d = {
      f: function () {
        var previousWasRendering = previousDispatcher.f(),
          wasRendering = flushSyncWork$1();
        return previousWasRendering || wasRendering;
      },
      r: function (form) {
        var formInst = getInstanceFromNode(form);
        null !== formInst && 5 === formInst.tag && "form" === formInst.type
          ? requestFormReset$1(formInst)
          : previousDispatcher.r(form);
      },
      D: function (href) {
        previousDispatcher.D(href);
        preconnectAs("dns-prefetch", href, null);
      },
      C: function (href, crossOrigin) {
        previousDispatcher.C(href, crossOrigin);
        preconnectAs("preconnect", href, crossOrigin);
      },
      L: function (href, as, options) {
        previousDispatcher.L(href, as, options);
        var ownerDocument = globalDocument;
        if (ownerDocument && href && as) {
          var preloadSelector =
            'link[rel="preload"][as="' +
            escapeSelectorAttributeValueInsideDoubleQuotes(as) +
            '"]';
          "image" === as
            ? options && options.imageSrcSet
              ? ((preloadSelector +=
                  '[imagesrcset="' +
                  escapeSelectorAttributeValueInsideDoubleQuotes(
                    options.imageSrcSet
                  ) +
                  '"]'),
                "string" === typeof options.imageSizes &&
                  (preloadSelector +=
                    '[imagesizes="' +
                    escapeSelectorAttributeValueInsideDoubleQuotes(
                      options.imageSizes
                    ) +
                    '"]'))
              : (preloadSelector +=
                  '[href="' +
                  escapeSelectorAttributeValueInsideDoubleQuotes(href) +
                  '"]')
            : (preloadSelector +=
                '[href="' +
                escapeSelectorAttributeValueInsideDoubleQuotes(href) +
                '"]');
          var key = preloadSelector;
          switch (as) {
            case "style":
              key = getStyleKey(href);
              break;
            case "script":
              key = getScriptKey(href);
          }
          preloadPropsMap.has(key) ||
            ((href = assign(
              {
                rel: "preload",
                href:
                  "image" === as && options && options.imageSrcSet
                    ? void 0
                    : href,
                as: as
              },
              options
            )),
            preloadPropsMap.set(key, href),
            null !== ownerDocument.querySelector(preloadSelector) ||
              ("style" === as &&
                ownerDocument.querySelector(
                  getStylesheetSelectorFromKey(key)
                )) ||
              ("script" === as &&
                ownerDocument.querySelector(getScriptSelectorFromKey(key))) ||
              ((as = ownerDocument.createElement("link")),
              setInitialProperties(as, "link", href),
              markNodeAsHoistable(as),
              ownerDocument.head.appendChild(as)));
        }
      },
      m: function (href, options) {
        previousDispatcher.m(href, options);
        var ownerDocument = globalDocument;
        if (ownerDocument && href) {
          var as =
              options && "string" === typeof options.as ? options.as : "script",
            preloadSelector =
              'link[rel="modulepreload"][as="' +
              escapeSelectorAttributeValueInsideDoubleQuotes(as) +
              '"][href="' +
              escapeSelectorAttributeValueInsideDoubleQuotes(href) +
              '"]',
            key = preloadSelector;
          switch (as) {
            case "audioworklet":
            case "paintworklet":
            case "serviceworker":
            case "sharedworker":
            case "worker":
            case "script":
              key = getScriptKey(href);
          }
          if (
            !preloadPropsMap.has(key) &&
            ((href = assign({ rel: "modulepreload", href: href }, options)),
            preloadPropsMap.set(key, href),
            null === ownerDocument.querySelector(preloadSelector))
          ) {
            switch (as) {
              case "audioworklet":
              case "paintworklet":
              case "serviceworker":
              case "sharedworker":
              case "worker":
              case "script":
                if (ownerDocument.querySelector(getScriptSelectorFromKey(key)))
                  return;
            }
            as = ownerDocument.createElement("link");
            setInitialProperties(as, "link", href);
            markNodeAsHoistable(as);
            ownerDocument.head.appendChild(as);
          }
        }
      },
      X: function (src, options) {
        previousDispatcher.X(src, options);
        var ownerDocument = globalDocument;
        if (ownerDocument && src) {
          var scripts = getResourcesFromRoot(ownerDocument).hoistableScripts,
            key = getScriptKey(src),
            resource = scripts.get(key);
          resource ||
            ((resource = ownerDocument.querySelector(
              getScriptSelectorFromKey(key)
            )),
            resource ||
              ((src = assign({ src: src, async: !0 }, options)),
              (options = preloadPropsMap.get(key)) &&
                adoptPreloadPropsForScript(src, options),
              (resource = ownerDocument.createElement("script")),
              markNodeAsHoistable(resource),
              setInitialProperties(resource, "link", src),
              ownerDocument.head.appendChild(resource)),
            (resource = {
              type: "script",
              instance: resource,
              count: 1,
              state: null
            }),
            scripts.set(key, resource));
        }
      },
      S: function (href, precedence, options) {
        previousDispatcher.S(href, precedence, options);
        var ownerDocument = globalDocument;
        if (ownerDocument && href) {
          var styles = getResourcesFromRoot(ownerDocument).hoistableStyles,
            key = getStyleKey(href);
          precedence = precedence || "default";
          var resource = styles.get(key);
          if (!resource) {
            var state = { loading: NotLoaded, preload: null };
            if (
              (resource = ownerDocument.querySelector(
                getStylesheetSelectorFromKey(key)
              ))
            )
              state.loading = Loaded | Inserted;
            else {
              href = assign(
                {
                  rel: "stylesheet",
                  href: href,
                  "data-precedence": precedence
                },
                options
              );
              (options = preloadPropsMap.get(key)) &&
                adoptPreloadPropsForStylesheet(href, options);
              var link = (resource = ownerDocument.createElement("link"));
              markNodeAsHoistable(link);
              setInitialProperties(link, "link", href);
              link._p = new Promise(function (resolve, reject) {
                link.onload = resolve;
                link.onerror = reject;
              });
              link.addEventListener("load", function () {
                state.loading |= Loaded;
              });
              link.addEventListener("error", function () {
                state.loading |= Errored;
              });
              state.loading |= Inserted;
              insertStylesheet(resource, precedence, ownerDocument);
            }
            resource = {
              type: "stylesheet",
              instance: resource,
              count: 1,
              state: state
            };
            styles.set(key, resource);
          }
        }
      },
      M: function (src, options) {
        previousDispatcher.M(src, options);
        var ownerDocument = globalDocument;
        if (ownerDocument && src) {
          var scripts = getResourcesFromRoot(ownerDocument).hoistableScripts,
            key = getScriptKey(src),
            resource = scripts.get(key);
          resource ||
            ((resource = ownerDocument.querySelector(
              getScriptSelectorFromKey(key)
            )),
            resource ||
              ((src = assign({ src: src, async: !0, type: "module" }, options)),
              (options = preloadPropsMap.get(key)) &&
                adoptPreloadPropsForScript(src, options),
              (resource = ownerDocument.createElement("script")),
              markNodeAsHoistable(resource),
              setInitialProperties(resource, "link", src),
              ownerDocument.head.appendChild(resource)),
            (resource = {
              type: "script",
              instance: resource,
              count: 1,
              state: null
            }),
            scripts.set(key, resource));
        }
      }
    };
    var globalDocument = "undefined" === typeof document ? null : document,
      tagCaches = null,
      SUSPENSEY_STYLESHEET_TIMEOUT = 6e4,
      SUSPENSEY_IMAGE_TIMEOUT = 800,
      SUSPENSEY_IMAGE_TIME_ESTIMATE = 500,
      estimatedBytesWithinLimit = 0,
      LAST_PRECEDENCE = null,
      precedencesByRoot = null,
      NotPendingTransition = NotPending,
      HostTransitionContext = {
        $$typeof: REACT_CONTEXT_TYPE,
        Provider: null,
        Consumer: null,
        _currentValue: NotPendingTransition,
        _currentValue2: NotPendingTransition,
        _threadCount: 0
      },
      badgeFormat = "%c%s%c",
      badgeStyle =
        "background: #e6e6e6;background: light-dark(rgba(0,0,0,0.1), rgba(255,255,255,0.25));color: #000000;color: light-dark(#000000, #ffffff);border-radius: 2px",
      resetStyle = "",
      pad = " ",
      bind = Function.prototype.bind;
    var didWarnAboutNestedUpdates = !1;
    var overrideHookState = null,
      overrideHookStateDeletePath = null,
      overrideHookStateRenamePath = null,
      overrideProps = null,
      overridePropsDeletePath = null,
      overridePropsRenamePath = null,
      scheduleUpdate = null,
      scheduleRetry = null,
      setErrorHandler = null,
      setSuspenseHandler = null;
    overrideHookState = function (fiber, id, path, value) {
      id = findHook(fiber, id);
      null !== id &&
        ((path = copyWithSetImpl(id.memoizedState, path, 0, value)),
        (id.memoizedState = path),
        (id.baseState = path),
        (fiber.memoizedProps = assign({}, fiber.memoizedProps)),
        (path = enqueueConcurrentRenderForLane(fiber, 2)),
        null !== path && scheduleUpdateOnFiber(path, fiber, 2));
    };
    overrideHookStateDeletePath = function (fiber, id, path) {
      id = findHook(fiber, id);
      null !== id &&
        ((path = copyWithDeleteImpl(id.memoizedState, path, 0)),
        (id.memoizedState = path),
        (id.baseState = path),
        (fiber.memoizedProps = assign({}, fiber.memoizedProps)),
        (path = enqueueConcurrentRenderForLane(fiber, 2)),
        null !== path && scheduleUpdateOnFiber(path, fiber, 2));
    };
    overrideHookStateRenamePath = function (fiber, id, oldPath, newPath) {
      id = findHook(fiber, id);
      null !== id &&
        ((oldPath = copyWithRename(id.memoizedState, oldPath, newPath)),
        (id.memoizedState = oldPath),
        (id.baseState = oldPath),
        (fiber.memoizedProps = assign({}, fiber.memoizedProps)),
        (oldPath = enqueueConcurrentRenderForLane(fiber, 2)),
        null !== oldPath && scheduleUpdateOnFiber(oldPath, fiber, 2));
    };
    overrideProps = function (fiber, path, value) {
      fiber.pendingProps = copyWithSetImpl(fiber.memoizedProps, path, 0, value);
      fiber.alternate && (fiber.alternate.pendingProps = fiber.pendingProps);
      path = enqueueConcurrentRenderForLane(fiber, 2);
      null !== path && scheduleUpdateOnFiber(path, fiber, 2);
    };
    overridePropsDeletePath = function (fiber, path) {
      fiber.pendingProps = copyWithDeleteImpl(fiber.memoizedProps, path, 0);
      fiber.alternate && (fiber.alternate.pendingProps = fiber.pendingProps);
      path = enqueueConcurrentRenderForLane(fiber, 2);
      null !== path && scheduleUpdateOnFiber(path, fiber, 2);
    };
    overridePropsRenamePath = function (fiber, oldPath, newPath) {
      fiber.pendingProps = copyWithRename(
        fiber.memoizedProps,
        oldPath,
        newPath
      );
      fiber.alternate && (fiber.alternate.pendingProps = fiber.pendingProps);
      oldPath = enqueueConcurrentRenderForLane(fiber, 2);
      null !== oldPath && scheduleUpdateOnFiber(oldPath, fiber, 2);
    };
    scheduleUpdate = function (fiber) {
      var root = enqueueConcurrentRenderForLane(fiber, 2);
      null !== root && scheduleUpdateOnFiber(root, fiber, 2);
    };
    scheduleRetry = function (fiber) {
      var lane = claimNextRetryLane(),
        root = enqueueConcurrentRenderForLane(fiber, lane);
      null !== root && scheduleUpdateOnFiber(root, fiber, lane);
    };
    setErrorHandler = function (newShouldErrorImpl) {
      shouldErrorImpl = newShouldErrorImpl;
    };
    setSuspenseHandler = function (newShouldSuspendImpl) {
      shouldSuspendImpl = newShouldSuspendImpl;
    };
    var _enabled = !0,
      return_targetInst = null,
      hasScheduledReplayAttempt = !1,
      queuedFocus = null,
      queuedDrag = null,
      queuedMouse = null,
      queuedPointers = new Map(),
      queuedPointerCaptures = new Map(),
      queuedExplicitHydrationTargets = [],
      discreteReplayableEvents =
        "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset".split(
          " "
        ),
      lastScheduledReplayQueue = null;
    ReactDOMHydrationRoot.prototype.render = ReactDOMRoot.prototype.render =
      function (children) {
        var root = this._internalRoot;
        if (null === root) throw Error("Cannot update an unmounted root.");
        var args = arguments;
        "function" === typeof args[1]
          ? console.error(
              "does not support the second callback argument. To execute a side effect after rendering, declare it in a component body with useEffect()."
            )
          : isValidContainer(args[1])
            ? console.error(
                "You passed a container to the second argument of root.render(...). You don't need to pass it again since you already passed it to create the root."
              )
            : "undefined" !== typeof args[1] &&
              console.error(
                "You passed a second argument to root.render(...) but it only accepts one argument."
              );
        args = children;
        var current = root.current,
          lane = requestUpdateLane(current);
        updateContainerImpl(current, lane, args, root, null, null);
      };
    ReactDOMHydrationRoot.prototype.unmount = ReactDOMRoot.prototype.unmount =
      function () {
        var args = arguments;
        "function" === typeof args[0] &&
          console.error(
            "does not support a callback argument. To execute a side effect after rendering, declare it in a component body with useEffect()."
          );
        args = this._internalRoot;
        if (null !== args) {
          this._internalRoot = null;
          var container = args.containerInfo;
          (executionContext & (RenderContext | CommitContext)) !== NoContext &&
            console.error(
              "Attempted to synchronously unmount a root while React was already rendering. React cannot finish unmounting the root until the current render has completed, which may lead to a race condition."
            );
          updateContainerImpl(args.current, 2, null, args, null, null);
          flushSyncWork$1();
          container[internalContainerInstanceKey] = null;
        }
      };
    ReactDOMHydrationRoot.prototype.unstable_scheduleHydration = function (
      target
    ) {
      if (target) {
        var updatePriority = resolveUpdatePriority();
        target = { blockedOn: null, target: target, priority: updatePriority };
        for (
          var i = 0;
          i < queuedExplicitHydrationTargets.length &&
          0 !== updatePriority &&
          updatePriority < queuedExplicitHydrationTargets[i].priority;
          i++
        );
        queuedExplicitHydrationTargets.splice(i, 0, target);
        0 === i && attemptExplicitHydrationTarget(target);
      }
    };
    (function () {
      var isomorphicReactPackageVersion = React.version;
      if ("19.2.0" !== isomorphicReactPackageVersion)
        throw Error(
          'Incompatible React versions: The "react" and "react-dom" packages must have the exact same version. Instead got:\n  - react:      ' +
            (isomorphicReactPackageVersion +
              "\n  - react-dom:  19.2.0\nLearn more: https://react.dev/warnings/version-mismatch")
        );
    })();
    ("function" === typeof Map &&
      null != Map.prototype &&
      "function" === typeof Map.prototype.forEach &&
      "function" === typeof Set &&
      null != Set.prototype &&
      "function" === typeof Set.prototype.clear &&
      "function" === typeof Set.prototype.forEach) ||
      console.error(
        "React depends on Map and Set built-in types. Make sure that you load a polyfill in older browsers. https://react.dev/link/react-polyfills"
      );
    ReactDOMSharedInternals.findDOMNode = function (componentOrElement) {
      var fiber = componentOrElement._reactInternals;
      if (void 0 === fiber) {
        if ("function" === typeof componentOrElement.render)
          throw Error("Unable to find node on an unmounted component.");
        componentOrElement = Object.keys(componentOrElement).join(",");
        throw Error(
          "Argument appears to not be a ReactComponent. Keys: " +
            componentOrElement
        );
      }
      componentOrElement = findCurrentFiberUsingSlowPath(fiber);
      componentOrElement =
        null !== componentOrElement
          ? findCurrentHostFiberImpl(componentOrElement)
          : null;
      componentOrElement =
        null === componentOrElement ? null : componentOrElement.stateNode;
      return componentOrElement;
    };
    if (
      !(function () {
        var internals = {
          bundleType: 1,
          version: "19.2.0",
          rendererPackageName: "react-dom",
          currentDispatcherRef: ReactSharedInternals,
          reconcilerVersion: "19.2.0"
        };
        internals.overrideHookState = overrideHookState;
        internals.overrideHookStateDeletePath = overrideHookStateDeletePath;
        internals.overrideHookStateRenamePath = overrideHookStateRenamePath;
        internals.overrideProps = overrideProps;
        internals.overridePropsDeletePath = overridePropsDeletePath;
        internals.overridePropsRenamePath = overridePropsRenamePath;
        internals.scheduleUpdate = scheduleUpdate;
        internals.scheduleRetry = scheduleRetry;
        internals.setErrorHandler = setErrorHandler;
        internals.setSuspenseHandler = setSuspenseHandler;
        internals.scheduleRefresh = scheduleRefresh;
        internals.scheduleRoot = scheduleRoot;
        internals.setRefreshHandler = setRefreshHandler;
        internals.getCurrentFiber = getCurrentFiberForDevTools;
        return injectInternals(internals);
      })() &&
      canUseDOM &&
      window.top === window.self &&
      ((-1 < navigator.userAgent.indexOf("Chrome") &&
        -1 === navigator.userAgent.indexOf("Edge")) ||
        -1 < navigator.userAgent.indexOf("Firefox"))
    ) {
      var protocol = window.location.protocol;
      /^(https?|file):$/.test(protocol) &&
        console.info(
          "%cDownload the React DevTools for a better development experience: https://react.dev/link/react-devtools" +
            ("file:" === protocol
              ? "\nYou might need to use a local HTTP server (instead of file://): https://react.dev/link/react-devtools-faq"
              : ""),
          "font-weight:bold"
        );
    }
    exports.createRoot = function (container, options) {
      if (!isValidContainer(container))
        throw Error("Target container is not a DOM element.");
      warnIfReactDOMContainerInDEV(container);
      var isStrictMode = !1,
        identifierPrefix = "",
        onUncaughtError = defaultOnUncaughtError,
        onCaughtError = defaultOnCaughtError,
        onRecoverableError = defaultOnRecoverableError;
      null !== options &&
        void 0 !== options &&
        (options.hydrate
          ? console.warn(
              "hydrate through createRoot is deprecated. Use ReactDOMClient.hydrateRoot(container, <App />) instead."
            )
          : "object" === typeof options &&
            null !== options &&
            options.$$typeof === REACT_ELEMENT_TYPE &&
            console.error(
              "You passed a JSX element to createRoot. You probably meant to call root.render instead. Example usage:\n\n  let root = createRoot(domContainer);\n  root.render(<App />);"
            ),
        !0 === options.unstable_strictMode && (isStrictMode = !0),
        void 0 !== options.identifierPrefix &&
          (identifierPrefix = options.identifierPrefix),
        void 0 !== options.onUncaughtError &&
          (onUncaughtError = options.onUncaughtError),
        void 0 !== options.onCaughtError &&
          (onCaughtError = options.onCaughtError),
        void 0 !== options.onRecoverableError &&
          (onRecoverableError = options.onRecoverableError));
      options = createFiberRoot(
        container,
        1,
        !1,
        null,
        null,
        isStrictMode,
        identifierPrefix,
        null,
        onUncaughtError,
        onCaughtError,
        onRecoverableError,
        defaultOnDefaultTransitionIndicator
      );
      container[internalContainerInstanceKey] = options.current;
      listenToAllSupportedEvents(container);
      return new ReactDOMRoot(options);
    };
    exports.hydrateRoot = function (container, initialChildren, options) {
      if (!isValidContainer(container))
        throw Error("Target container is not a DOM element.");
      warnIfReactDOMContainerInDEV(container);
      void 0 === initialChildren &&
        console.error(
          "Must provide initial children as second argument to hydrateRoot. Example usage: hydrateRoot(domContainer, <App />)"
        );
      var isStrictMode = !1,
        identifierPrefix = "",
        onUncaughtError = defaultOnUncaughtError,
        onCaughtError = defaultOnCaughtError,
        onRecoverableError = defaultOnRecoverableError,
        formState = null;
      null !== options &&
        void 0 !== options &&
        (!0 === options.unstable_strictMode && (isStrictMode = !0),
        void 0 !== options.identifierPrefix &&
          (identifierPrefix = options.identifierPrefix),
        void 0 !== options.onUncaughtError &&
          (onUncaughtError = options.onUncaughtError),
        void 0 !== options.onCaughtError &&
          (onCaughtError = options.onCaughtError),
        void 0 !== options.onRecoverableError &&
          (onRecoverableError = options.onRecoverableError),
        void 0 !== options.formState && (formState = options.formState));
      initialChildren = createFiberRoot(
        container,
        1,
        !0,
        initialChildren,
        null != options ? options : null,
        isStrictMode,
        identifierPrefix,
        formState,
        onUncaughtError,
        onCaughtError,
        onRecoverableError,
        defaultOnDefaultTransitionIndicator
      );
      initialChildren.context = getContextForSubtree(null);
      options = initialChildren.current;
      isStrictMode = requestUpdateLane(options);
      isStrictMode = getBumpedLaneForHydrationByLane(isStrictMode);
      identifierPrefix = createUpdate(isStrictMode);
      identifierPrefix.callback = null;
      enqueueUpdate(options, identifierPrefix, isStrictMode);
      startUpdateTimerByLane(isStrictMode, "hydrateRoot()", null);
      options = isStrictMode;
      initialChildren.current.lanes = options;
      markRootUpdated$1(initialChildren, options);
      ensureRootIsScheduled(initialChildren);
      container[internalContainerInstanceKey] = initialChildren.current;
      listenToAllSupportedEvents(container);
      return new ReactDOMHydrationRoot(initialChildren);
    };
    exports.version = "19.2.0";
    "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
      "function" ===
        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&
      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());
  })();


/***/ }),

/***/ "./node_modules/react-dom/cjs/react-dom.development.js":
/*!*************************************************************!*\
  !*** ./node_modules/react-dom/cjs/react-dom.development.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

/**
 * @license React
 * react-dom.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


 true &&
  (function () {
    function noop() {}
    function testStringCoercion(value) {
      return "" + value;
    }
    function createPortal$1(children, containerInfo, implementation) {
      var key =
        3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;
      try {
        testStringCoercion(key);
        var JSCompiler_inline_result = !1;
      } catch (e) {
        JSCompiler_inline_result = !0;
      }
      JSCompiler_inline_result &&
        (console.error(
          "The provided key is an unsupported type %s. This value must be coerced to a string before using it here.",
          ("function" === typeof Symbol &&
            Symbol.toStringTag &&
            key[Symbol.toStringTag]) ||
            key.constructor.name ||
            "Object"
        ),
        testStringCoercion(key));
      return {
        $$typeof: REACT_PORTAL_TYPE,
        key: null == key ? null : "" + key,
        children: children,
        containerInfo: containerInfo,
        implementation: implementation
      };
    }
    function getCrossOriginStringAs(as, input) {
      if ("font" === as) return "";
      if ("string" === typeof input)
        return "use-credentials" === input ? input : "";
    }
    function getValueDescriptorExpectingObjectForWarning(thing) {
      return null === thing
        ? "`null`"
        : void 0 === thing
          ? "`undefined`"
          : "" === thing
            ? "an empty string"
            : 'something with type "' + typeof thing + '"';
    }
    function getValueDescriptorExpectingEnumForWarning(thing) {
      return null === thing
        ? "`null`"
        : void 0 === thing
          ? "`undefined`"
          : "" === thing
            ? "an empty string"
            : "string" === typeof thing
              ? JSON.stringify(thing)
              : "number" === typeof thing
                ? "`" + thing + "`"
                : 'something with type "' + typeof thing + '"';
    }
    function resolveDispatcher() {
      var dispatcher = ReactSharedInternals.H;
      null === dispatcher &&
        console.error(
          "Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://react.dev/link/invalid-hook-call for tips about how to debug and fix this problem."
        );
      return dispatcher;
    }
    "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
      "function" ===
        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart &&
      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());
    var React = __webpack_require__(/*! react */ "./node_modules/react/index.js"),
      Internals = {
        d: {
          f: noop,
          r: function () {
            throw Error(
              "Invalid form element. requestFormReset must be passed a form that was rendered by React."
            );
          },
          D: noop,
          C: noop,
          L: noop,
          m: noop,
          X: noop,
          S: noop,
          M: noop
        },
        p: 0,
        findDOMNode: null
      },
      REACT_PORTAL_TYPE = Symbol.for("react.portal"),
      ReactSharedInternals =
        React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;
    ("function" === typeof Map &&
      null != Map.prototype &&
      "function" === typeof Map.prototype.forEach &&
      "function" === typeof Set &&
      null != Set.prototype &&
      "function" === typeof Set.prototype.clear &&
      "function" === typeof Set.prototype.forEach) ||
      console.error(
        "React depends on Map and Set built-in types. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"
      );
    exports.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =
      Internals;
    exports.createPortal = function (children, container) {
      var key =
        2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;
      if (
        !container ||
        (1 !== container.nodeType &&
          9 !== container.nodeType &&
          11 !== container.nodeType)
      )
        throw Error("Target container is not a DOM element.");
      return createPortal$1(children, container, null, key);
    };
    exports.flushSync = function (fn) {
      var previousTransition = ReactSharedInternals.T,
        previousUpdatePriority = Internals.p;
      try {
        if (((ReactSharedInternals.T = null), (Internals.p = 2), fn))
          return fn();
      } finally {
        (ReactSharedInternals.T = previousTransition),
          (Internals.p = previousUpdatePriority),
          Internals.d.f() &&
            console.error(
              "flushSync was called from inside a lifecycle method. React cannot flush when React is already rendering. Consider moving this call to a scheduler task or micro task."
            );
      }
    };
    exports.preconnect = function (href, options) {
      "string" === typeof href && href
        ? null != options && "object" !== typeof options
          ? console.error(
              "ReactDOM.preconnect(): Expected the `options` argument (second) to be an object but encountered %s instead. The only supported option at this time is `crossOrigin` which accepts a string.",
              getValueDescriptorExpectingEnumForWarning(options)
            )
          : null != options &&
            "string" !== typeof options.crossOrigin &&
            console.error(
              "ReactDOM.preconnect(): Expected the `crossOrigin` option (second argument) to be a string but encountered %s instead. Try removing this option or passing a string value instead.",
              getValueDescriptorExpectingObjectForWarning(options.crossOrigin)
            )
        : console.error(
            "ReactDOM.preconnect(): Expected the `href` argument (first) to be a non-empty string but encountered %s instead.",
            getValueDescriptorExpectingObjectForWarning(href)
          );
      "string" === typeof href &&
        (options
          ? ((options = options.crossOrigin),
            (options =
              "string" === typeof options
                ? "use-credentials" === options
                  ? options
                  : ""
                : void 0))
          : (options = null),
        Internals.d.C(href, options));
    };
    exports.prefetchDNS = function (href) {
      if ("string" !== typeof href || !href)
        console.error(
          "ReactDOM.prefetchDNS(): Expected the `href` argument (first) to be a non-empty string but encountered %s instead.",
          getValueDescriptorExpectingObjectForWarning(href)
        );
      else if (1 < arguments.length) {
        var options = arguments[1];
        "object" === typeof options && options.hasOwnProperty("crossOrigin")
          ? console.error(
              "ReactDOM.prefetchDNS(): Expected only one argument, `href`, but encountered %s as a second argument instead. This argument is reserved for future options and is currently disallowed. It looks like the you are attempting to set a crossOrigin property for this DNS lookup hint. Browsers do not perform DNS queries using CORS and setting this attribute on the resource hint has no effect. Try calling ReactDOM.prefetchDNS() with just a single string argument, `href`.",
              getValueDescriptorExpectingEnumForWarning(options)
            )
          : console.error(
              "ReactDOM.prefetchDNS(): Expected only one argument, `href`, but encountered %s as a second argument instead. This argument is reserved for future options and is currently disallowed. Try calling ReactDOM.prefetchDNS() with just a single string argument, `href`.",
              getValueDescriptorExpectingEnumForWarning(options)
            );
      }
      "string" === typeof href && Internals.d.D(href);
    };
    exports.preinit = function (href, options) {
      "string" === typeof href && href
        ? null == options || "object" !== typeof options
          ? console.error(
              "ReactDOM.preinit(): Expected the `options` argument (second) to be an object with an `as` property describing the type of resource to be preinitialized but encountered %s instead.",
              getValueDescriptorExpectingEnumForWarning(options)
            )
          : "style" !== options.as &&
            "script" !== options.as &&
            console.error(
              'ReactDOM.preinit(): Expected the `as` property in the `options` argument (second) to contain a valid value describing the type of resource to be preinitialized but encountered %s instead. Valid values for `as` are "style" and "script".',
              getValueDescriptorExpectingEnumForWarning(options.as)
            )
        : console.error(
            "ReactDOM.preinit(): Expected the `href` argument (first) to be a non-empty string but encountered %s instead.",
            getValueDescriptorExpectingObjectForWarning(href)
          );
      if (
        "string" === typeof href &&
        options &&
        "string" === typeof options.as
      ) {
        var as = options.as,
          crossOrigin = getCrossOriginStringAs(as, options.crossOrigin),
          integrity =
            "string" === typeof options.integrity ? options.integrity : void 0,
          fetchPriority =
            "string" === typeof options.fetchPriority
              ? options.fetchPriority
              : void 0;
        "style" === as
          ? Internals.d.S(
              href,
              "string" === typeof options.precedence
                ? options.precedence
                : void 0,
              {
                crossOrigin: crossOrigin,
                integrity: integrity,
                fetchPriority: fetchPriority
              }
            )
          : "script" === as &&
            Internals.d.X(href, {
              crossOrigin: crossOrigin,
              integrity: integrity,
              fetchPriority: fetchPriority,
              nonce: "string" === typeof options.nonce ? options.nonce : void 0
            });
      }
    };
    exports.preinitModule = function (href, options) {
      var encountered = "";
      ("string" === typeof href && href) ||
        (encountered +=
          " The `href` argument encountered was " +
          getValueDescriptorExpectingObjectForWarning(href) +
          ".");
      void 0 !== options && "object" !== typeof options
        ? (encountered +=
            " The `options` argument encountered was " +
            getValueDescriptorExpectingObjectForWarning(options) +
            ".")
        : options &&
          "as" in options &&
          "script" !== options.as &&
          (encountered +=
            " The `as` option encountered was " +
            getValueDescriptorExpectingEnumForWarning(options.as) +
            ".");
      if (encountered)
        console.error(
          "ReactDOM.preinitModule(): Expected up to two arguments, a non-empty `href` string and, optionally, an `options` object with a valid `as` property.%s",
          encountered
        );
      else
        switch (
          ((encountered =
            options && "string" === typeof options.as ? options.as : "script"),
          encountered)
        ) {
          case "script":
            break;
          default:
            (encountered =
              getValueDescriptorExpectingEnumForWarning(encountered)),
              console.error(
                'ReactDOM.preinitModule(): Currently the only supported "as" type for this function is "script" but received "%s" instead. This warning was generated for `href` "%s". In the future other module types will be supported, aligning with the import-attributes proposal. Learn more here: (https://github.com/tc39/proposal-import-attributes)',
                encountered,
                href
              );
        }
      if ("string" === typeof href)
        if ("object" === typeof options && null !== options) {
          if (null == options.as || "script" === options.as)
            (encountered = getCrossOriginStringAs(
              options.as,
              options.crossOrigin
            )),
              Internals.d.M(href, {
                crossOrigin: encountered,
                integrity:
                  "string" === typeof options.integrity
                    ? options.integrity
                    : void 0,
                nonce:
                  "string" === typeof options.nonce ? options.nonce : void 0
              });
        } else null == options && Internals.d.M(href);
    };
    exports.preload = function (href, options) {
      var encountered = "";
      ("string" === typeof href && href) ||
        (encountered +=
          " The `href` argument encountered was " +
          getValueDescriptorExpectingObjectForWarning(href) +
          ".");
      null == options || "object" !== typeof options
        ? (encountered +=
            " The `options` argument encountered was " +
            getValueDescriptorExpectingObjectForWarning(options) +
            ".")
        : ("string" === typeof options.as && options.as) ||
          (encountered +=
            " The `as` option encountered was " +
            getValueDescriptorExpectingObjectForWarning(options.as) +
            ".");
      encountered &&
        console.error(
          'ReactDOM.preload(): Expected two arguments, a non-empty `href` string and an `options` object with an `as` property valid for a `<link rel="preload" as="..." />` tag.%s',
          encountered
        );
      if (
        "string" === typeof href &&
        "object" === typeof options &&
        null !== options &&
        "string" === typeof options.as
      ) {
        encountered = options.as;
        var crossOrigin = getCrossOriginStringAs(
          encountered,
          options.crossOrigin
        );
        Internals.d.L(href, encountered, {
          crossOrigin: crossOrigin,
          integrity:
            "string" === typeof options.integrity ? options.integrity : void 0,
          nonce: "string" === typeof options.nonce ? options.nonce : void 0,
          type: "string" === typeof options.type ? options.type : void 0,
          fetchPriority:
            "string" === typeof options.fetchPriority
              ? options.fetchPriority
              : void 0,
          referrerPolicy:
            "string" === typeof options.referrerPolicy
              ? options.referrerPolicy
              : void 0,
          imageSrcSet:
            "string" === typeof options.imageSrcSet
              ? options.imageSrcSet
              : void 0,
          imageSizes:
            "string" === typeof options.imageSizes
              ? options.imageSizes
              : void 0,
          media: "string" === typeof options.media ? options.media : void 0
        });
      }
    };
    exports.preloadModule = function (href, options) {
      var encountered = "";
      ("string" === typeof href && href) ||
        (encountered +=
          " The `href` argument encountered was " +
          getValueDescriptorExpectingObjectForWarning(href) +
          ".");
      void 0 !== options && "object" !== typeof options
        ? (encountered +=
            " The `options` argument encountered was " +
            getValueDescriptorExpectingObjectForWarning(options) +
            ".")
        : options &&
          "as" in options &&
          "string" !== typeof options.as &&
          (encountered +=
            " The `as` option encountered was " +
            getValueDescriptorExpectingObjectForWarning(options.as) +
            ".");
      encountered &&
        console.error(
          'ReactDOM.preloadModule(): Expected two arguments, a non-empty `href` string and, optionally, an `options` object with an `as` property valid for a `<link rel="modulepreload" as="..." />` tag.%s',
          encountered
        );
      "string" === typeof href &&
        (options
          ? ((encountered = getCrossOriginStringAs(
              options.as,
              options.crossOrigin
            )),
            Internals.d.m(href, {
              as:
                "string" === typeof options.as && "script" !== options.as
                  ? options.as
                  : void 0,
              crossOrigin: encountered,
              integrity:
                "string" === typeof options.integrity
                  ? options.integrity
                  : void 0
            }))
          : Internals.d.m(href));
    };
    exports.requestFormReset = function (form) {
      Internals.d.r(form);
    };
    exports.unstable_batchedUpdates = function (fn, a) {
      return fn(a);
    };
    exports.useFormState = function (action, initialState, permalink) {
      return resolveDispatcher().useFormState(action, initialState, permalink);
    };
    exports.useFormStatus = function () {
      return resolveDispatcher().useHostTransitionStatus();
    };
    exports.version = "19.2.0";
    "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
      "function" ===
        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&
      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());
  })();


/***/ }),

/***/ "./node_modules/react-dom/client.js":
/*!******************************************!*\
  !*** ./node_modules/react-dom/client.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



function checkDCE() {
  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
  if (
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'
  ) {
    return;
  }
  if (true) {
    // This branch is unreachable because this function is only called
    // in production, but the condition is true only in development.
    // Therefore if the branch is still here, dead code elimination wasn't
    // properly applied.
    // Don't change the message. React DevTools relies on it. Also make sure
    // this message doesn't occur elsewhere in this function, or it will cause
    // a false positive.
    throw new Error('^_^');
  }
  // removed by dead control flow

}

if (false) // removed by dead control flow
{} else {
  module.exports = __webpack_require__(/*! ./cjs/react-dom-client.development.js */ "./node_modules/react-dom/cjs/react-dom-client.development.js");
}


/***/ }),

/***/ "./node_modules/react-dom/index.js":
/*!*****************************************!*\
  !*** ./node_modules/react-dom/index.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



function checkDCE() {
  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
  if (
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'
  ) {
    return;
  }
  if (true) {
    // This branch is unreachable because this function is only called
    // in production, but the condition is true only in development.
    // Therefore if the branch is still here, dead code elimination wasn't
    // properly applied.
    // Don't change the message. React DevTools relies on it. Also make sure
    // this message doesn't occur elsewhere in this function, or it will cause
    // a false positive.
    throw new Error('^_^');
  }
  // removed by dead control flow

}

if (false) // removed by dead control flow
{} else {
  module.exports = __webpack_require__(/*! ./cjs/react-dom.development.js */ "./node_modules/react-dom/cjs/react-dom.development.js");
}


/***/ }),

/***/ "./node_modules/react/cjs/react.development.js":
/*!*****************************************************!*\
  !*** ./node_modules/react/cjs/react.development.js ***!
  \*****************************************************/
/***/ ((module, exports, __webpack_require__) => {

/* module decorator */ module = __webpack_require__.nmd(module);
/**
 * @license React
 * react.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


 true &&
  (function () {
    function defineDeprecationWarning(methodName, info) {
      Object.defineProperty(Component.prototype, methodName, {
        get: function () {
          console.warn(
            "%s(...) is deprecated in plain JavaScript React classes. %s",
            info[0],
            info[1]
          );
        }
      });
    }
    function getIteratorFn(maybeIterable) {
      if (null === maybeIterable || "object" !== typeof maybeIterable)
        return null;
      maybeIterable =
        (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||
        maybeIterable["@@iterator"];
      return "function" === typeof maybeIterable ? maybeIterable : null;
    }
    function warnNoop(publicInstance, callerName) {
      publicInstance =
        ((publicInstance = publicInstance.constructor) &&
          (publicInstance.displayName || publicInstance.name)) ||
        "ReactClass";
      var warningKey = publicInstance + "." + callerName;
      didWarnStateUpdateForUnmountedComponent[warningKey] ||
        (console.error(
          "Can't call %s on a component that is not yet mounted. This is a no-op, but it might indicate a bug in your application. Instead, assign to `this.state` directly or define a `state = {};` class property with the desired state in the %s component.",
          callerName,
          publicInstance
        ),
        (didWarnStateUpdateForUnmountedComponent[warningKey] = !0));
    }
    function Component(props, context, updater) {
      this.props = props;
      this.context = context;
      this.refs = emptyObject;
      this.updater = updater || ReactNoopUpdateQueue;
    }
    function ComponentDummy() {}
    function PureComponent(props, context, updater) {
      this.props = props;
      this.context = context;
      this.refs = emptyObject;
      this.updater = updater || ReactNoopUpdateQueue;
    }
    function noop() {}
    function testStringCoercion(value) {
      return "" + value;
    }
    function checkKeyStringCoercion(value) {
      try {
        testStringCoercion(value);
        var JSCompiler_inline_result = !1;
      } catch (e) {
        JSCompiler_inline_result = !0;
      }
      if (JSCompiler_inline_result) {
        JSCompiler_inline_result = console;
        var JSCompiler_temp_const = JSCompiler_inline_result.error;
        var JSCompiler_inline_result$jscomp$0 =
          ("function" === typeof Symbol &&
            Symbol.toStringTag &&
            value[Symbol.toStringTag]) ||
          value.constructor.name ||
          "Object";
        JSCompiler_temp_const.call(
          JSCompiler_inline_result,
          "The provided key is an unsupported type %s. This value must be coerced to a string before using it here.",
          JSCompiler_inline_result$jscomp$0
        );
        return testStringCoercion(value);
      }
    }
    function getComponentNameFromType(type) {
      if (null == type) return null;
      if ("function" === typeof type)
        return type.$$typeof === REACT_CLIENT_REFERENCE
          ? null
          : type.displayName || type.name || null;
      if ("string" === typeof type) return type;
      switch (type) {
        case REACT_FRAGMENT_TYPE:
          return "Fragment";
        case REACT_PROFILER_TYPE:
          return "Profiler";
        case REACT_STRICT_MODE_TYPE:
          return "StrictMode";
        case REACT_SUSPENSE_TYPE:
          return "Suspense";
        case REACT_SUSPENSE_LIST_TYPE:
          return "SuspenseList";
        case REACT_ACTIVITY_TYPE:
          return "Activity";
      }
      if ("object" === typeof type)
        switch (
          ("number" === typeof type.tag &&
            console.error(
              "Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."
            ),
          type.$$typeof)
        ) {
          case REACT_PORTAL_TYPE:
            return "Portal";
          case REACT_CONTEXT_TYPE:
            return type.displayName || "Context";
          case REACT_CONSUMER_TYPE:
            return (type._context.displayName || "Context") + ".Consumer";
          case REACT_FORWARD_REF_TYPE:
            var innerType = type.render;
            type = type.displayName;
            type ||
              ((type = innerType.displayName || innerType.name || ""),
              (type = "" !== type ? "ForwardRef(" + type + ")" : "ForwardRef"));
            return type;
          case REACT_MEMO_TYPE:
            return (
              (innerType = type.displayName || null),
              null !== innerType
                ? innerType
                : getComponentNameFromType(type.type) || "Memo"
            );
          case REACT_LAZY_TYPE:
            innerType = type._payload;
            type = type._init;
            try {
              return getComponentNameFromType(type(innerType));
            } catch (x) {}
        }
      return null;
    }
    function getTaskName(type) {
      if (type === REACT_FRAGMENT_TYPE) return "<>";
      if (
        "object" === typeof type &&
        null !== type &&
        type.$$typeof === REACT_LAZY_TYPE
      )
        return "<...>";
      try {
        var name = getComponentNameFromType(type);
        return name ? "<" + name + ">" : "<...>";
      } catch (x) {
        return "<...>";
      }
    }
    function getOwner() {
      var dispatcher = ReactSharedInternals.A;
      return null === dispatcher ? null : dispatcher.getOwner();
    }
    function UnknownOwner() {
      return Error("react-stack-top-frame");
    }
    function hasValidKey(config) {
      if (hasOwnProperty.call(config, "key")) {
        var getter = Object.getOwnPropertyDescriptor(config, "key").get;
        if (getter && getter.isReactWarning) return !1;
      }
      return void 0 !== config.key;
    }
    function defineKeyPropWarningGetter(props, displayName) {
      function warnAboutAccessingKey() {
        specialPropKeyWarningShown ||
          ((specialPropKeyWarningShown = !0),
          console.error(
            "%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://react.dev/link/special-props)",
            displayName
          ));
      }
      warnAboutAccessingKey.isReactWarning = !0;
      Object.defineProperty(props, "key", {
        get: warnAboutAccessingKey,
        configurable: !0
      });
    }
    function elementRefGetterWithDeprecationWarning() {
      var componentName = getComponentNameFromType(this.type);
      didWarnAboutElementRef[componentName] ||
        ((didWarnAboutElementRef[componentName] = !0),
        console.error(
          "Accessing element.ref was removed in React 19. ref is now a regular prop. It will be removed from the JSX Element type in a future release."
        ));
      componentName = this.props.ref;
      return void 0 !== componentName ? componentName : null;
    }
    function ReactElement(type, key, props, owner, debugStack, debugTask) {
      var refProp = props.ref;
      type = {
        $$typeof: REACT_ELEMENT_TYPE,
        type: type,
        key: key,
        props: props,
        _owner: owner
      };
      null !== (void 0 !== refProp ? refProp : null)
        ? Object.defineProperty(type, "ref", {
            enumerable: !1,
            get: elementRefGetterWithDeprecationWarning
          })
        : Object.defineProperty(type, "ref", { enumerable: !1, value: null });
      type._store = {};
      Object.defineProperty(type._store, "validated", {
        configurable: !1,
        enumerable: !1,
        writable: !0,
        value: 0
      });
      Object.defineProperty(type, "_debugInfo", {
        configurable: !1,
        enumerable: !1,
        writable: !0,
        value: null
      });
      Object.defineProperty(type, "_debugStack", {
        configurable: !1,
        enumerable: !1,
        writable: !0,
        value: debugStack
      });
      Object.defineProperty(type, "_debugTask", {
        configurable: !1,
        enumerable: !1,
        writable: !0,
        value: debugTask
      });
      Object.freeze && (Object.freeze(type.props), Object.freeze(type));
      return type;
    }
    function cloneAndReplaceKey(oldElement, newKey) {
      newKey = ReactElement(
        oldElement.type,
        newKey,
        oldElement.props,
        oldElement._owner,
        oldElement._debugStack,
        oldElement._debugTask
      );
      oldElement._store &&
        (newKey._store.validated = oldElement._store.validated);
      return newKey;
    }
    function validateChildKeys(node) {
      isValidElement(node)
        ? node._store && (node._store.validated = 1)
        : "object" === typeof node &&
          null !== node &&
          node.$$typeof === REACT_LAZY_TYPE &&
          ("fulfilled" === node._payload.status
            ? isValidElement(node._payload.value) &&
              node._payload.value._store &&
              (node._payload.value._store.validated = 1)
            : node._store && (node._store.validated = 1));
    }
    function isValidElement(object) {
      return (
        "object" === typeof object &&
        null !== object &&
        object.$$typeof === REACT_ELEMENT_TYPE
      );
    }
    function escape(key) {
      var escaperLookup = { "=": "=0", ":": "=2" };
      return (
        "$" +
        key.replace(/[=:]/g, function (match) {
          return escaperLookup[match];
        })
      );
    }
    function getElementKey(element, index) {
      return "object" === typeof element &&
        null !== element &&
        null != element.key
        ? (checkKeyStringCoercion(element.key), escape("" + element.key))
        : index.toString(36);
    }
    function resolveThenable(thenable) {
      switch (thenable.status) {
        case "fulfilled":
          return thenable.value;
        case "rejected":
          throw thenable.reason;
        default:
          switch (
            ("string" === typeof thenable.status
              ? thenable.then(noop, noop)
              : ((thenable.status = "pending"),
                thenable.then(
                  function (fulfilledValue) {
                    "pending" === thenable.status &&
                      ((thenable.status = "fulfilled"),
                      (thenable.value = fulfilledValue));
                  },
                  function (error) {
                    "pending" === thenable.status &&
                      ((thenable.status = "rejected"),
                      (thenable.reason = error));
                  }
                )),
            thenable.status)
          ) {
            case "fulfilled":
              return thenable.value;
            case "rejected":
              throw thenable.reason;
          }
      }
      throw thenable;
    }
    function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {
      var type = typeof children;
      if ("undefined" === type || "boolean" === type) children = null;
      var invokeCallback = !1;
      if (null === children) invokeCallback = !0;
      else
        switch (type) {
          case "bigint":
          case "string":
          case "number":
            invokeCallback = !0;
            break;
          case "object":
            switch (children.$$typeof) {
              case REACT_ELEMENT_TYPE:
              case REACT_PORTAL_TYPE:
                invokeCallback = !0;
                break;
              case REACT_LAZY_TYPE:
                return (
                  (invokeCallback = children._init),
                  mapIntoArray(
                    invokeCallback(children._payload),
                    array,
                    escapedPrefix,
                    nameSoFar,
                    callback
                  )
                );
            }
        }
      if (invokeCallback) {
        invokeCallback = children;
        callback = callback(invokeCallback);
        var childKey =
          "" === nameSoFar ? "." + getElementKey(invokeCallback, 0) : nameSoFar;
        isArrayImpl(callback)
          ? ((escapedPrefix = ""),
            null != childKey &&
              (escapedPrefix =
                childKey.replace(userProvidedKeyEscapeRegex, "$&/") + "/"),
            mapIntoArray(callback, array, escapedPrefix, "", function (c) {
              return c;
            }))
          : null != callback &&
            (isValidElement(callback) &&
              (null != callback.key &&
                ((invokeCallback && invokeCallback.key === callback.key) ||
                  checkKeyStringCoercion(callback.key)),
              (escapedPrefix = cloneAndReplaceKey(
                callback,
                escapedPrefix +
                  (null == callback.key ||
                  (invokeCallback && invokeCallback.key === callback.key)
                    ? ""
                    : ("" + callback.key).replace(
                        userProvidedKeyEscapeRegex,
                        "$&/"
                      ) + "/") +
                  childKey
              )),
              "" !== nameSoFar &&
                null != invokeCallback &&
                isValidElement(invokeCallback) &&
                null == invokeCallback.key &&
                invokeCallback._store &&
                !invokeCallback._store.validated &&
                (escapedPrefix._store.validated = 2),
              (callback = escapedPrefix)),
            array.push(callback));
        return 1;
      }
      invokeCallback = 0;
      childKey = "" === nameSoFar ? "." : nameSoFar + ":";
      if (isArrayImpl(children))
        for (var i = 0; i < children.length; i++)
          (nameSoFar = children[i]),
            (type = childKey + getElementKey(nameSoFar, i)),
            (invokeCallback += mapIntoArray(
              nameSoFar,
              array,
              escapedPrefix,
              type,
              callback
            ));
      else if (((i = getIteratorFn(children)), "function" === typeof i))
        for (
          i === children.entries &&
            (didWarnAboutMaps ||
              console.warn(
                "Using Maps as children is not supported. Use an array of keyed ReactElements instead."
              ),
            (didWarnAboutMaps = !0)),
            children = i.call(children),
            i = 0;
          !(nameSoFar = children.next()).done;

        )
          (nameSoFar = nameSoFar.value),
            (type = childKey + getElementKey(nameSoFar, i++)),
            (invokeCallback += mapIntoArray(
              nameSoFar,
              array,
              escapedPrefix,
              type,
              callback
            ));
      else if ("object" === type) {
        if ("function" === typeof children.then)
          return mapIntoArray(
            resolveThenable(children),
            array,
            escapedPrefix,
            nameSoFar,
            callback
          );
        array = String(children);
        throw Error(
          "Objects are not valid as a React child (found: " +
            ("[object Object]" === array
              ? "object with keys {" + Object.keys(children).join(", ") + "}"
              : array) +
            "). If you meant to render a collection of children, use an array instead."
        );
      }
      return invokeCallback;
    }
    function mapChildren(children, func, context) {
      if (null == children) return children;
      var result = [],
        count = 0;
      mapIntoArray(children, result, "", "", function (child) {
        return func.call(context, child, count++);
      });
      return result;
    }
    function lazyInitializer(payload) {
      if (-1 === payload._status) {
        var ioInfo = payload._ioInfo;
        null != ioInfo && (ioInfo.start = ioInfo.end = performance.now());
        ioInfo = payload._result;
        var thenable = ioInfo();
        thenable.then(
          function (moduleObject) {
            if (0 === payload._status || -1 === payload._status) {
              payload._status = 1;
              payload._result = moduleObject;
              var _ioInfo = payload._ioInfo;
              null != _ioInfo && (_ioInfo.end = performance.now());
              void 0 === thenable.status &&
                ((thenable.status = "fulfilled"),
                (thenable.value = moduleObject));
            }
          },
          function (error) {
            if (0 === payload._status || -1 === payload._status) {
              payload._status = 2;
              payload._result = error;
              var _ioInfo2 = payload._ioInfo;
              null != _ioInfo2 && (_ioInfo2.end = performance.now());
              void 0 === thenable.status &&
                ((thenable.status = "rejected"), (thenable.reason = error));
            }
          }
        );
        ioInfo = payload._ioInfo;
        if (null != ioInfo) {
          ioInfo.value = thenable;
          var displayName = thenable.displayName;
          "string" === typeof displayName && (ioInfo.name = displayName);
        }
        -1 === payload._status &&
          ((payload._status = 0), (payload._result = thenable));
      }
      if (1 === payload._status)
        return (
          (ioInfo = payload._result),
          void 0 === ioInfo &&
            console.error(
              "lazy: Expected the result of a dynamic import() call. Instead received: %s\n\nYour code should look like: \n  const MyComponent = lazy(() => import('./MyComponent'))\n\nDid you accidentally put curly braces around the import?",
              ioInfo
            ),
          "default" in ioInfo ||
            console.error(
              "lazy: Expected the result of a dynamic import() call. Instead received: %s\n\nYour code should look like: \n  const MyComponent = lazy(() => import('./MyComponent'))",
              ioInfo
            ),
          ioInfo.default
        );
      throw payload._result;
    }
    function resolveDispatcher() {
      var dispatcher = ReactSharedInternals.H;
      null === dispatcher &&
        console.error(
          "Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://react.dev/link/invalid-hook-call for tips about how to debug and fix this problem."
        );
      return dispatcher;
    }
    function releaseAsyncTransition() {
      ReactSharedInternals.asyncTransitions--;
    }
    function enqueueTask(task) {
      if (null === enqueueTaskImpl)
        try {
          var requireString = ("require" + Math.random()).slice(0, 7);
          enqueueTaskImpl = (module && module[requireString]).call(
            module,
            "timers"
          ).setImmediate;
        } catch (_err) {
          enqueueTaskImpl = function (callback) {
            !1 === didWarnAboutMessageChannel &&
              ((didWarnAboutMessageChannel = !0),
              "undefined" === typeof MessageChannel &&
                console.error(
                  "This browser does not have a MessageChannel implementation, so enqueuing tasks via await act(async () => ...) will fail. Please file an issue at https://github.com/facebook/react/issues if you encounter this warning."
                ));
            var channel = new MessageChannel();
            channel.port1.onmessage = callback;
            channel.port2.postMessage(void 0);
          };
        }
      return enqueueTaskImpl(task);
    }
    function aggregateErrors(errors) {
      return 1 < errors.length && "function" === typeof AggregateError
        ? new AggregateError(errors)
        : errors[0];
    }
    function popActScope(prevActQueue, prevActScopeDepth) {
      prevActScopeDepth !== actScopeDepth - 1 &&
        console.error(
          "You seem to have overlapping act() calls, this is not supported. Be sure to await previous act() calls before making a new one. "
        );
      actScopeDepth = prevActScopeDepth;
    }
    function recursivelyFlushAsyncActWork(returnValue, resolve, reject) {
      var queue = ReactSharedInternals.actQueue;
      if (null !== queue)
        if (0 !== queue.length)
          try {
            flushActQueue(queue);
            enqueueTask(function () {
              return recursivelyFlushAsyncActWork(returnValue, resolve, reject);
            });
            return;
          } catch (error) {
            ReactSharedInternals.thrownErrors.push(error);
          }
        else ReactSharedInternals.actQueue = null;
      0 < ReactSharedInternals.thrownErrors.length
        ? ((queue = aggregateErrors(ReactSharedInternals.thrownErrors)),
          (ReactSharedInternals.thrownErrors.length = 0),
          reject(queue))
        : resolve(returnValue);
    }
    function flushActQueue(queue) {
      if (!isFlushing) {
        isFlushing = !0;
        var i = 0;
        try {
          for (; i < queue.length; i++) {
            var callback = queue[i];
            do {
              ReactSharedInternals.didUsePromise = !1;
              var continuation = callback(!1);
              if (null !== continuation) {
                if (ReactSharedInternals.didUsePromise) {
                  queue[i] = callback;
                  queue.splice(0, i);
                  return;
                }
                callback = continuation;
              } else break;
            } while (1);
          }
          queue.length = 0;
        } catch (error) {
          queue.splice(0, i + 1), ReactSharedInternals.thrownErrors.push(error);
        } finally {
          isFlushing = !1;
        }
      }
    }
    "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
      "function" ===
        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart &&
      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());
    var REACT_ELEMENT_TYPE = Symbol.for("react.transitional.element"),
      REACT_PORTAL_TYPE = Symbol.for("react.portal"),
      REACT_FRAGMENT_TYPE = Symbol.for("react.fragment"),
      REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode"),
      REACT_PROFILER_TYPE = Symbol.for("react.profiler"),
      REACT_CONSUMER_TYPE = Symbol.for("react.consumer"),
      REACT_CONTEXT_TYPE = Symbol.for("react.context"),
      REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref"),
      REACT_SUSPENSE_TYPE = Symbol.for("react.suspense"),
      REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list"),
      REACT_MEMO_TYPE = Symbol.for("react.memo"),
      REACT_LAZY_TYPE = Symbol.for("react.lazy"),
      REACT_ACTIVITY_TYPE = Symbol.for("react.activity"),
      MAYBE_ITERATOR_SYMBOL = Symbol.iterator,
      didWarnStateUpdateForUnmountedComponent = {},
      ReactNoopUpdateQueue = {
        isMounted: function () {
          return !1;
        },
        enqueueForceUpdate: function (publicInstance) {
          warnNoop(publicInstance, "forceUpdate");
        },
        enqueueReplaceState: function (publicInstance) {
          warnNoop(publicInstance, "replaceState");
        },
        enqueueSetState: function (publicInstance) {
          warnNoop(publicInstance, "setState");
        }
      },
      assign = Object.assign,
      emptyObject = {};
    Object.freeze(emptyObject);
    Component.prototype.isReactComponent = {};
    Component.prototype.setState = function (partialState, callback) {
      if (
        "object" !== typeof partialState &&
        "function" !== typeof partialState &&
        null != partialState
      )
        throw Error(
          "takes an object of state variables to update or a function which returns an object of state variables."
        );
      this.updater.enqueueSetState(this, partialState, callback, "setState");
    };
    Component.prototype.forceUpdate = function (callback) {
      this.updater.enqueueForceUpdate(this, callback, "forceUpdate");
    };
    var deprecatedAPIs = {
      isMounted: [
        "isMounted",
        "Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks."
      ],
      replaceState: [
        "replaceState",
        "Refactor your code to use setState instead (see https://github.com/facebook/react/issues/3236)."
      ]
    };
    for (fnName in deprecatedAPIs)
      deprecatedAPIs.hasOwnProperty(fnName) &&
        defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
    ComponentDummy.prototype = Component.prototype;
    deprecatedAPIs = PureComponent.prototype = new ComponentDummy();
    deprecatedAPIs.constructor = PureComponent;
    assign(deprecatedAPIs, Component.prototype);
    deprecatedAPIs.isPureReactComponent = !0;
    var isArrayImpl = Array.isArray,
      REACT_CLIENT_REFERENCE = Symbol.for("react.client.reference"),
      ReactSharedInternals = {
        H: null,
        A: null,
        T: null,
        S: null,
        actQueue: null,
        asyncTransitions: 0,
        isBatchingLegacy: !1,
        didScheduleLegacyUpdate: !1,
        didUsePromise: !1,
        thrownErrors: [],
        getCurrentStack: null,
        recentlyCreatedOwnerStacks: 0
      },
      hasOwnProperty = Object.prototype.hasOwnProperty,
      createTask = console.createTask
        ? console.createTask
        : function () {
            return null;
          };
    deprecatedAPIs = {
      react_stack_bottom_frame: function (callStackForError) {
        return callStackForError();
      }
    };
    var specialPropKeyWarningShown, didWarnAboutOldJSXRuntime;
    var didWarnAboutElementRef = {};
    var unknownOwnerDebugStack = deprecatedAPIs.react_stack_bottom_frame.bind(
      deprecatedAPIs,
      UnknownOwner
    )();
    var unknownOwnerDebugTask = createTask(getTaskName(UnknownOwner));
    var didWarnAboutMaps = !1,
      userProvidedKeyEscapeRegex = /\/+/g,
      reportGlobalError =
        "function" === typeof reportError
          ? reportError
          : function (error) {
              if (
                "object" === typeof window &&
                "function" === typeof window.ErrorEvent
              ) {
                var event = new window.ErrorEvent("error", {
                  bubbles: !0,
                  cancelable: !0,
                  message:
                    "object" === typeof error &&
                    null !== error &&
                    "string" === typeof error.message
                      ? String(error.message)
                      : String(error),
                  error: error
                });
                if (!window.dispatchEvent(event)) return;
              } else if (
                "object" === typeof process &&
                "function" === typeof process.emit
              ) {
                process.emit("uncaughtException", error);
                return;
              }
              console.error(error);
            },
      didWarnAboutMessageChannel = !1,
      enqueueTaskImpl = null,
      actScopeDepth = 0,
      didWarnNoAwaitAct = !1,
      isFlushing = !1,
      queueSeveralMicrotasks =
        "function" === typeof queueMicrotask
          ? function (callback) {
              queueMicrotask(function () {
                return queueMicrotask(callback);
              });
            }
          : enqueueTask;
    deprecatedAPIs = Object.freeze({
      __proto__: null,
      c: function (size) {
        return resolveDispatcher().useMemoCache(size);
      }
    });
    var fnName = {
      map: mapChildren,
      forEach: function (children, forEachFunc, forEachContext) {
        mapChildren(
          children,
          function () {
            forEachFunc.apply(this, arguments);
          },
          forEachContext
        );
      },
      count: function (children) {
        var n = 0;
        mapChildren(children, function () {
          n++;
        });
        return n;
      },
      toArray: function (children) {
        return (
          mapChildren(children, function (child) {
            return child;
          }) || []
        );
      },
      only: function (children) {
        if (!isValidElement(children))
          throw Error(
            "React.Children.only expected to receive a single React element child."
          );
        return children;
      }
    };
    exports.Activity = REACT_ACTIVITY_TYPE;
    exports.Children = fnName;
    exports.Component = Component;
    exports.Fragment = REACT_FRAGMENT_TYPE;
    exports.Profiler = REACT_PROFILER_TYPE;
    exports.PureComponent = PureComponent;
    exports.StrictMode = REACT_STRICT_MODE_TYPE;
    exports.Suspense = REACT_SUSPENSE_TYPE;
    exports.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE =
      ReactSharedInternals;
    exports.__COMPILER_RUNTIME = deprecatedAPIs;
    exports.act = function (callback) {
      var prevActQueue = ReactSharedInternals.actQueue,
        prevActScopeDepth = actScopeDepth;
      actScopeDepth++;
      var queue = (ReactSharedInternals.actQueue =
          null !== prevActQueue ? prevActQueue : []),
        didAwaitActCall = !1;
      try {
        var result = callback();
      } catch (error) {
        ReactSharedInternals.thrownErrors.push(error);
      }
      if (0 < ReactSharedInternals.thrownErrors.length)
        throw (
          (popActScope(prevActQueue, prevActScopeDepth),
          (callback = aggregateErrors(ReactSharedInternals.thrownErrors)),
          (ReactSharedInternals.thrownErrors.length = 0),
          callback)
        );
      if (
        null !== result &&
        "object" === typeof result &&
        "function" === typeof result.then
      ) {
        var thenable = result;
        queueSeveralMicrotasks(function () {
          didAwaitActCall ||
            didWarnNoAwaitAct ||
            ((didWarnNoAwaitAct = !0),
            console.error(
              "You called act(async () => ...) without await. This could lead to unexpected testing behaviour, interleaving multiple act calls and mixing their scopes. You should - await act(async () => ...);"
            ));
        });
        return {
          then: function (resolve, reject) {
            didAwaitActCall = !0;
            thenable.then(
              function (returnValue) {
                popActScope(prevActQueue, prevActScopeDepth);
                if (0 === prevActScopeDepth) {
                  try {
                    flushActQueue(queue),
                      enqueueTask(function () {
                        return recursivelyFlushAsyncActWork(
                          returnValue,
                          resolve,
                          reject
                        );
                      });
                  } catch (error$0) {
                    ReactSharedInternals.thrownErrors.push(error$0);
                  }
                  if (0 < ReactSharedInternals.thrownErrors.length) {
                    var _thrownError = aggregateErrors(
                      ReactSharedInternals.thrownErrors
                    );
                    ReactSharedInternals.thrownErrors.length = 0;
                    reject(_thrownError);
                  }
                } else resolve(returnValue);
              },
              function (error) {
                popActScope(prevActQueue, prevActScopeDepth);
                0 < ReactSharedInternals.thrownErrors.length
                  ? ((error = aggregateErrors(
                      ReactSharedInternals.thrownErrors
                    )),
                    (ReactSharedInternals.thrownErrors.length = 0),
                    reject(error))
                  : reject(error);
              }
            );
          }
        };
      }
      var returnValue$jscomp$0 = result;
      popActScope(prevActQueue, prevActScopeDepth);
      0 === prevActScopeDepth &&
        (flushActQueue(queue),
        0 !== queue.length &&
          queueSeveralMicrotasks(function () {
            didAwaitActCall ||
              didWarnNoAwaitAct ||
              ((didWarnNoAwaitAct = !0),
              console.error(
                "A component suspended inside an `act` scope, but the `act` call was not awaited. When testing React components that depend on asynchronous data, you must await the result:\n\nawait act(() => ...)"
              ));
          }),
        (ReactSharedInternals.actQueue = null));
      if (0 < ReactSharedInternals.thrownErrors.length)
        throw (
          ((callback = aggregateErrors(ReactSharedInternals.thrownErrors)),
          (ReactSharedInternals.thrownErrors.length = 0),
          callback)
        );
      return {
        then: function (resolve, reject) {
          didAwaitActCall = !0;
          0 === prevActScopeDepth
            ? ((ReactSharedInternals.actQueue = queue),
              enqueueTask(function () {
                return recursivelyFlushAsyncActWork(
                  returnValue$jscomp$0,
                  resolve,
                  reject
                );
              }))
            : resolve(returnValue$jscomp$0);
        }
      };
    };
    exports.cache = function (fn) {
      return function () {
        return fn.apply(null, arguments);
      };
    };
    exports.cacheSignal = function () {
      return null;
    };
    exports.captureOwnerStack = function () {
      var getCurrentStack = ReactSharedInternals.getCurrentStack;
      return null === getCurrentStack ? null : getCurrentStack();
    };
    exports.cloneElement = function (element, config, children) {
      if (null === element || void 0 === element)
        throw Error(
          "The argument must be a React element, but you passed " +
            element +
            "."
        );
      var props = assign({}, element.props),
        key = element.key,
        owner = element._owner;
      if (null != config) {
        var JSCompiler_inline_result;
        a: {
          if (
            hasOwnProperty.call(config, "ref") &&
            (JSCompiler_inline_result = Object.getOwnPropertyDescriptor(
              config,
              "ref"
            ).get) &&
            JSCompiler_inline_result.isReactWarning
          ) {
            JSCompiler_inline_result = !1;
            break a;
          }
          JSCompiler_inline_result = void 0 !== config.ref;
        }
        JSCompiler_inline_result && (owner = getOwner());
        hasValidKey(config) &&
          (checkKeyStringCoercion(config.key), (key = "" + config.key));
        for (propName in config)
          !hasOwnProperty.call(config, propName) ||
            "key" === propName ||
            "__self" === propName ||
            "__source" === propName ||
            ("ref" === propName && void 0 === config.ref) ||
            (props[propName] = config[propName]);
      }
      var propName = arguments.length - 2;
      if (1 === propName) props.children = children;
      else if (1 < propName) {
        JSCompiler_inline_result = Array(propName);
        for (var i = 0; i < propName; i++)
          JSCompiler_inline_result[i] = arguments[i + 2];
        props.children = JSCompiler_inline_result;
      }
      props = ReactElement(
        element.type,
        key,
        props,
        owner,
        element._debugStack,
        element._debugTask
      );
      for (key = 2; key < arguments.length; key++)
        validateChildKeys(arguments[key]);
      return props;
    };
    exports.createContext = function (defaultValue) {
      defaultValue = {
        $$typeof: REACT_CONTEXT_TYPE,
        _currentValue: defaultValue,
        _currentValue2: defaultValue,
        _threadCount: 0,
        Provider: null,
        Consumer: null
      };
      defaultValue.Provider = defaultValue;
      defaultValue.Consumer = {
        $$typeof: REACT_CONSUMER_TYPE,
        _context: defaultValue
      };
      defaultValue._currentRenderer = null;
      defaultValue._currentRenderer2 = null;
      return defaultValue;
    };
    exports.createElement = function (type, config, children) {
      for (var i = 2; i < arguments.length; i++)
        validateChildKeys(arguments[i]);
      i = {};
      var key = null;
      if (null != config)
        for (propName in (didWarnAboutOldJSXRuntime ||
          !("__self" in config) ||
          "key" in config ||
          ((didWarnAboutOldJSXRuntime = !0),
          console.warn(
            "Your app (or one of its dependencies) is using an outdated JSX transform. Update to the modern JSX transform for faster performance: https://react.dev/link/new-jsx-transform"
          )),
        hasValidKey(config) &&
          (checkKeyStringCoercion(config.key), (key = "" + config.key)),
        config))
          hasOwnProperty.call(config, propName) &&
            "key" !== propName &&
            "__self" !== propName &&
            "__source" !== propName &&
            (i[propName] = config[propName]);
      var childrenLength = arguments.length - 2;
      if (1 === childrenLength) i.children = children;
      else if (1 < childrenLength) {
        for (
          var childArray = Array(childrenLength), _i = 0;
          _i < childrenLength;
          _i++
        )
          childArray[_i] = arguments[_i + 2];
        Object.freeze && Object.freeze(childArray);
        i.children = childArray;
      }
      if (type && type.defaultProps)
        for (propName in ((childrenLength = type.defaultProps), childrenLength))
          void 0 === i[propName] && (i[propName] = childrenLength[propName]);
      key &&
        defineKeyPropWarningGetter(
          i,
          "function" === typeof type
            ? type.displayName || type.name || "Unknown"
            : type
        );
      var propName = 1e4 > ReactSharedInternals.recentlyCreatedOwnerStacks++;
      return ReactElement(
        type,
        key,
        i,
        getOwner(),
        propName ? Error("react-stack-top-frame") : unknownOwnerDebugStack,
        propName ? createTask(getTaskName(type)) : unknownOwnerDebugTask
      );
    };
    exports.createRef = function () {
      var refObject = { current: null };
      Object.seal(refObject);
      return refObject;
    };
    exports.forwardRef = function (render) {
      null != render && render.$$typeof === REACT_MEMO_TYPE
        ? console.error(
            "forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...))."
          )
        : "function" !== typeof render
          ? console.error(
              "forwardRef requires a render function but was given %s.",
              null === render ? "null" : typeof render
            )
          : 0 !== render.length &&
            2 !== render.length &&
            console.error(
              "forwardRef render functions accept exactly two parameters: props and ref. %s",
              1 === render.length
                ? "Did you forget to use the ref parameter?"
                : "Any additional parameter will be undefined."
            );
      null != render &&
        null != render.defaultProps &&
        console.error(
          "forwardRef render functions do not support defaultProps. Did you accidentally pass a React component?"
        );
      var elementType = { $$typeof: REACT_FORWARD_REF_TYPE, render: render },
        ownName;
      Object.defineProperty(elementType, "displayName", {
        enumerable: !1,
        configurable: !0,
        get: function () {
          return ownName;
        },
        set: function (name) {
          ownName = name;
          render.name ||
            render.displayName ||
            (Object.defineProperty(render, "name", { value: name }),
            (render.displayName = name));
        }
      });
      return elementType;
    };
    exports.isValidElement = isValidElement;
    exports.lazy = function (ctor) {
      ctor = { _status: -1, _result: ctor };
      var lazyType = {
          $$typeof: REACT_LAZY_TYPE,
          _payload: ctor,
          _init: lazyInitializer
        },
        ioInfo = {
          name: "lazy",
          start: -1,
          end: -1,
          value: null,
          owner: null,
          debugStack: Error("react-stack-top-frame"),
          debugTask: console.createTask ? console.createTask("lazy()") : null
        };
      ctor._ioInfo = ioInfo;
      lazyType._debugInfo = [{ awaited: ioInfo }];
      return lazyType;
    };
    exports.memo = function (type, compare) {
      null == type &&
        console.error(
          "memo: The first argument must be a component. Instead received: %s",
          null === type ? "null" : typeof type
        );
      compare = {
        $$typeof: REACT_MEMO_TYPE,
        type: type,
        compare: void 0 === compare ? null : compare
      };
      var ownName;
      Object.defineProperty(compare, "displayName", {
        enumerable: !1,
        configurable: !0,
        get: function () {
          return ownName;
        },
        set: function (name) {
          ownName = name;
          type.name ||
            type.displayName ||
            (Object.defineProperty(type, "name", { value: name }),
            (type.displayName = name));
        }
      });
      return compare;
    };
    exports.startTransition = function (scope) {
      var prevTransition = ReactSharedInternals.T,
        currentTransition = {};
      currentTransition._updatedFibers = new Set();
      ReactSharedInternals.T = currentTransition;
      try {
        var returnValue = scope(),
          onStartTransitionFinish = ReactSharedInternals.S;
        null !== onStartTransitionFinish &&
          onStartTransitionFinish(currentTransition, returnValue);
        "object" === typeof returnValue &&
          null !== returnValue &&
          "function" === typeof returnValue.then &&
          (ReactSharedInternals.asyncTransitions++,
          returnValue.then(releaseAsyncTransition, releaseAsyncTransition),
          returnValue.then(noop, reportGlobalError));
      } catch (error) {
        reportGlobalError(error);
      } finally {
        null === prevTransition &&
          currentTransition._updatedFibers &&
          ((scope = currentTransition._updatedFibers.size),
          currentTransition._updatedFibers.clear(),
          10 < scope &&
            console.warn(
              "Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table."
            )),
          null !== prevTransition &&
            null !== currentTransition.types &&
            (null !== prevTransition.types &&
              prevTransition.types !== currentTransition.types &&
              console.error(
                "We expected inner Transitions to have transferred the outer types set and that you cannot add to the outer Transition while inside the inner.This is a bug in React."
              ),
            (prevTransition.types = currentTransition.types)),
          (ReactSharedInternals.T = prevTransition);
      }
    };
    exports.unstable_useCacheRefresh = function () {
      return resolveDispatcher().useCacheRefresh();
    };
    exports.use = function (usable) {
      return resolveDispatcher().use(usable);
    };
    exports.useActionState = function (action, initialState, permalink) {
      return resolveDispatcher().useActionState(
        action,
        initialState,
        permalink
      );
    };
    exports.useCallback = function (callback, deps) {
      return resolveDispatcher().useCallback(callback, deps);
    };
    exports.useContext = function (Context) {
      var dispatcher = resolveDispatcher();
      Context.$$typeof === REACT_CONSUMER_TYPE &&
        console.error(
          "Calling useContext(Context.Consumer) is not supported and will cause bugs. Did you mean to call useContext(Context) instead?"
        );
      return dispatcher.useContext(Context);
    };
    exports.useDebugValue = function (value, formatterFn) {
      return resolveDispatcher().useDebugValue(value, formatterFn);
    };
    exports.useDeferredValue = function (value, initialValue) {
      return resolveDispatcher().useDeferredValue(value, initialValue);
    };
    exports.useEffect = function (create, deps) {
      null == create &&
        console.warn(
          "React Hook useEffect requires an effect callback. Did you forget to pass a callback to the hook?"
        );
      return resolveDispatcher().useEffect(create, deps);
    };
    exports.useEffectEvent = function (callback) {
      return resolveDispatcher().useEffectEvent(callback);
    };
    exports.useId = function () {
      return resolveDispatcher().useId();
    };
    exports.useImperativeHandle = function (ref, create, deps) {
      return resolveDispatcher().useImperativeHandle(ref, create, deps);
    };
    exports.useInsertionEffect = function (create, deps) {
      null == create &&
        console.warn(
          "React Hook useInsertionEffect requires an effect callback. Did you forget to pass a callback to the hook?"
        );
      return resolveDispatcher().useInsertionEffect(create, deps);
    };
    exports.useLayoutEffect = function (create, deps) {
      null == create &&
        console.warn(
          "React Hook useLayoutEffect requires an effect callback. Did you forget to pass a callback to the hook?"
        );
      return resolveDispatcher().useLayoutEffect(create, deps);
    };
    exports.useMemo = function (create, deps) {
      return resolveDispatcher().useMemo(create, deps);
    };
    exports.useOptimistic = function (passthrough, reducer) {
      return resolveDispatcher().useOptimistic(passthrough, reducer);
    };
    exports.useReducer = function (reducer, initialArg, init) {
      return resolveDispatcher().useReducer(reducer, initialArg, init);
    };
    exports.useRef = function (initialValue) {
      return resolveDispatcher().useRef(initialValue);
    };
    exports.useState = function (initialState) {
      return resolveDispatcher().useState(initialState);
    };
    exports.useSyncExternalStore = function (
      subscribe,
      getSnapshot,
      getServerSnapshot
    ) {
      return resolveDispatcher().useSyncExternalStore(
        subscribe,
        getSnapshot,
        getServerSnapshot
      );
    };
    exports.useTransition = function () {
      return resolveDispatcher().useTransition();
    };
    exports.version = "19.2.0";
    "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
      "function" ===
        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&
      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());
  })();


/***/ }),

/***/ "./node_modules/react/index.js":
/*!*************************************!*\
  !*** ./node_modules/react/index.js ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



if (false) // removed by dead control flow
{} else {
  module.exports = __webpack_require__(/*! ./cjs/react.development.js */ "./node_modules/react/cjs/react.development.js");
}


/***/ }),

/***/ "./node_modules/scheduler/cjs/scheduler.development.js":
/*!*************************************************************!*\
  !*** ./node_modules/scheduler/cjs/scheduler.development.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports) => {

/**
 * @license React
 * scheduler.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


 true &&
  (function () {
    function performWorkUntilDeadline() {
      needsPaint = !1;
      if (isMessageLoopRunning) {
        var currentTime = exports.unstable_now();
        startTime = currentTime;
        var hasMoreWork = !0;
        try {
          a: {
            isHostCallbackScheduled = !1;
            isHostTimeoutScheduled &&
              ((isHostTimeoutScheduled = !1),
              localClearTimeout(taskTimeoutID),
              (taskTimeoutID = -1));
            isPerformingWork = !0;
            var previousPriorityLevel = currentPriorityLevel;
            try {
              b: {
                advanceTimers(currentTime);
                for (
                  currentTask = peek(taskQueue);
                  null !== currentTask &&
                  !(
                    currentTask.expirationTime > currentTime &&
                    shouldYieldToHost()
                  );

                ) {
                  var callback = currentTask.callback;
                  if ("function" === typeof callback) {
                    currentTask.callback = null;
                    currentPriorityLevel = currentTask.priorityLevel;
                    var continuationCallback = callback(
                      currentTask.expirationTime <= currentTime
                    );
                    currentTime = exports.unstable_now();
                    if ("function" === typeof continuationCallback) {
                      currentTask.callback = continuationCallback;
                      advanceTimers(currentTime);
                      hasMoreWork = !0;
                      break b;
                    }
                    currentTask === peek(taskQueue) && pop(taskQueue);
                    advanceTimers(currentTime);
                  } else pop(taskQueue);
                  currentTask = peek(taskQueue);
                }
                if (null !== currentTask) hasMoreWork = !0;
                else {
                  var firstTimer = peek(timerQueue);
                  null !== firstTimer &&
                    requestHostTimeout(
                      handleTimeout,
                      firstTimer.startTime - currentTime
                    );
                  hasMoreWork = !1;
                }
              }
              break a;
            } finally {
              (currentTask = null),
                (currentPriorityLevel = previousPriorityLevel),
                (isPerformingWork = !1);
            }
            hasMoreWork = void 0;
          }
        } finally {
          hasMoreWork
            ? schedulePerformWorkUntilDeadline()
            : (isMessageLoopRunning = !1);
        }
      }
    }
    function push(heap, node) {
      var index = heap.length;
      heap.push(node);
      a: for (; 0 < index; ) {
        var parentIndex = (index - 1) >>> 1,
          parent = heap[parentIndex];
        if (0 < compare(parent, node))
          (heap[parentIndex] = node),
            (heap[index] = parent),
            (index = parentIndex);
        else break a;
      }
    }
    function peek(heap) {
      return 0 === heap.length ? null : heap[0];
    }
    function pop(heap) {
      if (0 === heap.length) return null;
      var first = heap[0],
        last = heap.pop();
      if (last !== first) {
        heap[0] = last;
        a: for (
          var index = 0, length = heap.length, halfLength = length >>> 1;
          index < halfLength;

        ) {
          var leftIndex = 2 * (index + 1) - 1,
            left = heap[leftIndex],
            rightIndex = leftIndex + 1,
            right = heap[rightIndex];
          if (0 > compare(left, last))
            rightIndex < length && 0 > compare(right, left)
              ? ((heap[index] = right),
                (heap[rightIndex] = last),
                (index = rightIndex))
              : ((heap[index] = left),
                (heap[leftIndex] = last),
                (index = leftIndex));
          else if (rightIndex < length && 0 > compare(right, last))
            (heap[index] = right),
              (heap[rightIndex] = last),
              (index = rightIndex);
          else break a;
        }
      }
      return first;
    }
    function compare(a, b) {
      var diff = a.sortIndex - b.sortIndex;
      return 0 !== diff ? diff : a.id - b.id;
    }
    function advanceTimers(currentTime) {
      for (var timer = peek(timerQueue); null !== timer; ) {
        if (null === timer.callback) pop(timerQueue);
        else if (timer.startTime <= currentTime)
          pop(timerQueue),
            (timer.sortIndex = timer.expirationTime),
            push(taskQueue, timer);
        else break;
        timer = peek(timerQueue);
      }
    }
    function handleTimeout(currentTime) {
      isHostTimeoutScheduled = !1;
      advanceTimers(currentTime);
      if (!isHostCallbackScheduled)
        if (null !== peek(taskQueue))
          (isHostCallbackScheduled = !0),
            isMessageLoopRunning ||
              ((isMessageLoopRunning = !0), schedulePerformWorkUntilDeadline());
        else {
          var firstTimer = peek(timerQueue);
          null !== firstTimer &&
            requestHostTimeout(
              handleTimeout,
              firstTimer.startTime - currentTime
            );
        }
    }
    function shouldYieldToHost() {
      return needsPaint
        ? !0
        : exports.unstable_now() - startTime < frameInterval
          ? !1
          : !0;
    }
    function requestHostTimeout(callback, ms) {
      taskTimeoutID = localSetTimeout(function () {
        callback(exports.unstable_now());
      }, ms);
    }
    "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
      "function" ===
        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart &&
      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(Error());
    exports.unstable_now = void 0;
    if (
      "object" === typeof performance &&
      "function" === typeof performance.now
    ) {
      var localPerformance = performance;
      exports.unstable_now = function () {
        return localPerformance.now();
      };
    } else {
      var localDate = Date,
        initialTime = localDate.now();
      exports.unstable_now = function () {
        return localDate.now() - initialTime;
      };
    }
    var taskQueue = [],
      timerQueue = [],
      taskIdCounter = 1,
      currentTask = null,
      currentPriorityLevel = 3,
      isPerformingWork = !1,
      isHostCallbackScheduled = !1,
      isHostTimeoutScheduled = !1,
      needsPaint = !1,
      localSetTimeout = "function" === typeof setTimeout ? setTimeout : null,
      localClearTimeout =
        "function" === typeof clearTimeout ? clearTimeout : null,
      localSetImmediate =
        "undefined" !== typeof setImmediate ? setImmediate : null,
      isMessageLoopRunning = !1,
      taskTimeoutID = -1,
      frameInterval = 5,
      startTime = -1;
    if ("function" === typeof localSetImmediate)
      var schedulePerformWorkUntilDeadline = function () {
        localSetImmediate(performWorkUntilDeadline);
      };
    else if ("undefined" !== typeof MessageChannel) {
      var channel = new MessageChannel(),
        port = channel.port2;
      channel.port1.onmessage = performWorkUntilDeadline;
      schedulePerformWorkUntilDeadline = function () {
        port.postMessage(null);
      };
    } else
      schedulePerformWorkUntilDeadline = function () {
        localSetTimeout(performWorkUntilDeadline, 0);
      };
    exports.unstable_IdlePriority = 5;
    exports.unstable_ImmediatePriority = 1;
    exports.unstable_LowPriority = 4;
    exports.unstable_NormalPriority = 3;
    exports.unstable_Profiling = null;
    exports.unstable_UserBlockingPriority = 2;
    exports.unstable_cancelCallback = function (task) {
      task.callback = null;
    };
    exports.unstable_forceFrameRate = function (fps) {
      0 > fps || 125 < fps
        ? console.error(
            "forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"
          )
        : (frameInterval = 0 < fps ? Math.floor(1e3 / fps) : 5);
    };
    exports.unstable_getCurrentPriorityLevel = function () {
      return currentPriorityLevel;
    };
    exports.unstable_next = function (eventHandler) {
      switch (currentPriorityLevel) {
        case 1:
        case 2:
        case 3:
          var priorityLevel = 3;
          break;
        default:
          priorityLevel = currentPriorityLevel;
      }
      var previousPriorityLevel = currentPriorityLevel;
      currentPriorityLevel = priorityLevel;
      try {
        return eventHandler();
      } finally {
        currentPriorityLevel = previousPriorityLevel;
      }
    };
    exports.unstable_requestPaint = function () {
      needsPaint = !0;
    };
    exports.unstable_runWithPriority = function (priorityLevel, eventHandler) {
      switch (priorityLevel) {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
          break;
        default:
          priorityLevel = 3;
      }
      var previousPriorityLevel = currentPriorityLevel;
      currentPriorityLevel = priorityLevel;
      try {
        return eventHandler();
      } finally {
        currentPriorityLevel = previousPriorityLevel;
      }
    };
    exports.unstable_scheduleCallback = function (
      priorityLevel,
      callback,
      options
    ) {
      var currentTime = exports.unstable_now();
      "object" === typeof options && null !== options
        ? ((options = options.delay),
          (options =
            "number" === typeof options && 0 < options
              ? currentTime + options
              : currentTime))
        : (options = currentTime);
      switch (priorityLevel) {
        case 1:
          var timeout = -1;
          break;
        case 2:
          timeout = 250;
          break;
        case 5:
          timeout = 1073741823;
          break;
        case 4:
          timeout = 1e4;
          break;
        default:
          timeout = 5e3;
      }
      timeout = options + timeout;
      priorityLevel = {
        id: taskIdCounter++,
        callback: callback,
        priorityLevel: priorityLevel,
        startTime: options,
        expirationTime: timeout,
        sortIndex: -1
      };
      options > currentTime
        ? ((priorityLevel.sortIndex = options),
          push(timerQueue, priorityLevel),
          null === peek(taskQueue) &&
            priorityLevel === peek(timerQueue) &&
            (isHostTimeoutScheduled
              ? (localClearTimeout(taskTimeoutID), (taskTimeoutID = -1))
              : (isHostTimeoutScheduled = !0),
            requestHostTimeout(handleTimeout, options - currentTime)))
        : ((priorityLevel.sortIndex = timeout),
          push(taskQueue, priorityLevel),
          isHostCallbackScheduled ||
            isPerformingWork ||
            ((isHostCallbackScheduled = !0),
            isMessageLoopRunning ||
              ((isMessageLoopRunning = !0),
              schedulePerformWorkUntilDeadline())));
      return priorityLevel;
    };
    exports.unstable_shouldYield = shouldYieldToHost;
    exports.unstable_wrapCallback = function (callback) {
      var parentPriorityLevel = currentPriorityLevel;
      return function () {
        var previousPriorityLevel = currentPriorityLevel;
        currentPriorityLevel = parentPriorityLevel;
        try {
          return callback.apply(this, arguments);
        } finally {
          currentPriorityLevel = previousPriorityLevel;
        }
      };
    };
    "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
      "function" ===
        typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&
      __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(Error());
  })();


/***/ }),

/***/ "./node_modules/scheduler/index.js":
/*!*****************************************!*\
  !*** ./node_modules/scheduler/index.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



if (false) // removed by dead control flow
{} else {
  module.exports = __webpack_require__(/*! ./cjs/scheduler.development.js */ "./node_modules/scheduler/cjs/scheduler.development.js");
}


/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module) => {



var stylesInDOM = [];
function getIndexByIdentifier(identifier) {
  var result = -1;
  for (var i = 0; i < stylesInDOM.length; i++) {
    if (stylesInDOM[i].identifier === identifier) {
      result = i;
      break;
    }
  }
  return result;
}
function modulesToDom(list, options) {
  var idCountMap = {};
  var identifiers = [];
  for (var i = 0; i < list.length; i++) {
    var item = list[i];
    var id = options.base ? item[0] + options.base : item[0];
    var count = idCountMap[id] || 0;
    var identifier = "".concat(id, " ").concat(count);
    idCountMap[id] = count + 1;
    var indexByIdentifier = getIndexByIdentifier(identifier);
    var obj = {
      css: item[1],
      media: item[2],
      sourceMap: item[3],
      supports: item[4],
      layer: item[5]
    };
    if (indexByIdentifier !== -1) {
      stylesInDOM[indexByIdentifier].references++;
      stylesInDOM[indexByIdentifier].updater(obj);
    } else {
      var updater = addElementStyle(obj, options);
      options.byIndex = i;
      stylesInDOM.splice(i, 0, {
        identifier: identifier,
        updater: updater,
        references: 1
      });
    }
    identifiers.push(identifier);
  }
  return identifiers;
}
function addElementStyle(obj, options) {
  var api = options.domAPI(options);
  api.update(obj);
  var updater = function updater(newObj) {
    if (newObj) {
      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {
        return;
      }
      api.update(obj = newObj);
    } else {
      api.remove();
    }
  };
  return updater;
}
module.exports = function (list, options) {
  options = options || {};
  list = list || [];
  var lastIdentifiers = modulesToDom(list, options);
  return function update(newList) {
    newList = newList || [];
    for (var i = 0; i < lastIdentifiers.length; i++) {
      var identifier = lastIdentifiers[i];
      var index = getIndexByIdentifier(identifier);
      stylesInDOM[index].references--;
    }
    var newLastIdentifiers = modulesToDom(newList, options);
    for (var _i = 0; _i < lastIdentifiers.length; _i++) {
      var _identifier = lastIdentifiers[_i];
      var _index = getIndexByIdentifier(_identifier);
      if (stylesInDOM[_index].references === 0) {
        stylesInDOM[_index].updater();
        stylesInDOM.splice(_index, 1);
      }
    }
    lastIdentifiers = newLastIdentifiers;
  };
};

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertBySelector.js":
/*!********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertBySelector.js ***!
  \********************************************************************/
/***/ ((module) => {



var memo = {};

/* istanbul ignore next  */
function getTarget(target) {
  if (typeof memo[target] === "undefined") {
    var styleTarget = document.querySelector(target);

    // Special case to return head of iframe instead of iframe itself
    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
      try {
        // This will throw an exception if access to iframe is blocked
        // due to cross-origin restrictions
        styleTarget = styleTarget.contentDocument.head;
      } catch (e) {
        // istanbul ignore next
        styleTarget = null;
      }
    }
    memo[target] = styleTarget;
  }
  return memo[target];
}

/* istanbul ignore next  */
function insertBySelector(insert, style) {
  var target = getTarget(insert);
  if (!target) {
    throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
  }
  target.appendChild(style);
}
module.exports = insertBySelector;

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertStyleElement.js":
/*!**********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertStyleElement.js ***!
  \**********************************************************************/
/***/ ((module) => {



/* istanbul ignore next  */
function insertStyleElement(options) {
  var element = document.createElement("style");
  options.setAttributes(element, options.attributes);
  options.insert(element, options.options);
  return element;
}
module.exports = insertStyleElement;

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



/* istanbul ignore next  */
function setAttributesWithoutAttributes(styleElement) {
  var nonce =  true ? __webpack_require__.nc : 0;
  if (nonce) {
    styleElement.setAttribute("nonce", nonce);
  }
}
module.exports = setAttributesWithoutAttributes;

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleDomAPI.js":
/*!***************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleDomAPI.js ***!
  \***************************************************************/
/***/ ((module) => {



/* istanbul ignore next  */
function apply(styleElement, options, obj) {
  var css = "";
  if (obj.supports) {
    css += "@supports (".concat(obj.supports, ") {");
  }
  if (obj.media) {
    css += "@media ".concat(obj.media, " {");
  }
  var needLayer = typeof obj.layer !== "undefined";
  if (needLayer) {
    css += "@layer".concat(obj.layer.length > 0 ? " ".concat(obj.layer) : "", " {");
  }
  css += obj.css;
  if (needLayer) {
    css += "}";
  }
  if (obj.media) {
    css += "}";
  }
  if (obj.supports) {
    css += "}";
  }
  var sourceMap = obj.sourceMap;
  if (sourceMap && typeof btoa !== "undefined") {
    css += "\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");
  }

  // For old IE
  /* istanbul ignore if  */
  options.styleTagTransform(css, styleElement, options.options);
}
function removeStyleElement(styleElement) {
  // istanbul ignore if
  if (styleElement.parentNode === null) {
    return false;
  }
  styleElement.parentNode.removeChild(styleElement);
}

/* istanbul ignore next  */
function domAPI(options) {
  if (typeof document === "undefined") {
    return {
      update: function update() {},
      remove: function remove() {}
    };
  }
  var styleElement = options.insertStyleElement(options);
  return {
    update: function update(obj) {
      apply(styleElement, options, obj);
    },
    remove: function remove() {
      removeStyleElement(styleElement);
    }
  };
}
module.exports = domAPI;

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleTagTransform.js":
/*!*********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleTagTransform.js ***!
  \*********************************************************************/
/***/ ((module) => {



/* istanbul ignore next  */
function styleTagTransform(css, styleElement) {
  if (styleElement.styleSheet) {
    styleElement.styleSheet.cssText = css;
  } else {
    while (styleElement.firstChild) {
      styleElement.removeChild(styleElement.firstChild);
    }
    styleElement.appendChild(document.createTextNode(css));
  }
}
module.exports = styleTagTransform;

/***/ }),

/***/ "./src/components/Accordion/Accordion.tsx":
/*!************************************************!*\
  !*** ./src/components/Accordion/Accordion.tsx ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Accordion: () => (/* binding */ Accordion),
/* harmony export */   AccordionContent: () => (/* binding */ AccordionContent),
/* harmony export */   AccordionItem: () => (/* binding */ AccordionItem),
/* harmony export */   AccordionTrigger: () => (/* binding */ AccordionTrigger)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");



const AccordionContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);
const useAccordion = () => {
  const context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(AccordionContext);
  if (!context) {
    throw new Error('Accordion components must be used within an Accordion provider.');
  }
  return context;
};
const Accordion = ({
  children,
  defaultValue,
  className
}) => {
  const [activeItem, setActiveItem] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(defaultValue || null);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(AccordionContext.Provider, {
    value: {
      activeItem,
      setActiveItem
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: className
  }, children));
};
const AccordionItem = ({
  children,
  value,
  className
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('accordion-item');
  const itemClass = createStyle({
    borderBottom: `1px solid ${theme.colors.border}`,
    '&:last-child': {
      borderBottom: 'none'
    }
  });

  // FIX: Add a type assertion to the child element in `cloneElement` to correctly pass down the `value` prop without TypeScript errors.
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: `${itemClass} ${className}`
  }, react__WEBPACK_IMPORTED_MODULE_0___default().Children.map(children, child => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().isValidElement(child) ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().cloneElement(child, {
    value
  }) : child));
};
const AccordionTrigger = ({
  children,
  value,
  className
}) => {
  const {
    activeItem,
    setActiveItem
  } = useAccordion();
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('accordion-trigger');
  const isOpen = activeItem === value;
  const triggerClass = createStyle({
    width: '100%',
    padding: `${theme.spacing.md} 0`,
    display: 'flex',
    justifyContent: 'space-between',
    alignItems: 'center',
    background: 'none',
    border: 'none',
    color: theme.colors.text,
    cursor: 'pointer',
    fontSize: '1rem',
    textAlign: 'left',
    '&::after': {
      content: '"â–¼"',
      fontSize: '10px',
      color: theme.colors.textSecondary,
      transition: 'transform 0.2s ease',
      transform: isOpen ? 'rotate(180deg)' : 'none'
    }
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("button", {
    className: `${triggerClass} ${className}`,
    onClick: () => setActiveItem(isOpen ? null : value),
    "aria-expanded": isOpen,
    "aria-controls": `accordion-content-${value}`
  }, children);
};
const AccordionContent = ({
  children,
  value,
  className
}) => {
  const {
    activeItem
  } = useAccordion();
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('accordion-content');
  const isOpen = activeItem === value;
  const contentClass = createStyle({
    overflow: 'hidden',
    transition: 'max-height 0.3s ease, padding 0.3s ease',
    maxHeight: isOpen ? '500px' : '0'
  });
  const innerClass = createStyle({
    paddingBottom: isOpen ? theme.spacing.md : '0',
    color: theme.colors.textSecondary
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    id: `accordion-content-${value}`,
    className: `${contentClass} ${className}`,
    "aria-hidden": !isOpen
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: innerClass
  }, children));
};

/***/ }),

/***/ "./src/components/Alert/Alert.tsx":
/*!****************************************!*\
  !*** ./src/components/Alert/Alert.tsx ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Alert: () => (/* binding */ Alert)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Text_Text__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Text/Text */ "./src/components/Text/Text.tsx");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");




const icons = {
  info: `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="h-5 w-5"><circle cx="12" cy="12" r="10"></circle><line x1="12" y1="16" x2="12" y2="12"></line><line x1="12" y1="8" x2="12.01" y2="8"></line></svg>`,
  warning: `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="h-5 w-5"><path d="m21.73 18-8-14a2 2 0 0 0-3.46 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z"></path><line x1="12" y1="9" x2="12" y2="13"></line><line x1="12" y1="17" x2="12.01" y2="17"></line></svg>`,
  error: `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="h-5 w-5"><path d="M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"></path><line x1="12" y1="9" x2="12" y2="13"></line><line x1="12" y1="17" x2="12.01" y2="17"></line></svg>`,
  success: `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="h-5 w-5"><path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path><polyline points="22 4 12 14.01 9 11.01"></polyline></svg>`
};
const Alert = ({
  title,
  children,
  variant = 'info',
  className = ''
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_3__.useStyles)('alert');
  const iconHtml = {
    __html: icons[variant]
  };
  const variantStyles = {
    info: {
      backgroundColor: 'rgba(59, 130, 246, 0.2)',
      borderColor: 'rgba(59, 130, 246, 0.5)',
      color: '#93c5fd'
    },
    warning: {
      backgroundColor: 'rgba(245, 158, 11, 0.2)',
      borderColor: 'rgba(245, 158, 11, 0.5)',
      color: '#fcd34d'
    },
    error: {
      backgroundColor: 'rgba(239, 68, 68, 0.2)',
      borderColor: 'rgba(239, 68, 68, 0.5)',
      color: '#fca5a5'
    },
    success: {
      backgroundColor: 'rgba(16, 185, 129, 0.2)',
      borderColor: 'rgba(16, 185, 129, 0.5)',
      color: '#6ee7b7'
    }
  };
  const containerClass = createStyle({
    display: 'grid',
    gridTemplateColumns: 'auto 1fr',
    alignItems: 'start',
    gap: theme.spacing.md,
    borderRadius: '8px',
    border: '1px solid',
    padding: theme.spacing.md,
    ...variantStyles[variant],
    '@supports (backdrop-filter: none) or (-webkit-backdrop-filter: none)': {
      backdropFilter: 'blur(12px)'
    }
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    role: "alert",
    className: `${containerClass} ${className}`
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", {
    "aria-hidden": "true",
    style: {
      flexShrink: 0,
      width: '20px',
      height: '20px'
    },
    dangerouslySetInnerHTML: iconHtml
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Text_Text__WEBPACK_IMPORTED_MODULE_1__.Text, {
    weight: "600",
    style: {
      marginBottom: '0.25rem'
    }
  }, title), children && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Text_Text__WEBPACK_IMPORTED_MODULE_1__.Text, {
    size: "0.875rem",
    color: "inherit",
    style: {
      opacity: 0.8
    }
  }, children)));
};

/***/ }),

/***/ "./src/components/AnimatedBlock/AnimatedBlock.tsx":
/*!********************************************************!*\
  !*** ./src/components/AnimatedBlock/AnimatedBlock.tsx ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AnimatedBlock: () => (/* binding */ AnimatedBlock),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core_hooks_useCurveAnimation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/hooks/useCurveAnimation */ "./src/core/hooks/useCurveAnimation.ts");
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");




const AnimatedBlock = ({
  className = ''
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_3__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_2__.useStyles)('animated-block');
  const [curveType, setCurveType] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('easeInOut');
  const animation = (0,_core_hooks_useCurveAnimation__WEBPACK_IMPORTED_MODULE_1__.useCurveAnimation)({
    duration: 1000,
    type: curveType,
    bounceStrength: 3,
    elasticity: 0.3
  });
  const blockClass = createStyle({
    width: '100px',
    height: '100px',
    backgroundColor: theme.colors.primary,
    borderRadius: '8px',
    transition: 'background-color 0.3s'
  });
  const containerClass = createStyle({
    padding: theme.spacing.lg,
    display: 'grid',
    gap: theme.spacing.md
  });
  const controlsClass = createStyle({
    display: 'grid',
    gap: theme.spacing.sm,
    gridTemplateColumns: 'repeat(auto-fill, minmax(80px, 1fr))'
  });
  const buttonClass = createStyle({
    padding: `${theme.spacing.sm} ${theme.spacing.md}`,
    backgroundColor: theme.colors.secondary,
    color: theme.colors.background,
    border: 'none',
    borderRadius: '4px',
    cursor: 'pointer',
    '&:hover': {
      opacity: 0.9
    }
  });
  const curveTypes = ['linear', 'easeIn', 'easeOut', 'easeInOut', 'bounce', 'elastic'];
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: `${containerClass} ${className}`
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    style: {
      position: 'relative',
      height: '100px',
      overflow: 'hidden'
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: blockClass,
    style: {
      transform: `translateX(${animation.value}px)`,
      position: 'absolute'
    }
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: controlsClass
  }, curveTypes.map(type => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("button", {
    key: type,
    className: buttonClass,
    onClick: () => {
      setCurveType(type);
      animation.animate(animation.value === 0 ? 200 : 0);
    }
  }, type))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", null, "Progress: ", Math.round(animation.progress * 100), "%"));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AnimatedBlock);

/***/ }),

/***/ "./src/components/AspectRatio/AspectRatio.tsx":
/*!****************************************************!*\
  !*** ./src/components/AspectRatio/AspectRatio.tsx ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AspectRatio: () => (/* binding */ AspectRatio)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Box_Box__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Box/Box */ "./src/components/Box/Box.tsx");
/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core */ "./src/core/index.ts");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }



const AspectRatio = ({
  ratio = 16 / 9,
  children,
  className = '',
  ...props
}) => {
  const createStyle = (0,_core__WEBPACK_IMPORTED_MODULE_2__.useStyles)('aspect-ratio');
  const containerClass = createStyle({
    position: 'relative',
    width: '100%',
    '&::before': {
      content: '""',
      display: 'block',
      paddingBottom: `${100 / ratio}%`
    }
  });
  const contentClass = createStyle({
    position: 'absolute',
    top: 0,
    left: 0,
    width: '100%',
    height: '100%',
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    '& > *': {
      width: '100%',
      height: '100%',
      objectFit: 'cover'
    }
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Box_Box__WEBPACK_IMPORTED_MODULE_1__.Box, _extends({
    className: `${containerClass} ${className}`
  }, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: contentClass
  }, children));
};

/***/ }),

/***/ "./src/components/Audio/Audio.tsx":
/*!****************************************!*\
  !*** ./src/components/Audio/Audio.tsx ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Audio: () => (/* binding */ Audio)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _AudioContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AudioContext */ "./src/components/Audio/AudioContext.tsx");


const defaultEqBands = [{
  freq: 100,
  gain: 0,
  q: 1,
  type: 'lowshelf'
},
// Bass
{
  freq: 1000,
  gain: 0,
  q: 1,
  type: 'peaking'
},
// Mid
{
  freq: 10000,
  gain: 0,
  q: 1,
  type: 'highshelf'
} // Treble
];
const Audio = ({
  children,
  className
}) => {
  const audioRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const [isPlaying, setIsPlaying] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [currentTime, setCurrentTime] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);
  const [duration, setDuration] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);
  const [eqBands, setEqBands] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(defaultEqBands);

  // Refs for Web Audio API
  const audioCtxRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const sourceNodeRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const eqNodesRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)([]);
  const analyserNodeRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const isGraphReady = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);
  const setupAudioGraph = () => {
    if (isGraphReady.current || !audioRef.current) return;
    const ctx = new (window.AudioContext || window.webkitAudioContext)();
    audioCtxRef.current = ctx;
    const source = ctx.createMediaElementSource(audioRef.current);
    sourceNodeRef.current = source;

    // Create EQ nodes
    const nodes = defaultEqBands.map(band => {
      const node = ctx.createBiquadFilter();
      node.type = band.type;
      node.frequency.value = band.freq;
      node.gain.value = band.gain;
      node.Q.value = band.q;
      return node;
    });
    eqNodesRef.current = nodes;

    // Create Analyser for FFT visualization
    const analyser = ctx.createAnalyser();
    analyser.fftSize = 256;
    analyserNodeRef.current = analyser;

    // Connect graph: source -> eq1 -> eq2 -> ... -> analyser -> destination
    let lastNode = source;
    nodes.forEach(node => {
      lastNode.connect(node);
      lastNode = node;
    });
    lastNode.connect(analyser);
    analyser.connect(ctx.destination);
    isGraphReady.current = true;
    // Force a re-render to provide the analyserNode to consumers
    setEqBands([...eqBands]);
  };
  const togglePlay = () => {
    // AudioContext must be resumed after a user gesture
    if (audioCtxRef.current && audioCtxRef.current.state === 'suspended') {
      audioCtxRef.current.resume();
    }
    if (!isGraphReady.current) {
      setupAudioGraph();
    }
    const audio = audioRef.current;
    if (audio) {
      audio.paused ? audio.play() : audio.pause();
    }
  };
  const seek = time => {
    if (audioRef.current) {
      audioRef.current.currentTime = time;
    }
  };
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    const audio = audioRef.current;
    if (!audio) return;
    const handlePlay = () => setIsPlaying(true);
    const handlePause = () => setIsPlaying(false);
    const handleTimeUpdate = () => setCurrentTime(audio.currentTime);
    const handleLoadedMetadata = () => setDuration(audio.duration);
    audio.addEventListener('play', handlePlay);
    audio.addEventListener('pause', handlePause);
    audio.addEventListener('timeupdate', handleTimeUpdate);
    audio.addEventListener('loadedmetadata', handleLoadedMetadata);
    return () => {
      audio.removeEventListener('play', handlePlay);
      audio.removeEventListener('pause', handlePause);
      audio.removeEventListener('timeupdate', handleTimeUpdate);
      audio.removeEventListener('loadedmetadata', handleLoadedMetadata);
    };
  }, []);

  // Effect to update EQ gains when state changes
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (isGraphReady.current) {
      eqBands.forEach((band, index) => {
        if (eqNodesRef.current[index]) {
          eqNodesRef.current[index].gain.value = band.gain;
        }
      });
    }
  }, [eqBands]);
  const contextValue = {
    audioRef,
    isPlaying,
    currentTime,
    duration,
    togglePlay,
    seek,
    eqBands,
    setEqBands,
    analyserNode: analyserNodeRef.current,
    isGraphReady: isGraphReady.current
  };
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_AudioContext__WEBPACK_IMPORTED_MODULE_1__.AudioContext.Provider, {
    value: contextValue
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: className
  }, children));
};

/***/ }),

/***/ "./src/components/Audio/AudioContext.tsx":
/*!***********************************************!*\
  !*** ./src/components/Audio/AudioContext.tsx ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AudioContext: () => (/* binding */ AudioContext),
/* harmony export */   useAudio: () => (/* binding */ useAudio)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);

const AudioContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);
const useAudio = () => {
  const context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(AudioContext);
  if (!context) {
    throw new Error('useAudio must be used within an Audio provider');
  }
  return context;
};

/***/ }),

/***/ "./src/components/Audio/AudioControls.tsx":
/*!************************************************!*\
  !*** ./src/components/Audio/AudioControls.tsx ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AudioControls: () => (/* binding */ AudioControls)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _AudioContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AudioContext */ "./src/components/Audio/AudioContext.tsx");
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");
/* harmony import */ var _Stack_Stack__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Stack/Stack */ "./src/components/Stack/Stack.tsx");
/* harmony import */ var _Button__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Button */ "./src/components/Button.tsx");
/* harmony import */ var _Slider_Slider__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../Slider/Slider */ "./src/components/Slider/Slider.tsx");
/* harmony import */ var _AudioTime__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./AudioTime */ "./src/components/Audio/AudioTime.tsx");
/* harmony import */ var _AudioDuration__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./AudioDuration */ "./src/components/Audio/AudioDuration.tsx");
/* harmony import */ var _Icon_Icon__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../Icon/Icon */ "./src/components/Icon/Icon.tsx");
/* harmony import */ var _icons__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../icons */ "./src/icons/index.ts");











const AudioControls = ({
  className
}) => {
  const {
    isPlaying,
    togglePlay,
    currentTime,
    duration,
    seek
  } = (0,_AudioContext__WEBPACK_IMPORTED_MODULE_1__.useAudio)();
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_3__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_2__.useStyles)('audio-controls');
  const containerClass = createStyle({
    padding: `${theme.spacing.sm} ${theme.spacing.md}`,
    display: 'grid',
    gridTemplateColumns: 'auto 1fr',
    alignItems: 'center',
    gap: theme.spacing.md
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: `${containerClass} ${className}`
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Button__WEBPACK_IMPORTED_MODULE_5__.Button, {
    variant: "secondary",
    onClick: togglePlay,
    style: {
      padding: '0.5rem'
    },
    "aria-label": isPlaying ? 'Pause' : 'Play',
    disabled: duration === 0
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Icon_Icon__WEBPACK_IMPORTED_MODULE_9__.Icon, {
    as: isPlaying ? _icons__WEBPACK_IMPORTED_MODULE_10__.PauseIcon : _icons__WEBPACK_IMPORTED_MODULE_10__.PlayIcon,
    size: 20
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Stack_Stack__WEBPACK_IMPORTED_MODULE_4__.Stack, {
    direction: "row",
    align: "center",
    gap: theme.spacing.sm
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_AudioTime__WEBPACK_IMPORTED_MODULE_7__.AudioTime, null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Slider_Slider__WEBPACK_IMPORTED_MODULE_6__.Slider, {
    min: 0,
    max: duration || 100,
    value: currentTime,
    onChange: seek,
    disabled: duration === 0
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_AudioDuration__WEBPACK_IMPORTED_MODULE_8__.AudioDuration, null)));
};

/***/ }),

/***/ "./src/components/Audio/AudioDuration.tsx":
/*!************************************************!*\
  !*** ./src/components/Audio/AudioDuration.tsx ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AudioDuration: () => (/* binding */ AudioDuration)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _AudioContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AudioContext */ "./src/components/Audio/AudioContext.tsx");
/* harmony import */ var _Text_Text__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Text/Text */ "./src/components/Text/Text.tsx");



const formatTime = time => {
  if (isNaN(time) || time === 0) return '0:00';
  const minutes = Math.floor(time / 60);
  const seconds = Math.floor(time % 60).toString().padStart(2, '0');
  return `${minutes}:${seconds}`;
};
const AudioDuration = ({
  className
}) => {
  const {
    duration
  } = (0,_AudioContext__WEBPACK_IMPORTED_MODULE_1__.useAudio)();
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Text_Text__WEBPACK_IMPORTED_MODULE_2__.Text, {
    as: "span",
    className: className
  }, formatTime(duration));
};

/***/ }),

/***/ "./src/components/Audio/AudioFile.tsx":
/*!********************************************!*\
  !*** ./src/components/Audio/AudioFile.tsx ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AudioFile: () => (/* binding */ AudioFile)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);

const AudioFile = props => {
  // This component renders a <source> tag and is intended to be used
  // as a child of the main <Audio> component.
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("source", props);
};

/***/ }),

/***/ "./src/components/Audio/AudioFilters.tsx":
/*!***********************************************!*\
  !*** ./src/components/Audio/AudioFilters.tsx ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AudioFilters: () => (/* binding */ AudioFilters)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _AudioContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AudioContext */ "./src/components/Audio/AudioContext.tsx");
/* harmony import */ var _Slider_Slider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Slider/Slider */ "./src/components/Slider/Slider.tsx");
/* harmony import */ var _Stack_Stack__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Stack/Stack */ "./src/components/Stack/Stack.tsx");
/* harmony import */ var _Text_Text__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Text/Text */ "./src/components/Text/Text.tsx");
/* harmony import */ var _Card_Card__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Card/Card */ "./src/components/Card/Card.tsx");






const bandLabels = ['Bass Boost', 'Mid', 'Treble'];
const AudioFilters = () => {
  const {
    eqBands,
    setEqBands,
    isGraphReady
  } = (0,_AudioContext__WEBPACK_IMPORTED_MODULE_1__.useAudio)();
  if (!isGraphReady) {
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Text_Text__WEBPACK_IMPORTED_MODULE_4__.Text, {
      size: "12px",
      color: "textSecondary",
      style: {
        textAlign: 'center',
        padding: '1rem'
      }
    }, "Play audio to enable effects.");
  }
  const handleGainChange = (index, newGain) => {
    setEqBands(currentBands => currentBands.map((band, i) => i === index ? {
      ...band,
      gain: newGain
    } : band));
  };
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Card_Card__WEBPACK_IMPORTED_MODULE_5__.Card, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Stack_Stack__WEBPACK_IMPORTED_MODULE_3__.Stack, {
    gap: "1rem"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Text_Text__WEBPACK_IMPORTED_MODULE_4__.Text, {
    weight: "600",
    style: {
      textAlign: 'center'
    }
  }, "Equalizer"), eqBands.map((band, index) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Stack_Stack__WEBPACK_IMPORTED_MODULE_3__.Stack, {
    key: band.freq,
    gap: "0.25rem"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Text_Text__WEBPACK_IMPORTED_MODULE_4__.Text, {
    as: "span",
    size: "14px"
  }, bandLabels[index] || `${band.freq} Hz`), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Slider_Slider__WEBPACK_IMPORTED_MODULE_2__.Slider, {
    value: band.gain,
    onChange: gain => handleGainChange(index, gain),
    min: -12,
    max: 12,
    step: 1,
    showValue: true
  })))));
};

/***/ }),

/***/ "./src/components/Audio/AudioTime.tsx":
/*!********************************************!*\
  !*** ./src/components/Audio/AudioTime.tsx ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AudioTime: () => (/* binding */ AudioTime)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _AudioContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AudioContext */ "./src/components/Audio/AudioContext.tsx");
/* harmony import */ var _Text_Text__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Text/Text */ "./src/components/Text/Text.tsx");



const formatTime = time => {
  if (isNaN(time)) return '0:00';
  const minutes = Math.floor(time / 60);
  const seconds = Math.floor(time % 60).toString().padStart(2, '0');
  return `${minutes}:${seconds}`;
};
const AudioTime = ({
  className
}) => {
  const {
    currentTime
  } = (0,_AudioContext__WEBPACK_IMPORTED_MODULE_1__.useAudio)();
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Text_Text__WEBPACK_IMPORTED_MODULE_2__.Text, {
    as: "span",
    className: className
  }, formatTime(currentTime));
};

/***/ }),

/***/ "./src/components/Audio/AudioView.tsx":
/*!********************************************!*\
  !*** ./src/components/Audio/AudioView.tsx ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AudioView: () => (/* binding */ AudioView)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _AudioContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AudioContext */ "./src/components/Audio/AudioContext.tsx");
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }



const AudioView = ({
  className = '',
  children,
  ...props
}) => {
  const {
    audioRef
  } = (0,_AudioContext__WEBPACK_IMPORTED_MODULE_1__.useAudio)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_2__.useStyles)('audio-view');

  // Hide the default audio player as we are providing custom controls
  const audioClass = createStyle({
    display: 'none'
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("audio", _extends({
    ref: audioRef,
    className: `${audioClass} ${className}`
  }, props), children, "Your browser does not support the audio element.");
};

/***/ }),

/***/ "./src/components/Audio/AudioVisualizer.tsx":
/*!**************************************************!*\
  !*** ./src/components/Audio/AudioVisualizer.tsx ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AudioVisualizer: () => (/* binding */ AudioVisualizer)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _AudioContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AudioContext */ "./src/components/Audio/AudioContext.tsx");
/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core */ "./src/core/index.ts");




const AudioVisualizer = ({
  className
}) => {
  const {
    analyserNode,
    isPlaying
  } = (0,_AudioContext__WEBPACK_IMPORTED_MODULE_1__.useAudio)();
  const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  // FIX: Provide an initial value of `undefined` to `useRef` to resolve "Expected 1 arguments, but got 0" error.
  const animationFrameId = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(undefined);
  const {
    theme
  } = (0,_core__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const createStyle = (0,_core__WEBPACK_IMPORTED_MODULE_2__.useStyles)('audio-visualizer');
  const canvasClass = createStyle({
    width: '100%',
    height: '100px',
    display: 'block'
  });
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    const canvas = canvasRef.current;
    const context = canvas?.getContext('2d');

    // Always clear the canvas if the effect is cleaning up or not ready
    const cleanup = () => {
      if (animationFrameId.current) {
        cancelAnimationFrame(animationFrameId.current);
      }
      if (context) {
        context.clearRect(0, 0, context.canvas.width, context.canvas.height);
      }
    };
    if (!canvas || !analyserNode || !isPlaying || !context) {
      cleanup();
      return;
    }
    ;
    analyserNode.fftSize = 256;
    const bufferLength = analyserNode.frequencyBinCount;
    const dataArray = new Uint8Array(bufferLength);
    const draw = () => {
      animationFrameId.current = requestAnimationFrame(draw);
      analyserNode.getByteFrequencyData(dataArray);
      context.clearRect(0, 0, canvas.width, canvas.height);
      const barWidth = canvas.width / bufferLength * 1.5;
      let barHeight;
      let x = 0;
      for (let i = 0; i < bufferLength; i++) {
        barHeight = dataArray[i] / 2;
        context.fillStyle = theme.colors.primary;
        context.fillRect(x, canvas.height - barHeight, barWidth, barHeight);
        x += barWidth + 2; // Add spacing between bars
      }
    };
    draw();
    return cleanup;
  }, [analyserNode, isPlaying, theme.colors.primary]);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("canvas", {
    ref: canvasRef,
    className: `${canvasClass} ${className}`
  });
};

/***/ }),

/***/ "./src/components/Avatar/Avatar.tsx":
/*!******************************************!*\
  !*** ./src/components/Avatar/Avatar.tsx ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Avatar: () => (/* binding */ Avatar),
/* harmony export */   AvatarGroup: () => (/* binding */ AvatarGroup)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }



const Avatar = ({
  src,
  alt,
  fallback,
  size = 40,
  className = '',
  ...props
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('avatar');
  const containerClass = createStyle({
    width: `${size}px`,
    height: `${size}px`,
    borderRadius: '50%',
    display: 'inline-flex',
    alignItems: 'center',
    justifyContent: 'center',
    overflow: 'hidden',
    backgroundColor: theme.colors.border,
    color: theme.colors.textSecondary,
    fontWeight: '500',
    fontSize: `${size * 0.45}px`,
    userSelect: 'none'
  });
  const imageClass = createStyle({
    width: '100%',
    height: '100%',
    objectFit: 'cover'
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", _extends({
    className: `${containerClass} ${className}`
  }, props), src ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("img", {
    src: src,
    alt: alt,
    className: imageClass
  }) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", null, fallback));
};
const AvatarGroup = ({
  children,
  max = 3,
  className = ''
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('avatar-group');
  const avatars = react__WEBPACK_IMPORTED_MODULE_0___default().Children.toArray(children);
  const visibleAvatars = avatars.slice(0, max);
  const hiddenCount = avatars.length - max;
  const groupClass = createStyle({
    display: 'inline-flex',
    '& > *:not(:first-child)': {
      marginLeft: '-12px' // Overlap avatars
    },
    '& > *': {
      border: `2px solid ${theme.colors.background}`
    }
  });
  const excessClass = createStyle({
    backgroundColor: theme.colors.secondary,
    color: theme.colors.text
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: `${groupClass} ${className}`
  }, visibleAvatars, hiddenCount > 0 && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Avatar, {
    fallback: `+${hiddenCount}`,
    className: excessClass
  }));
};

/***/ }),

/***/ "./src/components/Backdrop/Backdrop.tsx":
/*!**********************************************!*\
  !*** ./src/components/Backdrop/Backdrop.tsx ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Backdrop: () => (/* binding */ Backdrop),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
/* harmony import */ var _core_hooks_useAnimation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/hooks/useAnimation */ "./src/core/hooks/useAnimation.ts");



const Backdrop = ({
  isOpen,
  onClick,
  className = ''
}) => {
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('backdrop');
  const {
    isRendered,
    style: fadeStyle
  } = (0,_core_hooks_useAnimation__WEBPACK_IMPORTED_MODULE_2__.useFade)(isOpen, 200);
  if (!isRendered) return null;
  const backdropClass = createStyle({
    position: 'fixed',
    top: 0,
    left: 0,
    right: 0,
    bottom: 0,
    backgroundColor: 'rgba(0, 0, 0, 0.7)',
    backdropFilter: 'blur(16px)',
    zIndex: 40 // Should be below modals
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: `${backdropClass} ${className}`,
    style: fadeStyle,
    onClick: onClick
  });
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Backdrop);

/***/ }),

/***/ "./src/components/Badge/Badge.tsx":
/*!****************************************!*\
  !*** ./src/components/Badge/Badge.tsx ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Badge: () => (/* binding */ Badge)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");
/* harmony import */ var _core_color_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/color/utils */ "./src/core/color/utils.ts");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }




const Badge = ({
  children,
  variant = 'solid',
  colorScheme = 'primary',
  className = '',
  ...props
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('badge');
  const colors = {
    primary: theme.colors.primary,
    accent: theme.colors.accent,
    success: '#10b981',
    error: '#ef4444'
  };
  const baseColor = colors[colorScheme];
  const variantStyles = {
    solid: {
      backgroundColor: (0,_core_color_utils__WEBPACK_IMPORTED_MODULE_3__.hexToRgba)(baseColor, 0.2),
      color: baseColor,
      border: '1px solid transparent'
    },
    outline: {
      backgroundColor: 'transparent',
      color: baseColor,
      border: `1px solid ${baseColor}`
    }
  };
  const badgeClass = createStyle({
    display: 'inline-block',
    padding: '0.125rem 0.625rem',
    fontSize: '0.75rem',
    fontWeight: '500',
    borderRadius: '999px',
    lineHeight: '1.25',
    ...variantStyles[variant]
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", _extends({
    className: `${badgeClass} ${className}`
  }, props), children);
};

/***/ }),

/***/ "./src/components/Box/Box.tsx":
/*!************************************!*\
  !*** ./src/components/Box/Box.tsx ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Box: () => (/* binding */ Box)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);

// FIX: Changed to pass props directly to React.createElement to resolve complex generic type issues.
const Box = ({
  as: Component = 'div',
  ...props
}) => {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Component, props);
};

/***/ }),

/***/ "./src/components/Breadcrumbs/Breadcrumbs.tsx":
/*!****************************************************!*\
  !*** ./src/components/Breadcrumbs/Breadcrumbs.tsx ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Breadcrumbs: () => (/* binding */ Breadcrumbs)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Link_Link__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Link/Link */ "./src/components/Link/Link.tsx");
/* harmony import */ var _Text_Text__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Text/Text */ "./src/components/Text/Text.tsx");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");





const Breadcrumbs = ({
  items,
  separator = '/',
  className = ''
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_3__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_4__.useStyles)('breadcrumbs');
  const navClass = createStyle({
    display: 'flex',
    alignItems: 'center',
    gap: theme.spacing.sm
  });
  const separatorClass = createStyle({
    color: theme.colors.textSecondary
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("nav", {
    "aria-label": "breadcrumb",
    className: `${navClass} ${className}`
  }, items.map((item, index) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), {
    key: index
  }, item.href || item.to ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Link_Link__WEBPACK_IMPORTED_MODULE_1__.Link, {
    href: item.href,
    to: item.to
  }, item.label) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Text_Text__WEBPACK_IMPORTED_MODULE_2__.Text, {
    as: "span",
    color: theme.colors.textSecondary
  }, item.label), index < items.length - 1 && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", {
    className: separatorClass,
    "aria-hidden": "true"
  }, separator))));
};

/***/ }),

/***/ "./src/components/Button.tsx":
/*!***********************************!*\
  !*** ./src/components/Button.tsx ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Button: () => (/* binding */ Button),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }



const Button = ({
  variant = 'primary',
  className = '',
  children,
  ...rest
}) => {
  const {
    theme,
    mode
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('button');
  const isDark = mode !== 'light';
  const base = createStyle({
    padding: '0.5rem 1rem',
    borderRadius: '0.375rem',
    fontWeight: '500',
    display: 'inline-grid',
    gridAutoFlow: 'column',
    alignItems: 'center',
    justifyContent: 'center',
    gap: '0.5rem',
    transition: 'all 0.2s',
    border: '1px solid transparent',
    '@supports (backdrop-filter: none) or (-webkit-backdrop-filter: none)': {
      backdropFilter: 'blur(8px)'
    },
    '&:disabled': {
      cursor: 'not-allowed',
      opacity: 0.6
    },
    // Remove default outline for all focus states to prevent interference
    '&:focus': {
      outline: 'none'
    }
  });
  const variants = {
    primary: createStyle({
      backgroundColor: theme.colors.primary,
      color: isDark ? '#172554' : '#fff',
      // Use dark text on light blue, white text on dark blue
      '&:hover:not(:disabled)': {
        filter: isDark ? 'brightness(1.2)' : 'brightness(0.9)'
      },
      '&:focus-visible': {
        boxShadow: `0 0 0 2px ${theme.colors.background}, 0 0 0 4px ${theme.colors.primary}`
      }
    }),
    secondary: createStyle({
      backgroundColor: theme.colors.border,
      color: theme.colors.text,
      '&:hover:not(:disabled)': {
        backgroundColor: isDark ? theme.colors.secondary : '#d1d5db' // darker gray
      },
      '&:focus-visible': {
        boxShadow: `0 0 0 2px ${theme.colors.background}, 0 0 0 4px ${theme.colors.secondary}`
      }
    }),
    accent: createStyle({
      backgroundColor: theme.colors.accent,
      color: '#fff',
      '&:hover:not(:disabled)': {
        filter: 'brightness(0.9)'
      },
      '&:focus-visible': {
        boxShadow: `0 0 0 2px ${theme.colors.background}, 0 0 0 4px ${theme.colors.accent}`
      }
    })
  };
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("button", _extends({
    className: `${base} ${variants[variant]} ${className}`
  }, rest), children);
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Button);

/***/ }),

/***/ "./src/components/ButtonGroup/ButtonGroup.tsx":
/*!****************************************************!*\
  !*** ./src/components/ButtonGroup/ButtonGroup.tsx ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ButtonGroup: () => (/* binding */ ButtonGroup)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Stack_Stack__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Stack/Stack */ "./src/components/Stack/Stack.tsx");
/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core */ "./src/core/index.ts");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }



const ButtonGroup = ({
  isAttached,
  className,
  children,
  ...props
}) => {
  const createStyle = (0,_core__WEBPACK_IMPORTED_MODULE_2__.useStyles)('button-group');
  const attachedClass = isAttached ? createStyle({
    '& > button:not(:first-child)': {
      borderTopLeftRadius: 0,
      borderBottomLeftRadius: 0
    },
    '& > button:not(:last-child)': {
      borderTopRightRadius: 0,
      borderBottomRightRadius: 0,
      borderRight: 0
    }
  }) : '';
  return (
    /*#__PURE__*/
    // FIX: The `gap` prop for Stack expects a string. Changed 0 to '0'.
    react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Stack_Stack__WEBPACK_IMPORTED_MODULE_1__.Stack, _extends({
      direction: "row",
      gap: isAttached ? '0' : '0.5rem',
      className: `${attachedClass} ${className}`
    }, props), children)
  );
};

/***/ }),

/***/ "./src/components/Calendar/Calendar.tsx":
/*!**********************************************!*\
  !*** ./src/components/Calendar/Calendar.tsx ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Calendar: () => (/* binding */ Calendar)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
/* harmony import */ var _Button__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Button */ "./src/components/Button.tsx");
/* harmony import */ var _Text_Text__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Text/Text */ "./src/components/Text/Text.tsx");





const Calendar = ({
  value,
  onChange
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_1__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_2__.useStyles)('calendar');
  const [currentDate, setCurrentDate] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(value || new Date());
  const containerClass = createStyle({
    padding: theme.spacing.md,
    backgroundColor: theme.colors.backgroundSecondary,
    borderRadius: '8px',
    width: '300px',
    border: `1px solid ${theme.colors.border}`,
    '@supports (backdrop-filter: none) or (-webkit-backdrop-filter: none)': {
      backdropFilter: 'blur(16px)'
    }
  });
  const headerClass = createStyle({
    display: 'flex',
    justifyContent: 'space-between',
    alignItems: 'center',
    marginBottom: theme.spacing.md
  });
  const gridClass = createStyle({
    display: 'grid',
    gridTemplateColumns: 'repeat(7, 1fr)',
    gap: theme.spacing.sm,
    textAlign: 'center'
  });
  const dayNameClass = createStyle({
    fontSize: '12px',
    color: theme.colors.textSecondary,
    fontWeight: 500
  });

  // FIX: Moved style declarations before their usage to resolve block-scoped variable error.
  const dayButtonClass = createStyle({
    width: '32px',
    height: '32px',
    borderRadius: '50%',
    border: 'none',
    background: 'transparent',
    color: theme.colors.text,
    cursor: 'pointer',
    transition: 'all 0.2s',
    '&:hover': {
      backgroundColor: theme.colors.border
    },
    '&[data-selected="true"]': {
      backgroundColor: theme.colors.primary,
      color: '#fff'
    }
  });
  const startOfMonth = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);
  const endOfMonth = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0);
  const startDay = startOfMonth.getDay();
  const daysInMonth = endOfMonth.getDate();
  const days = Array.from({
    length: startDay
  }, (_, i) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    key: `empty-${i}`
  }));
  for (let day = 1; day <= daysInMonth; day++) {
    const date = new Date(currentDate.getFullYear(), currentDate.getMonth(), day);
    const isSelected = value && date.toDateString() === value.toDateString();
    days.push(/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("button", {
      key: day,
      onClick: () => onChange(date),
      className: dayButtonClass,
      "data-selected": isSelected
    }, day));
  }
  const changeMonth = amount => {
    setCurrentDate(new Date(currentDate.getFullYear(), currentDate.getMonth() + amount, 1));
  };
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: containerClass
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: headerClass
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Button__WEBPACK_IMPORTED_MODULE_3__.Button, {
    variant: "secondary",
    onClick: () => changeMonth(-1),
    style: {
      padding: '4px'
    }
  }, "<"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Text_Text__WEBPACK_IMPORTED_MODULE_4__.Text, {
    weight: "600"
  }, currentDate.toLocaleString('default', {
    month: 'long',
    year: 'numeric'
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Button__WEBPACK_IMPORTED_MODULE_3__.Button, {
    variant: "secondary",
    onClick: () => changeMonth(1),
    style: {
      padding: '4px'
    }
  }, ">")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: gridClass
  }, ['S', 'M', 'T', 'W', 'T', 'F', 'S'].map(d => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    key: d,
    className: dayNameClass
  }, d)), days));
};

/***/ }),

/***/ "./src/components/Card/Card.tsx":
/*!**************************************!*\
  !*** ./src/components/Card/Card.tsx ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Card: () => (/* binding */ Card),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }



const Card = ({
  title,
  children,
  className = '',
  variant = 'default',
  onClick,
  style
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('card');
  const cardClass = createStyle({
    padding: theme.spacing.md,
    borderRadius: '6px',
    backgroundColor: theme.colors.backgroundSecondary,
    border: `1px solid ${theme.colors.border}`,
    height: '100%',
    transition: 'all 0.3s ease',
    cursor: onClick ? 'pointer' : 'default',
    '@supports (backdrop-filter: none) or (-webkit-backdrop-filter: none)': {
      backdropFilter: 'blur(16px)'
    },
    '&:hover': {
      transform: 'translateY(-4px)',
      borderColor: 'rgba(255, 255, 255, 0.25)',
      boxShadow: `0 8px 24px rgba(0, 0, 0, 0.5)`
    },
    // Add a visible focus state for keyboard accessibility
    '&:focus-visible': onClick ? {
      outline: `2px solid ${theme.colors.primary}`,
      outlineOffset: '2px'
    } : {}
  });
  const titleClass = title && createStyle({
    fontSize: theme.typography.fontSizes.base,
    fontWeight: String(theme.typography.fontWeights.semibold),
    marginBottom: theme.spacing.md,
    color: theme.colors.text
  });

  // Handle keyboard events for clickable cards
  const handleKeyDown = event => {
    if (onClick && (event.key === 'Enter' || event.key === ' ')) {
      event.preventDefault(); // Prevent space from scrolling
      onClick(event);
    }
  };

  // Add ARIA attributes and keyboard event listener if the card is clickable
  const interactiveProps = onClick ? {
    role: 'button',
    tabIndex: 0,
    onKeyDown: handleKeyDown
  } : {};
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", _extends({
    className: `${cardClass} ${className}`,
    style: style,
    onClick: onClick ? e => onClick(e) : undefined
  }, interactiveProps), title && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("h3", {
    className: titleClass
  }, title), children);
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Card);

/***/ }),

/***/ "./src/components/Center/Center.tsx":
/*!******************************************!*\
  !*** ./src/components/Center/Center.tsx ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Center: () => (/* binding */ Center)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Flex_Flex__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Flex/Flex */ "./src/components/Flex/Flex.tsx");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }


const Center = props => {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Flex_Flex__WEBPACK_IMPORTED_MODULE_1__.Flex, _extends({
    align: "center",
    justify: "center"
  }, props));
};

/***/ }),

/***/ "./src/components/Charts/ChartArea.tsx":
/*!*********************************************!*\
  !*** ./src/components/Charts/ChartArea.tsx ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ChartArea: () => (/* binding */ ChartArea)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _ChartsHook__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ChartsHook */ "./src/components/Charts/ChartsHook.tsx");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");
/* harmony import */ var _core_color_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/color/utils */ "./src/core/color/utils.ts");




const ChartArea = ({
  color,
  opacity = 0.3,
  yAccessor
}) => {
  const {
    dataset,
    xAccessor,
    xScale,
    yScale,
    dimensions
  } = (0,_ChartsHook__WEBPACK_IMPORTED_MODULE_1__.useCharts)();
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  if (!dataset || dataset.length < 2) return null; // Area needs at least 2 points

  const areaColor = color || theme.colors.primary;
  const areaPath = [...dataset.map((d, i) => {
    const x = xScale(xAccessor(d, i));
    const y = yScale(yAccessor(d, i));
    return `${i === 0 ? 'M' : 'L'} ${x.toFixed(2)},${y.toFixed(2)}`;
  }), `L ${xScale(xAccessor(dataset[dataset.length - 1], dataset.length - 1)).toFixed(2)},${dimensions.boundedHeight}`, `L ${xScale(xAccessor(dataset[0], 0)).toFixed(2)},${dimensions.boundedHeight}`, 'Z'].join(' ');
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
    d: areaPath,
    fill: (0,_core_color_utils__WEBPACK_IMPORTED_MODULE_3__.hexToRgba)(areaColor, opacity),
    stroke: "none"
  });
};

/***/ }),

/***/ "./src/components/Charts/ChartAxis.tsx":
/*!*********************************************!*\
  !*** ./src/components/Charts/ChartAxis.tsx ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ChartAxis: () => (/* binding */ ChartAxis)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _ChartsHook__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ChartsHook */ "./src/components/Charts/ChartsHook.tsx");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");



const generateTicks = (domain, count) => {
  if (domain[0] === domain[1]) return [domain[0]];
  const [min, max] = domain;
  if (count < 2) return [min];
  const step = (max - min) / (count - 1);
  if (step === 0) return [min];
  return Array.from({
    length: count
  }, (_, i) => min + i * step);
};
const ChartAxis = ({
  dimension,
  label,
  numberOfTicks = 5
}) => {
  const {
    xScale,
    yScale,
    dimensions
  } = (0,_ChartsHook__WEBPACK_IMPORTED_MODULE_1__.useCharts)();
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  if (dimension === 'x') {
    const ticks = generateTicks(xScale.domain(), numberOfTicks);
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("g", {
      transform: `translate(0, ${dimensions.boundedHeight})`
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("line", {
      x1: 0,
      x2: dimensions.boundedWidth,
      y1: 0,
      y2: 0,
      stroke: theme.colors.border
    }), ticks.map((tick, i) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("g", {
      key: i,
      transform: `translate(${xScale(tick)}, 0)`
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("line", {
      y2: 6,
      stroke: theme.colors.textSecondary
    }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("text", {
      style: {
        fill: theme.colors.textSecondary,
        fontSize: '10px',
        textAnchor: 'middle'
      },
      y: 20
    }, tick.toLocaleString()))), label && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("text", {
      style: {
        fill: theme.colors.text,
        fontSize: '12px',
        textAnchor: 'middle'
      },
      x: dimensions.boundedWidth / 2,
      y: dimensions.marginBottom - 10
    }, label));
  } else {
    // dimension === 'y'
    const ticks = generateTicks(yScale.domain(), numberOfTicks);
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("g", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("line", {
      y1: 0,
      y2: dimensions.boundedHeight,
      x1: 0,
      x2: 0,
      stroke: theme.colors.border
    }), ticks.map((tick, i) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("g", {
      key: i,
      transform: `translate(0, ${yScale(tick)})`
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("line", {
      x2: -6,
      stroke: theme.colors.textSecondary
    }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("text", {
      style: {
        fill: theme.colors.textSecondary,
        fontSize: '10px',
        textAnchor: 'end',
        dominantBaseline: 'middle'
      },
      x: -10
    }, tick.toLocaleString()))), label && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("text", {
      style: {
        fill: theme.colors.text,
        fontSize: '12px',
        textAnchor: 'middle'
      },
      transform: `translate(${-dimensions.marginLeft + 20}, ${dimensions.boundedHeight / 2}) rotate(-90)`
    }, label));
  }
};

/***/ }),

/***/ "./src/components/Charts/ChartBar.tsx":
/*!********************************************!*\
  !*** ./src/components/Charts/ChartBar.tsx ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ChartBar: () => (/* binding */ ChartBar)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _ChartsHook__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ChartsHook */ "./src/components/Charts/ChartsHook.tsx");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");



const ChartBar = ({
  color,
  barWidthRatio = 0.6,
  yAccessor
}) => {
  const {
    dataset,
    xAccessor,
    xScale,
    yScale,
    dimensions
  } = (0,_ChartsHook__WEBPACK_IMPORTED_MODULE_1__.useCharts)();
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  if (!dataset || dataset.length === 0) return null;
  const barColor = color || theme.colors.primary;
  // Calculate bandwidth based on the domain extent and number of data points
  const xDomain = xScale.domain();
  const bandWidth = (xScale(xDomain[1]) - xScale(xDomain[0])) / (dataset.length > 1 ? dataset.length - 1 : 1);
  const barWidth = bandWidth * barWidthRatio;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("g", null, dataset.map((d, i) => {
    const xValue = xAccessor(d, i);
    const yValue = yAccessor(d, i);
    if (yValue === null || yValue === undefined) return null;
    const x = xScale(xValue);
    const y = yScale(yValue);
    const height = dimensions.boundedHeight - y;
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("rect", {
      key: i,
      x: x - barWidth / 2,
      y: y,
      width: barWidth,
      height: Math.max(0, height),
      fill: barColor,
      rx: "2",
      ry: "2"
    });
  }));
};

/***/ }),

/***/ "./src/components/Charts/ChartHeatmap.tsx":
/*!************************************************!*\
  !*** ./src/components/Charts/ChartHeatmap.tsx ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ChartHeatmap: () => (/* binding */ ChartHeatmap)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");
/* harmony import */ var _core_color_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/color/utils */ "./src/core/color/utils.ts");



const ChartHeatmap = ({
  data,
  rowLabels,
  colLabels,
  className = ''
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_1__.useTheme)();
  if (!data.length || !data[0].length) return null;
  const numRows = data.length;
  const numCols = data[0].length;
  const maxValue = Math.max(...data.flat());
  const color = theme.colors.primary;
  const cellWidth = 30;
  const cellHeight = 20;
  const rowLabelOffset = 40;
  const colLabelOffset = 20;
  const gridWidth = numCols * cellWidth;
  const gridHeight = numRows * cellHeight;
  const width = gridWidth + rowLabelOffset;
  const height = gridHeight + colLabelOffset;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: className,
    style: {
      display: 'grid',
      placeItems: 'center'
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", {
    width: width,
    height: height
  }, colLabels.map((label, i) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("text", {
    key: `col-${i}`,
    x: rowLabelOffset + i * cellWidth + cellWidth / 2,
    y: height - 5,
    textAnchor: "middle",
    fontSize: "12",
    fill: theme.colors.textSecondary
  }, label)), rowLabels.map((label, i) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("text", {
    key: `row-${i}`,
    x: rowLabelOffset - 8,
    y: i * cellHeight + cellHeight / 2,
    textAnchor: "end",
    alignmentBaseline: "middle",
    fontSize: "12",
    fill: theme.colors.textSecondary
  }, label)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("g", {
    transform: `translate(${rowLabelOffset}, 0)`
  }, data.map((row, i) => row.map((value, j) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("rect", {
    key: `${i}-${j}`,
    x: j * cellWidth,
    y: i * cellHeight,
    width: cellWidth - 2,
    height: cellHeight - 2,
    fill: (0,_core_color_utils__WEBPACK_IMPORTED_MODULE_2__.hexToRgba)(color, value / maxValue),
    rx: "2",
    ry: "2"
  }))))));
};

/***/ }),

/***/ "./src/components/Charts/ChartLine.tsx":
/*!*********************************************!*\
  !*** ./src/components/Charts/ChartLine.tsx ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ChartLine: () => (/* binding */ ChartLine)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _ChartsHook__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ChartsHook */ "./src/components/Charts/ChartsHook.tsx");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");



const ChartLine = ({
  color,
  strokeWidth = 2,
  yAccessor
}) => {
  const {
    dataset,
    xAccessor,
    xScale,
    yScale
  } = (0,_ChartsHook__WEBPACK_IMPORTED_MODULE_1__.useCharts)();
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  if (!dataset || dataset.length === 0) return null;
  const linePath = dataset.map((d, i) => {
    const x = xScale(xAccessor(d, i));
    const y = yScale(yAccessor(d, i));
    return `${i === 0 ? 'M' : 'L'} ${x.toFixed(2)},${y.toFixed(2)}`;
  }).join(' ');
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
    d: linePath,
    fill: "none",
    stroke: color || theme.colors.primary,
    strokeWidth: strokeWidth,
    style: {
      vectorEffect: 'non-scaling-stroke'
    }
  });
};

/***/ }),

/***/ "./src/components/Charts/ChartRadar.tsx":
/*!**********************************************!*\
  !*** ./src/components/Charts/ChartRadar.tsx ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ChartRadar: () => (/* binding */ ChartRadar)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");
/* harmony import */ var _core_color_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/color/utils */ "./src/core/color/utils.ts");




// --- COMPONENT-SPECIFIC TYPES ---

// --- RADAR CHART COMPONENT ---

const ChartRadar = ({
  data,
  size = 300,
  maxValue: propMaxValue,
  className = '',
  gridLevels = 5
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_1__.useTheme)();

  // --- VALIDATION & INITIAL CALCULATION ---

  if (!data || data.length === 0 || !data[0].values || data[0].values.length === 0) {
    return null;
  }
  const axes = data[0].values.map(v => v.axis);
  const numAxes = axes.length;
  const angleSlice = Math.PI * 2 / numAxes;
  const center = size / 2;
  const radius = center * 0.75; // Leave space for labels

  const maxValue = propMaxValue || Math.max(...data.flatMap(series => series.values.map(v => v.value)));

  // --- SVG RENDER HELPERS ---

  const renderGrid = () => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("g", {
    className: "radar-grid"
  }, Array.from({
    length: gridLevels
  }).map((_, i) => {
    const levelRadius = radius * ((i + 1) / gridLevels);
    const points = Array.from({
      length: numAxes
    }).map((__, j) => {
      const angle = angleSlice * j - Math.PI / 2;
      const x = center + levelRadius * Math.cos(angle);
      const y = center + levelRadius * Math.sin(angle);
      return `${x.toFixed(2)},${y.toFixed(2)}`;
    }).join(' ');
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("polygon", {
      key: `grid-level-${i}`,
      points: points,
      stroke: theme.colors.border,
      strokeWidth: "1",
      fill: "none"
    });
  }), axes.map((_, i) => {
    const angle = angleSlice * i - Math.PI / 2;
    const x = center + radius * Math.cos(angle);
    const y = center + radius * Math.sin(angle);
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("line", {
      key: `spoke-${i}`,
      x1: center,
      y1: center,
      x2: x,
      y2: y,
      stroke: theme.colors.border,
      strokeWidth: "1"
    });
  }));
  const renderLabels = () => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("g", {
    className: "radar-labels"
  }, axes.map((axis, i) => {
    const angle = angleSlice * i - Math.PI / 2;
    const labelRadius = radius * 1.15;
    const x = center + labelRadius * Math.cos(angle);
    const y = center + labelRadius * Math.sin(angle);
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("text", {
      key: `label-${i}`,
      x: x,
      y: y,
      textAnchor: Math.abs(x - center) < 1 ? 'middle' : x > center ? 'start' : 'end',
      dominantBaseline: "middle",
      fontSize: "12px",
      fill: theme.colors.textSecondary
    }, axis);
  }));
  const renderData = () => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("g", {
    className: "radar-data"
  }, data.map((series, seriesIndex) => {
    const points = series.values.map((point, i) => {
      const pointRadius = point.value / maxValue * radius;
      const angle = angleSlice * i - Math.PI / 2;
      const x = center + pointRadius * Math.cos(angle);
      const y = center + pointRadius * Math.sin(angle);
      return `${x.toFixed(2)},${y.toFixed(2)}`;
    }).join(' ');
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("polygon", {
      key: `series-${seriesIndex}`,
      points: points,
      stroke: series.color,
      strokeWidth: "2",
      fill: (0,_core_color_utils__WEBPACK_IMPORTED_MODULE_2__.hexToRgba)(series.color, 0.25),
      style: {
        transition: 'all 0.3s'
      }
    });
  }));
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: className,
    style: {
      width: size,
      height: size,
      display: 'flex',
      alignItems: 'center',
      justifyContent: 'center'
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", {
    width: size,
    height: size
  }, renderGrid(), renderData(), renderLabels()));
};

/***/ }),

/***/ "./src/components/Charts/ChartRadial.tsx":
/*!***********************************************!*\
  !*** ./src/components/Charts/ChartRadial.tsx ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ChartRadial: () => (/* binding */ ChartRadial)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");



// Helper to convert polar coordinates to Cartesian
const polarToCartesian = (centerX, centerY, radius, angleInDegrees) => {
  const angleInRadians = (angleInDegrees - 180) * Math.PI / 180.0; // Start from the left
  return {
    x: centerX + radius * Math.cos(angleInRadians),
    y: centerY + radius * Math.sin(angleInRadians)
  };
};

// Helper to describe an SVG arc path
const describeArc = (x, y, radius, startAngle, endAngle) => {
  const start = polarToCartesian(x, y, radius, endAngle);
  const end = polarToCartesian(x, y, radius, startAngle);
  const largeArcFlag = endAngle - startAngle <= 180 ? '0' : '1';
  return `M ${start.x} ${start.y} A ${radius} ${radius} 0 ${largeArcFlag} 0 ${end.x} ${end.y}`;
};
const ChartRadial = ({
  data,
  size = 150,
  strokeWidth = 20,
  className = ''
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_1__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_2__.useStyles)('chart-radial');
  const total = data.reduce((acc, item) => acc + item.value, 0);
  const radius = (size - strokeWidth) / 2;
  const center = size / 2;
  let startAngle = 0;
  const containerClass = createStyle({
    display: 'grid',
    justifyItems: 'center',
    gap: theme.spacing.md,
    width: `${size}px`
  });
  const legendClass = createStyle({
    display: 'grid',
    gridAutoFlow: 'column',
    alignItems: 'center',
    justifyContent: 'center',
    gap: theme.spacing.md
  });
  const legendItemClass = createStyle({
    display: 'grid',
    gridAutoFlow: 'column',
    alignItems: 'center',
    gap: theme.spacing.sm
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: `${containerClass} ${className}`
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", {
    width: size,
    height: size / 2 + strokeWidth,
    viewBox: `0 0 ${size} ${size}`
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("g", {
    transform: `translate(0, ${size / 2})`
  }, data.map((item, index) => {
    const angle = item.value / total * 180;
    const endAngle = startAngle + angle;
    const path = describeArc(center, center, radius, startAngle, endAngle);
    startAngle = endAngle;
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
      key: index,
      d: path,
      fill: "none",
      stroke: item.color,
      strokeWidth: strokeWidth
    });
  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: legendClass
  }, data.map(item => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    key: item.label,
    className: legendItemClass
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    style: {
      width: '12px',
      height: '12px',
      borderRadius: '50%',
      backgroundColor: item.color
    }
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", {
    style: {
      fontSize: '12px',
      color: theme.colors.textSecondary
    }
  }, item.label)))));
};

/***/ }),

/***/ "./src/components/Charts/ChartSparkline.tsx":
/*!**************************************************!*\
  !*** ./src/components/Charts/ChartSparkline.tsx ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ChartSparkline: () => (/* binding */ ChartSparkline)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");
/* harmony import */ var _core_utils_scale__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/scale */ "./src/core/utils/scale.ts");
/* harmony import */ var _core_color_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/color/utils */ "./src/core/color/utils.ts");




const ChartSparkline = ({
  data,
  xAccessor,
  yAccessor,
  width = '100%',
  height = 50,
  color,
  strokeWidth = 1.5,
  className = '',
  style
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_1__.useTheme)();
  if (!data || data.length < 2) {
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
      style: {
        width,
        height,
        ...style
      },
      className: className,
      "aria-label": "Sparkline chart placeholder"
    });
  }
  const viewBoxWidth = 100;
  const viewBoxHeight = 30;
  const xDomain = [Math.min(...data.map(xAccessor)), Math.max(...data.map(xAccessor))];
  const yDomain = [Math.min(...data.map(yAccessor)), Math.max(...data.map(yAccessor))];

  // Add a small buffer to yDomain to prevent clipping at the very top/bottom
  const yRange = yDomain[1] - yDomain[0];
  const paddedYDomain = yRange > 0 ? [yDomain[0] - yRange * 0.1, yDomain[1] + yRange * 0.1] : [yDomain[0] - 1, yDomain[1] + 1];
  const xScale = (0,_core_utils_scale__WEBPACK_IMPORTED_MODULE_2__.createLinearScale)(xDomain, [0, viewBoxWidth]);
  const yScale = (0,_core_utils_scale__WEBPACK_IMPORTED_MODULE_2__.createLinearScale)(paddedYDomain, [viewBoxHeight, 0]); // inverted for SVG

  const lineColor = color || theme.colors.primary;
  const linePath = data.map((d, i) => {
    const x = xScale(xAccessor(d, i));
    const y = yScale(yAccessor(d, i));
    return `${i === 0 ? 'M' : 'L'}${x.toFixed(2)},${y.toFixed(2)}`;
  }).join(' ');
  const areaPath = [linePath, `L${viewBoxWidth},${viewBoxHeight}`, `L0,${viewBoxHeight}`, 'Z'].join(' ');
  const lastPoint = {
    x: xScale(xAccessor(data[data.length - 1], data.length - 1)),
    y: yScale(yAccessor(data[data.length - 1], data.length - 1))
  };
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", {
    width: width,
    height: height,
    viewBox: `0 0 ${viewBoxWidth} ${viewBoxHeight}`,
    preserveAspectRatio: "none",
    className: className,
    style: style,
    "aria-label": `Sparkline chart showing trend from ${yAccessor(data[0], 0)} to ${yAccessor(data[data.length - 1], data.length - 1)}`,
    role: "img"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
    d: areaPath,
    fill: (0,_core_color_utils__WEBPACK_IMPORTED_MODULE_3__.hexToRgba)(lineColor, 0.1),
    stroke: "none"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
    d: linePath,
    fill: "none",
    stroke: lineColor,
    strokeWidth: strokeWidth,
    strokeLinejoin: "round",
    strokeLinecap: "round",
    style: {
      vectorEffect: 'non-scaling-stroke'
    }
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("circle", {
    cx: lastPoint.x,
    cy: lastPoint.y,
    r: strokeWidth * 1.2,
    fill: lineColor,
    stroke: "none"
  }));
};

/***/ }),

/***/ "./src/components/Charts/ChartTooltip.tsx":
/*!************************************************!*\
  !*** ./src/components/Charts/ChartTooltip.tsx ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ChartTooltip: () => (/* binding */ ChartTooltip)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ "./node_modules/react-dom/index.js");
/* harmony import */ var _ChartsHook__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ChartsHook */ "./src/components/Charts/ChartsHook.tsx");
/* harmony import */ var _Tooltip_Tooltip__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Tooltip/Tooltip */ "./src/components/Tooltip/Tooltip.tsx");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");





const ChartTooltip = ({
  series,
  formatX = val => val.toString(),
  formatY = val => val.toLocaleString()
}) => {
  const {
    dataset,
    xScale,
    yScale,
    dimensions,
    xAccessor
  } = (0,_ChartsHook__WEBPACK_IMPORTED_MODULE_2__.useCharts)();
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_4__.useTheme)();
  const [hoveredData, setHoveredData] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);
  const handleMouseMove = event => {
    if (!dataset || dataset.length === 0) return;
    const {
      left
    } = event.currentTarget.getBoundingClientRect();
    const mouseX = event.clientX - left - dimensions.marginLeft;
    const hoveredXValue = xScale.invert(mouseX);

    // Find the closest data point by iterating through the data
    let closestPoint = dataset[0];
    let minDiff = Math.abs(xAccessor(dataset[0], 0) - hoveredXValue);
    for (let i = 1; i < dataset.length; i++) {
      const diff = Math.abs(xAccessor(dataset[i], i) - hoveredXValue);
      if (diff < minDiff) {
        minDiff = diff;
        closestPoint = dataset[i];
      }
    }
    setHoveredData({
      point: closestPoint,
      x: event.clientX,
      y: event.clientY
    });
  };
  const handleMouseLeave = () => {
    setHoveredData(null);
  };
  const svgX = hoveredData ? xScale(xAccessor(hoveredData.point, 0)) : null;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("g", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("rect", {
    x: 0,
    y: 0,
    width: dimensions.boundedWidth,
    height: dimensions.boundedHeight,
    fill: "transparent",
    onMouseMove: handleMouseMove,
    onMouseLeave: handleMouseLeave
  }), hoveredData && svgX !== null && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("line", {
    x1: svgX,
    x2: svgX,
    y1: 0,
    y2: dimensions.boundedHeight,
    stroke: theme.colors.border,
    strokeWidth: 1,
    strokeDasharray: "3 3",
    pointerEvents: "none"
  }), series.map(({
    key,
    color,
    accessor
  }) => {
    const yValue = accessor(hoveredData.point);
    if (yValue === null || yValue === undefined) return null;
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("circle", {
      key: key,
      cx: svgX,
      cy: yScale(yValue),
      r: 4,
      fill: color,
      stroke: theme.colors.background,
      strokeWidth: 2,
      pointerEvents: "none"
    });
  }), /*#__PURE__*/(0,react_dom__WEBPACK_IMPORTED_MODULE_1__.createPortal)(/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Tooltip_Tooltip__WEBPACK_IMPORTED_MODULE_3__.Tooltip, {
    style: {
      top: hoveredData.y,
      left: hoveredData.x,
      transform: `translate(${hoveredData.x > window.innerWidth / 2 ? '-110%' : '10%'}, -50%)`
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    style: {
      marginBottom: '0.5rem',
      fontWeight: '600',
      color: theme.colors.text
    }
  }, formatX(xAccessor(hoveredData.point, 0))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    style: {
      display: 'grid',
      gridTemplateColumns: 'auto auto auto',
      gap: '0.25rem 1rem',
      alignItems: 'center'
    }
  }, series.map(({
    key,
    label,
    color,
    accessor
  }) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), {
    key: key
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    style: {
      width: '10-px',
      height: '10px',
      backgroundColor: color,
      borderRadius: '50%'
    }
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", {
    style: {
      color: theme.colors.textSecondary
    }
  }, label, ":"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", {
    style: {
      fontWeight: '500',
      textAlign: 'right'
    }
  }, formatY(accessor(hoveredData.point))))))), document.body)));
};

/***/ }),

/***/ "./src/components/Charts/Charts.tsx":
/*!******************************************!*\
  !*** ./src/components/Charts/Charts.tsx ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Charts: () => (/* binding */ Charts)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _ChartsDisplay__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ChartsDisplay */ "./src/components/Charts/ChartsDisplay.tsx");
/* harmony import */ var _ChartsProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ChartsProvider */ "./src/components/Charts/ChartsProvider.tsx");
/* harmony import */ var _ChartLine__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ChartLine */ "./src/components/Charts/ChartLine.tsx");
/* harmony import */ var _ChartArea__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ChartArea */ "./src/components/Charts/ChartArea.tsx");
/* harmony import */ var _ChartBar__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ChartBar */ "./src/components/Charts/ChartBar.tsx");






const Charts = ({
  dataset,
  xAxis,
  series,
  children,
  className,
  style
}) => {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_ChartsDisplay__WEBPACK_IMPORTED_MODULE_1__.ChartsDisplay, {
    className: className,
    style: style
  }, dimensions => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_ChartsProvider__WEBPACK_IMPORTED_MODULE_2__.ChartsProvider, {
    dataset: dataset,
    xAxis: xAxis,
    series: series,
    dimensions: dimensions
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", {
    width: dimensions.width,
    height: dimensions.height
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("g", {
    transform: `translate(${dimensions.marginLeft}, ${dimensions.marginTop})`
  }, series.map(s => {
    const yAccessor = d => d[s.dataKey];
    switch (s.type) {
      case 'line':
        return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_ChartLine__WEBPACK_IMPORTED_MODULE_3__.ChartLine, {
          key: `${s.type}-${s.dataKey}`,
          yAccessor: yAccessor,
          color: s.color
        });
      case 'area':
        return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_ChartArea__WEBPACK_IMPORTED_MODULE_4__.ChartArea, {
          key: `${s.type}-${s.dataKey}`,
          yAccessor: yAccessor,
          color: s.color
        });
      case 'bar':
        return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_ChartBar__WEBPACK_IMPORTED_MODULE_5__.ChartBar, {
          key: `${s.type}-${s.dataKey}`,
          yAccessor: yAccessor,
          color: s.color
        });
      default:
        return null;
    }
  }), children))));
};

/***/ }),

/***/ "./src/components/Charts/ChartsContext.tsx":
/*!*************************************************!*\
  !*** ./src/components/Charts/ChartsContext.tsx ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ChartsContext: () => (/* binding */ ChartsContext)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);


// Define the shape of our scaling functions

const ChartsContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);

/***/ }),

/***/ "./src/components/Charts/ChartsDisplay.tsx":
/*!*************************************************!*\
  !*** ./src/components/Charts/ChartsDisplay.tsx ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ChartsDisplay: () => (/* binding */ ChartsDisplay)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);

const ChartsDisplay = ({
  marginTop = 40,
  marginRight = 30,
  marginBottom = 50,
  marginLeft = 60,
  children,
  className = '',
  style
}) => {
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const [width, setWidth] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);
  const [height, setHeight] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    // We need to check for ref.current to exist
    if (!ref.current) return;

    // Set initial dimensions
    const rect = ref.current.getBoundingClientRect();
    setWidth(rect.width);
    setHeight(rect.height);
    const observer = new ResizeObserver(([entry]) => {
      if (entry) {
        setWidth(entry.contentRect.width);
        setHeight(entry.contentRect.height);
      }
    });
    observer.observe(ref.current);
    return () => observer.disconnect();
  }, []);
  const dimensions = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {
    const boundedWidth = Math.max(0, width - marginLeft - marginRight);
    const boundedHeight = Math.max(0, height - marginTop - marginBottom);
    return {
      width,
      height,
      marginTop,
      marginRight,
      marginBottom,
      marginLeft,
      boundedWidth,
      boundedHeight
    };
  }, [width, height, marginTop, marginRight, marginBottom, marginLeft]);
  return (
    /*#__PURE__*/
    // FIX: Apply the passed style prop to the container div.
    react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
      ref: ref,
      className: className,
      style: {
        width: '100%',
        height: '100%',
        minHeight: '300px',
        ...style
      }
    }, width > 0 && height > 0 && children(dimensions))
  );
};

/***/ }),

/***/ "./src/components/Charts/ChartsHook.tsx":
/*!**********************************************!*\
  !*** ./src/components/Charts/ChartsHook.tsx ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   useCharts: () => (/* binding */ useCharts)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _ChartsContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ChartsContext */ "./src/components/Charts/ChartsContext.tsx");


const useCharts = () => {
  const context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_ChartsContext__WEBPACK_IMPORTED_MODULE_1__.ChartsContext);
  if (!context) {
    throw new Error('useCharts must be used within a ChartsProvider');
  }
  return context;
};

/***/ }),

/***/ "./src/components/Charts/ChartsProvider.tsx":
/*!**************************************************!*\
  !*** ./src/components/Charts/ChartsProvider.tsx ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ChartsProvider: () => (/* binding */ ChartsProvider)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _ChartsContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ChartsContext */ "./src/components/Charts/ChartsContext.tsx");
/* harmony import */ var _core_utils_scale__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/scale */ "./src/core/utils/scale.ts");



const ChartsProvider = ({
  dataset,
  xAxis,
  series,
  dimensions,
  children
}) => {
  const xAccessor = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => d => d[xAxis[0].dataKey], [xAxis]);
  const xDomain = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {
    if (!dataset || dataset.length === 0) return [0, 1];
    const values = dataset.map(xAccessor);
    return [Math.min(...values), Math.max(...values)];
  }, [dataset, xAccessor]);
  const yDomain = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {
    if (!dataset || dataset.length === 0 || series.length === 0) return [0, 1];
    const allYValues = series.flatMap(s => dataset.map(d => d[s.dataKey]));
    if (allYValues.length === 0) return [0, 1];
    const min = Math.min(...allYValues);
    const max = Math.max(...allYValues);
    return [min, max === min ? min + 1 : max];
  }, [dataset, series]);
  const xScale = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => (0,_core_utils_scale__WEBPACK_IMPORTED_MODULE_2__.createLinearScale)(xDomain, [0, dimensions.boundedWidth]), [xDomain, dimensions.boundedWidth]);
  const yScale = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => (0,_core_utils_scale__WEBPACK_IMPORTED_MODULE_2__.createLinearScale)(yDomain, [dimensions.boundedHeight, 0]),
  // Inverted for SVG coordinates
  [yDomain, dimensions.boundedHeight]);
  const contextValue = {
    dataset,
    xAccessor,
    xScale,
    yScale,
    dimensions
  };
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_ChartsContext__WEBPACK_IMPORTED_MODULE_1__.ChartsContext.Provider, {
    value: contextValue
  }, children);
};

/***/ }),

/***/ "./src/components/Checkbox/Checkbox.tsx":
/*!**********************************************!*\
  !*** ./src/components/Checkbox/Checkbox.tsx ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Checkbox: () => (/* binding */ Checkbox)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }



const Checkbox = ({
  label,
  id,
  className = '',
  checked,
  disabled,
  ...props
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('checkbox');
  const containerClass = createStyle({
    display: 'grid',
    gridTemplateColumns: 'auto 1fr',
    gap: theme.spacing.sm,
    alignItems: 'center',
    cursor: disabled ? 'not-allowed' : 'pointer',
    userSelect: 'none',
    opacity: disabled ? 0.6 : 1
  });
  const customCheckboxClass = createStyle({
    width: '18px',
    height: '18px',
    border: '2px solid',
    borderRadius: '4px',
    display: 'grid',
    placeContent: 'center',
    transition: 'all 0.2s',
    backgroundColor: checked ? theme.colors.primary : 'transparent',
    borderColor: checked ? theme.colors.primary : theme.colors.border
  });
  const inputClass = createStyle({
    position: 'absolute',
    opacity: 0,
    height: 0,
    width: 0,
    '&:focus-visible + div': {
      boxShadow: `0 0 0 2px ${theme.colors.background}, 0 0 0 4px ${theme.colors.primary}`
    }
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("label", {
    htmlFor: id,
    className: `${containerClass} ${className}`
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("input", _extends({
    type: "checkbox",
    id: id,
    checked: checked,
    disabled: disabled
  }, props, {
    className: inputClass
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: customCheckboxClass
  }, checked && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", {
    width: "12",
    height: "12",
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: theme.colors.background,
    strokeWidth: "3",
    strokeLinecap: "round",
    strokeLinejoin: "round"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("polyline", {
    points: "20 6 9 17 4 12"
  }))), label && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", {
    style: {
      color: theme.colors.text
    }
  }, label));
};

/***/ }),

/***/ "./src/components/Code/Code.tsx":
/*!**************************************!*\
  !*** ./src/components/Code/Code.tsx ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Code: () => (/* binding */ Code)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core */ "./src/core/index.ts");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }


const Code = ({
  children,
  className = '',
  ...props
}) => {
  const {
    theme
  } = (0,_core__WEBPACK_IMPORTED_MODULE_1__.useTheme)();
  const createStyle = (0,_core__WEBPACK_IMPORTED_MODULE_1__.useStyles)('code');
  const codeClass = createStyle({
    fontFamily: 'monospace',
    fontSize: '0.875em',
    backgroundColor: 'rgba(255, 255, 255, 0.1)',
    padding: '0.125em 0.3em',
    borderRadius: '4px',
    color: theme.colors.text
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("code", _extends({
    className: `${codeClass} ${className}`
  }, props), children);
};

/***/ }),

/***/ "./src/components/Code/CodeEditor.tsx":
/*!********************************************!*\
  !*** ./src/components/Code/CodeEditor.tsx ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CodeEditor: () => (/* binding */ CodeEditor)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core */ "./src/core/index.ts");
/* harmony import */ var _SyntaxHighlighter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./SyntaxHighlighter */ "./src/components/Code/SyntaxHighlighter.tsx");



const CodeEditor = ({
  value,
  onChange
}) => {
  const {
    theme
  } = (0,_core__WEBPACK_IMPORTED_MODULE_1__.useTheme)();
  const createStyle = (0,_core__WEBPACK_IMPORTED_MODULE_1__.useStyles)('code-editor');
  const preRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const textAreaRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const handleScroll = () => {
    if (preRef.current && textAreaRef.current) {
      preRef.current.scrollTop = textAreaRef.current.scrollTop;
      preRef.current.scrollLeft = textAreaRef.current.scrollLeft;
    }
  };
  const commonStyles = {
    margin: 0,
    padding: '1rem',
    border: 'none',
    fontFamily: 'monospace',
    fontSize: '13px',
    lineHeight: '1.5',
    tabSize: 2,
    MozTabSize: 2,
    whiteSpace: 'pre-wrap',
    wordBreak: 'break-word'
  };
  const containerClass = createStyle({
    position: 'relative',
    height: '100%',
    backgroundColor: 'rgba(0,0,0,0.3)',
    borderRadius: '8px'
  });
  const highlighterClass = createStyle({
    ...commonStyles,
    position: 'absolute',
    top: 0,
    left: 0,
    width: '100%',
    height: '100%',
    overflow: 'auto',
    pointerEvents: 'none',
    color: theme.colors.text
  });
  const textareaClass = createStyle({
    ...commonStyles,
    position: 'relative',
    width: '100%',
    height: '100%',
    overflow: 'auto',
    background: 'transparent',
    color: 'transparent',
    caretColor: theme.colors.text,
    resize: 'none',
    outline: 'none'
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: containerClass
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("textarea", {
    ref: textAreaRef,
    value: value,
    onChange: e => onChange(e.target.value),
    onScroll: handleScroll,
    className: textareaClass,
    spellCheck: "false",
    autoCapitalize: "off",
    autoComplete: "off",
    autoCorrect: "off"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    ref: preRef,
    className: highlighterClass
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_SyntaxHighlighter__WEBPACK_IMPORTED_MODULE_2__.SyntaxHighlighter, {
    code: value
  })));
};

/***/ }),

/***/ "./src/components/Code/SyntaxHighlighter.tsx":
/*!***************************************************!*\
  !*** ./src/components/Code/SyntaxHighlighter.tsx ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SyntaxHighlighter: () => (/* binding */ SyntaxHighlighter)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core */ "./src/core/index.ts");


const tokenColors = {
  keyword: '#c792ea',
  tag: '#f07178',
  punctuation: '#89ddff',
  attribute: '#ffcb6b',
  string: '#c3e88d',
  comment: '#546e7a',
  number: '#f78c6c',
  default: 'inherit'
};

// Simple regex-based tokenizer
const tokenize = code => {
  const rules = [{
    type: 'comment',
    regex: /\/\*[\s\S]*?\*\/|\/\/.*/g
  }, {
    type: 'string',
    regex: /"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*`|`(?:\\.|[^`\\])*`/g
  }, {
    type: 'tag',
    regex: /<\/?([A-Z][a-zA-Z0-9]*)/g
  }, {
    type: 'keyword',
    regex: /\b(import|from|export|const|let|var|return|=>|if|else|new|React|useState|useEffect|type|interface|extends)\b/g
  }, {
    type: 'attribute',
    regex: /([a-zA-Z0-9]+)=/g
  }, {
    type: 'number',
    regex: /\b\d+\b/g
  }, {
    type: 'punctuation',
    regex: /[{}()[\].,:;]/g
  }, {
    type: 'tag',
    regex: /[<>]/g
  }];
  let remainingCode = code;
  const tokens = [];
  rules.forEach(({
    type,
    regex
  }) => {
    let match;
    while ((match = regex.exec(code)) !== null) {
      tokens.push({
        type,
        value: match[0],
        index: match.index
      });
    }
  });

  // Sort tokens by their starting index
  tokens.sort((a, b) => a.index - b.index);
  const result = [];
  let lastIndex = 0;

  // Filter out overlapping tokens
  const finalTokens = tokens.filter((token, i) => {
    if (i > 0 && token.index < tokens[i - 1].index + tokens[i - 1].value.length) {
      return false;
    }
    return true;
  });
  finalTokens.forEach(token => {
    // Add untokenized text
    if (token.index > lastIndex) {
      result.push(code.substring(lastIndex, token.index));
    }
    // Add tokenized text
    result.push(/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", {
      key: `${token.index}-${token.type}`,
      style: {
        color: tokenColors[token.type]
      }
    }, token.value));
    lastIndex = token.index + token.value.length;
  });

  // Add any remaining text
  if (lastIndex < code.length) {
    result.push(code.substring(lastIndex));
  }
  return result;
};
const SyntaxHighlighter = ({
  code
}) => {
  const createStyle = (0,_core__WEBPACK_IMPORTED_MODULE_1__.useStyles)('syntax-highlighter');
  const preClass = createStyle({
    margin: 0,
    whiteSpace: 'pre-wrap',
    wordBreak: 'break-word'
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("pre", {
    className: preClass
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("code", null, tokenize(code)));
};

/***/ }),

/***/ "./src/components/Collapse/Collapse.tsx":
/*!**********************************************!*\
  !*** ./src/components/Collapse/Collapse.tsx ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Collapse: () => (/* binding */ Collapse)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core */ "./src/core/index.ts");


const Collapse = ({
  in: inProp,
  children
}) => {
  const createStyle = (0,_core__WEBPACK_IMPORTED_MODULE_1__.useStyles)('collapse');
  const contentRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const wrapperRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const wrapperClass = createStyle({
    overflow: 'hidden',
    transition: 'max-height 0.3s ease-in-out'
  });
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)(() => {
    if (wrapperRef.current && contentRef.current) {
      wrapperRef.current.style.maxHeight = inProp ? `${contentRef.current.scrollHeight}px` : '0px';
    }
  }, [inProp]);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    ref: wrapperRef,
    className: wrapperClass
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    ref: contentRef
  }, children));
};

/***/ }),

/***/ "./src/components/ColorPicker/ColorPicker.tsx":
/*!****************************************************!*\
  !*** ./src/components/ColorPicker/ColorPicker.tsx ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ColorPicker: () => (/* binding */ ColorPicker),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");
/* harmony import */ var _Slider_Slider__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Slider/Slider */ "./src/components/Slider/Slider.tsx");
/* harmony import */ var _Stack_Stack__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Stack/Stack */ "./src/components/Stack/Stack.tsx");
/* harmony import */ var _Text_Text__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Text/Text */ "./src/components/Text/Text.tsx");
/* harmony import */ var _core_color_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/color/utils */ "./src/core/color/utils.ts");







const ColorPicker = ({
  value,
  onChange,
  className = ''
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('color-picker');
  const [r, g, b] = (0,_core_color_utils__WEBPACK_IMPORTED_MODULE_6__.parseColor)(value);
  const handleColorChange = (channel, newValue) => {
    const newColor = [r, g, b];
    if (channel === 'r') newColor[0] = newValue;
    if (channel === 'g') newColor[1] = newValue;
    if (channel === 'b') newColor[2] = newValue;
    const toHex = c => `0${c.toString(16)}`.slice(-2);
    onChange(`#${toHex(newColor[0])}${toHex(newColor[1])}${toHex(newColor[2])}`);
  };
  const containerClass = createStyle({
    padding: theme.spacing.md,
    backgroundColor: theme.colors.backgroundSecondary,
    borderRadius: '8px',
    border: `1px solid ${theme.colors.border}`,
    width: '250px',
    '@supports (backdrop-filter: none) or (-webkit-backdrop-filter: none)': {
      backdropFilter: 'blur(16px)'
    }
  });
  const swatchClass = createStyle({
    width: '100%',
    height: '60px',
    backgroundColor: value,
    borderRadius: '4px',
    border: `1px solid ${theme.colors.border}`,
    marginBottom: theme.spacing.md
  });
  const hexInputClass = createStyle({
    width: '100%',
    fontFamily: 'monospace',
    textAlign: 'center',
    padding: theme.spacing.sm,
    backgroundColor: theme.colors.background,
    border: `1px solid ${theme.colors.border}`,
    color: theme.colors.text,
    borderRadius: '4px'
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: `${containerClass} ${className}`
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: swatchClass
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Stack_Stack__WEBPACK_IMPORTED_MODULE_4__.Stack, {
    direction: "column",
    gap: theme.spacing.sm
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Stack_Stack__WEBPACK_IMPORTED_MODULE_4__.Stack, {
    direction: "row",
    align: "center",
    gap: theme.spacing.sm,
    style: {
      gridTemplateColumns: 'auto 1fr'
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Text_Text__WEBPACK_IMPORTED_MODULE_5__.Text, {
    as: "span",
    size: "14px",
    color: "#ef4444",
    style: {
      width: '15px'
    }
  }, "R"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Slider_Slider__WEBPACK_IMPORTED_MODULE_3__.Slider, {
    value: r,
    onChange: newR => handleColorChange('r', newR),
    min: 0,
    max: 255,
    color: "#ef4444"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Stack_Stack__WEBPACK_IMPORTED_MODULE_4__.Stack, {
    direction: "row",
    align: "center",
    gap: theme.spacing.sm,
    style: {
      gridTemplateColumns: 'auto 1fr'
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Text_Text__WEBPACK_IMPORTED_MODULE_5__.Text, {
    as: "span",
    size: "14px",
    color: "#10b981",
    style: {
      width: '15px'
    }
  }, "G"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Slider_Slider__WEBPACK_IMPORTED_MODULE_3__.Slider, {
    value: g,
    onChange: newG => handleColorChange('g', newG),
    min: 0,
    max: 255,
    color: "#10b981"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Stack_Stack__WEBPACK_IMPORTED_MODULE_4__.Stack, {
    direction: "row",
    align: "center",
    gap: theme.spacing.sm,
    style: {
      gridTemplateColumns: 'auto 1fr'
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Text_Text__WEBPACK_IMPORTED_MODULE_5__.Text, {
    as: "span",
    size: "14px",
    color: "#3b82f6",
    style: {
      width: '15px'
    }
  }, "B"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Slider_Slider__WEBPACK_IMPORTED_MODULE_3__.Slider, {
    value: b,
    onChange: newB => handleColorChange('b', newB),
    min: 0,
    max: 255,
    color: "#3b82f6"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("input", {
    className: hexInputClass,
    type: "text",
    value: value,
    onChange: e => onChange(e.target.value)
  })));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ColorPicker);

/***/ }),

/***/ "./src/components/Combobox/Combobox.tsx":
/*!**********************************************!*\
  !*** ./src/components/Combobox/Combobox.tsx ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Combobox: () => (/* binding */ Combobox)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Popper_Popper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Popper/Popper */ "./src/components/Popper/Popper.tsx");
/* harmony import */ var _TextInput_TextInput__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../TextInput/TextInput */ "./src/components/TextInput/TextInput.tsx");
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");
/* harmony import */ var _core_hooks_useInteractions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/hooks/useInteractions */ "./src/core/hooks/useInteractions.ts");






const Combobox = ({
  items,
  value,
  onChange,
  placeholder
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_4__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_3__.useStyles)('combobox');
  const [isOpen, setIsOpen] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [inputValue, setInputValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');
  const [activeIndex, setActiveIndex] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(-1);
  const comboboxRef = (0,_core_hooks_useInteractions__WEBPACK_IMPORTED_MODULE_5__.useClickOutside)(() => setIsOpen(false));
  const selectedItem = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => items.find(item => item.value === value), [items, value]);
  react__WEBPACK_IMPORTED_MODULE_0___default().useEffect(() => {
    setInputValue(selectedItem?.label || '');
  }, [selectedItem]);
  const filteredItems = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {
    if (!inputValue) return items;
    return items.filter(item => item.label.toLowerCase().includes(inputValue.toLowerCase()));
  }, [items, inputValue]);
  const handleSelect = item => {
    onChange(item.value);
    setInputValue(item.label);
    setIsOpen(false);
  };
  const handleKeyDown = e => {
    if (e.key === 'ArrowDown') {
      e.preventDefault();
      setActiveIndex(prev => (prev + 1) % filteredItems.length);
    } else if (e.key === 'ArrowUp') {
      e.preventDefault();
      setActiveIndex(prev => (prev - 1 + filteredItems.length) % filteredItems.length);
    } else if (e.key === 'Enter') {
      e.preventDefault();
      if (activeIndex >= 0 && filteredItems[activeIndex]) {
        handleSelect(filteredItems[activeIndex]);
      }
    } else if (e.key === 'Escape') {
      setIsOpen(false);
    }
  };
  const optionsListClass = createStyle({
    maxHeight: '200px',
    overflowY: 'auto',
    display: 'grid',
    gap: '4px'
  });
  const optionClass = createStyle({
    padding: '8px 12px',
    borderRadius: '4px',
    cursor: 'pointer',
    color: theme.colors.textSecondary,
    transition: 'all 0.2s ease',
    '&:hover': {
      backgroundColor: theme.colors.border,
      color: theme.colors.text
    },
    '&[data-active="true"]': {
      backgroundColor: theme.colors.border,
      color: theme.colors.text
    }
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Popper_Popper__WEBPACK_IMPORTED_MODULE_1__.Popper, {
    isOpen: isOpen,
    setIsOpen: setIsOpen
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    ref: comboboxRef,
    style: {
      width: '250px'
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Popper_Popper__WEBPACK_IMPORTED_MODULE_1__.PopperTrigger, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_TextInput_TextInput__WEBPACK_IMPORTED_MODULE_2__.TextInput, {
    placeholder: placeholder,
    value: inputValue,
    onChange: e => {
      setInputValue(e.target.value);
      setIsOpen(true);
      onChange('');
    },
    onFocus: () => setIsOpen(true),
    onKeyDown: handleKeyDown,
    autoComplete: "off"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Popper_Popper__WEBPACK_IMPORTED_MODULE_1__.PopperContent, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: optionsListClass
  }, filteredItems.length > 0 ? filteredItems.map((item, index) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    key: item.value,
    className: optionClass,
    "data-active": index === activeIndex,
    onClick: () => handleSelect(item),
    onMouseMove: () => setActiveIndex(index)
  }, item.label)) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    style: {
      padding: '8px 12px',
      color: theme.colors.textSecondary
    }
  }, "No results found.")))));
};

/***/ }),

/***/ "./src/components/Container/Container.tsx":
/*!************************************************!*\
  !*** ./src/components/Container/Container.tsx ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Container: () => (/* binding */ Container)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }



const Container = ({
  children,
  className = '',
  maxWidth,
  size,
  ...props
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('container');
  const containerClass = createStyle({
    maxWidth: (size ? theme.maxWidths[size] : undefined) || maxWidth || theme.maxWidths.container,
    margin: '0 auto',
    padding: `0 ${theme.spacing.lg}`,
    '@media': {
      "(maxWidth: 'sm')": {
        padding: `0 ${theme.spacing.md}`
      }
    }
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", _extends({
    className: `${containerClass} ${className}`
  }, props), children);
};

/***/ }),

/***/ "./src/components/ContextMenu/ContextMenu.tsx":
/*!****************************************************!*\
  !*** ./src/components/ContextMenu/ContextMenu.tsx ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ContextMenu: () => (/* binding */ ContextMenu)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ "./node_modules/react-dom/index.js");
/* harmony import */ var _core_hooks_useInteractions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/hooks/useInteractions */ "./src/core/hooks/useInteractions.ts");
/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core */ "./src/core/index.ts");





// FIX: Changed to a discriminated union type to properly distinguish between action items and separators.
// A separator does not need a label, while an action item does.

const ContextMenu = ({
  isOpen,
  onClose,
  position,
  items
}) => {
  const {
    theme
  } = (0,_core__WEBPACK_IMPORTED_MODULE_3__.useTheme)();
  const createStyle = (0,_core__WEBPACK_IMPORTED_MODULE_3__.useStyles)('context-menu');
  const menuRef = (0,_core_hooks_useInteractions__WEBPACK_IMPORTED_MODULE_2__.useClickOutside)(onClose);
  const containerClass = createStyle({
    position: 'fixed',
    backgroundColor: theme.colors.backgroundSecondary,
    borderRadius: '6px',
    border: `1px solid ${theme.colors.border}`,
    boxShadow: `0 4px 12px rgba(0,0,0,0.5)`,
    minWidth: '180px',
    zIndex: 100,
    overflow: 'hidden',
    padding: '4px',
    '@supports (backdrop-filter: none) or (-webkit-backdrop-filter: none)': {
      backdropFilter: 'blur(16px)'
    }
  });
  const itemClass = createStyle({
    width: '100%',
    padding: '8px 12px',
    border: 'none',
    backgroundColor: 'transparent',
    textAlign: 'left',
    cursor: 'pointer',
    color: theme.colors.textSecondary,
    transition: 'all 0.2s ease',
    borderRadius: '4px',
    fontSize: '14px',
    '&:hover:not(:disabled)': {
      backgroundColor: 'rgba(255, 255, 255, 0.1)',
      color: theme.colors.text
    },
    '&:disabled': {
      opacity: 0.5,
      cursor: 'not-allowed'
    }
  });
  const dividerClass = createStyle({
    height: '1px',
    border: 'none',
    backgroundColor: theme.colors.border,
    margin: '4px 0'
  });
  if (!isOpen) return null;
  return /*#__PURE__*/(0,react_dom__WEBPACK_IMPORTED_MODULE_1__.createPortal)(/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    ref: menuRef,
    className: containerClass,
    style: {
      top: position.y,
      left: position.x
    }
  }, items.map((item, index) => {
    // FIX: Use an if/else block with the `in` operator to properly narrow the type of `item`.
    // Checking for the 'label' property is a robust way to discriminate because it's required on action items
    // and absent from separator items, resolving the type errors.
    if ('label' in item) {
      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("button", {
        key: item.label,
        className: itemClass,
        onClick: item.onClick,
        disabled: item.disabled
      }, item.label);
    } else {
      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("hr", {
        key: `sep-${index}`,
        className: dividerClass
      });
    }
  })), document.body);
};

/***/ }),

/***/ "./src/components/DataTable/DataTable.tsx":
/*!************************************************!*\
  !*** ./src/components/DataTable/DataTable.tsx ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DataTable: () => (/* binding */ DataTable)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! .. */ "./src/components/index.ts");
/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core */ "./src/core/index.ts");
/* harmony import */ var _icons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../icons */ "./src/icons/index.ts");





// Column definition

// Main component props

const DataTable = ({
  data,
  columns,
  pageSize = 10,
  enableFiltering = true,
  enableSorting = true,
  enableSelection = true,
  actions,
  className = ''
}) => {
  const {
    theme
  } = (0,_core__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const [filter, setFilter] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');
  const [sortConfig, setSortConfig] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);
  const [currentPage, setCurrentPage] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(1);
  const [selection, setSelection] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(new Set());

  // 1. Filtering
  const filteredData = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {
    if (!filter) return data;
    return data.filter(row => columns.some(col => {
      const value = row[col.accessorKey];
      return String(value).toLowerCase().includes(filter.toLowerCase());
    }));
  }, [data, columns, filter]);

  // 2. Sorting
  const sortedData = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {
    if (!sortConfig) return filteredData;
    const sorted = [...filteredData].sort((a, b) => {
      const aValue = a[sortConfig.key];
      const bValue = b[sortConfig.key];
      if (aValue < bValue) return sortConfig.direction === 'asc' ? -1 : 1;
      if (aValue > bValue) return sortConfig.direction === 'asc' ? 1 : -1;
      return 0;
    });
    return sorted;
  }, [filteredData, sortConfig]);

  // 3. Pagination
  const totalPages = Math.ceil(sortedData.length / pageSize);
  const paginatedData = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {
    const start = (currentPage - 1) * pageSize;
    const end = start + pageSize;
    return sortedData.slice(start, end);
  }, [sortedData, currentPage, pageSize]);
  const handleSort = key => {
    if (!enableSorting) return;
    let direction = 'asc';
    if (sortConfig && sortConfig.key === key && sortConfig.direction === 'asc') {
      direction = 'desc';
    }
    setSortConfig({
      key,
      direction
    });
    setCurrentPage(1); // Reset to first page on sort
  };
  const handleSelect = id => {
    setSelection(prev => {
      const newSelection = new Set(prev);
      if (newSelection.has(id)) {
        newSelection.delete(id);
      } else {
        newSelection.add(id);
      }
      return newSelection;
    });
  };
  const handleSelectAll = () => {
    setSelection(prevSelection => {
      const newSelection = new Set(prevSelection);
      const pageIds = paginatedData.map(item => item.id);
      const allOnPageSelected = pageIds.length > 0 && pageIds.every(id => newSelection.has(id));
      if (allOnPageSelected) {
        // If all are selected, deselect them
        pageIds.forEach(id => newSelection.delete(id));
      } else {
        // Otherwise, select them all
        pageIds.forEach(id => newSelection.add(id));
      }
      return newSelection;
    });
  };
  const clearSelection = () => {
    setSelection(new Set());
  };
  const selectedItems = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => data.filter(item => selection.has(item.id)), [data, selection]);
  const isAllOnPageSelected = paginatedData.length > 0 && paginatedData.every(item => selection.has(item.id));
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(___WEBPACK_IMPORTED_MODULE_1__.Card, {
    className: className
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(___WEBPACK_IMPORTED_MODULE_1__.Stack, {
    gap: "1.5rem"
  }, (enableFiltering || actions && selection.size > 0) && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(___WEBPACK_IMPORTED_MODULE_1__.Stack, {
    direction: "row",
    justify: "space-between",
    align: "center"
  }, enableFiltering ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    style: {
      minWidth: '250px'
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(___WEBPACK_IMPORTED_MODULE_1__.Search, {
    placeholder: "Search table...",
    value: filter,
    onChange: e => {
      setFilter(e.target.value);
      setCurrentPage(1); // Reset to first page on filter
    }
  })) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", null), actions && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    style: {
      transition: 'opacity 0.3s, transform 0.3s',
      opacity: selection.size > 0 ? 1 : 0,
      transform: selection.size > 0 ? 'translateY(0)' : 'translateY(-10px)',
      pointerEvents: selection.size > 0 ? 'auto' : 'none'
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(___WEBPACK_IMPORTED_MODULE_1__.Stack, {
    direction: "row",
    align: "center",
    gap: "1rem"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(___WEBPACK_IMPORTED_MODULE_1__.Text, {
    size: theme.typography.fontSizes.sm,
    color: theme.colors.textSecondary
  }, selection.size, " selected"), actions(selectedItems, clearSelection)))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    style: {
      overflowX: 'auto'
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(___WEBPACK_IMPORTED_MODULE_1__.Table, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(___WEBPACK_IMPORTED_MODULE_1__.TableHeader, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(___WEBPACK_IMPORTED_MODULE_1__.TableRow, null, enableSelection && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(___WEBPACK_IMPORTED_MODULE_1__.TableHead, {
    style: {
      width: '40px'
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(___WEBPACK_IMPORTED_MODULE_1__.Checkbox, {
    checked: isAllOnPageSelected,
    onChange: handleSelectAll,
    "aria-label": "Select all items on this page",
    disabled: paginatedData.length === 0
  })), columns.map(col => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(___WEBPACK_IMPORTED_MODULE_1__.TableHead, {
    key: String(col.accessorKey),
    onClick: () => col.enableSorting !== false && handleSort(col.accessorKey),
    style: {
      cursor: col.enableSorting !== false && enableSorting ? 'pointer' : 'default',
      whiteSpace: 'nowrap'
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(___WEBPACK_IMPORTED_MODULE_1__.Stack, {
    direction: "row",
    align: "center",
    gap: "0.5rem"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", null, col.header), enableSorting && col.enableSorting !== false && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(___WEBPACK_IMPORTED_MODULE_1__.Icon, {
    as: sortConfig?.key === col.accessorKey ? sortConfig.direction === 'asc' ? _icons__WEBPACK_IMPORTED_MODULE_3__.SortAscendingIcon : _icons__WEBPACK_IMPORTED_MODULE_3__.SortDescendingIcon : _icons__WEBPACK_IMPORTED_MODULE_3__.SelectorIcon,
    size: 14,
    style: {
      color: sortConfig?.key === col.accessorKey ? theme.colors.text : theme.colors.textSecondary,
      opacity: sortConfig?.key === col.accessorKey ? 1 : 0.5
    }
  })))))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(___WEBPACK_IMPORTED_MODULE_1__.TableBody, null, paginatedData.map(row => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(___WEBPACK_IMPORTED_MODULE_1__.TableRow, {
    key: row.id,
    "data-selected": selection.has(row.id),
    style: {
      backgroundColor: selection.has(row.id) ? 'rgba(59, 130, 246, 0.1)' : 'transparent'
    }
  }, enableSelection && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(___WEBPACK_IMPORTED_MODULE_1__.TableCell, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(___WEBPACK_IMPORTED_MODULE_1__.Checkbox, {
    checked: selection.has(row.id),
    onChange: () => handleSelect(row.id),
    "aria-label": `Select row ${row.id}`
  })), columns.map(col => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(___WEBPACK_IMPORTED_MODULE_1__.TableCell, {
    key: `${row.id}-${String(col.accessorKey)}`
  }, col.cell ? col.cell(row[col.accessorKey], row) : String(row[col.accessorKey])))))))), paginatedData.length === 0 && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(___WEBPACK_IMPORTED_MODULE_1__.Stack, {
    align: "center",
    style: {
      padding: '2rem'
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(___WEBPACK_IMPORTED_MODULE_1__.Text, {
    color: theme.colors.textSecondary
  }, filter ? 'No results found.' : 'No data available.')), totalPages > 1 && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(___WEBPACK_IMPORTED_MODULE_1__.Stack, {
    direction: "row",
    justify: "space-between",
    align: "center",
    style: {
      marginTop: '1rem',
      flexWrap: 'wrap',
      gap: '1rem'
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(___WEBPACK_IMPORTED_MODULE_1__.Text, {
    size: theme.typography.fontSizes.sm,
    color: theme.colors.textSecondary
  }, "Page ", currentPage, " of ", totalPages), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(___WEBPACK_IMPORTED_MODULE_1__.Pagination, {
    count: totalPages,
    page: currentPage,
    onChange: setCurrentPage
  }))));
};

/***/ }),

/***/ "./src/components/DatePicker/DatePicker.tsx":
/*!**************************************************!*\
  !*** ./src/components/DatePicker/DatePicker.tsx ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DatePicker: () => (/* binding */ DatePicker)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Popper_Popper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Popper/Popper */ "./src/components/Popper/Popper.tsx");
/* harmony import */ var _Calendar_Calendar__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Calendar/Calendar */ "./src/components/Calendar/Calendar.tsx");
/* harmony import */ var _Input_Input__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Input/Input */ "./src/components/Input/Input.tsx");




const DatePicker = ({
  value,
  onChange,
  label,
  className
}) => {
  const [isOpen, setIsOpen] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const dateString = value ? value.toLocaleDateString() : '';
  const handleDateChange = date => {
    onChange(date);
    setIsOpen(false);
  };
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Popper_Popper__WEBPACK_IMPORTED_MODULE_1__.Popper, {
    isOpen: isOpen,
    setIsOpen: setIsOpen
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: className
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Popper_Popper__WEBPACK_IMPORTED_MODULE_1__.PopperTrigger, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Input_Input__WEBPACK_IMPORTED_MODULE_3__.Input, {
    label: label,
    value: dateString,
    readOnly: true,
    placeholder: "Select a date",
    style: {
      cursor: 'pointer'
    }
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Popper_Popper__WEBPACK_IMPORTED_MODULE_1__.PopperContent, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Calendar_Calendar__WEBPACK_IMPORTED_MODULE_2__.Calendar, {
    value: value,
    onChange: handleDateChange
  }))));
};

/***/ }),

/***/ "./src/components/Dialog/Dialog.tsx":
/*!******************************************!*\
  !*** ./src/components/Dialog/Dialog.tsx ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Dialog: () => (/* binding */ Dialog),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Modal_Modal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Modal/Modal */ "./src/components/Modal/Modal.tsx");
/* harmony import */ var _Stack_Stack__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Stack/Stack */ "./src/components/Stack/Stack.tsx");
/* harmony import */ var _Button__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Button */ "./src/components/Button.tsx");
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }






const Dialog = ({
  isOpen,
  onClose,
  title,
  children,
  actions,
  className = ''
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_5__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_4__.useStyles)('dialog');
  const contentClass = createStyle({
    display: 'grid',
    gap: theme.spacing.md
  });
  const footerClass = createStyle({
    borderTop: `1px solid ${theme.colors.border}`,
    paddingTop: theme.spacing.md,
    marginTop: theme.spacing.md
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Modal_Modal__WEBPACK_IMPORTED_MODULE_1__.Modal, {
    isOpen: isOpen,
    onClose: onClose,
    title: title,
    className: className
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: contentClass
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", null, children), actions && actions.length > 0 && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Stack_Stack__WEBPACK_IMPORTED_MODULE_2__.Stack, {
    direction: "row",
    className: footerClass,
    justify: "end",
    gap: theme.spacing.sm
  }, actions.map(({
    label,
    ...props
  }, index) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Button__WEBPACK_IMPORTED_MODULE_3__.Button, _extends({
    key: index
  }, props), label)))));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Dialog);

/***/ }),

/***/ "./src/components/Divider/Divider.tsx":
/*!********************************************!*\
  !*** ./src/components/Divider/Divider.tsx ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Divider: () => (/* binding */ Divider)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }



const Divider = ({
  orientation = 'horizontal',
  className,
  ...props
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('divider');
  const dividerClass = createStyle({
    border: 'none',
    backgroundColor: theme.colors.border,
    ...(orientation === 'horizontal' ? {
      height: '1px',
      width: '100%',
      margin: '0.5rem 0'
    } : {
      width: '1px',
      height: 'auto',
      alignSelf: 'stretch',
      margin: '0 0.5rem'
    })
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("hr", _extends({
    className: `${dividerClass} ${className}`
  }, props));
};

/***/ }),

/***/ "./src/components/Drawer/Drawer.tsx":
/*!******************************************!*\
  !*** ./src/components/Drawer/Drawer.tsx ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Drawer: () => (/* binding */ Drawer)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ "./node_modules/react-dom/index.js");
/* harmony import */ var _core_hooks_useAnimation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/hooks/useAnimation */ "./src/core/hooks/useAnimation.ts");
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");
/* harmony import */ var _Backdrop_Backdrop__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Backdrop/Backdrop */ "./src/components/Backdrop/Backdrop.tsx");






const Drawer = ({
  isOpen,
  onClose,
  children,
  title,
  position = 'right',
  className = ''
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_4__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_3__.useStyles)('drawer');
  const {
    isRendered,
    style: slideStyle
  } = (0,_core_hooks_useAnimation__WEBPACK_IMPORTED_MODULE_2__.useSlide)(isOpen, {
    direction: position
  });
  const drawerRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const triggerRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const titleId = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(`drawer-title-${Math.random().toString(36).substring(2, 9)}`).current;
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (isOpen) {
      // 1. Store the triggering element and lock body scroll
      const originalBodyOverflow = document.body.style.overflow;
      document.body.style.overflow = 'hidden';
      triggerRef.current = document.activeElement;

      // 2. Focus the drawer container after it appears
      const focusTimeout = setTimeout(() => {
        drawerRef.current?.focus();
      }, 100);

      // 3. Handle keyboard events for focus trapping and closing
      const handleKeyDown = e => {
        if (e.key === 'Escape') {
          onClose();
        }
        if (e.key === 'Tab') {
          const focusableElements = drawerRef.current?.querySelectorAll('a[href], button:not([disabled]), textarea, input, select, [tabindex]:not([tabindex="-1"])');
          if (!focusableElements || focusableElements.length === 0) {
            e.preventDefault();
            return;
          }
          ;
          const firstElement = focusableElements[0];
          const lastElement = focusableElements[focusableElements.length - 1];
          if (e.shiftKey) {
            // Shift + Tab
            if (document.activeElement === firstElement) {
              lastElement.focus();
              e.preventDefault();
            }
          } else {
            // Tab
            if (document.activeElement === lastElement) {
              firstElement.focus();
              e.preventDefault();
            }
          }
        }
      };
      document.addEventListener('keydown', handleKeyDown);

      // 4. Cleanup on close
      return () => {
        document.body.style.overflow = originalBodyOverflow;
        clearTimeout(focusTimeout);
        document.removeEventListener('keydown', handleKeyDown);
        triggerRef.current?.focus();
      };
    }
  }, [isOpen, onClose]);
  if (!isRendered) return null;
  const drawerClass = createStyle({
    position: 'fixed',
    top: 0,
    bottom: 0,
    [position]: 0,
    width: '320px',
    maxWidth: '90vw',
    backgroundColor: theme.colors.backgroundSecondary,
    borderLeft: position === 'right' ? `1px solid ${theme.colors.border}` : 'none',
    borderRight: position === 'left' ? `1px solid ${theme.colors.border}` : 'none',
    boxShadow: '0 8px 32px rgba(0, 0, 0, 0.5)',
    zIndex: 60,
    display: 'flex',
    flexDirection: 'column',
    '@supports (backdrop-filter: none) or (-webkit-backdrop-filter: none)': {
      backdropFilter: 'blur(16px)'
    },
    '&:focus': {
      outline: 'none'
    }
  });
  const headerClass = createStyle({
    padding: theme.spacing.md,
    borderBottom: `1px solid ${theme.colors.border}`,
    display: 'flex',
    justifyContent: 'space-between',
    alignItems: 'center',
    flexShrink: 0
  });
  const contentClass = createStyle({
    padding: theme.spacing.md,
    overflowY: 'auto',
    flex: 1
  });
  const closeButtonClass = createStyle({
    cursor: 'pointer',
    border: 'none',
    background: 'none',
    color: theme.colors.textSecondary,
    padding: '4px',
    '&:hover': {
      color: theme.colors.text
    }
  });
  return /*#__PURE__*/(0,react_dom__WEBPACK_IMPORTED_MODULE_1__.createPortal)(/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Backdrop_Backdrop__WEBPACK_IMPORTED_MODULE_5__.Backdrop, {
    isOpen: isOpen,
    onClick: onClose
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    ref: drawerRef,
    className: `${drawerClass} ${className}`,
    style: slideStyle,
    role: "dialog",
    "aria-modal": "true",
    "aria-labelledby": title ? titleId : undefined,
    tabIndex: -1
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: headerClass
  }, title && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("h2", {
    id: titleId,
    style: {
      fontSize: '1.125rem',
      fontWeight: 600,
      color: theme.colors.text
    }
  }, title), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("button", {
    className: closeButtonClass,
    onClick: onClose,
    "aria-label": "Close drawer"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", {
    width: "18",
    height: "18",
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: "currentColor",
    strokeWidth: "2",
    strokeLinecap: "round",
    strokeLinejoin: "round"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("line", {
    x1: "18",
    y1: "6",
    x2: "6",
    y2: "18"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("line", {
    x1: "6",
    y1: "6",
    x2: "18",
    y2: "18"
  })))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: contentClass
  }, children))), document.body);
};

/***/ }),

/***/ "./src/components/Dropdown/Dropdown.tsx":
/*!**********************************************!*\
  !*** ./src/components/Dropdown/Dropdown.tsx ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Dropdown: () => (/* binding */ Dropdown),
/* harmony export */   DropdownContent: () => (/* binding */ DropdownContent),
/* harmony export */   DropdownItem: () => (/* binding */ DropdownItem),
/* harmony export */   DropdownTrigger: () => (/* binding */ DropdownTrigger)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Popper_Popper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Popper/Popper */ "./src/components/Popper/Popper.tsx");
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }




const Dropdown = ({
  children
}) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Popper_Popper__WEBPACK_IMPORTED_MODULE_1__.Popper, null, children);
const DropdownTrigger = ({
  children
}) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Popper_Popper__WEBPACK_IMPORTED_MODULE_1__.PopperTrigger, null, children);
const DropdownContent = ({
  children,
  className = ''
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_3__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_2__.useStyles)('dropdown-content');
  const contentClass = createStyle({
    backgroundColor: theme.colors.backgroundSecondary,
    borderRadius: '6px',
    border: `1px solid ${theme.colors.border}`,
    boxShadow: `0 4px 12px rgba(0,0,0,0.5)`,
    zIndex: 50,
    overflow: 'hidden',
    padding: '4px',
    minWidth: '180px',
    '@supports (backdrop-filter: none) or (-webkit-backdrop-filter: none)': {
      backdropFilter: 'blur(16px)'
    }
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Popper_Popper__WEBPACK_IMPORTED_MODULE_1__.PopperContent, {
    className: `${contentClass} ${className}`
  }, children);
};
const DropdownItem = ({
  children,
  className,
  ...props
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_3__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_2__.useStyles)('dropdown-item');
  const {
    setIsOpen
  } = (0,_Popper_Popper__WEBPACK_IMPORTED_MODULE_1__.usePopperContext)();
  const itemClass = createStyle({
    width: '100%',
    padding: '8px 12px',
    border: 'none',
    backgroundColor: 'transparent',
    textAlign: 'left',
    cursor: 'pointer',
    display: 'grid',
    gridTemplateColumns: 'auto 1fr',
    alignItems: 'center',
    gap: theme.spacing.sm,
    color: theme.colors.textSecondary,
    transition: 'all 0.2s ease',
    borderRadius: '4px',
    fontSize: '14px',
    '&:hover': {
      backgroundColor: 'rgba(255, 255, 255, 0.1)',
      color: theme.colors.text
    }
  });
  const handleClick = e => {
    props.onClick?.(e);
    setIsOpen(false);
  };
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("button", _extends({
    className: `${itemClass} ${className}`
  }, props, {
    onClick: handleClick
  }), children);
};

/***/ }),

/***/ "./src/components/Editable/Editable.tsx":
/*!**********************************************!*\
  !*** ./src/components/Editable/Editable.tsx ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Editable: () => (/* binding */ Editable)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Text_Text__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Text/Text */ "./src/components/Text/Text.tsx");
/* harmony import */ var _TextInput_TextInput__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../TextInput/TextInput */ "./src/components/TextInput/TextInput.tsx");
/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! .. */ "./src/components/index.ts");
/* harmony import */ var _Flex_Flex__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Flex/Flex */ "./src/components/Flex/Flex.tsx");
/* harmony import */ var _icons__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../icons */ "./src/icons/index.ts");





// FIX: Import TimesIcon to replace local CloseIcon definition for consistency.


// FIX: The CheckIcon and CloseIcon were not exported from the icons module.
// The incorrect import has been removed, and these local placeholder definitions are used instead.
const CheckIcon = () => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", {
  viewBox: "0 0 24 24",
  width: "1em",
  height: "1em",
  stroke: "currentColor",
  strokeWidth: "2",
  fill: "none",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("polyline", {
  points: "20 6 9 17 4 12"
}));
const Editable = ({
  defaultValue,
  onSave
}) => {
  const [isEditing, setIsEditing] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [value, setValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(defaultValue);
  const handleSave = () => {
    onSave(value);
    setIsEditing(false);
  };
  const handleCancel = () => {
    setValue(defaultValue);
    setIsEditing(false);
  };
  if (isEditing) {
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Flex_Flex__WEBPACK_IMPORTED_MODULE_4__.Flex, {
      align: "center",
      gap: "0.5rem"
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_TextInput_TextInput__WEBPACK_IMPORTED_MODULE_2__.TextInput, {
      value: value,
      onChange: e => setValue(e.target.value),
      onKeyDown: e => {
        if (e.key === 'Enter') handleSave();
        if (e.key === 'Escape') handleCancel();
      },
      autoFocus: true
    }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(___WEBPACK_IMPORTED_MODULE_3__.ButtonGroup, {
      isAttached: true
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(___WEBPACK_IMPORTED_MODULE_3__.IconButton, {
      icon: CheckIcon,
      "aria-label": "Save",
      onClick: handleSave
    }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(___WEBPACK_IMPORTED_MODULE_3__.IconButton, {
      icon: _icons__WEBPACK_IMPORTED_MODULE_5__.TimesIcon,
      "aria-label": "Cancel",
      onClick: handleCancel
    })));
  }
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Text_Text__WEBPACK_IMPORTED_MODULE_1__.Text, {
    onClick: () => setIsEditing(true),
    style: {
      cursor: 'pointer',
      borderBottom: '1px dashed grey',
      padding: '0.5rem 0.75rem'
    }
  }, value);
};

/***/ }),

/***/ "./src/components/Error/Error.tsx":
/*!****************************************!*\
  !*** ./src/components/Error/Error.tsx ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Error: () => (/* binding */ Error)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const Error = ({
  children,
  className = '',
  ...props
}) => {
  if (!children) return null;
  const baseClasses = "mt-1 text-sm text-red-400";
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("p", _extends({
    className: `${baseClasses} ${className}`
  }, props), children);
};

/***/ }),

/***/ "./src/components/FileUpload/FileUpload.tsx":
/*!**************************************************!*\
  !*** ./src/components/FileUpload/FileUpload.tsx ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   FileUpload: () => (/* binding */ FileUpload)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");
/* harmony import */ var _Text_Text__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Text/Text */ "./src/components/Text/Text.tsx");




const FileUpload = ({
  onFileSelect,
  className
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('file-upload');
  const [isDragging, setIsDragging] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [fileName, setFileName] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');
  const fileInputRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const handleFileChange = e => {
    const file = e.target.files?.[0];
    if (file) {
      setFileName(file.name);
      onFileSelect(file);
    } else {
      setFileName('');
      onFileSelect(null);
    }
  };
  const handleDrag = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(e => {
    e.preventDefault();
    e.stopPropagation();
  }, []);
  const handleDragIn = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(e => {
    handleDrag(e);
    if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {
      setIsDragging(true);
    }
  }, [handleDrag]);
  const handleDragOut = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(e => {
    handleDrag(e);
    setIsDragging(false);
  }, [handleDrag]);
  const handleDrop = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(e => {
    handleDrag(e);
    setIsDragging(false);
    const file = e.dataTransfer.files?.[0];
    if (file) {
      setFileName(file.name);
      onFileSelect(file);
    }
  }, [handleDrag, onFileSelect]);
  const handleClick = () => {
    fileInputRef.current?.click();
  };
  const containerClass = createStyle({
    padding: theme.spacing.lg,
    border: `2px dashed ${isDragging ? theme.colors.primary : theme.colors.border}`,
    borderRadius: '8px',
    backgroundColor: isDragging ? 'rgba(59, 130, 246, 0.1)' : theme.colors.backgroundSecondary,
    display: 'flex',
    flexDirection: 'column',
    alignItems: 'center',
    justifyContent: 'center',
    textAlign: 'center',
    cursor: 'pointer',
    transition: 'all 0.2s',
    '@supports (backdrop-filter: none) or (-webkit-backdrop-filter: none)': {
      backdropFilter: 'blur(12px)'
    }
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: `${containerClass} ${className}`,
    onClick: handleClick,
    onDragEnter: handleDragIn,
    onDragLeave: handleDragOut,
    onDragOver: handleDrag,
    onDrop: handleDrop
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("input", {
    type: "file",
    ref: fileInputRef,
    onChange: handleFileChange,
    style: {
      display: 'none'
    }
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Text_Text__WEBPACK_IMPORTED_MODULE_3__.Text, null, fileName ? `Selected: ${fileName}` : 'Drag & drop a file here, or click to select'), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Text_Text__WEBPACK_IMPORTED_MODULE_3__.Text, {
    size: "12px",
    color: theme.colors.textSecondary
  }, "Max file size: 10MB"));
};

/***/ }),

/***/ "./src/components/Flex/Flex.tsx":
/*!**************************************!*\
  !*** ./src/components/Flex/Flex.tsx ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Flex: () => (/* binding */ Flex)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core */ "./src/core/index.ts");


const Flex = ({
  direction,
  align,
  justify,
  wrap,
  gap,
  as: Component = 'div',
  className,
  ...props
}) => {
  const createStyle = (0,_core__WEBPACK_IMPORTED_MODULE_1__.useStyles)('flex');
  const flexClass = createStyle({
    display: 'flex',
    flexDirection: direction,
    alignItems: align,
    justifyContent: justify,
    flexWrap: wrap,
    gap: gap
  });
  const finalClassName = [flexClass, className].filter(Boolean).join(' ');
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Component, {
    ...props,
    className: finalClassName
  });
};

/***/ }),

/***/ "./src/components/FloatingActionButton/FloatingActionButton.tsx":
/*!**********************************************************************!*\
  !*** ./src/components/FloatingActionButton/FloatingActionButton.tsx ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   FloatingActionButton: () => (/* binding */ FloatingActionButton)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Button */ "./src/components/Button.tsx");
/* harmony import */ var _Icon_Icon__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Icon/Icon */ "./src/components/Icon/Icon.tsx");
/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core */ "./src/core/index.ts");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }




const FloatingActionButton = ({
  icon,
  label,
  position = {
    bottom: '2rem',
    right: '2rem'
  },
  size = 'medium',
  className = '',
  ...props
}) => {
  const createStyle = (0,_core__WEBPACK_IMPORTED_MODULE_3__.useStyles)('fab');
  const sizes = {
    small: {
      wrapper: '40px',
      icon: 18
    },
    medium: {
      wrapper: '56px',
      icon: 24
    },
    large: {
      wrapper: '72px',
      icon: 32
    }
  };
  const fabClass = createStyle({
    position: 'fixed',
    ...position,
    width: sizes[size].wrapper,
    height: sizes[size].wrapper,
    borderRadius: '50%',
    padding: 0,
    boxShadow: '0 4px 12px rgba(0,0,0,0.4)',
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    zIndex: 40
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Button__WEBPACK_IMPORTED_MODULE_1__.Button, _extends({
    variant: "primary",
    className: `${fabClass} ${className}`,
    "aria-label": label
  }, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Icon_Icon__WEBPACK_IMPORTED_MODULE_2__.Icon, {
    as: icon,
    size: sizes[size].icon
  }));
};

/***/ }),

/***/ "./src/components/Footer/Footer.tsx":
/*!******************************************!*\
  !*** ./src/components/Footer/Footer.tsx ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Footer: () => (/* binding */ Footer)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }



const Footer = ({
  children,
  className = '',
  ...props
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('footer');
  const footerClass = createStyle({
    padding: `${theme.spacing.lg} ${theme.spacing.lg}`,
    backgroundColor: theme.colors.backgroundSecondary,
    borderTop: `1px solid ${theme.colors.border}`,
    color: theme.colors.textSecondary,
    textAlign: 'center',
    marginTop: 'auto' // Pushes footer to the bottom in a flex column layout
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("footer", _extends({
    className: `${footerClass} ${className}`
  }, props), children);
};

/***/ }),

/***/ "./src/components/FormControl/FormControl.tsx":
/*!****************************************************!*\
  !*** ./src/components/FormControl/FormControl.tsx ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   FormControl: () => (/* binding */ FormControl),
/* harmony export */   FormErrorMessage: () => (/* binding */ FormErrorMessage),
/* harmony export */   FormHelperText: () => (/* binding */ FormHelperText),
/* harmony export */   FormLabel: () => (/* binding */ FormLabel)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Box_Box__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Box/Box */ "./src/components/Box/Box.tsx");
/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core */ "./src/core/index.ts");
/* harmony import */ var _Text_Text__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Text/Text */ "./src/components/Text/Text.tsx");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }




const FormControlContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);
const useFormControl = () => (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(FormControlContext);
const FormControl = ({
  isInvalid,
  isDisabled,
  ...props
}) => {
  const id = (0,react__WEBPACK_IMPORTED_MODULE_0__.useId)();
  const context = {
    id,
    isInvalid,
    isDisabled
  };
  const createStyle = (0,_core__WEBPACK_IMPORTED_MODULE_2__.useStyles)('form-control');
  const formControlClass = createStyle({
    display: 'flex',
    flexDirection: 'column',
    gap: '0.25rem'
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(FormControlContext.Provider, {
    value: context
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Box_Box__WEBPACK_IMPORTED_MODULE_1__.Box, _extends({
    className: formControlClass
  }, props)));
};
const FormLabel = props => {
  const context = useFormControl();
  const {
    theme
  } = (0,_core__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Text_Text__WEBPACK_IMPORTED_MODULE_3__.Text, _extends({
    as: "label",
    htmlFor: context?.id,
    size: theme.typography.fontSizes.sm,
    weight: theme.typography.fontWeights.medium,
    color: theme.colors.textSecondary
  }, props));
};
const FormHelperText = props => {
  const context = useFormControl();
  const {
    theme
  } = (0,_core__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Text_Text__WEBPACK_IMPORTED_MODULE_3__.Text, _extends({
    size: theme.typography.fontSizes.sm,
    color: theme.colors.textSecondary,
    id: context ? `${context.id}-helper-text` : undefined
  }, props));
};
const FormErrorMessage = props => {
  const context = useFormControl();
  if (!context?.isInvalid) return null;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Text_Text__WEBPACK_IMPORTED_MODULE_3__.Text, _extends({
    color: "#f87171" // red-400
    ,
    size: "0.875rem",
    id: context ? `${context.id}-error-message` : undefined,
    "aria-live": "polite"
  }, props));
};

/***/ }),

/***/ "./src/components/GraphicsNodeEditor/Connection.tsx":
/*!**********************************************************!*\
  !*** ./src/components/GraphicsNodeEditor/Connection.tsx ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Connection: () => (/* binding */ Connection)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);

const getPath = (start, end, type = 'curved') => {
  if (type === 'straight') {
    return `M ${start.x} ${start.y} L ${end.x} ${end.y}`;
  }
  const dx = Math.abs(start.x - end.x);
  const c1 = {
    x: start.x + dx * 0.6,
    y: start.y
  };
  const c2 = {
    x: end.x - dx * 0.6,
    y: end.y
  };
  return `M ${start.x} ${start.y} C ${c1.x} ${c1.y}, ${c2.x} ${c2.y}, ${end.x} ${end.y}`;
};
const Connection = ({
  startPos,
  endPos,
  color,
  type,
  onContextMenu
}) => {
  const d = getPath(startPos, endPos, type);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("g", {
    onContextMenu: onContextMenu
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
    d: d,
    stroke: "transparent",
    strokeWidth: "12",
    fill: "none",
    style: {
      pointerEvents: 'stroke'
    }
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
    d: d,
    stroke: color,
    strokeWidth: "2",
    fill: "none",
    style: {
      pointerEvents: 'none'
    }
  }));
};

/***/ }),

/***/ "./src/components/GraphicsNodeEditor/DraftConnection.tsx":
/*!***************************************************************!*\
  !*** ./src/components/GraphicsNodeEditor/DraftConnection.tsx ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DraftConnection: () => (/* binding */ DraftConnection)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _GraphicsContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GraphicsContext */ "./src/components/GraphicsNodeEditor/GraphicsContext.tsx");
/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core */ "./src/core/index.ts");



const getPath = (start, end) => {
  const dx = Math.abs(start.x - end.x);
  const c1 = {
    x: start.x + dx * 0.5,
    y: start.y
  };
  const c2 = {
    x: end.x - dx * 0.5,
    y: end.y
  };
  return `M ${start.x} ${start.y} C ${c1.x} ${c1.y}, ${c2.x} ${c2.y}, ${end.x} ${end.y}`;
};
const DraftConnection = () => {
  const {
    draftConnection
  } = (0,_GraphicsContext__WEBPACK_IMPORTED_MODULE_1__.useGraphicsContext)();
  const {
    theme
  } = (0,_core__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  if (!draftConnection) return null;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
    d: getPath(draftConnection.start, draftConnection.end),
    stroke: theme.colors.primary,
    strokeWidth: "2",
    fill: "none",
    strokeDasharray: "4 4",
    style: {
      pointerEvents: 'none'
    }
  });
};

/***/ }),

/***/ "./src/components/GraphicsNodeEditor/GraphicsContext.tsx":
/*!***************************************************************!*\
  !*** ./src/components/GraphicsNodeEditor/GraphicsContext.tsx ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   GraphicsContext: () => (/* binding */ GraphicsContext),
/* harmony export */   useGraphicsContext: () => (/* binding */ useGraphicsContext)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);

const GraphicsContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);
const useGraphicsContext = () => {
  const context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(GraphicsContext);
  if (!context) {
    throw new Error('useGraphicsContext must be used within a GraphicsProvider');
  }
  return context;
};

/***/ }),

/***/ "./src/components/GraphicsNodeEditor/GraphicsNodeEditor.tsx":
/*!******************************************************************!*\
  !*** ./src/components/GraphicsNodeEditor/GraphicsNodeEditor.tsx ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   GraphicsNodeEditorView: () => (/* binding */ GraphicsNodeEditorView),
/* harmony export */   GraphicsProvider: () => (/* binding */ GraphicsProvider)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _GraphicsContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GraphicsContext */ "./src/components/GraphicsNodeEditor/GraphicsContext.tsx");
/* harmony import */ var _Node__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Node */ "./src/components/GraphicsNodeEditor/Node.tsx");
/* harmony import */ var _Connection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Connection */ "./src/components/GraphicsNodeEditor/Connection.tsx");
/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core */ "./src/core/index.ts");
/* harmony import */ var _DraftConnection__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./DraftConnection */ "./src/components/GraphicsNodeEditor/DraftConnection.tsx");
/* harmony import */ var _graphProcessor__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./graphProcessor */ "./src/components/GraphicsNodeEditor/graphProcessor.ts");
/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! .. */ "./src/components/index.ts");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }








const GraphicsProvider = ({
  children,
  initialNodes,
  initialConnections,
  creatableNodeTypes: initialCreatableNodeTypes = {}
}) => {
  const [nodes, setNodes] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(initialNodes);
  const [connections, setConnections] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(initialConnections);
  const [pan, setPan] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({
    x: 0,
    y: 0
  });
  const [zoom, setZoom] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(1);
  const editorRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const connectingRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const [draftConnection, setDraftConnection] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);
  const [nodeOutputs, setNodeOutputs] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({});
  const [socketRelativePositions, setSocketRelativePositions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({});
  const {
    addToast
  } = (0,___WEBPACK_IMPORTED_MODULE_7__.useToast)();
  const [creatableNodeTypes, setCreatableNodeTypes] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(initialCreatableNodeTypes);
  const newCreateNode = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((label, nodeTemplate) => {
    setCreatableNodeTypes(prev => ({
      ...prev,
      [label]: nodeTemplate
    }));
  }, []);
  const nodesRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(nodes);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    nodesRef.current = nodes;
  }, [nodes]);
  const pendingSocketPositions = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({});
  const positionUpdateTimer = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    // Cleanup timer on unmount
    return () => {
      if (positionUpdateTimer.current !== null) {
        clearTimeout(positionUpdateTimer.current);
      }
    };
  }, []);
  const registerSocketPositions = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((nodeId, positions) => {
    pendingSocketPositions.current[nodeId] = positions;
    if (positionUpdateTimer.current !== null) {
      clearTimeout(positionUpdateTimer.current);
    }
    positionUpdateTimer.current = window.setTimeout(() => {
      setSocketRelativePositions(prev => ({
        ...prev,
        ...pendingSocketPositions.current
      }));
      pendingSocketPositions.current = {};
      positionUpdateTimer.current = null;
    }, 0);
  }, []);
  const getNodes = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {
    return nodesRef.current;
  }, []);
  const createNode = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(nodeData => {
    const newNode = {
      ...nodeData,
      id: `node_${Date.now()}_${Math.random().toString(36).substring(2, 9)}`,
      // Ensure data is a copy to prevent reference issues
      data: {
        ...(nodeData.data || {})
      }
    };
    setNodes(prev => [...prev, newNode]);
  }, [setNodes]);
  const updateNode = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((nodeId, data) => {
    setNodes(prev => prev.map(n => n.id === nodeId ? {
      ...n,
      ...data
    } : n));
  }, [setNodes]);
  const deleteNode = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(nodeId => {
    setNodes(prev => prev.filter(n => n.id !== nodeId));
    setConnections(prev => prev.filter(c => c.sourceNodeId !== nodeId && c.targetNodeId !== nodeId));
  }, [setNodes, setConnections]);
  const autoConnect = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((sourceNodeId, sourceSocketId) => {
    const sourceNode = nodes.find(n => n.id === sourceNodeId);
    if (!sourceNode) return;
    let bestTarget = null;
    nodes.forEach(targetNode => {
      if (targetNode.id === sourceNodeId) return;
      targetNode.inputs.forEach(inputSocket => {
        const isConnected = connections.some(c => c.targetNodeId === targetNode.id && c.targetSocketId === inputSocket.id);
        if (!isConnected) {
          const distance = Math.sqrt(Math.pow(targetNode.position.x - sourceNode.position.x, 2) + Math.pow(targetNode.position.y - sourceNode.position.y, 2));
          if (bestTarget === null || distance < bestTarget.distance) {
            bestTarget = {
              targetNodeId: targetNode.id,
              targetSocketId: inputSocket.id,
              distance
            };
          }
        }
      });
    });
    if (bestTarget) {
      const newConnection = {
        id: `conn_${Date.now()}_${Math.random().toString(36).substring(2, 9)}`,
        sourceNodeId,
        sourceSocketId,
        targetNodeId: bestTarget.targetNodeId,
        targetSocketId: bestTarget.targetSocketId,
        type: 'curved'
      };
      setConnections(prev => [...prev, newConnection]);
    }
  }, [nodes, connections, setConnections]);
  const startConnecting = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((nodeId, socketId, type, e) => {
    connectingRef.current = {
      nodeId,
      socketId,
      type
    };
    const rect = editorRef.current?.getBoundingClientRect();
    if (rect) {
      const startPos = {
        x: e.clientX - rect.left,
        y: e.clientY - rect.top
      };
      setDraftConnection({
        start: startPos,
        end: startPos
      });
    }
  }, []);
  const stopConnecting = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((nodeId, socketId, type) => {
    if (connectingRef.current) {
      const start = connectingRef.current;
      const end = {
        nodeId,
        socketId,
        type
      };
      if (start.type !== end.type && start.nodeId !== end.nodeId) {
        const sourceInfo = start.type === 'output' ? start : end;
        const targetInfo = start.type === 'input' ? start : end;
        const sourceNode = nodes.find(n => n.id === sourceInfo.nodeId);
        const targetNode = nodes.find(n => n.id === targetInfo.nodeId);
        if (sourceNode && targetNode) {
          const sourceSocket = sourceNode.outputs.find(s => s.id === sourceInfo.socketId);
          const targetSocket = targetNode.inputs.find(s => s.id === targetInfo.socketId);
          if (sourceSocket && targetSocket) {
            const sourceType = sourceSocket.type;
            const targetType = targetSocket.type;
            const areTypesCompatible = sourceType === 'any' || targetType === 'any' || sourceType === targetType;
            if (!areTypesCompatible) {
              addToast({
                title: 'Connection Error',
                description: `Cannot connect type '${sourceType}' to type '${targetType}'.`,
                variant: 'error'
              });
            } else {
              const isTargetConnected = connections.some(c => c.targetNodeId === targetInfo.nodeId && c.targetSocketId === targetInfo.socketId);
              if (!isTargetConnected) {
                const newConnection = {
                  id: `conn_${Date.now()}_${Math.random().toString(36).substring(2, 9)}`,
                  sourceNodeId: sourceInfo.nodeId,
                  sourceSocketId: sourceInfo.socketId,
                  targetNodeId: targetInfo.nodeId,
                  targetSocketId: targetInfo.socketId,
                  type: 'curved'
                };
                setConnections(prev => [...prev, newConnection]);
              } else {
                addToast({
                  title: 'Connection Warning',
                  description: `Input '${targetSocket.label}' is already connected.`,
                  variant: 'warning'
                });
              }
            }
          }
        }
      }
    }
    connectingRef.current = null;
    setDraftConnection(null);
  }, [connections, nodes, addToast]);
  const handleMouseMove = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(e => {
    if (connectingRef.current && editorRef.current) {
      const rect = editorRef.current.getBoundingClientRect();
      setDraftConnection(prev => prev ? {
        ...prev,
        end: {
          x: e.clientX - rect.left,
          y: e.clientY - rect.top
        }
      } : null);
    }
  }, []);
  const handleMouseUp = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {
    if (connectingRef.current) {
      connectingRef.current = null;
      setDraftConnection(null);
    }
  }, []);
  const handleProcessGraph = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {
    const outputs = (0,_graphProcessor__WEBPACK_IMPORTED_MODULE_6__.processGraph)(nodes, connections);
    setNodeOutputs(outputs);
  }, [nodes, connections]);
  react__WEBPACK_IMPORTED_MODULE_0___default().useEffect(() => {
    window.addEventListener('mousemove', handleMouseMove);
    window.addEventListener('mouseup', handleMouseUp);
    return () => {
      window.removeEventListener('mousemove', handleMouseMove);
      window.removeEventListener('mouseup', handleMouseUp);
    };
  }, [handleMouseMove, handleMouseUp]);
  const contextValue = {
    nodes,
    setNodes,
    connections,
    setConnections,
    pan,
    setPan,
    zoom,
    setZoom,
    editorRef,
    startConnecting,
    stopConnecting,
    isConnecting: !!connectingRef.current,
    draftConnection,
    processGraph: handleProcessGraph,
    nodeOutputs,
    createNode,
    getNodes,
    updateNode,
    deleteNode,
    autoConnect,
    socketRelativePositions,
    registerSocketPositions,
    creatableNodeTypes,
    newCreateNode
  };
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_GraphicsContext__WEBPACK_IMPORTED_MODULE_1__.GraphicsContext.Provider, {
    value: contextValue
  }, children);
};
const NodeRenderer = ({
  node,
  onContextMenu
}) => {
  const {
    connections,
    nodeOutputs,
    setNodes
  } = (0,_GraphicsContext__WEBPACK_IMPORTED_MODULE_1__.useGraphicsContext)();
  const nodeInputs = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {
    const inputs = {};
    connections.forEach(conn => {
      if (conn.targetNodeId === node.id) {
        const sourceNodeOutput = nodeOutputs[conn.sourceNodeId];
        if (sourceNodeOutput) {
          inputs[conn.targetSocketId] = sourceNodeOutput[conn.sourceSocketId];
        }
      }
    });
    node.inputs.forEach(inputSocket => {
      const isConnected = connections.some(c => c.targetNodeId === node.id && c.targetSocketId === inputSocket.id);
      if (!isConnected && inputSocket.value !== undefined) {
        inputs[inputSocket.id] = inputSocket.value;
      }
    });
    return inputs;
  }, [node.id, node.inputs, connections, nodeOutputs]);
  const handleUpdateNodeData = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(newData => {
    setNodes(currentNodes => currentNodes.map(n => n.id === node.id ? {
      ...n,
      data: {
        ...n.data,
        ...newData
      }
    } : n));
  }, [node.id, setNodes]);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Node__WEBPACK_IMPORTED_MODULE_2__.Node, _extends({}, node, {
    onContextMenu: onContextMenu
  }), node.component && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(node.component, {
    data: node,
    inputs: nodeInputs,
    onUpdateData: handleUpdateNodeData
  }));
};
const GraphicsNodeEditorView = ({
  style,
  plugins
}) => {
  const {
    nodes,
    connections,
    setConnections,
    pan,
    setPan,
    zoom,
    editorRef,
    updateNode,
    deleteNode,
    autoConnect,
    socketRelativePositions
  } = (0,_GraphicsContext__WEBPACK_IMPORTED_MODULE_1__.useGraphicsContext)();
  const {
    theme
  } = (0,_core__WEBPACK_IMPORTED_MODULE_4__.useTheme)();
  const createStyle = (0,_core__WEBPACK_IMPORTED_MODULE_4__.useStyles)('graphics-editor');
  const [isPanning, setIsPanning] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const panState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({
    startPan: {
      x: 0,
      y: 0
    },
    startMouse: {
      x: 0,
      y: 0
    }
  });
  const [connectionContextMenu, setConnectionContextMenu] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({
    isOpen: false,
    position: {
      x: 0,
      y: 0
    },
    connection: null
  });
  const [nodeContextMenu, setNodeContextMenu] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({
    isOpen: false,
    position: {
      x: 0,
      y: 0
    },
    node: null
  });
  const [renameDialog, setRenameDialog] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({
    isOpen: false,
    nodeId: null,
    currentName: ''
  });
  const [newNodeName, setNewNodeName] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');
  const editorClass = createStyle({
    width: '100%',
    height: '100%',
    backgroundColor: 'rgba(0,0,0,0.2)',
    backgroundImage: `radial-gradient(${theme.colors.border} 1px, transparent 0)`,
    backgroundSize: '20px 20px',
    position: 'relative',
    overflow: 'hidden',
    cursor: isPanning ? 'grabbing' : 'grab'
  });
  const nodeCanvasClass = createStyle({
    position: 'absolute',
    width: '100%',
    height: '100%',
    transformOrigin: 'top left',
    pointerEvents: 'none' // Pass clicks through to the background
  });
  const svgOverlayClass = createStyle({
    position: 'absolute',
    top: 0,
    left: 0,
    width: '100%',
    height: '100%',
    pointerEvents: 'auto' // Capture events for connections
  });
  const handleMouseDown = e => {
    if (e.button === 0 && e.target === e.currentTarget) {
      setIsPanning(true);
      panState.current = {
        startPan: {
          ...pan
        },
        startMouse: {
          x: e.clientX,
          y: e.clientY
        }
      };
    }
  };
  const handleMouseMove = e => {
    if (isPanning) {
      const dx = e.clientX - panState.current.startMouse.x;
      const dy = e.clientY - panState.current.startMouse.y;
      setPan({
        x: panState.current.startPan.x + dx,
        y: panState.current.startPan.y + dy
      });
    }
  };
  const handleMouseUp = () => {
    setIsPanning(false);
  };
  const handleConnectionContextMenu = (e, connection) => {
    e.preventDefault();
    e.stopPropagation();
    setConnectionContextMenu({
      isOpen: true,
      position: {
        x: e.clientX,
        y: e.clientY
      },
      connection
    });
  };
  const closeConnectionContextMenu = () => {
    setConnectionContextMenu(prev => ({
      ...prev,
      isOpen: false,
      connection: null
    }));
  };
  const updateConnectionProp = (connectionId, props) => {
    setConnections(prev => prev.map(c => c.id === connectionId ? {
      ...c,
      ...props
    } : c));
    closeConnectionContextMenu();
  };
  const deleteConnection = connectionId => {
    setConnections(prev => prev.filter(c => c.id !== connectionId));
    closeConnectionContextMenu();
  };
  const toggleConnectionType = connectionId => {
    const conn = connections.find(c => c.id === connectionId);
    if (conn) {
      const newType = conn.type === 'straight' ? 'curved' : 'straight';
      updateConnectionProp(connectionId, {
        type: newType
      });
    }
  };
  const handleNodeContextMenu = (e, nodeId) => {
    const node = nodes.find(n => n.id === nodeId);
    if (node) {
      setNodeContextMenu({
        isOpen: true,
        position: {
          x: e.clientX,
          y: e.clientY
        },
        node
      });
    }
  };
  const closeNodeContextMenu = () => {
    setNodeContextMenu(prev => ({
      ...prev,
      isOpen: false,
      node: null
    }));
  };
  const handleCloseRenameDialog = () => {
    setRenameDialog({
      isOpen: false,
      nodeId: null,
      currentName: ''
    });
    setNewNodeName('');
  };
  const handleSaveNodeName = () => {
    if (renameDialog.nodeId && newNodeName.trim()) {
      updateNode(renameDialog.nodeId, {
        label: newNodeName.trim()
      });
    }
    handleCloseRenameDialog();
  };
  const connectionPoints = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {
    return connections.map(conn => {
      const sourceNode = nodes.find(n => n.id === conn.sourceNodeId);
      const targetNode = nodes.find(n => n.id === conn.targetNodeId);
      const sourceSocketRelatives = socketRelativePositions[conn.sourceNodeId];
      const targetSocketRelatives = socketRelativePositions[conn.targetNodeId];
      if (!sourceNode || !targetNode || !sourceSocketRelatives || !targetSocketRelatives) return null;
      const sourceSocketPos = sourceSocketRelatives[conn.sourceSocketId];
      const targetSocketPos = targetSocketRelatives[conn.targetSocketId];
      if (!sourceSocketPos || !targetSocketPos) return null;
      const startPos = {
        x: sourceNode.position.x + sourceSocketPos.x,
        y: sourceNode.position.y + sourceSocketPos.y
      };
      const endPos = {
        x: targetNode.position.x + targetSocketPos.x,
        y: targetNode.position.y + targetSocketPos.y
      };
      const sourceSocket = sourceNode.outputs.find(s => s.id === conn.sourceSocketId);
      const color = conn.color || sourceSocket?.color || theme.colors.secondary;
      return {
        id: conn.id,
        startPos,
        endPos,
        color,
        type: conn.type || 'curved',
        originalConnection: conn
      };
    }).filter(p => p !== null);
  }, [nodes, connections, socketRelativePositions, theme.colors.secondary]);
  const connectionContextMenuItems = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {
    if (!connectionContextMenu.connection) return [];
    const conn = connectionContextMenu.connection;
    return [{
      label: 'Delete Connection',
      onClick: () => deleteConnection(conn.id)
    }, {
      isSeparator: true
    }, {
      label: 'Set Color to Accent',
      onClick: () => updateConnectionProp(conn.id, {
        color: theme.colors.accent
      })
    }, {
      label: 'Set Color to Secondary',
      onClick: () => updateConnectionProp(conn.id, {
        color: theme.colors.secondary
      })
    }, {
      label: 'Reset Color',
      onClick: () => updateConnectionProp(conn.id, {
        color: undefined
      })
    }, {
      isSeparator: true
    }, {
      label: `Set Type to ${conn.type === 'straight' ? 'Curved' : 'Straight'}`,
      onClick: () => toggleConnectionType(conn.id)
    }];
  }, [connectionContextMenu.connection, theme.colors, connections, setConnections]);
  const nodeContextMenuItems = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {
    if (!nodeContextMenu.node) return [];
    const node = nodeContextMenu.node;
    const colorCycle = [theme.colors.primary, theme.colors.accent, '#10b981', '#ef4444', theme.colors.secondary, '#9333ea'];
    const handleChangeOutputColor = socketId => {
      const newOutputs = node.outputs.map(output => {
        if (output.id === socketId) {
          const currentColor = output.color || theme.colors.secondary;
          const currentIndex = colorCycle.indexOf(currentColor);
          const nextIndex = (currentIndex + 1) % colorCycle.length;
          return {
            ...output,
            color: colorCycle[nextIndex]
          };
        }
        return output;
      });
      updateNode(node.id, {
        outputs: newOutputs
      });
      closeNodeContextMenu();
    };
    const items = [{
      label: 'Rename Node',
      onClick: () => {
        setNewNodeName(node.label);
        setRenameDialog({
          isOpen: true,
          nodeId: node.id,
          currentName: node.label
        });
        closeNodeContextMenu();
      }
    }, {
      label: 'Delete Node',
      onClick: () => {
        deleteNode(node.id);
        closeNodeContextMenu();
      }
    }];
    if (node.outputs.length > 0) {
      items.push({
        isSeparator: true
      });
      node.outputs.forEach(output => {
        items.push({
          label: `Cycle '${output.label}' Color`,
          onClick: () => handleChangeOutputColor(output.id)
        });
        items.push({
          label: `Auto-connect '${output.label}'`,
          onClick: () => {
            autoConnect(node.id, output.id);
            closeNodeContextMenu();
          }
        });
      });
    }
    return items;
  }, [nodeContextMenu.node, theme.colors, updateNode, deleteNode, autoConnect]);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    ref: editorRef,
    className: editorClass,
    style: style
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", {
    className: svgOverlayClass,
    onMouseDown: handleMouseDown,
    onMouseMove: handleMouseMove,
    onMouseUp: handleMouseUp,
    onMouseLeave: handleMouseUp
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("g", {
    transform: `translate(${pan.x}, ${pan.y}) scale(${zoom})`
  }, connectionPoints.map(points => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Connection__WEBPACK_IMPORTED_MODULE_3__.Connection, {
    key: points.id,
    startPos: points.startPos,
    endPos: points.endPos,
    color: points.color,
    type: points.type,
    onContextMenu: e => handleConnectionContextMenu(e, points.originalConnection)
  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DraftConnection__WEBPACK_IMPORTED_MODULE_5__.DraftConnection, null)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: nodeCanvasClass,
    style: {
      transform: `translate(${pan.x}px, ${pan.y}px) scale(${zoom})`
    }
  }, nodes.map(node => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(NodeRenderer, {
    key: node.id,
    node: node,
    onContextMenu: handleNodeContextMenu
  }))), plugins && plugins.map((Plugin, i) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Plugin, {
    key: i
  })), connectionContextMenu.isOpen && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(___WEBPACK_IMPORTED_MODULE_7__.ContextMenu, {
    isOpen: connectionContextMenu.isOpen,
    onClose: closeConnectionContextMenu,
    position: connectionContextMenu.position,
    items: connectionContextMenuItems
  }), nodeContextMenu.isOpen && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(___WEBPACK_IMPORTED_MODULE_7__.ContextMenu, {
    isOpen: nodeContextMenu.isOpen,
    onClose: closeNodeContextMenu,
    position: nodeContextMenu.position,
    items: nodeContextMenuItems
  }), renameDialog.isOpen && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(___WEBPACK_IMPORTED_MODULE_7__.Dialog, {
    isOpen: renameDialog.isOpen,
    onClose: handleCloseRenameDialog,
    title: `Rename Node: "${renameDialog.currentName}"`,
    actions: [{
      label: 'Cancel',
      onClick: handleCloseRenameDialog,
      variant: 'secondary'
    }, {
      label: 'Save',
      onClick: handleSaveNodeName,
      variant: 'primary'
    }]
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(___WEBPACK_IMPORTED_MODULE_7__.Input, {
    label: "New Name",
    value: newNodeName,
    onChange: e => setNewNodeName(e.target.value),
    onKeyDown: e => {
      if (e.key === 'Enter') {
        e.preventDefault();
        handleSaveNodeName();
      }
    },
    autoFocus: true
  })));
};

/***/ }),

/***/ "./src/components/GraphicsNodeEditor/Node.tsx":
/*!****************************************************!*\
  !*** ./src/components/GraphicsNodeEditor/Node.tsx ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Node: () => (/* binding */ Node)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _GraphicsContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GraphicsContext */ "./src/components/GraphicsNodeEditor/GraphicsContext.tsx");
/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core */ "./src/core/index.ts");



const Node = ({
  id,
  label,
  position,
  size,
  inputs,
  outputs,
  children,
  onContextMenu
}) => {
  const {
    startConnecting,
    stopConnecting,
    setNodes,
    zoom,
    registerSocketPositions
  } = (0,_GraphicsContext__WEBPACK_IMPORTED_MODULE_1__.useGraphicsContext)();
  const {
    theme
  } = (0,_core__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const createStyle = (0,_core__WEBPACK_IMPORTED_MODULE_2__.useStyles)('graphics-node');
  const dragState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({
    isDragging: false,
    startPos: {
      x: 0,
      y: 0
    },
    startMouse: {
      x: 0,
      y: 0
    }
  });
  const nodeRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const socketRefs = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({});
  const resizeState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)(() => {
    const element = nodeRef.current;
    if (!element) return;
    const calculateAndRegisterPositions = () => {
      if (!nodeRef.current) return;
      const nodeRect = nodeRef.current.getBoundingClientRect();
      const positions = {};
      Object.entries(socketRefs.current).forEach(([socketId, socketEl]) => {
        if (socketEl) {
          const socketRect = socketEl.getBoundingClientRect();
          positions[socketId] = {
            x: (socketRect.left - nodeRect.left + socketRect.width / 2) / zoom,
            y: (socketRect.top - nodeRect.top + socketRect.height / 2) / zoom
          };
        }
      });
      if (Object.keys(positions).length > 0) {
        registerSocketPositions(id, positions);
      }
    };

    // Initial calculation and for prop changes
    calculateAndRegisterPositions();

    // Setup observer for subsequent size changes from content
    const observer = new ResizeObserver(calculateAndRegisterPositions);
    observer.observe(element);
    return () => observer.disconnect();
  }, [id, inputs.length, outputs.length, registerSocketPositions, zoom, size]);
  const handleDragMouseDown = e => {
    // Prevent pan from starting when dragging a node
    e.stopPropagation();
    dragState.current = {
      isDragging: true,
      startPos: {
        ...position
      },
      startMouse: {
        x: e.clientX,
        y: e.clientY
      }
    };
    const handleMouseMove = moveEvent => {
      if (!dragState.current.isDragging) return;
      const dx = (moveEvent.clientX - dragState.current.startMouse.x) / zoom;
      const dy = (moveEvent.clientY - dragState.current.startMouse.y) / zoom;
      setNodes(prev => prev.map(node => node.id === id ? {
        ...node,
        position: {
          x: dragState.current.startPos.x + dx,
          y: dragState.current.startPos.y + dy
        }
      } : node));
    };
    const handleMouseUp = () => {
      dragState.current.isDragging = false;
      window.removeEventListener('mousemove', handleMouseMove);
      window.removeEventListener('mouseup', handleMouseUp);
    };
    window.addEventListener('mousemove', handleMouseMove);
    window.addEventListener('mouseup', handleMouseUp);
  };
  const handleResizeMouseDown = (e, handle) => {
    e.stopPropagation();
    const initialWidth = size?.width ?? nodeRef.current?.offsetWidth ?? 180;
    const initialHeight = size?.height ?? nodeRef.current?.offsetHeight ?? 100;
    resizeState.current = {
      isResizing: true,
      handle,
      startPos: {
        ...position
      },
      startSize: {
        width: initialWidth,
        height: initialHeight
      },
      startMouse: {
        x: e.clientX,
        y: e.clientY
      }
    };
    const handleMouseMove = moveEvent => {
      if (!resizeState.current?.isResizing) return;
      const dx = (moveEvent.clientX - resizeState.current.startMouse.x) / zoom;
      const dy = (moveEvent.clientY - resizeState.current.startMouse.y) / zoom;
      let newWidth = resizeState.current.startSize.width;
      let newHeight = resizeState.current.startSize.height;
      let newX = resizeState.current.startPos.x;
      let newY = resizeState.current.startPos.y;
      const minWidth = 180;
      const minHeight = 120;
      if (handle.includes('right')) {
        newWidth = Math.max(minWidth, resizeState.current.startSize.width + dx);
      }
      if (handle.includes('bottom')) {
        newHeight = Math.max(minHeight, resizeState.current.startSize.height + dy);
      }
      if (handle.includes('left')) {
        const calculatedWidth = resizeState.current.startSize.width - dx;
        if (calculatedWidth >= minWidth) {
          newWidth = calculatedWidth;
          newX = resizeState.current.startPos.x + dx;
        }
      }
      if (handle.includes('top')) {
        const calculatedHeight = resizeState.current.startSize.height - dy;
        if (calculatedHeight >= minHeight) {
          newHeight = calculatedHeight;
          newY = resizeState.current.startPos.y + dy;
        }
      }
      setNodes(prev => prev.map(node => node.id === id ? {
        ...node,
        position: {
          x: newX,
          y: newY
        },
        size: {
          width: newWidth,
          height: newHeight
        }
      } : node));
    };
    const handleMouseUp = () => {
      resizeState.current = null;
      window.removeEventListener('mousemove', handleMouseMove);
      window.removeEventListener('mouseup', handleMouseUp);
    };
    window.addEventListener('mousemove', handleMouseMove);
    window.addEventListener('mouseup', handleMouseUp);
  };
  const nodeClass = createStyle({
    position: 'absolute',
    backgroundColor: theme.colors.backgroundSecondary,
    border: `1px solid ${theme.colors.border}`,
    borderRadius: '8px',
    boxShadow: '0 4px 12px rgba(0,0,0,0.5)',
    userSelect: 'none',
    pointerEvents: 'auto',
    // Capture mouse events on the node
    display: 'flex',
    flexDirection: 'column',
    '@supports (backdrop-filter: none) or (-webkit-backdrop-filter: none)': {
      backdropFilter: 'blur(16px)'
    }
  });
  const headerClass = createStyle({
    padding: '8px 12px',
    borderBottom: `1px solid ${theme.colors.border}`,
    fontWeight: 600,
    fontSize: '14px',
    color: theme.colors.text,
    cursor: 'grab'
  });
  const bodyClass = createStyle({
    display: 'grid',
    gridTemplateColumns: '1fr 1fr',
    flex: 1,
    minHeight: 0
  });
  const contentClass = createStyle({
    padding: children ? '8px 12px' : '0',
    gridColumn: '1 / -1'
  });
  const socketsContainerClass = isOutput => createStyle({
    display: 'flex',
    flexDirection: 'column',
    gap: '8px',
    padding: '8px 12px',
    alignItems: isOutput ? 'flex-end' : 'flex-start',
    justifyContent: 'space-around',
    height: '100%'
  });
  const socketClass = isOutput => createStyle({
    display: 'flex',
    alignItems: 'center',
    gap: '8px',
    flexDirection: isOutput ? 'row-reverse' : 'row'
  });
  const socketHandleClass = createStyle({
    width: '12px',
    height: '12px',
    backgroundColor: theme.colors.background,
    border: `2px solid ${theme.colors.secondary}`,
    borderRadius: '50%',
    cursor: 'crosshair',
    transition: 'background-color 0.2s, border-color 0.2s',
    '&:hover': {
      backgroundColor: theme.colors.primary,
      borderColor: theme.colors.primary
    }
  });
  const resizeHandleBase = {
    position: 'absolute',
    backgroundColor: 'transparent',
    zIndex: 10
  };
  const handleClasses = {
    'top-left': createStyle({
      ...resizeHandleBase,
      top: '-5px',
      left: '-5px',
      width: '10px',
      height: '10px',
      cursor: 'nwse-resize'
    }),
    'top-right': createStyle({
      ...resizeHandleBase,
      top: '-5px',
      right: '-5px',
      width: '10px',
      height: '10px',
      cursor: 'nesw-resize'
    }),
    'bottom-left': createStyle({
      ...resizeHandleBase,
      bottom: '-5px',
      left: '-5px',
      width: '10px',
      height: '10px',
      cursor: 'nesw-resize'
    }),
    'bottom-right': createStyle({
      ...resizeHandleBase,
      bottom: '-5px',
      right: '-5px',
      width: '10px',
      height: '10px',
      cursor: 'nwse-resize'
    }),
    'top': createStyle({
      ...resizeHandleBase,
      top: '-5px',
      left: '5px',
      right: '5px',
      height: '10px',
      cursor: 'ns-resize'
    }),
    'bottom': createStyle({
      ...resizeHandleBase,
      bottom: '-5px',
      left: '5px',
      right: '5px',
      height: '10px',
      cursor: 'ns-resize'
    }),
    'left': createStyle({
      ...resizeHandleBase,
      top: '5px',
      bottom: '5px',
      left: '-5px',
      width: '10px',
      cursor: 'ew-resize'
    }),
    'right': createStyle({
      ...resizeHandleBase,
      top: '5px',
      bottom: '5px',
      right: '-5px',
      width: '10px',
      cursor: 'ew-resize'
    })
  };
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    ref: nodeRef,
    className: nodeClass,
    style: {
      left: position.x,
      top: position.y,
      width: size ? `${size.width}px` : 'auto',
      minWidth: '180px',
      height: size ? `${size.height}px` : 'auto'
    },
    onContextMenu: e => {
      e.preventDefault();
      e.stopPropagation();
      onContextMenu?.(e, id);
    },
    "data-node-id": id
  }, Object.entries(handleClasses).map(([handleName, className]) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    key: handleName,
    className: className,
    onMouseDown: e => handleResizeMouseDown(e, handleName)
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: headerClass,
    onMouseDown: handleDragMouseDown
  }, label), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: bodyClass
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: socketsContainerClass(false)
  }, inputs.map(socket => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    key: socket.id,
    "data-socket-id": socket.id,
    "data-socket-type": "input",
    className: socketClass(false)
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    // FIX: Wrap ref callback in curly braces to prevent it from returning a value.
    ref: el => {
      socketRefs.current[socket.id] = el;
    },
    className: socketHandleClass,
    onMouseDown: e => {
      e.stopPropagation();
      startConnecting(id, socket.id, 'input', e);
    },
    onMouseUp: () => stopConnecting(id, socket.id, 'input')
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", {
    style: {
      fontSize: '12px',
      color: theme.colors.textSecondary
    }
  }, socket.label)))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: socketsContainerClass(true)
  }, outputs.map(socket => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    key: socket.id,
    "data-socket-id": socket.id,
    "data-socket-type": "output",
    className: socketClass(true)
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    // FIX: Wrap ref callback in curly braces to prevent it from returning a value.
    ref: el => {
      socketRefs.current[socket.id] = el;
    },
    className: socketHandleClass,
    onMouseDown: e => {
      e.stopPropagation();
      startConnecting(id, socket.id, 'output', e);
    },
    onMouseUp: () => stopConnecting(id, socket.id, 'output')
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", {
    style: {
      fontSize: '12px',
      color: theme.colors.textSecondary
    }
  }, socket.label)))), children && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: contentClass
  }, children)));
};

/***/ }),

/***/ "./src/components/GraphicsNodeEditor/graphProcessor.ts":
/*!*************************************************************!*\
  !*** ./src/components/GraphicsNodeEditor/graphProcessor.ts ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   processGraph: () => (/* binding */ processGraph)
/* harmony export */ });
const processGraph = (nodes, connections) => {
  const outputs = {};
  const nodesToProcess = new Set(nodes.map(n => n.id));
  const maxIterations = nodes.length * 2; // Safety break for cycles
  let iterations = 0;

  // Build a map of what nodes connect to each input socket
  const inputConnections = {};
  connections.forEach(conn => {
    if (!inputConnections[conn.targetNodeId]) {
      inputConnections[conn.targetNodeId] = {};
    }
    inputConnections[conn.targetNodeId][conn.targetSocketId] = {
      sourceNodeId: conn.sourceNodeId,
      sourceSocketId: conn.sourceSocketId
    };
  });
  while (nodesToProcess.size > 0 && iterations < maxIterations) {
    let madeProgress = false;
    nodesToProcess.forEach(nodeId => {
      const node = nodes.find(n => n.id === nodeId);
      if (!node) return;
      const nodeInputConnections = inputConnections[nodeId] || {};
      const inputSockets = node.inputs;
      let allInputsReady = true;
      const inputValues = {};
      for (const inputSocket of inputSockets) {
        const connection = nodeInputConnections[inputSocket.id];
        if (connection) {
          // Input is connected
          const sourceNodeOutputs = outputs[connection.sourceNodeId];
          if (sourceNodeOutputs && sourceNodeOutputs[connection.sourceSocketId] !== undefined) {
            inputValues[inputSocket.id] = sourceNodeOutputs[connection.sourceSocketId];
          } else {
            allInputsReady = false;
            break;
          }
        } else {
          // Input is not connected, use static value if available
          if (inputSocket.value !== undefined) {
            inputValues[inputSocket.id] = inputSocket.value;
          }
        }
      }
      if (allInputsReady) {
        if (node.process) {
          try {
            const result = node.process(inputValues, node.data);
            outputs[nodeId] = result;
          } catch (e) {
            console.error(`Error processing node ${node.label} (${node.id}):`, e);
            outputs[nodeId] = {}; // Mark as processed but with error
          }
        } else {
          outputs[nodeId] = {}; // Node has no process function, mark as processed
        }
        nodesToProcess.delete(nodeId);
        madeProgress = true;
      }
    });
    if (!madeProgress) {
      // Break if no progress was made in a full iteration, indicating a cycle or unresolved inputs
      break;
    }
    iterations++;
  }
  if (nodesToProcess.size > 0) {
    console.error("Could not fully process graph. Possible cycle detected or missing inputs for nodes:", Array.from(nodesToProcess));
  }
  return outputs;
};

/***/ }),

/***/ "./src/components/GraphicsNodeEditor/imageNodeTypes.tsx":
/*!**************************************************************!*\
  !*** ./src/components/GraphicsNodeEditor/imageNodeTypes.tsx ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   brightnessContrastNodeType: () => (/* binding */ brightnessContrastNodeType),
/* harmony export */   creatableImageNodeTypes: () => (/* binding */ creatableImageNodeTypes),
/* harmony export */   displayImageNodeType: () => (/* binding */ displayImageNodeType),
/* harmony export */   grayscaleNodeType: () => (/* binding */ grayscaleNodeType),
/* harmony export */   invertNodeType: () => (/* binding */ invertNodeType),
/* harmony export */   loadImageNodeType: () => (/* binding */ loadImageNodeType),
/* harmony export */   sepiaNodeType: () => (/* binding */ sepiaNodeType)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! .. */ "./src/components/index.ts");



// --- Helper function to work with ImageData ---
const createImageData = (width, height) => {
  const canvas = document.createElement('canvas');
  canvas.width = width;
  canvas.height = height;
  const ctx = canvas.getContext('2d');
  return ctx.createImageData(width, height);
};

// --- Custom Components for Node Bodies ---

const LoadImageComponent = ({
  onUpdateData
}) => {
  const handleFileSelect = file => {
    if (!file) {
      onUpdateData({
        imageData: null
      });
      return;
    }
    const reader = new FileReader();
    reader.onload = e => {
      const img = new Image();
      img.onload = () => {
        const canvas = document.createElement('canvas');
        canvas.width = img.width;
        canvas.height = img.height;
        const ctx = canvas.getContext('2d');
        if (ctx) {
          ctx.drawImage(img, 0, 0);
          const imageData = ctx.getImageData(0, 0, img.width, img.height);
          onUpdateData({
            imageData
          });
        }
      };
      img.src = e.target?.result;
    };
    reader.readAsDataURL(file);
  };
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    style: {
      padding: '8px',
      minWidth: '250px'
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(___WEBPACK_IMPORTED_MODULE_1__.FileUpload, {
    onFileSelect: handleFileSelect
  }));
};
const DisplayImageComponent = ({
  inputs
}) => {
  const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const imageData = inputs.value;
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    const canvas = canvasRef.current;
    if (canvas && imageData) {
      canvas.width = imageData.width;
      canvas.height = imageData.height;
      const ctx = canvas.getContext('2d');
      ctx?.putImageData(imageData, 0, 0);
    }
  }, [imageData]);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    style: {
      padding: '8px',
      background: 'rgba(0,0,0,0.3)',
      minHeight: '100px',
      minWidth: '100px'
    }
  }, imageData ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("canvas", {
    ref: canvasRef,
    style: {
      width: '100%',
      display: 'block',
      borderRadius: '4px'
    }
  }) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(___WEBPACK_IMPORTED_MODULE_1__.Text, {
    size: "12px",
    color: "textSecondary"
  }, "Connect an image source"));
};
const BrightnessContrastComponent = ({
  data,
  onUpdateData
}) => {
  const brightness = data.data?.brightness ?? 0;
  const contrast = data.data?.contrast ?? 0;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    style: {
      padding: '8px',
      width: '200px'
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(___WEBPACK_IMPORTED_MODULE_1__.Stack, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(___WEBPACK_IMPORTED_MODULE_1__.Text, {
    size: "12px",
    as: "span"
  }, "Brightness (", brightness, ")"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(___WEBPACK_IMPORTED_MODULE_1__.Slider, {
    min: -100,
    max: 100,
    value: brightness,
    onChange: v => onUpdateData({
      brightness: v
    })
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(___WEBPACK_IMPORTED_MODULE_1__.Text, {
    size: "12px",
    as: "span"
  }, "Contrast (", contrast, ")"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(___WEBPACK_IMPORTED_MODULE_1__.Slider, {
    min: -100,
    max: 100,
    value: contrast,
    onChange: v => onUpdateData({
      contrast: v
    })
  })));
};

// --- Node Type Definitions ---

const loadImageNodeType = {
  label: 'Load Image',
  inputs: [],
  outputs: [{
    id: 'image',
    label: 'Image',
    type: 'image',
    color: '#9333ea'
  }],
  component: LoadImageComponent,
  process: (inputs, data) => ({
    image: data?.imageData ?? null
  }),
  data: {
    imageData: null
  }
};
const displayImageNodeType = {
  label: 'Display Image',
  inputs: [{
    id: 'value',
    label: 'Image',
    type: 'image'
  }],
  outputs: [],
  component: DisplayImageComponent
};
const grayscaleNodeType = {
  label: 'Grayscale',
  inputs: [{
    id: 'image',
    label: 'Image',
    type: 'image'
  }],
  outputs: [{
    id: 'image',
    label: 'Image',
    type: 'image',
    color: '#9333ea'
  }],
  process: inputs => {
    const imageData = inputs.image;
    if (!imageData) return {
      image: null
    };
    const newImageData = createImageData(imageData.width, imageData.height);
    const data = imageData.data;
    const newData = newImageData.data;
    for (let i = 0; i < data.length; i += 4) {
      const avg = (data[i] + data[i + 1] + data[i + 2]) / 3;
      newData[i] = avg;
      newData[i + 1] = avg;
      newData[i + 2] = avg;
      newData[i + 3] = data[i + 3]; // Alpha
    }
    return {
      image: newImageData
    };
  }
};
const invertNodeType = {
  label: 'Invert Colors',
  inputs: [{
    id: 'image',
    label: 'Image',
    type: 'image'
  }],
  outputs: [{
    id: 'image',
    label: 'Image',
    type: 'image',
    color: '#9333ea'
  }],
  process: inputs => {
    const imageData = inputs.image;
    if (!imageData) return {
      image: null
    };
    const newImageData = createImageData(imageData.width, imageData.height);
    const data = imageData.data;
    const newData = newImageData.data;
    for (let i = 0; i < data.length; i += 4) {
      newData[i] = 255 - data[i];
      newData[i + 1] = 255 - data[i + 1];
      newData[i + 2] = 255 - data[i + 2];
      newData[i + 3] = data[i + 3]; // Alpha
    }
    return {
      image: newImageData
    };
  }
};
const sepiaNodeType = {
  label: 'Sepia',
  inputs: [{
    id: 'image',
    label: 'Image',
    type: 'image'
  }],
  outputs: [{
    id: 'image',
    label: 'Image',
    type: 'image',
    color: '#9333ea'
  }],
  process: inputs => {
    const imageData = inputs.image;
    if (!imageData) return {
      image: null
    };
    const newImageData = createImageData(imageData.width, imageData.height);
    const data = imageData.data;
    const newData = newImageData.data;
    for (let i = 0; i < data.length; i += 4) {
      const r = data[i],
        g = data[i + 1],
        b = data[i + 2];
      newData[i] = Math.min(255, r * 0.393 + g * 0.769 + b * 0.189);
      newData[i + 1] = Math.min(255, r * 0.349 + g * 0.686 + b * 0.168);
      newData[i + 2] = Math.min(255, r * 0.272 + g * 0.534 + b * 0.131);
      newData[i + 3] = data[i + 3];
    }
    return {
      image: newImageData
    };
  }
};
const brightnessContrastNodeType = {
  label: 'Brightness / Contrast',
  inputs: [{
    id: 'image',
    label: 'Image',
    type: 'image'
  }],
  outputs: [{
    id: 'image',
    label: 'Image',
    type: 'image',
    color: '#9333ea'
  }],
  component: BrightnessContrastComponent,
  data: {
    brightness: 0,
    contrast: 0
  },
  process: (inputs, data) => {
    const imageData = inputs.image;
    const {
      brightness = 0,
      contrast = 0
    } = data || {};
    if (!imageData) return {
      image: null
    };
    const newImageData = createImageData(imageData.width, imageData.height);
    const d = imageData.data;
    const newD = newImageData.data;
    const factor = 259 * (contrast + 255) / (255 * (259 - contrast));
    for (let i = 0; i < d.length; i += 4) {
      let r = d[i] + brightness;
      let g = d[i + 1] + brightness;
      let b = d[i + 2] + brightness;
      r = factor * (r - 128) + 128;
      g = factor * (g - 128) + 128;
      b = factor * (b - 128) + 128;
      newD[i] = Math.max(0, Math.min(255, r));
      newD[i + 1] = Math.max(0, Math.min(255, g));
      newD[i + 2] = Math.max(0, Math.min(255, b));
      newD[i + 3] = d[i + 3];
    }
    return {
      image: newImageData
    };
  }
};
const creatableImageNodeTypes = {
  'Load Image': loadImageNodeType,
  'Display Image': displayImageNodeType,
  'Grayscale': grayscaleNodeType,
  'Invert Colors': invertNodeType,
  'Sepia': sepiaNodeType,
  'Brightness / Contrast': brightnessContrastNodeType
};

/***/ }),

/***/ "./src/components/GraphicsNodeEditor/nodeTypes.tsx":
/*!*********************************************************!*\
  !*** ./src/components/GraphicsNodeEditor/nodeTypes.tsx ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   addNodeType: () => (/* binding */ addNodeType),
/* harmony export */   creatableNodeTypes: () => (/* binding */ creatableNodeTypes),
/* harmony export */   displayNodeType: () => (/* binding */ displayNodeType),
/* harmony export */   numberNodeType: () => (/* binding */ numberNodeType),
/* harmony export */   openGLNodeType: () => (/* binding */ openGLNodeType),
/* harmony export */   sliderNodeType: () => (/* binding */ sliderNodeType),
/* harmony export */   subtractNodeType: () => (/* binding */ subtractNodeType)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! .. */ "./src/components/index.ts");



// --- Custom Components for Node Bodies ---

const NumberComponent = ({
  data,
  onUpdateData
}) => {
  const value = data.data?.value ?? 0;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    style: {
      padding: '0 8px'
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(___WEBPACK_IMPORTED_MODULE_1__.Input, {
    type: "number",
    label: "Value",
    value: value,
    onChange: e => onUpdateData({
      value: parseFloat(e.target.value) || 0
    })
  }));
};
const SliderComponent = ({
  data,
  onUpdateData
}) => {
  const value = data.data?.value ?? 50;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    style: {
      padding: '8px'
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(___WEBPACK_IMPORTED_MODULE_1__.Slider, {
    min: 0,
    max: 100,
    value: value,
    onChange: v => onUpdateData({
      value: v
    }),
    showValue: true
  }));
};
const DisplayComponent = ({
  inputs
}) => {
  const value = inputs.value;
  const displayValue = typeof value === 'object' ? JSON.stringify(value, null, 2) : value?.toString() ?? 'N/A';
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    style: {
      padding: '8px',
      minWidth: '100px',
      background: 'rgba(0,0,0,0.2)',
      borderRadius: '4px'
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(___WEBPACK_IMPORTED_MODULE_1__.Text, {
    as: "pre",
    size: "12px",
    style: {
      whiteSpace: 'pre-wrap',
      margin: 0
    }
  }, displayValue));
};

// --- Node Type Definitions ---

const numberNodeType = {
  label: 'Number Input',
  inputs: [],
  outputs: [{
    id: 'value',
    label: 'Value',
    type: 'number',
    color: '#60a5fa'
  }],
  component: NumberComponent,
  process: (inputs, data) => ({
    value: data?.value ?? 0
  }),
  data: {
    value: 10
  }
};
const sliderNodeType = {
  label: 'Slider Input',
  inputs: [],
  outputs: [{
    id: 'value',
    label: 'Value',
    type: 'number',
    color: '#f59e0b'
  }],
  component: SliderComponent,
  process: (inputs, data) => ({
    value: data?.value ?? 50
  }),
  data: {
    value: 50
  }
};
const addNodeType = {
  label: 'Add',
  inputs: [{
    id: 'a',
    label: 'A',
    type: 'number',
    value: 0
  }, {
    id: 'b',
    label: 'B',
    type: 'number',
    value: 0
  }],
  outputs: [{
    id: 'result',
    label: 'Result',
    type: 'number',
    color: '#10b981'
  }],
  process: inputs => ({
    result: (inputs.a ?? 0) + (inputs.b ?? 0)
  })
};
const subtractNodeType = {
  label: 'Subtract',
  inputs: [{
    id: 'a',
    label: 'A',
    type: 'number',
    value: 0
  }, {
    id: 'b',
    label: 'B',
    type: 'number',
    value: 0
  }],
  outputs: [{
    id: 'result',
    label: 'Result',
    type: 'number',
    color: '#ef4444'
  }],
  process: inputs => ({
    result: (inputs.a ?? 0) - (inputs.b ?? 0)
  })
};
const displayNodeType = {
  label: 'Display',
  inputs: [{
    id: 'value',
    label: 'Value',
    type: 'any'
  }],
  outputs: [],
  component: DisplayComponent
};
const openGLNodeType = {
  label: 'GPU Shader (Concept)',
  inputs: [{
    id: 'color',
    label: 'Color',
    type: 'any'
  }, {
    id: 'position',
    label: 'Position',
    type: 'any'
  }],
  outputs: [{
    id: 'fragColor',
    label: 'Frag Color',
    type: 'any'
  }],
  process: inputs => ({
    fragColor: inputs.color ?? {
      r: 0,
      g: 0,
      b: 0,
      a: 1
    }
  }),
  component: () => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(___WEBPACK_IMPORTED_MODULE_1__.Text, {
    size: "12px",
    color: "textSecondary"
  }, "This node simulates a shader.")
};
const creatableNodeTypes = {
  'Number Input': numberNodeType,
  'Slider Input': sliderNodeType,
  'Add': addNodeType,
  'Subtract': subtractNodeType,
  'Display': displayNodeType
};

/***/ }),

/***/ "./src/components/GraphicsNodeEditor/plugins/GMenu.tsx":
/*!*************************************************************!*\
  !*** ./src/components/GraphicsNodeEditor/plugins/GMenu.tsx ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   GMenu: () => (/* binding */ GMenu)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _GraphicsContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../GraphicsContext */ "./src/components/GraphicsNodeEditor/GraphicsContext.tsx");
/* harmony import */ var _ContextMenu_ContextMenu__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../ContextMenu/ContextMenu */ "./src/components/ContextMenu/ContextMenu.tsx");



const GMenu = () => {
  const {
    editorRef,
    createNode,
    pan,
    zoom,
    creatableNodeTypes
  } = (0,_GraphicsContext__WEBPACK_IMPORTED_MODULE_1__.useGraphicsContext)();
  const [menu, setMenu] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({
    isOpen: false,
    position: {
      x: 0,
      y: 0
    }
  });
  const handleContextMenu = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(e => {
    const hasCreatableNodes = creatableNodeTypes && Object.keys(creatableNodeTypes).length > 0;
    const editor = editorRef.current;
    const target = e.target;
    if (!editor || !hasCreatableNodes) return;

    // Check if the event target is within the editor bounds.
    if (editor.contains(target)) {
      // Check if the click was on a node or any of its children.
      // Nodes and connections have their own context menu handlers which stop propagation,
      // but this is a safe fallback.
      const clickedOnNode = target.closest('[data-node-id]');

      // If we've reached this handler and the click wasn't on a node,
      // we can safely assume it was on the background canvas.
      if (!clickedOnNode) {
        e.preventDefault();
        setMenu({
          isOpen: true,
          position: {
            x: e.clientX,
            y: e.clientY
          }
        });
      }
    }
  }, [editorRef, creatableNodeTypes]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    const editor = editorRef.current;
    if (!editor) return;

    // The listener is attached to the editor container.
    editor.addEventListener('contextmenu', handleContextMenu);
    return () => {
      editor.removeEventListener('contextmenu', handleContextMenu);
    };
  }, [editorRef, handleContextMenu]);
  const addNode = nodeTemplate => {
    const editor = editorRef.current;
    if (!editor) return;
    const rect = editor.getBoundingClientRect();
    // Convert mouse position to canvas coordinates
    const canvasX = (menu.position.x - rect.left - pan.x) / zoom;
    const canvasY = (menu.position.y - rect.top - pan.y) / zoom;
    createNode({
      ...nodeTemplate,
      position: {
        x: canvasX,
        y: canvasY
      }
    });
    setMenu({
      isOpen: false,
      position: {
        x: 0,
        y: 0
      }
    });
  };
  const menuItems = creatableNodeTypes ? Object.entries(creatableNodeTypes).map(([label, template]) => ({
    label: `Add ${label}`,
    onClick: () => addNode(template)
  })) : [];
  if (menuItems.length === 0) {
    return null;
  }
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_ContextMenu_ContextMenu__WEBPACK_IMPORTED_MODULE_2__.ContextMenu, {
    isOpen: menu.isOpen,
    onClose: () => setMenu({
      ...menu,
      isOpen: false
    }),
    position: menu.position,
    items: menuItems
  });
};

/***/ }),

/***/ "./src/components/GraphicsNodeEditor/plugins/GZoom.tsx":
/*!*************************************************************!*\
  !*** ./src/components/GraphicsNodeEditor/plugins/GZoom.tsx ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   GZoom: () => (/* binding */ GZoom)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _GraphicsContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../GraphicsContext */ "./src/components/GraphicsNodeEditor/GraphicsContext.tsx");


const GZoom = () => {
  const {
    editorRef,
    zoom,
    setZoom,
    pan,
    setPan
  } = (0,_GraphicsContext__WEBPACK_IMPORTED_MODULE_1__.useGraphicsContext)();
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    const editorElement = editorRef.current;
    if (!editorElement) return;
    const handleWheel = e => {
      e.preventDefault();
      const rect = editorElement.getBoundingClientRect();
      const mouseX = e.clientX - rect.left;
      const mouseY = e.clientY - rect.top;
      const zoomFactor = 1.1;
      const newZoom = e.deltaY < 0 ? zoom * zoomFactor : zoom / zoomFactor;

      // Mouse position in canvas coordinates before zoom
      const mouseInCanvasX_before = (mouseX - pan.x) / zoom;
      const mouseInCanvasY_before = (mouseY - pan.y) / zoom;

      // The new pan should be such that the mouse position in canvas coordinates remains the same after zoom
      const newPanX = mouseX - mouseInCanvasX_before * newZoom;
      const newPanY = mouseY - mouseInCanvasY_before * newZoom;
      setZoom(newZoom);
      setPan({
        x: newPanX,
        y: newPanY
      });
    };
    editorElement.addEventListener('wheel', handleWheel);
    return () => {
      editorElement.removeEventListener('wheel', handleWheel);
    };
  }, [editorRef, zoom, setZoom, pan, setPan]);
  return null; // This is a logic-only component
};

/***/ }),

/***/ "./src/components/Grid/Grid.tsx":
/*!**************************************!*\
  !*** ./src/components/Grid/Grid.tsx ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Grid: () => (/* binding */ Grid)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }


const GridItem = ({
  colSpan,
  rowSpan,
  className = '',
  children,
  ...props
}) => {
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('grid-item');
  const itemClass = createStyle({
    gridColumn: colSpan ? `span ${colSpan}` : undefined,
    gridRow: rowSpan ? `span ${rowSpan}` : undefined
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", _extends({
    className: `${itemClass} ${className}`
  }, props), children);
};
GridItem.displayName = 'Grid.Item';
const Grid = ({
  minItemWidth = '350px',
  gap = '1.5rem',
  columns,
  alignItems,
  justifyContent,
  flow = 'row',
  className = '',
  children,
  ...props
}) => {
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('grid');
  const gridClass = createStyle({
    display: 'grid',
    gridTemplateColumns: columns ? `repeat(${columns}, 1fr)` : `repeat(auto-fit, minmax(${minItemWidth}, 1fr))`,
    gap: gap,
    alignItems: alignItems,
    justifyContent: justifyContent,
    gridAutoFlow: flow,
    '@media': {
      // On small screens, force a single column layout for better readability on auto-fit grids
      "(maxWidth: 'sm')": {
        gridTemplateColumns: columns ? undefined : '1fr'
      }
    }
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", _extends({
    className: `${gridClass} ${className}`
  }, props), children);
};
Grid.Item = GridItem;

/***/ }),

/***/ "./src/components/Header/Header.tsx":
/*!******************************************!*\
  !*** ./src/components/Header/Header.tsx ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Header: () => (/* binding */ Header)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");
/* harmony import */ var _Container_Container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Container/Container */ "./src/components/Container/Container.tsx");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }




const HeaderLeft = ({
  children,
  className
}) => {
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('header-left');
  const class_ = createStyle({
    display: 'flex',
    alignItems: 'center',
    gap: '1rem',
    justifySelf: 'start',
    '@media': {
      "(maxWidth: 'md')": {
        justifySelf: 'center'
      }
    }
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: `${class_} ${className}`
  }, children);
};
HeaderLeft.displayName = 'Header.Left';
const HeaderRight = ({
  children,
  className
}) => {
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('header-right');
  const class_ = createStyle({
    display: 'flex',
    alignItems: 'center',
    gap: '1rem',
    justifySelf: 'end',
    '@media': {
      "(maxWidth: 'md')": {
        justifySelf: 'center'
      },
      "(maxWidth: 'sm')": {
        // Hide navigation on mobile for a cleaner look
        display: 'none'
      }
    }
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: `${class_} ${className}`
  }, children);
};
HeaderRight.displayName = 'Header.Right';
const Header = ({
  children,
  className = '',
  height,
  ...props
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('header');
  const headerClass = createStyle({
    padding: height ? '0' : '10px 0',
    backgroundColor: theme.colors.backgroundSecondary,
    // Fallback for older browsers
    borderBottom: `1px solid ${theme.colors.border}`,
    position: 'sticky',
    top: 0,
    zIndex: 50,
    height: height,
    display: height ? 'flex' : 'block',
    alignItems: height ? 'center' : undefined,
    '@supports (backdrop-filter: none) or (-webkit-backdrop-filter: none)': {
      backdropFilter: 'blur(16px)',
      // Use a more transparent background for the glass effect
      backgroundColor: theme.colors.backgroundSecondary.replace(/, ?\d+\.?\d*\)$/, ', 0.5)')
    },
    '@media': {
      "(maxWidth: 'sm')": {
        padding: height ? '0' : `${theme.spacing.sm} 0`
      }
    }
  });
  const containerClass = createStyle({
    display: 'grid',
    gridTemplateColumns: '1fr auto',
    alignItems: 'center',
    padding: 0,
    // Remove container's default padding
    width: height ? '100%' : undefined,
    '@media': {
      "(maxWidth: 'md')": {
        gridTemplateColumns: '1fr',
        gap: theme.spacing.sm // Reduced gap for mobile
      }
    }
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("header", _extends({
    className: `${headerClass} ${className}`
  }, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Container_Container__WEBPACK_IMPORTED_MODULE_3__.Container, {
    className: containerClass
  }, children));
};
Header.Left = HeaderLeft;
Header.Right = HeaderRight;

/***/ }),

/***/ "./src/components/HoverCard/HoverCard.tsx":
/*!************************************************!*\
  !*** ./src/components/HoverCard/HoverCard.tsx ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   HoverCard: () => (/* binding */ HoverCard),
/* harmony export */   HoverCardContent: () => (/* binding */ HoverCardContent),
/* harmony export */   HoverCardTrigger: () => (/* binding */ HoverCardTrigger)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Popper_Popper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Popper/Popper */ "./src/components/Popper/Popper.tsx");
/* harmony import */ var _Popover_Popover__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Popover/Popover */ "./src/components/Popover/Popover.tsx");


 // Reuse styles

const HoverCard = ({
  children
}) => {
  const [isOpen, setIsOpen] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  // FIX: Explicitly provide `undefined` as the initial value to `useRef` to resolve "Expected 1 arguments, but got 0" error in some environments.
  const timeoutRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(undefined);
  const handleOpen = () => {
    clearTimeout(timeoutRef.current);
    setIsOpen(true);
  };
  const handleClose = () => {
    timeoutRef.current = setTimeout(() => {
      setIsOpen(false);
    }, 100); // Small delay to allow moving mouse into card
  };
  const contextValue = {
    isOpen,
    setIsOpen,
    handleOpen,
    handleClose
  };
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Popper_Popper__WEBPACK_IMPORTED_MODULE_1__.Popper, {
    isOpen: isOpen,
    setIsOpen: setIsOpen
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    onMouseEnter: handleOpen,
    onMouseLeave: handleClose
  }, children));
};
const HoverCardTrigger = ({
  children
}) => {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Popper_Popper__WEBPACK_IMPORTED_MODULE_1__.PopperTrigger, null, children);
};
const HoverCardContent = ({
  children,
  className
}) => {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Popover_Popover__WEBPACK_IMPORTED_MODULE_2__.PopoverContent, {
    className: className
  }, children);
};

/***/ }),

/***/ "./src/components/Icon/Icon.tsx":
/*!**************************************!*\
  !*** ./src/components/Icon/Icon.tsx ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Icon: () => (/* binding */ Icon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");



const Icon = ({
  as,
  size = '1em',
  className = '',
  ...props
}) => {
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('icon');
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const iconClass = createStyle({
    display: 'inline-flex',
    alignItems: 'center',
    justifyContent: 'center',
    color: 'inherit' // Inherit color by default
  });
  const IconComponent = as;
  const combinedClassName = `${iconClass} ${className}`;
  const style = {
    width: size,
    height: size
  };
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", {
    className: combinedClassName,
    style: style
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(IconComponent, props));
};

/***/ }),

/***/ "./src/components/IconButton/IconButton.tsx":
/*!**************************************************!*\
  !*** ./src/components/IconButton/IconButton.tsx ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   IconButton: () => (/* binding */ IconButton)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Button */ "./src/components/Button.tsx");
/* harmony import */ var _Icon_Icon__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Icon/Icon */ "./src/components/Icon/Icon.tsx");
/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core */ "./src/core/index.ts");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }




const IconButton = ({
  icon,
  'aria-label': ariaLabel,
  isRound,
  className = '',
  ...props
}) => {
  const createStyle = (0,_core__WEBPACK_IMPORTED_MODULE_3__.useStyles)('icon-button');
  const iconButtonClass = createStyle({
    padding: '0.5rem',
    borderRadius: isRound ? '50%' : undefined
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Button__WEBPACK_IMPORTED_MODULE_1__.Button, _extends({
    className: `${iconButtonClass} ${className}`,
    "aria-label": ariaLabel
  }, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Icon_Icon__WEBPACK_IMPORTED_MODULE_2__.Icon, {
    as: icon,
    size: "1.25em"
  }));
};

/***/ }),

/***/ "./src/components/Image/Image.tsx":
/*!****************************************!*\
  !*** ./src/components/Image/Image.tsx ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Image: () => (/* binding */ Image)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Box_Box__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Box/Box */ "./src/components/Box/Box.tsx");
/* harmony import */ var _Center_Center__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Center/Center */ "./src/components/Center/Center.tsx");
/* harmony import */ var _Skeleton_Skeleton__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Skeleton/Skeleton */ "./src/components/Skeleton/Skeleton.tsx");
/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core */ "./src/core/index.ts");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }





const Image = ({
  src,
  fallbackSrc,
  fallback,
  fit = 'cover',
  radius = '8px',
  className,
  ...props
}) => {
  const {
    theme
  } = (0,_core__WEBPACK_IMPORTED_MODULE_4__.useTheme)();
  const createStyle = (0,_core__WEBPACK_IMPORTED_MODULE_4__.useStyles)('image');
  const [status, setStatus] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('loading');
  const handleLoad = () => setStatus('loaded');
  const handleError = () => setStatus('error');
  const imageClass = createStyle({
    width: '100%',
    height: '100%',
    objectFit: fit,
    borderRadius: radius
  });
  const finalSrc = status === 'error' && fallbackSrc ? fallbackSrc : src;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Box_Box__WEBPACK_IMPORTED_MODULE_1__.Box, {
    style: {
      position: 'relative',
      width: '100%',
      height: '100%'
    }
  }, status === 'loading' && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Skeleton_Skeleton__WEBPACK_IMPORTED_MODULE_3__.Skeleton, {
    variant: "rect",
    width: "100%",
    height: "100%",
    style: {
      position: 'absolute',
      borderRadius: radius
    }
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("img", _extends({
    src: finalSrc,
    onLoad: handleLoad,
    onError: handleError,
    className: `${imageClass} ${className}`,
    style: {
      opacity: status === 'loading' ? 0 : 1
    }
  }, props)), status === 'error' && !fallbackSrc && fallback && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Center_Center__WEBPACK_IMPORTED_MODULE_2__.Center, {
    style: {
      position: 'absolute',
      top: 0,
      left: 0,
      width: '100%',
      height: '100%',
      backgroundColor: theme.colors.border,
      borderRadius: radius
    }
  }, fallback));
};

/***/ }),

/***/ "./src/components/Input/Input.tsx":
/*!****************************************!*\
  !*** ./src/components/Input/Input.tsx ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Input: () => (/* binding */ Input)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _TextInput_TextInput__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../TextInput/TextInput */ "./src/components/TextInput/TextInput.tsx");
/* harmony import */ var _Error_Error__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Error/Error */ "./src/components/Error/Error.tsx");
/* harmony import */ var _Text_Text__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Text/Text */ "./src/components/Text/Text.tsx");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }






const Input = ({
  label,
  id,
  error,
  className = '',
  ...props
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_4__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_5__.useStyles)('input-wrapper');
  const containerClass = createStyle({
    display: 'grid',
    gap: '4px',
    width: '100%'
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: `${containerClass} ${className}`
  }, label && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("label", {
    htmlFor: id
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Text_Text__WEBPACK_IMPORTED_MODULE_3__.Text, {
    as: "span",
    size: theme.typography.fontSizes.sm,
    weight: theme.typography.fontWeights.medium,
    color: theme.colors.textSecondary
  }, label)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_TextInput_TextInput__WEBPACK_IMPORTED_MODULE_1__.TextInput, _extends({
    id: id
  }, props)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Error_Error__WEBPACK_IMPORTED_MODULE_2__.Error, null, error));
};

/***/ }),

/***/ "./src/components/Kbd/Kbd.tsx":
/*!************************************!*\
  !*** ./src/components/Kbd/Kbd.tsx ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Kbd: () => (/* binding */ Kbd)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");



const Kbd = ({
  children,
  className
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('kbd');
  const kbdClass = createStyle({
    display: 'inline-block',
    padding: '2px 6px',
    fontFamily: 'monospace',
    fontSize: '12px',
    color: theme.colors.textSecondary,
    backgroundColor: theme.colors.border,
    border: `1px solid rgba(255, 255, 255, 0.1)`,
    borderBottomWidth: '2px',
    borderRadius: '4px',
    '@supports (backdrop-filter: none) or (-webkit-backdrop-filter: none)': {
      backdropFilter: 'blur(4px)'
    }
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("kbd", {
    className: `${kbdClass} ${className}`
  }, children);
};

/***/ }),

/***/ "./src/components/Layer/Layer.tsx":
/*!****************************************!*\
  !*** ./src/components/Layer/Layer.tsx ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Layer: () => (/* binding */ Layer),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");



const Layer = ({
  children,
  z = 0,
  className = '',
  style
}) => {
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('layer');
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const base = createStyle({
    position: 'relative',
    zIndex: z,
    background: 'transparent',
    color: theme.colors.text
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: `${base} ${className}`,
    style: style,
    "data-layer": z
  }, children);
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Layer);

/***/ }),

/***/ "./src/components/Link/Link.tsx":
/*!**************************************!*\
  !*** ./src/components/Link/Link.tsx ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Link: () => (/* binding */ Link)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

// FIX: Module '"react-router-dom"' has no exported member 'Link'. The import is removed.
// import { Link as RouterLink } from 'react-router-dom';


const Link = ({
  children,
  className = '',
  to,
  ...props
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('link');
  const linkClass = createStyle({
    color: theme.colors.primary,
    textDecoration: 'none',
    transition: 'color 0.2s',
    '&:hover': {
      color: '#93c5fd',
      // Lighter blue
      textDecoration: 'underline'
    }
  });
  const combinedClassName = `${linkClass} ${className}`;
  if (to) {
    // FIX: Fallback to a standard anchor tag for the 'to' prop since react-router-dom's Link is unavailable.
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("a", _extends({
      href: to,
      className: combinedClassName
    }, props), children);
  }
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("a", _extends({
    className: combinedClassName
  }, props), children);
};

/***/ }),

/***/ "./src/components/List/List.tsx":
/*!**************************************!*\
  !*** ./src/components/List/List.tsx ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   List: () => (/* binding */ List),
/* harmony export */   ListItem: () => (/* binding */ ListItem),
/* harmony export */   ListItemBody: () => (/* binding */ ListItemBody),
/* harmony export */   ListItemText: () => (/* binding */ ListItemText)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");
/* harmony import */ var _Text_Text__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Text/Text */ "./src/components/Text/Text.tsx");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }




const List = ({
  children,
  className = '',
  ...props
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('list');
  const listClass = createStyle({
    listStyle: 'none',
    padding: 0,
    margin: 0,
    display: 'grid',
    backgroundColor: 'rgba(28, 28, 28, 0.5)',
    backdropFilter: 'blur(8px)',
    borderRadius: '8px',
    border: `1px solid ${theme.colors.border}`,
    overflow: 'hidden'
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("ul", _extends({
    className: `${listClass} ${className}`
  }, props), children);
};
const ListItem = ({
  children,
  className = '',
  ...props
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('list-item');
  const itemClass = createStyle({
    display: 'grid',
    alignItems: 'center',
    gridTemplateColumns: '1fr auto',
    gap: theme.spacing.md,
    padding: `${theme.spacing.sm} ${theme.spacing.md}`,
    color: theme.colors.text,
    transition: 'background-color 0.2s',
    '&:hover': {
      backgroundColor: 'rgba(255, 255, 255, 0.05)'
    }
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("li", _extends({
    className: `${itemClass} ${className}`
  }, props), children);
};
const ListItemBody = ({
  children,
  className,
  ...props
}) => {
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('list-item-body');
  const bodyClass = createStyle({
    minWidth: 0
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", _extends({
    className: `${bodyClass} ${className}`
  }, props), children);
};
const ListItemText = ({
  primary,
  secondary
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Text_Text__WEBPACK_IMPORTED_MODULE_3__.Text, {
    weight: "500"
  }, primary), secondary && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Text_Text__WEBPACK_IMPORTED_MODULE_3__.Text, {
    size: "0.875rem",
    color: theme.colors.textSecondary
  }, secondary));
};

/***/ }),

/***/ "./src/components/Menu/Menu.tsx":
/*!**************************************!*\
  !*** ./src/components/Menu/Menu.tsx ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Menu: () => (/* binding */ Menu),
/* harmony export */   MenuButton: () => (/* binding */ MenuButton),
/* harmony export */   MenuItem: () => (/* binding */ MenuItem),
/* harmony export */   MenuItems: () => (/* binding */ MenuItems)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core_hooks_useInteractions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/hooks/useInteractions */ "./src/core/hooks/useInteractions.ts");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }


const MenuContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);
const Menu = ({
  children,
  className = ''
}) => {
  const [isOpen, setIsOpen] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const menuRef = (0,_core_hooks_useInteractions__WEBPACK_IMPORTED_MODULE_1__.useClickOutside)(() => setIsOpen(false));
  const buttonRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const itemsRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const contextValue = {
    isOpen,
    setIsOpen,
    buttonRef,
    itemsRef
  };
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(MenuContext.Provider, {
    value: contextValue
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    ref: menuRef,
    className: className
  }, children));
};
const MenuButton = ({
  children,
  className = '',
  ...props
}) => {
  const context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MenuContext);
  if (!context) throw new Error('MenuButton must be used within a Menu');
  const {
    isOpen,
    setIsOpen
  } = context;
  const handleKeyDown = e => {
    if (e.key === 'ArrowDown' || e.key === 'Enter') {
      e.preventDefault();
      setIsOpen(true);
    }
  };
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("button", _extends({}, props, {
    ref: context.buttonRef,
    className: className,
    onClick: () => setIsOpen(!isOpen),
    onKeyDown: handleKeyDown,
    "data-active": isOpen,
    "aria-expanded": isOpen,
    "aria-haspopup": "true"
  }), children);
};
const MenuItems = ({
  children,
  className = ''
}) => {
  const context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MenuContext);
  if (!context) throw new Error('MenuItems must be used within a Menu');
  const {
    isOpen,
    setIsOpen,
    buttonRef,
    itemsRef
  } = context;

  // Set focus on the first item when the menu opens
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (isOpen && itemsRef.current) {
      const items = Array.from(itemsRef.current.children);
      const firstFocusableItem = items.find(item => item.getAttribute('role') === 'menuitem' && item.getAttribute('disabled') === null);
      // Use timeout to ensure focus is set after render and state updates.
      setTimeout(() => firstFocusableItem?.focus(), 0);
    }
  }, [isOpen]);
  const handleKeyDown = e => {
    if (!itemsRef.current) return;
    const items = Array.from(itemsRef.current.children);
    const focusableItems = items.filter(item => item.getAttribute('role') === 'menuitem' && item.getAttribute('disabled') === null);
    if (focusableItems.length === 0) return;
    if (e.key === 'ArrowDown' || e.key === 'ArrowUp') {
      e.preventDefault();
      const currentFocusIndex = focusableItems.findIndex(item => item === document.activeElement);
      let nextIndex;
      if (e.key === 'ArrowDown') {
        nextIndex = currentFocusIndex >= 0 ? (currentFocusIndex + 1) % focusableItems.length : 0;
      } else {
        // ArrowUp
        nextIndex = currentFocusIndex > 0 ? currentFocusIndex - 1 : focusableItems.length - 1;
      }
      focusableItems[nextIndex]?.focus();
    } else if (e.key === 'Enter' || e.key === ' ') {
      e.preventDefault();
      if (document.activeElement && focusableItems.includes(document.activeElement)) {
        document.activeElement.click();
      }
    } else if (e.key === 'Escape') {
      e.preventDefault();
      setIsOpen(false);
      buttonRef.current?.focus();
    }
  };
  if (!isOpen) return null;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    ref: itemsRef,
    className: className,
    role: "menu",
    onKeyDown: handleKeyDown,
    "data-active": isOpen
  }, children);
};
const MenuItem = ({
  children,
  className = '',
  onClick,
  ...props
}) => {
  const context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MenuContext);
  if (!context) throw new Error('MenuItem must be used within a Menu');
  const {
    setIsOpen
  } = context;
  const handleClick = e => {
    onClick?.(e);
    setIsOpen(false);
  };
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("button", _extends({}, props, {
    className: className,
    role: "menuitem",
    onClick: handleClick,
    tabIndex: -1
  }), children);
};

/***/ }),

/***/ "./src/components/Menu/StyledMenu.tsx":
/*!********************************************!*\
  !*** ./src/components/Menu/StyledMenu.tsx ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   StyledMenu: () => (/* binding */ StyledMenu),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Menu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Menu */ "./src/components/Menu/Menu.tsx");
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");





// A clickable menu item

// A visual separator

// Union type for items within a menu

// A group of menu items, which can have an optional title

// Type guard to differentiate between actions and dividers
function isAction(item) {
  return 'label' in item;
}
const StyledMenu = ({
  label,
  items,
  className = ''
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_3__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_2__.useStyles)('menu');
  const isDark = theme.colors.background.startsWith('#');
  const menuClass = createStyle({
    position: 'relative',
    display: 'inline-block'
  });
  const buttonClass = createStyle({
    padding: '6px 12px',
    backgroundColor: theme.colors.backgroundSecondary,
    color: theme.colors.text,
    border: `1px solid ${theme.colors.border}`,
    borderRadius: '6px',
    cursor: 'pointer',
    transition: 'all 0.2s ease',
    display: 'inline-grid',
    gridAutoFlow: 'column',
    alignItems: 'center',
    gap: '6px',
    fontSize: '14px',
    '&:hover': {
      borderColor: theme.colors.secondary
    },
    '&::after': {
      content: '"â–¼"',
      fontSize: '10px',
      color: theme.colors.textSecondary
    }
  });
  const itemsClass = createStyle({
    position: 'absolute',
    top: 'calc(100% + 4px)',
    left: '0',
    backgroundColor: theme.colors.backgroundSecondary,
    borderRadius: '6px',
    border: `1px solid ${theme.colors.border}`,
    boxShadow: `0 4px 12px ${isDark ? 'rgba(0,0,0,0.5)' : 'rgba(0,0,0,0.1)'}`,
    minWidth: '200px',
    zIndex: '50',
    overflow: 'hidden',
    padding: '4px',
    '@supports (backdrop-filter: none) or (-webkit-backdrop-filter: none)': {
      backdropFilter: 'blur(16px)'
    }
  });
  const itemClass = createStyle({
    width: '100%',
    padding: '8px 12px',
    border: 'none',
    backgroundColor: 'transparent',
    textAlign: 'left',
    cursor: 'pointer',
    display: 'flex',
    alignItems: 'center',
    gap: theme.spacing.sm,
    color: theme.colors.textSecondary,
    transition: 'all 0.2s ease',
    position: 'relative',
    borderRadius: '4px',
    fontSize: '14px',
    '&:hover:not(:disabled), &:focus': {
      backgroundColor: 'rgba(255, 255, 255, 0.1)',
      color: theme.colors.text,
      outline: 'none',
      transform: 'scale(1.03)'
    },
    '&:disabled': {
      opacity: 0.5,
      cursor: 'not-allowed',
      backgroundColor: 'transparent',
      color: theme.colors.textSecondary
    }
  });
  const shortcutClass = createStyle({
    marginLeft: 'auto',
    color: theme.colors.textSecondary,
    opacity: 0.7,
    fontSize: '13px'
  });
  const dividerClass = createStyle({
    height: '1px',
    border: 'none',
    backgroundColor: theme.colors.border,
    margin: '4px 0'
  });
  const groupTitleClass = createStyle({
    padding: '8px 12px 4px',
    fontSize: '11px',
    fontWeight: '600',
    color: theme.colors.textSecondary,
    textTransform: 'uppercase',
    letterSpacing: '0.05em'
  });

  // Normalize items into groups. This correctly handles a flat array of items
  // (which can now include dividers) by wrapping it into a single group.
  const isGrouped = items.length > 0 && 'items' in items[0] && Array.isArray(items[0].items);
  const normalizedItems = isGrouped ? items : [{
    items: items
  }];
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Menu__WEBPACK_IMPORTED_MODULE_1__.Menu, {
    className: `${menuClass} ${className}`
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Menu__WEBPACK_IMPORTED_MODULE_1__.MenuButton, {
    className: buttonClass
  }, label), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Menu__WEBPACK_IMPORTED_MODULE_1__.MenuItems, {
    className: itemsClass
  }, normalizedItems.map((group, groupIndex) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), {
    key: groupIndex
  }, group.title && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: groupTitleClass
  }, group.title), group.items.map((item, itemIndex) => {
    if (isAction(item)) {
      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Menu__WEBPACK_IMPORTED_MODULE_1__.MenuItem, {
        key: `${groupIndex}-${itemIndex}`,
        className: itemClass,
        onClick: item.onClick,
        disabled: item.disabled
      }, item.icon, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", null, item.label), item.shortcut && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", {
        className: shortcutClass
      }, item.shortcut));
    } else {
      // It's a divider
      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("hr", {
        key: `${groupIndex}-${itemIndex}`,
        className: dividerClass
      });
    }
  }), group.divider === 'after' && groupIndex < normalizedItems.length - 1 && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("hr", {
    className: dividerClass
  })))));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (StyledMenu);

/***/ }),

/***/ "./src/components/Modal/Modal.tsx":
/*!****************************************!*\
  !*** ./src/components/Modal/Modal.tsx ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Modal: () => (/* binding */ Modal),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");
/* harmony import */ var _core_hooks_useAnimation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/hooks/useAnimation */ "./src/core/hooks/useAnimation.ts");




const Modal = ({
  isOpen,
  onClose,
  children,
  title,
  className = ''
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('modal');
  const {
    isRendered,
    style: fadeStyle
  } = (0,_core_hooks_useAnimation__WEBPACK_IMPORTED_MODULE_3__.useFade)(isOpen, 200);
  const modalRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const triggerRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const titleId = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(`modal-title-${Math.random().toString(36).substring(2, 9)}`).current;
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (isOpen) {
      const originalBodyOverflow = document.body.style.overflow;
      document.body.style.overflow = 'hidden';
      triggerRef.current = document.activeElement;

      // Focus the modal container after it appears
      const focusTimeout = setTimeout(() => {
        modalRef.current?.focus();
      }, 100);
      const handleKeyDown = e => {
        if (e.key === 'Escape') {
          onClose();
        }
        if (e.key === 'Tab') {
          const focusableElements = modalRef.current?.querySelectorAll('a[href], button:not([disabled]), textarea, input, select, [tabindex]:not([tabindex="-1"])');
          if (!focusableElements || focusableElements.length === 0) {
            e.preventDefault();
            return;
          }
          ;
          const firstElement = focusableElements[0];
          const lastElement = focusableElements[focusableElements.length - 1];
          if (e.shiftKey) {
            // Shift + Tab
            if (document.activeElement === firstElement) {
              lastElement.focus();
              e.preventDefault();
            }
          } else {
            // Tab
            if (document.activeElement === lastElement) {
              firstElement.focus();
              e.preventDefault();
            }
          }
        }
      };
      document.addEventListener('keydown', handleKeyDown);
      return () => {
        document.body.style.overflow = originalBodyOverflow;
        clearTimeout(focusTimeout);
        document.removeEventListener('keydown', handleKeyDown);
        triggerRef.current?.focus();
      };
    }
  }, [isOpen, onClose]);
  if (!isRendered) return null;
  const containerClass = createStyle({
    position: 'fixed',
    top: 0,
    left: 0,
    right: 0,
    bottom: 0,
    display: 'grid',
    placeItems: 'center',
    zIndex: 50,
    backgroundColor: 'rgba(0, 0, 0, 0.7)',
    '@supports (backdrop-filter: none) or (-webkit-backdrop-filter: none)': {
      backdropFilter: 'blur(8px)'
    }
  });
  const modalClass = createStyle({
    backgroundColor: theme.colors.backgroundSecondary,
    borderRadius: '8px',
    border: `1px solid ${theme.colors.border}`,
    padding: theme.spacing.lg,
    maxWidth: '400px',
    width: '90%',
    position: 'relative',
    boxShadow: '0 8px 32px rgba(0, 0, 0, 0.5)',
    '@supports (backdrop-filter: none) or (-webkit-backdrop-filter: none)': {
      backdropFilter: 'blur(16px)'
    },
    '&:focus': {
      outline: 'none'
    }
  });
  const titleClass = title && createStyle({
    fontSize: '16px',
    fontWeight: String(theme.typography.fontWeights.semibold),
    marginBottom: theme.spacing.sm,
    color: theme.colors.text
  });
  const closeButtonClass = createStyle({
    position: 'absolute',
    top: '12px',
    right: '12px',
    cursor: 'pointer',
    border: 'none',
    background: 'none',
    color: '#888',
    width: '24px',
    height: '24px',
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    borderRadius: '50%',
    transition: 'background-color 0.2s, color 0.2s',
    '&:hover': {
      backgroundColor: 'rgba(255, 255, 255, 0.1)',
      color: '#FFF'
    }
  });
  const handleContainerClick = e => {
    // Only close if the click is on the backdrop container itself, not on a child (the modal content).
    if (e.target === e.currentTarget) {
      onClose();
    }
  };
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: containerClass,
    style: fadeStyle,
    onClick: handleContainerClick
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    ref: modalRef,
    className: `${modalClass} ${className}`,
    role: "dialog",
    "aria-modal": "true",
    "aria-labelledby": title ? titleId : undefined,
    tabIndex: -1
  }, title && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("h2", {
    id: titleId,
    className: titleClass
  }, title), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("button", {
    className: closeButtonClass,
    onClick: onClose,
    "aria-label": "Close modal"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", {
    width: "14",
    height: "14",
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: "currentColor",
    strokeWidth: "2",
    strokeLinecap: "round",
    strokeLinejoin: "round"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("line", {
    x1: "18",
    y1: "6",
    x2: "6",
    y2: "18"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("line", {
    x1: "6",
    y1: "6",
    x2: "18",
    y2: "18"
  }))), children));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Modal);

/***/ }),

/***/ "./src/components/Nav/Nav.tsx":
/*!************************************!*\
  !*** ./src/components/Nav/Nav.tsx ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Nav: () => (/* binding */ Nav)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");
/* harmony import */ var _Link_Link__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Link/Link */ "./src/components/Link/Link.tsx");
/* harmony import */ var _Container_Container__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Container/Container */ "./src/components/Container/Container.tsx");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }





const NavList = ({
  children,
  className
}) => {
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('nav-list');
  const listClass = createStyle({
    display: 'flex',
    alignItems: 'center',
    gap: '0.5rem'
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: `${listClass} ${className}`
  }, children);
};
NavList.displayName = 'Nav.List';
const NavItem = ({
  children,
  className,
  isActive,
  ...props
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('nav-item');
  const itemClass = createStyle({
    padding: '6px 1rem',
    borderRadius: '6px',
    color: theme.colors.textSecondary,
    fontWeight: '400',
    position: 'relative',
    textDecoration: 'none',
    transition: 'color 0.2s, background-color 0.2s',
    '&:hover:not([data-active="true"])': {
      color: theme.colors.text,
      backgroundColor: 'rgba(255, 255, 255, 0.05)'
    },
    '&[data-active="true"]': {
      color: theme.colors.text,
      fontWeight: '500'
    }
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Link_Link__WEBPACK_IMPORTED_MODULE_3__.Link, _extends({
    className: `${itemClass} ${className}`,
    "data-active": isActive
  }, props), children);
};
NavItem.displayName = 'Nav.Item';
const Nav = ({
  children,
  className,
  container = false,
  height,
  ...props
}) => {
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('nav');
  const navClass = createStyle({
    width: '100%',
    height: height,
    display: height ? 'flex' : 'block',
    alignItems: height ? 'center' : undefined
  });
  const content = container ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Container_Container__WEBPACK_IMPORTED_MODULE_4__.Container, null, children) : children;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("nav", _extends({
    className: `${navClass} ${className}`
  }, props), content);
};
Nav.List = NavList;
Nav.Item = NavItem;

/***/ }),

/***/ "./src/components/NumberInput/NumberInput.tsx":
/*!****************************************************!*\
  !*** ./src/components/NumberInput/NumberInput.tsx ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   NumberInput: () => (/* binding */ NumberInput)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _TextInput_TextInput__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../TextInput/TextInput */ "./src/components/TextInput/TextInput.tsx");
/* harmony import */ var _Button__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Button */ "./src/components/Button.tsx");
/* harmony import */ var _Stack_Stack__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Stack/Stack */ "./src/components/Stack/Stack.tsx");
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");





const NumberInput = ({
  value,
  onChange,
  min,
  max,
  step = 1,
  className
}) => {
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_4__.useStyles)('number-input');
  const handleStep = direction => {
    const newValue = value + (direction === 'up' ? step : -step);
    if (min !== undefined && newValue < min) return;
    if (max !== undefined && newValue > max) return;
    onChange(newValue);
  };
  const containerClass = createStyle({
    display: 'grid',
    gridTemplateColumns: '1fr auto',
    alignItems: 'center'
  });
  const stepperButtonClass = createStyle({
    padding: '0 4px',
    minWidth: '24px',
    height: '100%'
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: `${containerClass} ${className}`
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_TextInput_TextInput__WEBPACK_IMPORTED_MODULE_1__.TextInput, {
    type: "number",
    value: value,
    onChange: e => onChange(parseInt(e.target.value, 10)),
    min: min,
    max: max,
    step: step,
    style: {
      borderRadius: '0.375rem 0 0 0.375rem',
      borderRight: 0
    }
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Stack_Stack__WEBPACK_IMPORTED_MODULE_3__.Stack, {
    direction: "column",
    gap: "2px",
    style: {
      height: '100%'
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Button__WEBPACK_IMPORTED_MODULE_2__.Button, {
    variant: "secondary",
    onClick: () => handleStep('up'),
    className: stepperButtonClass,
    style: {
      borderRadius: '0 0.375rem 0 0',
      height: '50%'
    }
  }, "+"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Button__WEBPACK_IMPORTED_MODULE_2__.Button, {
    variant: "secondary",
    onClick: () => handleStep('down'),
    className: stepperButtonClass,
    style: {
      borderRadius: '0 0 0.375rem 0',
      height: '50%'
    }
  }, "-")));
};

/***/ }),

/***/ "./src/components/Pagination/Pagination.tsx":
/*!**************************************************!*\
  !*** ./src/components/Pagination/Pagination.tsx ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Pagination: () => (/* binding */ Pagination),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Button */ "./src/components/Button.tsx");
/* harmony import */ var _Text_Text__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Text/Text */ "./src/components/Text/Text.tsx");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");





const Pagination = ({
  count,
  page,
  onChange,
  className = ''
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_3__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_4__.useStyles)('pagination');
  const containerClass = createStyle({
    display: 'inline-grid',
    gridAutoFlow: 'column',
    alignItems: 'center',
    gap: theme.spacing.sm
  });
  const pageButtonClass = createStyle({
    minWidth: '36px',
    height: '36px',
    padding: '0',
    borderRadius: '4px',
    justifyContent: 'center'
  });
  const activePageButtonClass = createStyle({
    backgroundColor: theme.colors.primary,
    color: theme.colors.background,
    borderColor: theme.colors.primary,
    '&:hover:not(:disabled)': {
      backgroundColor: theme.colors.primary
    }
  });
  const handlePageChange = newPage => {
    if (newPage >= 1 && newPage <= count) {
      onChange(newPage);
    }
  };
  const renderPageNumbers = () => {
    const pageNumbers = [];
    const maxPagesToShow = 5;
    let startPage, endPage;
    if (count <= maxPagesToShow) {
      startPage = 1;
      endPage = count;
    } else {
      if (page <= Math.ceil(maxPagesToShow / 2)) {
        startPage = 1;
        endPage = maxPagesToShow;
      } else if (page + Math.floor(maxPagesToShow / 2) >= count) {
        startPage = count - maxPagesToShow + 1;
        endPage = count;
      } else {
        startPage = page - Math.floor(maxPagesToShow / 2);
        endPage = page + Math.floor(maxPagesToShow / 2);
      }
    }
    if (startPage > 1) {
      pageNumbers.push(/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Button__WEBPACK_IMPORTED_MODULE_1__.Button, {
        key: 1,
        onClick: () => handlePageChange(1),
        variant: "secondary",
        className: pageButtonClass
      }, "1"));
      if (startPage > 2) {
        pageNumbers.push(/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Text_Text__WEBPACK_IMPORTED_MODULE_2__.Text, {
          key: "start-ellipsis",
          style: {
            padding: '0 8px'
          },
          "aria-hidden": "true"
        }, "..."));
      }
    }
    for (let i = startPage; i <= endPage; i++) {
      const isActive = i === page;
      pageNumbers.push(/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Button__WEBPACK_IMPORTED_MODULE_1__.Button, {
        key: i,
        onClick: () => handlePageChange(i),
        variant: isActive ? 'primary' : 'secondary',
        className: `${pageButtonClass} ${isActive ? activePageButtonClass : ''}`,
        "aria-current": isActive ? 'page' : undefined,
        disabled: isActive
      }, i));
    }
    if (endPage < count) {
      if (endPage < count - 1) {
        pageNumbers.push(/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Text_Text__WEBPACK_IMPORTED_MODULE_2__.Text, {
          key: "end-ellipsis",
          style: {
            padding: '0 8px'
          },
          "aria-hidden": "true"
        }, "..."));
      }
      pageNumbers.push(/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Button__WEBPACK_IMPORTED_MODULE_1__.Button, {
        key: count,
        onClick: () => handlePageChange(count),
        variant: "secondary",
        className: pageButtonClass
      }, count));
    }
    return pageNumbers;
  };
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("nav", {
    className: `${containerClass} ${className}`,
    "aria-label": "Pagination"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Button__WEBPACK_IMPORTED_MODULE_1__.Button, {
    onClick: () => handlePageChange(page - 1),
    disabled: page <= 1,
    variant: "secondary",
    className: pageButtonClass
  }, "<"), renderPageNumbers(), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Button__WEBPACK_IMPORTED_MODULE_1__.Button, {
    onClick: () => handlePageChange(page + 1),
    disabled: page >= count,
    variant: "secondary",
    className: pageButtonClass
  }, ">"));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Pagination);

/***/ }),

/***/ "./src/components/PinInput/PinInput.tsx":
/*!**********************************************!*\
  !*** ./src/components/PinInput/PinInput.tsx ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   PinInput: () => (/* binding */ PinInput)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core */ "./src/core/index.ts");
/* harmony import */ var _Flex_Flex__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Flex/Flex */ "./src/components/Flex/Flex.tsx");



const PinInput = ({
  length = 4,
  value = '',
  onChange
}) => {
  const {
    theme
  } = (0,_core__WEBPACK_IMPORTED_MODULE_1__.useTheme)();
  const createStyle = (0,_core__WEBPACK_IMPORTED_MODULE_1__.useStyles)('pin-input');
  const [localValue, setLocalValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(value);
  const inputRefs = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)([]);
  const handleChange = (e, index) => {
    const newValue = [...localValue];
    newValue[index] = e.target.value.slice(-1); // Only take the last character
    const finalValue = newValue.join('').slice(0, length);
    setLocalValue(finalValue);
    onChange?.(finalValue);

    // Focus next input
    if (e.target.value && index < length - 1) {
      inputRefs.current[index + 1]?.focus();
    }
  };
  const handleKeyDown = (e, index) => {
    if (e.key === 'Backspace' && !e.currentTarget.value && index > 0) {
      inputRefs.current[index - 1]?.focus();
    }
  };
  const handlePaste = e => {
    e.preventDefault();
    const pastedData = e.clipboardData.getData('text').slice(0, length);
    setLocalValue(pastedData);
    onChange?.(pastedData);
    // Focus the last relevant input
    const lastIndex = Math.min(length - 1, pastedData.length - 1);
    inputRefs.current[lastIndex]?.focus();
  };
  const inputClass = createStyle({
    width: '40px',
    height: '40px',
    textAlign: 'center',
    fontSize: '1.25rem',
    backgroundColor: theme.colors.backgroundSecondary,
    border: `1px solid ${theme.colors.border}`,
    borderRadius: '6px',
    color: theme.colors.text,
    transition: 'all 0.2s',
    '&:focus': {
      outline: 'none',
      borderColor: theme.colors.primary,
      boxShadow: `0 0 0 2px ${theme.colors.background}, 0 0 0 4px ${theme.colors.primary}`
    }
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Flex_Flex__WEBPACK_IMPORTED_MODULE_2__.Flex, {
    gap: "0.5rem"
  }, Array.from({
    length
  }).map((_, index) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("input", {
    key: index
    // FIX: Wrap ref callback in curly braces to prevent returning a value.
    ,
    ref: el => {
      inputRefs.current[index] = el;
    },
    className: inputClass,
    type: "text",
    maxLength: 1,
    value: localValue[index] || '',
    onChange: e => handleChange(e, index),
    onKeyDown: e => handleKeyDown(e, index),
    onPaste: index === 0 ? handlePaste : undefined
  })));
};

/***/ }),

/***/ "./src/components/Popover/Popover.tsx":
/*!********************************************!*\
  !*** ./src/components/Popover/Popover.tsx ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Popover: () => (/* binding */ Popover),
/* harmony export */   PopoverContent: () => (/* binding */ PopoverContent),
/* harmony export */   PopoverTrigger: () => (/* binding */ PopoverTrigger)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Popper_Popper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Popper/Popper */ "./src/components/Popper/Popper.tsx");
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");




const Popover = ({
  children
}) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Popper_Popper__WEBPACK_IMPORTED_MODULE_1__.Popper, null, children);
const PopoverTrigger = ({
  children
}) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Popper_Popper__WEBPACK_IMPORTED_MODULE_1__.PopperTrigger, null, children);
const PopoverContent = ({
  children,
  className = ''
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_3__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_2__.useStyles)('popover-content');
  const isDark = theme.colors.background.startsWith('#');
  const contentClass = createStyle({
    backgroundColor: theme.colors.backgroundSecondary,
    borderRadius: '6px',
    border: `1px solid ${theme.colors.border}`,
    boxShadow: `0 4px 12px ${isDark ? 'rgba(0,0,0,0.5)' : 'rgba(0,0,0,0.1)'}`,
    zIndex: '50',
    overflow: 'hidden',
    padding: '4px',
    minWidth: '150px',
    '@supports (backdrop-filter: none) or (-webkit-backdrop-filter: none)': {
      backdropFilter: 'blur(16px)'
    }
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Popper_Popper__WEBPACK_IMPORTED_MODULE_1__.PopperContent, {
    className: `${contentClass} ${className}`
  }, children);
};

/***/ }),

/***/ "./src/components/Popper/Popper.tsx":
/*!******************************************!*\
  !*** ./src/components/Popper/Popper.tsx ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Popper: () => (/* binding */ Popper),
/* harmony export */   PopperContent: () => (/* binding */ PopperContent),
/* harmony export */   PopperTrigger: () => (/* binding */ PopperTrigger),
/* harmony export */   usePopperContext: () => (/* binding */ usePopperContext)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core_hooks_useAnimation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/hooks/useAnimation */ "./src/core/hooks/useAnimation.ts");


const PopperContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);
const usePopperContext = () => {
  const context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(PopperContext);
  if (!context) throw new Error('Popper components must be used within a Popper provider.');
  return context;
};
const Popper = ({
  children,
  ...props
}) => {
  const [internalIsOpen, setInternalIsOpen] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const triggerRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const popperRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const isOpen = props.isOpen ?? internalIsOpen;
  const setIsOpen = props.setIsOpen ?? setInternalIsOpen;
  const setPosition = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {
    if (triggerRef.current && popperRef.current) {
      const triggerRect = triggerRef.current.getBoundingClientRect();
      popperRef.current.style.position = 'fixed';
      popperRef.current.style.top = `${triggerRect.bottom + 4}px`;
      popperRef.current.style.left = `${triggerRect.left}px`;
    }
  }, []);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)(() => {
    if (isOpen) {
      setPosition();
      window.addEventListener('scroll', setPosition, true);
      window.addEventListener('resize', setPosition);
    }
    return () => {
      window.removeEventListener('scroll', setPosition, true);
      window.removeEventListener('resize', setPosition);
    };
  }, [isOpen, setPosition]);
  const contextValue = {
    isOpen,
    setIsOpen,
    triggerRef,
    popperRef,
    setPosition
  };
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(PopperContext.Provider, {
    value: contextValue
  }, children);
};
const PopperTrigger = ({
  children
}) => {
  const {
    setIsOpen,
    triggerRef,
    setPosition
  } = usePopperContext();
  const child = react__WEBPACK_IMPORTED_MODULE_0___default().Children.only(children);
  const ref = node => {
    triggerRef.current = node;
    const childRef = child.ref;
    if (typeof childRef === 'function') {
      childRef(node);
    } else if (childRef) {
      childRef.current = node;
    }
  };
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().cloneElement(child, {
    ref,
    onClick: e => {
      setIsOpen(prev => !prev);
      setPosition();
      child.props.onClick?.(e);
    }
  });
};
const PopperContent = ({
  children,
  className = ''
}) => {
  const {
    isOpen,
    popperRef
  } = usePopperContext();
  const {
    isRendered,
    style: fadeStyle
  } = (0,_core_hooks_useAnimation__WEBPACK_IMPORTED_MODULE_1__.useFade)(isOpen, 200);
  if (!isRendered) return null;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    ref: popperRef,
    className: className,
    style: {
      ...fadeStyle,
      zIndex: 100
    }
  }, children);
};

/***/ }),

/***/ "./src/components/Progress/CircularProgress.tsx":
/*!******************************************************!*\
  !*** ./src/components/Progress/CircularProgress.tsx ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CircularProgress: () => (/* binding */ CircularProgress),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");



const CircularProgress = ({
  value,
  size = 48,
  strokeWidth = 4,
  className = '',
  'aria-label': ariaLabel = 'Loading progress'
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('circular-progress');
  const isIndeterminate = value === undefined;
  const containerClass = createStyle({
    width: `${size}px`,
    height: `${size}px`,
    position: 'relative'
  });
  const svgClass = createStyle({
    transform: 'rotate(-90deg)',
    animation: isIndeterminate ? '$spin 1.4s linear infinite' : undefined,
    '@keyframes spin': {
      '0%': {
        transform: 'rotate(-90deg)'
      },
      '100%': {
        transform: 'rotate(270deg)'
      }
    }
  });
  const radius = (size - strokeWidth) / 2;
  const circumference = 2 * Math.PI * radius;
  const offset = value !== undefined ? circumference - value / 100 * circumference : undefined;
  const circleBaseClass = createStyle({
    stroke: 'rgba(255, 255, 255, 0.1)',
    fill: 'transparent'
  });
  const circleProgressClass = createStyle({
    stroke: theme.colors.primary,
    fill: 'transparent',
    strokeLinecap: 'round',
    transition: 'stroke-dashoffset 0.3s',
    animation: isIndeterminate ? '$dash 1.4s ease-in-out infinite' : undefined,
    '@keyframes dash': {
      '0%': {
        strokeDasharray: '1, 200',
        strokeDashoffset: '0'
      },
      '50%': {
        strokeDasharray: '89, 200',
        strokeDashoffset: '-35px'
      },
      '100%': {
        strokeDasharray: '89, 200',
        strokeDashoffset: '-124px'
      }
    }
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: `${containerClass} ${className}`,
    role: "progressbar",
    "aria-valuenow": isIndeterminate ? undefined : value,
    "aria-valuemin": isIndeterminate ? undefined : 0,
    "aria-valuemax": isIndeterminate ? undefined : 100,
    "aria-label": ariaLabel
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", {
    width: size,
    height: size,
    viewBox: `0 0 ${size} ${size}`,
    className: svgClass
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("circle", {
    className: circleBaseClass,
    cx: size / 2,
    cy: size / 2,
    r: radius,
    strokeWidth: strokeWidth
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("circle", {
    className: circleProgressClass,
    cx: size / 2,
    cy: size / 2,
    r: radius,
    strokeWidth: strokeWidth,
    strokeDasharray: circumference,
    strokeDashoffset: offset
  })));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CircularProgress);

/***/ }),

/***/ "./src/components/Progress/LinearProgress.tsx":
/*!****************************************************!*\
  !*** ./src/components/Progress/LinearProgress.tsx ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   LinearProgress: () => (/* binding */ LinearProgress),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");



const LinearProgress = ({
  value,
  height = '4px',
  className = '',
  'aria-label': ariaLabel = 'Loading progress'
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('linear-progress');
  const isIndeterminate = value === undefined;
  const containerClass = createStyle({
    width: '100%',
    height: height,
    backgroundColor: 'rgba(255, 255, 255, 0.1)',
    borderRadius: height,
    overflow: 'hidden',
    position: 'relative'
  });
  const barClass = createStyle({
    height: '100%',
    backgroundColor: theme.colors.primary,
    borderRadius: height,
    transition: 'width 0.3s ease-out',
    width: !isIndeterminate ? `${value}%` : '100%',
    position: 'absolute',
    animation: isIndeterminate ? '$indeterminate 1.5s ease-in-out infinite' : 'none',
    '@keyframes indeterminate': {
      '0%': {
        left: '-100%',
        width: '100%'
      },
      '100%': {
        left: '100%',
        width: '10%'
      }
    }
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: `${containerClass} ${className}`,
    role: "progressbar",
    "aria-valuenow": isIndeterminate ? undefined : value,
    "aria-valuemin": isIndeterminate ? undefined : 0,
    "aria-valuemax": isIndeterminate ? undefined : 100,
    "aria-label": ariaLabel
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: barClass
  }));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (LinearProgress);

/***/ }),

/***/ "./src/components/RadioGroup/RadioGroup.tsx":
/*!**************************************************!*\
  !*** ./src/components/RadioGroup/RadioGroup.tsx ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   RadioGroup: () => (/* binding */ RadioGroup),
/* harmony export */   RadioGroupItem: () => (/* binding */ RadioGroupItem)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");
/* harmony import */ var _Text_Text__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Text/Text */ "./src/components/Text/Text.tsx");




const RadioGroupContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);
const useRadioGroup = () => {
  const context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(RadioGroupContext);
  if (!context) throw new Error('RadioGroupItem must be used within a RadioGroup.');
  return context;
};
const RadioGroup = ({
  children,
  value,
  onChange,
  name,
  label,
  className
}) => {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(RadioGroupContext.Provider, {
    value: {
      value,
      onChange,
      name
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    role: "radiogroup",
    "aria-label": label,
    className: className
  }, label && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Text_Text__WEBPACK_IMPORTED_MODULE_3__.Text, {
    as: "span",
    style: {
      marginBottom: '0.5rem',
      display: 'block'
    }
  }, label), children));
};
const RadioGroupItem = ({
  value,
  label,
  className
}) => {
  const {
    value: selectedValue,
    onChange,
    name
  } = useRadioGroup();
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('radio-item');
  const isChecked = selectedValue === value;
  const containerClass = createStyle({
    display: 'flex',
    alignItems: 'center',
    gap: theme.spacing.sm,
    cursor: 'pointer',
    padding: `${theme.spacing.sm} 0`
  });
  const radioClass = createStyle({
    width: '18px',
    height: '18px',
    borderRadius: '50%',
    border: `2px solid ${isChecked ? theme.colors.primary : theme.colors.border}`,
    display: 'grid',
    placeContent: 'center',
    transition: 'all 0.2s'
  });
  const indicatorClass = createStyle({
    width: '10px',
    height: '10px',
    borderRadius: '50%',
    backgroundColor: theme.colors.primary,
    transform: isChecked ? 'scale(1)' : 'scale(0)',
    transition: 'transform 0.2s'
  });
  const inputClass = createStyle({
    position: 'absolute',
    opacity: 0,
    width: 0,
    height: 0,
    '&:focus-visible + span': {
      boxShadow: `0 0 0 2px ${theme.colors.background}, 0 0 0 4px ${theme.colors.primary}`
    }
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("label", {
    className: `${containerClass} ${className}`
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("input", {
    type: "radio",
    name: name,
    value: value,
    checked: isChecked,
    onChange: () => onChange(value),
    className: inputClass
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", {
    className: radioClass
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", {
    className: indicatorClass
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Text_Text__WEBPACK_IMPORTED_MODULE_3__.Text, {
    as: "span"
  }, label));
};

/***/ }),

/***/ "./src/components/Rating/Rating.tsx":
/*!******************************************!*\
  !*** ./src/components/Rating/Rating.tsx ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Rating: () => (/* binding */ Rating),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }



const Rating = ({
  value,
  onChange,
  max = 5,
  readonly = false,
  size = 'medium',
  className = ''
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('rating');
  const containerClass = createStyle({
    display: 'inline-grid',
    gridAutoFlow: 'column',
    gap: theme.spacing.xs,
    padding: theme.spacing.sm,
    backgroundColor: 'rgba(0, 0, 0, 0.3)',
    backdropFilter: 'blur(8px)',
    borderRadius: '8px',
    border: '1px solid rgba(255, 255, 255, 0.1)',
    cursor: readonly ? 'default' : 'pointer',
    '&:focus': {
      outline: 'none'
    },
    '&:focus-visible': {
      boxShadow: `0 0 0 2px ${theme.colors.background}, 0 0 0 4px ${theme.colors.primary}`
    }
  });
  const sizes = {
    small: '16px',
    medium: '24px',
    large: '32px'
  };
  const starClass = createStyle({
    width: sizes[size],
    height: sizes[size],
    position: 'relative',
    transition: 'all 0.2s ease',
    pointerEvents: 'none',
    // Clicks are handled by the container
    '&::before': {
      content: '"â˜…"',
      position: 'absolute',
      top: '50%',
      left: '50%',
      transform: 'translate(-50%, -50%)',
      fontSize: sizes[size],
      color: 'rgba(255, 255, 255, 0.2)',
      textShadow: 'none',
      transition: 'all 0.2s ease'
    },
    '&[data-filled="true"]::before': {
      color: theme.colors.primary,
      textShadow: `0 0 10px ${theme.colors.primary}, 0 0 20px ${theme.colors.primary}`
    }
  });
  const handleClick = index => {
    if (!readonly && onChange) {
      onChange(index + 1);
    }
  };
  const handleKeyDown = event => {
    if (readonly || !onChange) return;
    let newValue = value;
    if (event.key === 'ArrowRight') {
      newValue = Math.min(max, value + 1);
    } else if (event.key === 'ArrowLeft') {
      newValue = Math.max(0, value - 1);
    } else if (event.key === 'Home') {
      newValue = 0;
    } else if (event.key === 'End') {
      newValue = max;
    }
    if (newValue !== value) {
      event.preventDefault();
      onChange(newValue);
    }
  };
  const interactiveProps = readonly ? {} : {
    tabIndex: 0,
    role: "slider",
    "aria-valuemin": 0,
    "aria-valuemax": max,
    "aria-valuenow": value,
    "aria-label": "Rating",
    onKeyDown: handleKeyDown
  };
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", _extends({
    className: `${containerClass} ${className}`
  }, interactiveProps, {
    role: readonly ? "img" : "slider",
    "aria-label": readonly ? `${value} out of ${max} stars` : "Rating"
  }), Array.from({
    length: max
  }, (_, i) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", {
    key: i,
    className: starClass,
    "data-filled": i < value,
    onClick: () => handleClick(i),
    "aria-hidden": "true"
  })));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Rating);

/***/ }),

/***/ "./src/components/Search/Search.tsx":
/*!******************************************!*\
  !*** ./src/components/Search/Search.tsx ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Search: () => (/* binding */ Search),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _TextInput_TextInput__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../TextInput/TextInput */ "./src/components/TextInput/TextInput.tsx");
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }




const SearchIcon = () => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "16",
  height: "16",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("circle", {
  cx: "11",
  cy: "11",
  r: "8"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("line", {
  x1: "21",
  y1: "21",
  x2: "16.65",
  y2: "16.65"
}));
const Search = ({
  className = '',
  ...props
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_3__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_2__.useStyles)('search');
  const containerClass = createStyle({
    position: 'relative',
    width: '100%'
  });
  const iconClass = createStyle({
    position: 'absolute',
    top: '50%',
    left: '12px',
    transform: 'translateY(-50%)',
    color: theme.colors.textSecondary,
    pointerEvents: 'none'
  });
  const inputClass = createStyle({
    paddingLeft: '36px'
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: `${containerClass} ${className}`
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", {
    className: iconClass
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(SearchIcon, null)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_TextInput_TextInput__WEBPACK_IMPORTED_MODULE_1__.TextInput, _extends({
    className: inputClass
  }, props)));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Search);

/***/ }),

/***/ "./src/components/SegmentedControl/SegmentedControl.tsx":
/*!**************************************************************!*\
  !*** ./src/components/SegmentedControl/SegmentedControl.tsx ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SegmentedControl: () => (/* binding */ SegmentedControl)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");



const SegmentedControl = ({
  options,
  value,
  onChange,
  className
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('segmented-control');
  const containerClass = createStyle({
    display: 'inline-flex',
    backgroundColor: theme.colors.backgroundSecondary,
    borderRadius: '8px',
    padding: '4px',
    border: `1px solid ${theme.colors.border}`,
    '@supports (backdrop-filter: none) or (-webkit-backdrop-filter: none)': {
      backdropFilter: 'blur(16px)'
    }
  });
  const optionClass = createStyle({
    padding: '6px 16px',
    border: 'none',
    background: 'transparent',
    color: theme.colors.textSecondary,
    cursor: 'pointer',
    borderRadius: '6px',
    transition: 'all 0.2s',
    '&[data-active="true"]': {
      backgroundColor: theme.colors.backgroundSecondary,
      color: theme.colors.text,
      boxShadow: '0 1px 3px rgba(0,0,0,0.3)'
    }
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: `${containerClass} ${className}`
  }, options.map(option => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("button", {
    key: option.value,
    className: optionClass,
    "data-active": value === option.value,
    onClick: () => onChange(option.value)
  }, option.label)));
};

/***/ }),

/***/ "./src/components/Select/Select.tsx":
/*!******************************************!*\
  !*** ./src/components/Select/Select.tsx ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Select: () => (/* binding */ Select),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");
/* harmony import */ var _Popper_Popper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Popper/Popper */ "./src/components/Popper/Popper.tsx");




const Select = ({
  value,
  onChange,
  options,
  disabled = false,
  className = ''
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('select');
  const [isOpen, setIsOpen] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const selectedOption = options.find(opt => opt.value === value);
  const triggerClass = createStyle({
    width: 'auto',
    padding: '2px 8px',
    backgroundColor: 'transparent',
    color: theme.colors.textSecondary,
    border: '1px solid transparent',
    borderRadius: '6px',
    cursor: disabled ? 'not-allowed' : 'pointer',
    display: 'inline-flex',
    alignItems: 'center',
    fontSize: '14px',
    transition: 'all 0.2s ease',
    '&:hover': disabled ? undefined : {
      backgroundColor: theme.colors.border,
      color: theme.colors.text
    },
    '&::after': {
      content: '"â–¼"',
      marginLeft: theme.spacing.sm,
      fontSize: '10px',
      transition: 'transform 0.2s ease',
      transform: isOpen ? 'rotate(180deg)' : 'none'
    }
  });
  const dropdownClass = createStyle({
    backgroundColor: theme.colors.backgroundSecondary,
    border: `1px solid ${theme.colors.border}`,
    borderRadius: '6px',
    boxShadow: `0 4px 20px rgba(0, 0, 0, 0.5)`,
    marginTop: '4px',
    minWidth: '180px',
    zIndex: 100,
    padding: '4px',
    '@supports (backdrop-filter: none) or (-webkit-backdrop-filter: none)': {
      backdropFilter: 'blur(16px)'
    }
  });
  const optionClass = createStyle({
    padding: '6px 10px',
    cursor: 'pointer',
    transition: 'all 0.2s ease',
    color: theme.colors.text,
    borderRadius: '4px',
    fontSize: '14px',
    '&:hover': {
      backgroundColor: theme.colors.primary,
      color: '#fff'
    },
    '&[data-selected="true"]': {
      fontWeight: '500'
    }
  });
  const handleSelect = optionValue => {
    if (!disabled) {
      onChange(optionValue);
      setIsOpen(false);
    }
  };
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Popper_Popper__WEBPACK_IMPORTED_MODULE_3__.Popper, {
    isOpen: isOpen,
    setIsOpen: setIsOpen
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Popper_Popper__WEBPACK_IMPORTED_MODULE_3__.PopperTrigger, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("button", {
    className: triggerClass,
    disabled: disabled
  }, selectedOption?.label)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Popper_Popper__WEBPACK_IMPORTED_MODULE_3__.PopperContent, {
    className: dropdownClass
  }, options.map(option => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    key: option.value,
    className: optionClass,
    onClick: () => handleSelect(option.value),
    "data-selected": option.value === value
  }, option.label))));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Select);

/***/ }),

/***/ "./src/components/Sidebar/Sidebar.tsx":
/*!********************************************!*\
  !*** ./src/components/Sidebar/Sidebar.tsx ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Sidebar: () => (/* binding */ Sidebar),
/* harmony export */   SidebarNav: () => (/* binding */ SidebarNav),
/* harmony export */   SidebarNavItem: () => (/* binding */ SidebarNavItem)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");
/* harmony import */ var _Icon_Icon__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Icon/Icon */ "./src/components/Icon/Icon.tsx");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }




const Sidebar = ({
  children,
  width = '250px',
  height = '100%',
  className
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('sidebar');
  const sidebarClass = createStyle({
    width: width,
    height: height,
    backgroundColor: theme.colors.backgroundSecondary,
    borderRight: `1px solid ${theme.colors.border}`,
    padding: theme.spacing.md,
    display: 'flex',
    flexDirection: 'column',
    gap: theme.spacing.lg,
    '@supports (backdrop-filter: none) or (-webkit-backdrop-filter: none)': {
      backdropFilter: 'blur(16px)'
    }
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("aside", {
    className: `${sidebarClass} ${className}`
  }, children);
};
const SidebarNav = ({
  children,
  title
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('sidebar-nav');
  const navClass = createStyle({
    display: 'flex',
    flexDirection: 'column',
    gap: theme.spacing.xs
  });
  const titleClass = createStyle({
    padding: `0 ${theme.spacing.sm}`,
    fontSize: '12px',
    fontWeight: 600,
    color: theme.colors.textSecondary,
    marginBottom: theme.spacing.sm
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("nav", null, title && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("h3", {
    className: titleClass
  }, title), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: navClass
  }, children));
};
const SidebarNavItem = ({
  children,
  icon,
  isActive,
  className,
  ...props
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('sidebar-nav-item');
  const itemClass = createStyle({
    display: 'flex',
    alignItems: 'center',
    gap: theme.spacing.md,
    padding: `${theme.spacing.sm} ${theme.spacing.md}`,
    borderRadius: '6px',
    color: isActive ? theme.colors.text : theme.colors.textSecondary,
    backgroundColor: isActive ? theme.colors.backgroundSecondary : 'transparent',
    textDecoration: 'none',
    transition: 'all 0.2s',
    '&:hover': {
      backgroundColor: theme.colors.backgroundSecondary,
      color: theme.colors.text
    }
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("a", _extends({
    className: `${itemClass} ${className}`
  }, props), icon && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Icon_Icon__WEBPACK_IMPORTED_MODULE_3__.Icon, {
    as: icon,
    size: 16
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", null, children));
};

/***/ }),

/***/ "./src/components/Skeleton/Skeleton.tsx":
/*!**********************************************!*\
  !*** ./src/components/Skeleton/Skeleton.tsx ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Skeleton: () => (/* binding */ Skeleton)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }



const Skeleton = ({
  width = '100%',
  height = '1rem',
  variant = 'text',
  className = '',
  style,
  ...props
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('skeleton');
  const animationClass = createStyle({
    '@keyframes shimmer': {
      '0%': {
        backgroundPosition: '-1000px 0'
      },
      '100%': {
        backgroundPosition: '1000px 0'
      }
    },
    animation: 'shimmer 2s infinite linear',
    backgroundImage: `linear-gradient(90deg, ${theme.colors.border} 25%, rgba(255,255,255,0.1) 50%, ${theme.colors.border} 75%)`,
    backgroundSize: '2000px 100%'
  });
  const baseClass = createStyle({
    backgroundColor: theme.colors.border,
    width,
    height,
    borderRadius: variant === 'circle' ? '50%' : variant === 'text' ? '4px' : '8px'
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", _extends({
    className: `${baseClass} ${animationClass} ${className}`,
    style: style
  }, props));
};

/***/ }),

/***/ "./src/components/Slider/Slider.tsx":
/*!******************************************!*\
  !*** ./src/components/Slider/Slider.tsx ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Slider: () => (/* binding */ Slider),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");



const Slider = ({
  value,
  onChange,
  min = 0,
  max = 100,
  step = 1,
  disabled = false,
  showValue = false,
  className = '',
  color
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('slider');
  const [isDragging, setIsDragging] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const trackRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const sliderColor = color || theme.colors.primary;
  const getClientX = e => {
    if ('touches' in e && e.touches.length > 0) {
      return e.touches[0].clientX;
    }
    return e.clientX;
  };
  const handleMove = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(e => {
    if (disabled || !trackRef.current) return;
    const clientX = getClientX(e);
    const rect = trackRef.current.getBoundingClientRect();
    const percentage = Math.max(0, Math.min(1, (clientX - rect.left) / rect.width));
    const rawValue = percentage * (max - min) + min;
    const steps = (rawValue - min) / step;
    const roundedSteps = Math.round(steps);
    const newValue = roundedSteps * step + min;
    onChange(Math.max(min, Math.min(max, newValue)));
  }, [disabled, min, max, step, onChange]);
  const handleInteractionStart = e => {
    if (disabled) return;
    handleMove(e);
    setIsDragging(true);
  };
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (isDragging) {
      const handleInteractionMove = e => handleMove(e);
      const stopDragging = () => setIsDragging(false);
      document.addEventListener('mousemove', handleInteractionMove);
      document.addEventListener('touchmove', handleInteractionMove);
      document.addEventListener('mouseup', stopDragging);
      document.addEventListener('touchend', stopDragging);
      return () => {
        document.removeEventListener('mousemove', handleInteractionMove);
        document.removeEventListener('touchmove', handleInteractionMove);
        document.removeEventListener('mouseup', stopDragging);
        document.removeEventListener('touchend', stopDragging);
      };
    }
  }, [isDragging, handleMove]);
  const handleKeyDown = e => {
    if (disabled) return;
    let newValue = value;
    if (e.key === 'ArrowRight' || e.key === 'ArrowUp') {
      newValue = value + step;
    } else if (e.key === 'ArrowLeft' || e.key === 'ArrowDown') {
      newValue = value - step;
    } else {
      return;
    }
    e.preventDefault();
    onChange(Math.max(min, Math.min(max, newValue)));
  };
  const containerClass = createStyle({
    position: 'relative',
    width: '100%',
    padding: `${theme.spacing.md} ${theme.spacing.sm}`,
    userSelect: 'none'
  });
  const trackClass = createStyle({
    height: '2px',
    backgroundColor: 'rgba(255, 255, 255, 0.1)',
    borderRadius: '2px',
    position: 'relative',
    cursor: disabled ? 'not-allowed' : 'pointer',
    opacity: disabled ? 0.5 : 1
  });
  const progressClass = createStyle({
    position: 'absolute',
    left: 0,
    top: 0,
    height: '100%',
    backgroundColor: sliderColor,
    borderRadius: '2px',
    width: `${(value - min) / (max - min) * 100}%`,
    boxShadow: `0 0 10px ${sliderColor}`,
    transition: isDragging ? 'none' : 'width 0.1s ease',
    pointerEvents: 'none'
  });
  const thumbClass = createStyle({
    width: '16px',
    height: '16px',
    backgroundColor: 'rgba(0, 0, 0, 0.8)',
    border: `2px solid ${sliderColor}`,
    borderRadius: '50%',
    position: 'absolute',
    top: '50%',
    left: `${(value - min) / (max - min) * 100}%`,
    transform: 'translate(-50%, -50%)',
    cursor: disabled ? 'not-allowed' : 'grab',
    boxShadow: `0 0 10px ${sliderColor}`,
    transition: isDragging ? 'none' : 'all 0.2s ease',
    '@supports (backdrop-filter: none) or (-webkit-backdrop-filter: none)': {
      backdropFilter: 'blur(4px)'
    },
    '&:hover': disabled ? undefined : {
      transform: 'translate(-50%, -50%) scale(1.2)',
      boxShadow: `0 0 15px ${sliderColor}`
    },
    '&:active': disabled ? undefined : {
      cursor: 'grabbing',
      transform: 'translate(-50%, -50%) scale(0.95)'
    },
    '&:focus': {
      outline: 'none',
      transform: 'translate(-50%, -50%) scale(1.2)',
      boxShadow: `0 0 0 2px ${theme.colors.background}, 0 0 0 4px ${sliderColor}`
    }
  });
  const valueClass = createStyle({
    position: 'absolute',
    top: '-24px',
    left: `${(value - min) / (max - min) * 100}%`,
    transform: 'translateX(-50%)',
    backgroundColor: 'rgba(0, 0, 0, 0.8)',
    color: sliderColor,
    padding: '2px 6px',
    borderRadius: '4px',
    fontSize: '12px',
    pointerEvents: 'none',
    opacity: isDragging || showValue ? 1 : 0,
    transition: 'opacity 0.2s ease, left 0.1s ease',
    '@supports (backdrop-filter: none) or (-webkit-backdrop-filter: none)': {
      backdropFilter: 'blur(4px)'
    }
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: `${containerClass} ${className}`
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    ref: trackRef,
    className: trackClass,
    onMouseDown: handleInteractionStart,
    onTouchStart: handleInteractionStart
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: progressClass
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: thumbClass,
    onKeyDown: handleKeyDown,
    onMouseDown: e => {
      e.stopPropagation();
      handleInteractionStart(e);
    },
    onTouchStart: e => {
      e.stopPropagation();
      handleInteractionStart(e);
    },
    tabIndex: disabled ? -1 : 0,
    role: "slider",
    "aria-valuenow": value,
    "aria-valuemin": min,
    "aria-valuemax": max,
    "aria-disabled": disabled,
    "aria-orientation": "horizontal"
  }), (showValue || isDragging) && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: valueClass
  }, value)));
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Slider);

/***/ }),

/***/ "./src/components/Snackbar/Snackbar.tsx":
/*!**********************************************!*\
  !*** ./src/components/Snackbar/Snackbar.tsx ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Snackbar: () => (/* binding */ Snackbar)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");
/* harmony import */ var _core_hooks_useAnimation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/hooks/useAnimation */ "./src/core/hooks/useAnimation.ts");
/* harmony import */ var _Text_Text__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Text/Text */ "./src/components/Text/Text.tsx");
/* harmony import */ var _Button__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Button */ "./src/components/Button.tsx");






const Snackbar = ({
  snackbar,
  onDismiss
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('snackbar');
  const {
    isRendered,
    isVisible,
    show,
    hide
  } = (0,_core_hooks_useAnimation__WEBPACK_IMPORTED_MODULE_3__.useFade)(false, 200);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    show();
    const duration = snackbar.duration || 5000;
    const timer = setTimeout(() => {
      hide();
    }, duration);
    const removeTimer = setTimeout(() => {
      onDismiss(snackbar.id);
    }, duration + 300); // Wait for fade out animation

    return () => {
      clearTimeout(timer);
      clearTimeout(removeTimer);
    };
  }, [snackbar, onDismiss, show, hide]);
  const containerClass = createStyle({
    backgroundColor: '#323232',
    borderRadius: '4px',
    boxShadow: `0 3px 5px -1px rgba(0,0,0,.2), 0 6px 10px 0 rgba(0,0,0,.14), 0 1px 18px 0 rgba(0,0,0,.12)`,
    padding: '6px 16px',
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'space-between',
    gap: theme.spacing.md,
    minWidth: '344px',
    maxWidth: '568px',
    color: '#fff'
  });
  const actionButtonClass = createStyle({
    color: theme.colors.primary,
    fontWeight: '600',
    padding: '0.25rem 0.5rem',
    backgroundColor: 'transparent',
    '&:hover:not(:disabled)': {
      backgroundColor: 'rgba(255, 255, 255, 0.1)'
    }
  });
  if (!isRendered) return null;
  const handleActionClick = () => {
    snackbar.action?.onClick();
    hide();
    // Immediately start dismiss process on action click
    setTimeout(() => onDismiss(snackbar.id), 200);
  };
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: containerClass,
    style: {
      opacity: isVisible ? 1 : 0,
      transition: 'opacity 0.2s, transform 0.2s',
      transform: isVisible ? 'translateY(0)' : 'translateY(20px)'
    },
    role: "alert",
    "aria-live": "assertive"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Text_Text__WEBPACK_IMPORTED_MODULE_4__.Text, {
    size: "14px",
    color: "inherit"
  }, snackbar.message), snackbar.action && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Button__WEBPACK_IMPORTED_MODULE_5__.Button, {
    variant: "secondary",
    className: actionButtonClass,
    onClick: handleActionClick
  }, snackbar.action.label));
};

/***/ }),

/***/ "./src/components/Snackbar/SnackbarProvider.tsx":
/*!******************************************************!*\
  !*** ./src/components/Snackbar/SnackbarProvider.tsx ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SnackbarProvider: () => (/* binding */ SnackbarProvider)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ "./node_modules/react-dom/index.js");
/* harmony import */ var _useSnackbar__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./useSnackbar */ "./src/components/Snackbar/useSnackbar.ts");
/* harmony import */ var _Snackbar__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Snackbar */ "./src/components/Snackbar/Snackbar.tsx");
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");





const SnackbarProvider = ({
  children
}) => {
  const [snackbars, setSnackbars] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_4__.useStyles)('snackbar-container');
  const addSnackbar = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(options => {
    const id = new Date().getTime().toString();
    const newSnackbar = {
      id,
      duration: 5000,
      ...options
    };
    setSnackbars(prev => [...prev, newSnackbar]);
  }, []);
  const removeSnackbar = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(id => {
    setSnackbars(prev => prev.filter(s => s.id !== id));
  }, []);
  const containerClass = createStyle({
    position: 'fixed',
    bottom: '1rem',
    left: '50%',
    transform: 'translateX(-50%)',
    zIndex: 1000,
    display: 'grid',
    gap: '0.75rem',
    justifyItems: 'center'
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_useSnackbar__WEBPACK_IMPORTED_MODULE_2__.SnackbarContext.Provider, {
    value: {
      addSnackbar
    }
  }, children, /*#__PURE__*/(0,react_dom__WEBPACK_IMPORTED_MODULE_1__.createPortal)(/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: containerClass
  }, snackbars.map(snackbar => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Snackbar__WEBPACK_IMPORTED_MODULE_3__.Snackbar, {
    key: snackbar.id,
    snackbar: snackbar,
    onDismiss: removeSnackbar
  }))), document.body));
};

/***/ }),

/***/ "./src/components/Snackbar/useSnackbar.ts":
/*!************************************************!*\
  !*** ./src/components/Snackbar/useSnackbar.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SnackbarContext: () => (/* binding */ SnackbarContext),
/* harmony export */   useSnackbar: () => (/* binding */ useSnackbar)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);

const SnackbarContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);
const useSnackbar = () => {
  const context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(SnackbarContext);
  if (!context) {
    throw new Error('useSnackbar must be used within a SnackbarProvider');
  }
  return context;
};

/***/ }),

/***/ "./src/components/Sofa/Sofa.tsx":
/*!**************************************!*\
  !*** ./src/components/Sofa/Sofa.tsx ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Sofa: () => (/* binding */ Sofa)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");
/* harmony import */ var _Stack_Stack__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Stack/Stack */ "./src/components/Stack/Stack.tsx");
/* harmony import */ var _Text_Text__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Text/Text */ "./src/components/Text/Text.tsx");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }





const Sofa = ({
  children,
  className = '',
  title,
  description,
  ...props
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('sofa');
  const sofaClass = createStyle({
    padding: '24px',
    backgroundColor: theme.colors.backgroundSecondary,
    borderRadius: '8px',
    border: `1px solid ${theme.colors.border}`,
    transition: 'background-color 0.3s, border-color 0.3s',
    '@supports (backdrop-filter: none) or (-webkit-backdrop-filter: none)': {
      backdropFilter: 'blur(16px)'
    }
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", _extends({
    className: `${sofaClass} ${className}`
  }, props), title || description ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Stack_Stack__WEBPACK_IMPORTED_MODULE_3__.Stack, {
    gap: "1rem"
  }, title && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Text_Text__WEBPACK_IMPORTED_MODULE_4__.Text, {
    as: "h2",
    size: "1.5rem",
    weight: "600"
  }, title), description && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Text_Text__WEBPACK_IMPORTED_MODULE_4__.Text, null, description), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", null, children)) : children);
};

/***/ }),

/***/ "./src/components/SpeedDial/SpeedDial.tsx":
/*!************************************************!*\
  !*** ./src/components/SpeedDial/SpeedDial.tsx ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SpeedDial: () => (/* binding */ SpeedDial)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _FloatingActionButton_FloatingActionButton__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../FloatingActionButton/FloatingActionButton */ "./src/components/FloatingActionButton/FloatingActionButton.tsx");
/* harmony import */ var _icons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../icons */ "./src/icons/index.ts");
/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core */ "./src/core/index.ts");
/* harmony import */ var _core_hooks_useInteractions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/hooks/useInteractions */ "./src/core/hooks/useInteractions.ts");
/* harmony import */ var _Stack_Stack__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Stack/Stack */ "./src/components/Stack/Stack.tsx");
/* harmony import */ var _Text_Text__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../Text/Text */ "./src/components/Text/Text.tsx");



// FIX: Stack and Text are not exported from core. They are imported separately.




const SpeedDial = ({
  actions,
  position = {
    bottom: '2rem',
    right: '2rem'
  }
}) => {
  const [isOpen, setIsOpen] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const {
    theme
  } = (0,_core__WEBPACK_IMPORTED_MODULE_3__.useTheme)();
  const createStyle = (0,_core__WEBPACK_IMPORTED_MODULE_3__.useStyles)('speed-dial');
  const containerRef = (0,_core_hooks_useInteractions__WEBPACK_IMPORTED_MODULE_4__.useClickOutside)(() => setIsOpen(false));
  const containerClass = createStyle({
    position: 'fixed',
    ...position,
    zIndex: 45,
    display: 'flex',
    flexDirection: 'column-reverse',
    alignItems: 'center',
    gap: '1rem'
  });
  const actionClass = index => createStyle({
    display: 'flex',
    alignItems: 'center',
    gap: '1rem',
    transition: `all 0.3s ease ${index * 0.05}s`,
    opacity: isOpen ? 1 : 0,
    transform: isOpen ? 'translateY(0)' : 'translateY(10px)'
  });
  const labelClass = createStyle({
    backgroundColor: theme.colors.backgroundSecondary,
    color: theme.colors.text,
    padding: '0.25rem 0.75rem',
    borderRadius: '4px',
    boxShadow: '0 2px 8px rgba(0,0,0,0.3)',
    whiteSpace: 'nowrap'
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    ref: containerRef,
    className: containerClass
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_FloatingActionButton_FloatingActionButton__WEBPACK_IMPORTED_MODULE_1__.FloatingActionButton, {
    icon: isOpen ? _icons__WEBPACK_IMPORTED_MODULE_2__.TimesIcon : _icons__WEBPACK_IMPORTED_MODULE_2__.PlusIcon,
    label: isOpen ? "Close actions" : "Open actions",
    onClick: () => setIsOpen(!isOpen)
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Stack_Stack__WEBPACK_IMPORTED_MODULE_5__.Stack, {
    direction: "column-reverse",
    align: "end",
    gap: "1.5rem"
  }, actions.map((action, index) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    key: action.label,
    className: actionClass(index)
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: labelClass
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Text_Text__WEBPACK_IMPORTED_MODULE_6__.Text, {
    size: theme.typography.fontSizes.sm
  }, action.label)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_FloatingActionButton_FloatingActionButton__WEBPACK_IMPORTED_MODULE_1__.FloatingActionButton, {
    icon: action.icon,
    label: action.label,
    onClick: () => {
      action.onClick();
      setIsOpen(false);
    },
    size: "small"
    // We use relative positioning here because the parent is fixed
    ,
    position: {},
    style: {
      position: 'relative'
    }
  })))));
};

/***/ }),

/***/ "./src/components/Spinner/Spinner.tsx":
/*!********************************************!*\
  !*** ./src/components/Spinner/Spinner.tsx ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Spinner: () => (/* binding */ Spinner)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");



const Spinner = ({
  size = 24,
  className
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('spinner');
  const spinnerClass = createStyle({
    width: `${size}px`,
    height: `${size}px`,
    border: '2px solid transparent',
    borderTopColor: theme.colors.primary,
    borderRadius: '50%',
    animation: 'spin 0.8s linear infinite',
    '@keyframes spin': {
      '0%': {
        transform: 'rotate(0deg)'
      },
      '100%': {
        transform: 'rotate(360deg)'
      }
    }
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: `${spinnerClass} ${className}`,
    role: "status",
    "aria-label": "Loading"
  });
};

/***/ }),

/***/ "./src/components/Stack/Stack.tsx":
/*!****************************************!*\
  !*** ./src/components/Stack/Stack.tsx ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Stack: () => (/* binding */ Stack)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }


const Stack = ({
  direction = 'column',
  gap = '1rem',
  align,
  justify,
  wrap = false,
  className = '',
  children,
  ...props
}) => {
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('stack');
  const stackClass = createStyle({
    display: 'flex',
    flexDirection: direction,
    gap: gap,
    alignItems: align,
    justifyContent: justify,
    flexWrap: wrap ? 'wrap' : 'nowrap'
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", _extends({
    className: `${stackClass} ${className}`
  }, props), children);
};

/***/ }),

/***/ "./src/components/Stepper/Stepper.tsx":
/*!********************************************!*\
  !*** ./src/components/Stepper/Stepper.tsx ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Stepper: () => (/* binding */ Stepper)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");
/* harmony import */ var _Text_Text__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Text/Text */ "./src/components/Text/Text.tsx");




const Stepper = ({
  activeStep,
  steps,
  className
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('stepper');
  const containerClass = createStyle({
    display: 'flex',
    alignItems: 'flex-start'
  });
  const stepClass = createStyle({
    display: 'flex',
    alignItems: 'center',
    position: 'relative',
    flex: 1,
    '&:last-child': {
      flex: '0 1 auto'
    },
    '&:last-child > div:last-child': {
      // Hide connector on last step
      display: 'none'
    }
  });
  const stepContentClass = createStyle({
    textAlign: 'center',
    minWidth: '60px'
  });
  const circleClass = index => createStyle({
    width: '32px',
    height: '32px',
    borderRadius: '50%',
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    fontWeight: '600',
    transition: 'all 0.3s',
    backgroundColor: index <= activeStep ? theme.colors.primary : theme.colors.border,
    color: index <= activeStep ? '#fff' : theme.colors.textSecondary,
    border: `2px solid ${index <= activeStep ? theme.colors.primary : 'transparent'}`,
    margin: '0 auto',
    marginBottom: theme.spacing.sm
  });
  const connectorClass = index => createStyle({
    height: '2px',
    flex: 1,
    backgroundColor: index < activeStep ? theme.colors.primary : theme.colors.border,
    transition: 'background-color 0.3s',
    margin: '0 -1px',
    position: 'relative',
    top: '16px' // align with center of circle
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: `${containerClass} ${className}`
  }, steps.map((step, index) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    key: index,
    className: stepClass
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: stepContentClass
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: circleClass(index)
  }, index + 1), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Text_Text__WEBPACK_IMPORTED_MODULE_3__.Text, {
    size: "14px",
    weight: index === activeStep ? 600 : 400
  }, step.label)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: connectorClass(index)
  }))));
};

/***/ }),

/***/ "./src/components/Switch/Switch.tsx":
/*!******************************************!*\
  !*** ./src/components/Switch/Switch.tsx ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Switch: () => (/* binding */ Switch)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }



const Switch = ({
  label,
  id,
  checked,
  disabled,
  ...props
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('switch');
  const containerClass = createStyle({
    display: 'inline-flex',
    alignItems: 'center',
    gap: theme.spacing.sm,
    cursor: disabled ? 'not-allowed' : 'pointer',
    opacity: disabled ? 0.6 : 1
  });
  const trackClass = createStyle({
    width: '40px',
    height: '22px',
    borderRadius: '999px',
    backgroundColor: checked ? theme.colors.primary : theme.colors.border,
    position: 'relative',
    transition: 'all 0.2s'
  });
  const thumbClass = createStyle({
    width: '18px',
    height: '18px',
    borderRadius: '50%',
    backgroundColor: '#fff',
    position: 'absolute',
    top: '2px',
    left: checked ? '20px' : '2px',
    transition: 'left 0.2s ease'
  });
  const inputClass = createStyle({
    position: 'absolute',
    opacity: 0,
    width: 0,
    height: 0,
    '&:focus-visible + div': {
      boxShadow: `0 0 0 2px ${theme.colors.background}, 0 0 0 4px ${theme.colors.primary}`
    }
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("label", {
    htmlFor: id,
    className: containerClass
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("input", _extends({
    type: "checkbox",
    id: id,
    checked: checked,
    disabled: disabled,
    role: "switch",
    "aria-checked": checked
  }, props, {
    className: inputClass
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: trackClass
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: thumbClass
  })), label && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", null, label));
};

/***/ }),

/***/ "./src/components/Table/Table.tsx":
/*!****************************************!*\
  !*** ./src/components/Table/Table.tsx ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Table: () => (/* binding */ Table),
/* harmony export */   TableBody: () => (/* binding */ TableBody),
/* harmony export */   TableCell: () => (/* binding */ TableCell),
/* harmony export */   TableHead: () => (/* binding */ TableHead),
/* harmony export */   TableHeader: () => (/* binding */ TableHeader),
/* harmony export */   TableRow: () => (/* binding */ TableRow)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }



const Table = ({
  children,
  className,
  ...props
}) => {
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('table');
  const tableClass = createStyle({
    width: '100%',
    borderCollapse: 'collapse',
    textAlign: 'left'
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("table", _extends({
    className: `${tableClass} ${className}`
  }, props), children);
};
const TableHeader = ({
  children,
  className,
  ...props
}) => {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("thead", _extends({
    className: className
  }, props), children);
};
const TableBody = ({
  children,
  className,
  ...props
}) => {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("tbody", _extends({
    className: className
  }, props), children);
};
const TableRow = ({
  children,
  className,
  ...props
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('table-row');
  const rowClass = createStyle({
    transition: 'background-color 0.2s',
    '&:hover': {
      backgroundColor: 'rgba(255, 255, 255, 0.05)'
    }
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("tr", _extends({
    className: `${rowClass} ${className}`
  }, props), children);
};
const TableHead = ({
  children,
  className,
  ...props
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('table-head');
  const headClass = createStyle({
    padding: '12px 16px',
    borderBottom: `1px solid ${theme.colors.border}`,
    color: theme.colors.textSecondary,
    fontWeight: '600',
    fontSize: '12px',
    textTransform: 'uppercase'
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("th", _extends({
    className: `${headClass} ${className}`,
    scope: "col"
  }, props), children);
};
const TableCell = ({
  children,
  className,
  ...props
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('table-cell');
  const cellClass = createStyle({
    padding: '12px 16px',
    borderBottom: `1px solid ${theme.colors.border}`
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("td", _extends({
    className: `${cellClass} ${className}`
  }, props), children);
};

/***/ }),

/***/ "./src/components/Tabs/Tabs.tsx":
/*!**************************************!*\
  !*** ./src/components/Tabs/Tabs.tsx ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Tab: () => (/* binding */ Tab),
/* harmony export */   TabList: () => (/* binding */ TabList),
/* harmony export */   TabPanel: () => (/* binding */ TabPanel),
/* harmony export */   TabPanels: () => (/* binding */ TabPanels),
/* harmony export */   Tabs: () => (/* binding */ Tabs)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");




// --- Context Setup ---

const TabsContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);
const useTabs = () => {
  const context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(TabsContext);
  if (!context) {
    throw new Error('Tab components must be used within a <Tabs> component.');
  }
  return context;
};

// --- Main Tabs Wrapper ---
const Tabs = ({
  defaultValue,
  children,
  className
}) => {
  const [activeTab, setActiveTab] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(defaultValue);
  const baseId = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(`tabs-${Math.random().toString(36).substring(2, 9)}`).current;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(TabsContext.Provider, {
    value: {
      activeTab,
      setActiveTab,
      baseId
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: className
  }, children));
};

// --- TabList: Container for the tab buttons ---
const TabList = ({
  children,
  className
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('tabs-list');
  const tabRefs = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)([]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    tabRefs.current = tabRefs.current.slice(0, react__WEBPACK_IMPORTED_MODULE_0___default().Children.count(children));
  }, [children]);
  const containerClass = createStyle({
    backgroundColor: 'rgba(28, 28, 28, 0.5)',
    borderRadius: '8px',
    padding: '4px',
    display: 'inline-flex',
    gap: '4px',
    border: `1px solid ${theme.colors.border}`,
    marginBottom: theme.spacing.lg,
    '@supports (backdrop-filter: none) or (-webkit-backdrop-filter: none)': {
      backdropFilter: 'blur(12px)'
    }
  });
  const handleKeyDown = event => {
    if (event.key === 'ArrowRight' || event.key === 'ArrowLeft') {
      event.preventDefault();
      const focusedIndex = tabRefs.current.findIndex(tab => tab === document.activeElement);
      if (focusedIndex === -1) return;
      const direction = event.key === 'ArrowRight' ? 1 : -1;
      const nextIndex = (focusedIndex + direction + tabRefs.current.length) % tabRefs.current.length;
      tabRefs.current[nextIndex]?.focus();
    }
  };
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    role: "tablist",
    "aria-orientation": "horizontal",
    className: `${containerClass} ${className}`,
    onKeyDown: handleKeyDown
  }, react__WEBPACK_IMPORTED_MODULE_0___default().Children.map(children, (child, index) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().isValidElement(child) ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().cloneElement(child, {
    ref: el => tabRefs.current[index] = el
  }) : child));
};

// --- Tab: A single tab button ---
const Tab = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().forwardRef(({
  value,
  children,
  className
}, ref) => {
  const {
    activeTab,
    setActiveTab,
    baseId
  } = useTabs();
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('tab');
  const isActive = activeTab === value;
  const tabClass = createStyle({
    padding: '6px 16px',
    borderRadius: '6px',
    background: 'none',
    border: 'none',
    color: theme.colors.textSecondary,
    cursor: 'pointer',
    fontSize: '14px',
    fontWeight: '500',
    transition: 'color 0.3s, background-color 0.3s',
    '&[data-active="true"]': {
      color: theme.colors.text,
      backgroundColor: theme.colors.backgroundSecondary
    },
    '&:hover:not([data-active="true"])': {
      color: theme.colors.text
    },
    '&:focus-visible': {
      outline: `2px solid ${theme.colors.primary}`,
      outlineOffset: '2px'
    }
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("button", {
    ref: ref,
    id: `${baseId}-tab-${value}`,
    onClick: () => setActiveTab(value),
    className: `${tabClass} ${className}`,
    role: "tab",
    "aria-selected": isActive,
    "aria-controls": `${baseId}-panel-${value}`,
    "data-active": isActive,
    tabIndex: isActive ? 0 : -1
  }, children);
});

// --- TabPanels: Wrapper for the content panels ---
const TabPanels = ({
  children,
  className
}) => {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: className
  }, children);
};

// --- TabPanel: A single content panel, conditionally rendered ---
const TabPanel = ({
  value,
  children,
  className
}) => {
  const {
    activeTab,
    baseId
  } = useTabs();
  return activeTab === value ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    id: `${baseId}-panel-${value}`,
    role: "tabpanel",
    "aria-labelledby": `${baseId}-tab-${value}`,
    className: className
  }, children) : null;
};

/***/ }),

/***/ "./src/components/Tag/Tag.tsx":
/*!************************************!*\
  !*** ./src/components/Tag/Tag.tsx ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Tag: () => (/* binding */ CompoundTag)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core */ "./src/core/index.ts");
/* harmony import */ var _core_color_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/color/utils */ "./src/core/color/utils.ts");
/* harmony import */ var _Icon_Icon__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Icon/Icon */ "./src/components/Icon/Icon.tsx");
/* harmony import */ var _icons__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../icons */ "./src/icons/index.ts");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }





const Tag = ({
  children,
  variant = 'solid',
  colorScheme = 'primary',
  size = 'md',
  className = '',
  ...props
}) => {
  const {
    theme
  } = (0,_core__WEBPACK_IMPORTED_MODULE_1__.useTheme)();
  const createStyle = (0,_core__WEBPACK_IMPORTED_MODULE_1__.useStyles)('tag');
  const colors = {
    primary: theme.colors.primary,
    accent: theme.colors.accent,
    success: '#10b981',
    error: '#ef4444'
  };
  const baseColor = colors[colorScheme];
  const variantStyles = {
    solid: {
      backgroundColor: (0,_core_color_utils__WEBPACK_IMPORTED_MODULE_2__.hexToRgba)(baseColor, 0.2),
      color: baseColor,
      border: '1px solid transparent'
    },
    outline: {
      backgroundColor: 'transparent',
      color: baseColor,
      border: `1px solid ${baseColor}`
    }
  };
  const sizeStyles = {
    sm: {
      padding: '0.1rem 0.4rem',
      fontSize: '11px'
    },
    md: {
      padding: '0.125rem 0.625rem',
      fontSize: '12px'
    },
    lg: {
      padding: '0.25rem 0.75rem',
      fontSize: '14px'
    }
  };
  const tagClass = createStyle({
    display: 'inline-flex',
    alignItems: 'center',
    gap: '0.3rem',
    fontWeight: '500',
    borderRadius: '999px',
    lineHeight: '1.25',
    ...variantStyles[variant],
    ...sizeStyles[size]
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", _extends({
    className: `${tagClass} ${className}`
  }, props), children);
};
const TagCloseButton = props => {
  const createStyle = (0,_core__WEBPACK_IMPORTED_MODULE_1__.useStyles)('tag-close-button');
  const buttonClass = createStyle({
    display: 'inline-flex',
    alignItems: 'center',
    justifyContent: 'center',
    borderRadius: '50%',
    background: 'none',
    border: 'none',
    cursor: 'pointer',
    color: 'inherit',
    opacity: 0.6,
    marginLeft: '0.25rem',
    '&:hover': {
      opacity: 1,
      backgroundColor: 'rgba(255, 255, 255, 0.1)'
    }
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("button", _extends({
    className: buttonClass,
    "aria-label": "Remove tag"
  }, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Icon_Icon__WEBPACK_IMPORTED_MODULE_3__.Icon, {
    as: _icons__WEBPACK_IMPORTED_MODULE_4__.TimesIcon,
    size: "0.8em"
  }));
};
const CompoundTag = Tag;
CompoundTag.CloseButton = TagCloseButton;


/***/ }),

/***/ "./src/components/Text/Text.tsx":
/*!**************************************!*\
  !*** ./src/components/Text/Text.tsx ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Text: () => (/* binding */ Text)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");




// FIX: To properly support a polymorphic `as` prop, the component's props are now generic.
// This allows passing attributes for any of the allowed tags (e.g., `p`, `h1`, or `pre`)
// without causing TypeScript errors due to incompatible HTML attribute types.

// FIX: Add 'label' to AllowedTags to permit its use in form components.

const Text = ({
  // FIX: Cast default value to 'C' to resolve type mismatch with generic.
  as: Component = 'p',
  size,
  weight,
  color,
  className = '',
  style,
  ...props
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('text');
  const textClass = createStyle({
    fontSize: size || theme.typography.fontSizes.base,
    fontWeight: String(weight || theme.typography.fontWeights.normal),
    color: color || theme.colors.text,
    lineHeight: theme.typography.lineHeights.normal
  });

  // FIX: Use React.createElement to bypass complex JSX type checking for polymorphic components.
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Component, {
    className: `${textClass} ${className}`,
    style,
    ...props
  });
};

/***/ }),

/***/ "./src/components/TextInput/TextInput.tsx":
/*!************************************************!*\
  !*** ./src/components/TextInput/TextInput.tsx ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TextInput: () => (/* binding */ TextInput)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }



// FIX: Wrapped component in React.forwardRef to allow refs to be passed to the underlying input element.
const TextInput = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().forwardRef(({
  className = '',
  ...props
}, ref) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('text-input');
  const isDark = theme.colors.background.startsWith('#1');
  const baseClasses = createStyle({
    display: 'block',
    backgroundColor: theme.colors.backgroundSecondary,
    border: `1px solid ${theme.colors.border}`,
    borderRadius: '0.375rem',
    padding: '0.5rem 0.75rem',
    color: theme.colors.text,
    transition: 'all 0.2s',
    '@supports (backdrop-filter: none) or (-webkit-backdrop-filter: none)': {
      backdropFilter: 'blur(8px)'
    },
    '&::placeholder': {
      color: theme.colors.textSecondary
    },
    '&:focus': {
      outline: 'none',
      boxShadow: `0 0 0 2px ${isDark ? theme.colors.background : '#fff'}, 0 0 0 4px ${theme.colors.primary}`
    }
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("input", _extends({
    type: "text",
    ref: ref,
    className: `${baseClasses} ${className}`
  }, props));
});
TextInput.displayName = 'TextInput';

/***/ }),

/***/ "./src/components/Textarea/Textarea.tsx":
/*!**********************************************!*\
  !*** ./src/components/Textarea/Textarea.tsx ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Textarea: () => (/* binding */ Textarea)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }



const Textarea = ({
  className = '',
  ...props
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('textarea');
  const isDark = theme.colors.background.startsWith('#1');
  const baseClasses = createStyle({
    display: 'block',
    width: '100%',
    backgroundColor: theme.colors.backgroundSecondary,
    border: `1px solid ${theme.colors.border}`,
    borderRadius: '0.375rem',
    padding: '0.5rem 0.75rem',
    color: theme.colors.text,
    transition: 'all 0.2s',
    '@supports (backdrop-filter: none) or (-webkit-backdrop-filter: none)': {
      backdropFilter: 'blur(8px)'
    },
    '&::placeholder': {
      color: theme.colors.textSecondary
    },
    '&:focus': {
      outline: 'none',
      boxShadow: `0 0 0 2px ${isDark ? theme.colors.background : '#fff'}, 0 0 0 4px ${theme.colors.primary}`
    }
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("textarea", _extends({
    className: `${baseClasses} ${className}`
  }, props));
};

/***/ }),

/***/ "./src/components/ThemeSwitcher/ThemeSwitcher.tsx":
/*!********************************************************!*\
  !*** ./src/components/ThemeSwitcher/ThemeSwitcher.tsx ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ThemeSwitcher: () => (/* binding */ ThemeSwitcher)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! .. */ "./src/components/index.ts");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");
/* harmony import */ var _core_hooks_useInteractions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/hooks/useInteractions */ "./src/core/hooks/useInteractions.ts");

// FIX: `defaultTheme` and `Theme` are not exported from `..`. They should be imported from the core library.



const ThemeSwitcher = () => {
  const {
    theme,
    mode,
    switchTheme,
    setCustomTheme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();

  // Local state for custom color inputs, initialized from the current theme
  const [primary, setPrimary] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(theme.colors.primary);
  const [background, setBackground] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(theme.colors.background);
  const [text, setText] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(theme.colors.text);

  // Debounce the local state to avoid excessive re-renders while typing
  const debouncedPrimary = (0,_core_hooks_useInteractions__WEBPACK_IMPORTED_MODULE_3__.useDebounce)(primary, 300);
  const debouncedBackground = (0,_core_hooks_useInteractions__WEBPACK_IMPORTED_MODULE_3__.useDebounce)(background, 300);
  const debouncedText = (0,_core_hooks_useInteractions__WEBPACK_IMPORTED_MODULE_3__.useDebounce)(text, 300);

  // Effect to update the global custom theme when debounced values change
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (mode === 'custom') {
      const newCustomTheme = {
        ...theme,
        // Inherit all properties from the current theme
        colors: {
          ...theme.colors,
          // Inherit all colors
          primary: debouncedPrimary,
          background: debouncedBackground,
          text: debouncedText
        }
      };
      setCustomTheme(newCustomTheme);
    }
  }, [debouncedPrimary, debouncedBackground, debouncedText, mode]);

  // Effect to sync local input state when the global theme/mode changes externally
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    setPrimary(theme.colors.primary);
    setBackground(theme.colors.background);
    setText(theme.colors.text);
  }, [theme.colors.primary, theme.colors.background, theme.colors.text]);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(___WEBPACK_IMPORTED_MODULE_1__.Card, {
    title: "Theme Settings"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(___WEBPACK_IMPORTED_MODULE_1__.Stack, {
    gap: "1rem"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(___WEBPACK_IMPORTED_MODULE_1__.SegmentedControl, {
    options: [{
      label: 'Dark',
      value: 'dark'
    }, {
      label: 'Light',
      value: 'light'
    }, {
      label: 'Custom',
      value: 'custom'
    }],
    value: mode,
    onChange: newMode => switchTheme(newMode)
  }), mode === 'custom' && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(___WEBPACK_IMPORTED_MODULE_1__.Stack, {
    direction: "row",
    gap: "1rem",
    align: "end",
    style: {
      transition: 'opacity 0.3s',
      opacity: 1
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(___WEBPACK_IMPORTED_MODULE_1__.Input, {
    label: "Primary",
    value: primary,
    onChange: e => setPrimary(e.target.value)
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(___WEBPACK_IMPORTED_MODULE_1__.Input, {
    label: "Background",
    value: background,
    onChange: e => setBackground(e.target.value)
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(___WEBPACK_IMPORTED_MODULE_1__.Input, {
    label: "Text",
    value: text,
    onChange: e => setText(e.target.value)
  }))));
};

/***/ }),

/***/ "./src/components/Timeline/Timeline.tsx":
/*!**********************************************!*\
  !*** ./src/components/Timeline/Timeline.tsx ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Timeline: () => (/* binding */ Timeline),
/* harmony export */   TimelineConnector: () => (/* binding */ TimelineConnector),
/* harmony export */   TimelineContent: () => (/* binding */ TimelineContent),
/* harmony export */   TimelineDot: () => (/* binding */ TimelineDot),
/* harmony export */   TimelineItem: () => (/* binding */ TimelineItem)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");



const Timeline = ({
  children,
  className
}) => {
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('timeline-list');
  const listClass = createStyle({
    listStyle: 'none',
    padding: 0,
    margin: 0
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("ul", {
    className: `${listClass} ${className}`
  }, children);
};
const TimelineItem = ({
  children,
  isLast
}) => {
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('timeline-item');
  const itemClass = createStyle({
    display: 'flex',
    position: 'relative',
    paddingBottom: isLast ? '0' : '2rem'
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("li", {
    className: itemClass
  }, children);
};
const TimelineConnector = () => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('timeline-connector');
  const connectorClass = createStyle({
    width: '2px',
    backgroundColor: theme.colors.border,
    position: 'absolute',
    top: '12px',
    bottom: '-12px',
    left: '11px'
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: connectorClass
  });
};
const TimelineDot = ({
  children,
  className
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('timeline-dot');
  const dotClass = createStyle({
    width: '24px',
    height: '24px',
    borderRadius: '50%',
    backgroundColor: theme.colors.primary,
    border: `3px solid ${theme.colors.background}`,
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    zIndex: 1,
    flexShrink: 0,
    color: '#fff'
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: `${dotClass} ${className}`
  }, children);
};
const TimelineContent = ({
  children,
  className
}) => {
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('timeline-content');
  const contentClass = createStyle({
    marginLeft: '1.5rem'
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: `${contentClass} ${className}`
  }, children);
};

/***/ }),

/***/ "./src/components/Toast/Toast.tsx":
/*!****************************************!*\
  !*** ./src/components/Toast/Toast.tsx ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Toast: () => (/* binding */ Toast)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");
/* harmony import */ var _core_hooks_useAnimation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/hooks/useAnimation */ "./src/core/hooks/useAnimation.ts");
/* harmony import */ var _Text_Text__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Text/Text */ "./src/components/Text/Text.tsx");
/* harmony import */ var _icons__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../icons */ "./src/icons/index.ts");






const icons = {
  info: _icons__WEBPACK_IMPORTED_MODULE_5__.InfoIcon,
  success: _icons__WEBPACK_IMPORTED_MODULE_5__.SuccessIcon,
  warning: _icons__WEBPACK_IMPORTED_MODULE_5__.WarningIcon,
  error: _icons__WEBPACK_IMPORTED_MODULE_5__.ErrorIcon
};
const Toast = ({
  toast,
  onDismiss
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('toast');
  const {
    isRendered,
    isVisible,
    show,
    hide
  } = (0,_core_hooks_useAnimation__WEBPACK_IMPORTED_MODULE_3__.useFade)(false);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    show();
    const timer = setTimeout(() => {
      hide();
    }, toast.duration);
    const removeTimer = setTimeout(() => {
      onDismiss(toast.id);
    }, toast.duration + 300); // Wait for fade out animation

    return () => {
      clearTimeout(timer);
      clearTimeout(removeTimer);
    };
  }, [toast, onDismiss, show, hide]);
  const variantColors = {
    info: theme.colors.primary,
    success: '#10b981',
    warning: theme.colors.accent,
    error: '#ef4444'
  };
  const containerClass = createStyle({
    backgroundColor: theme.colors.backgroundSecondary,
    borderRadius: '8px',
    border: `1px solid ${theme.colors.border}`,
    borderLeft: `5px solid ${variantColors[toast.variant]}`,
    boxShadow: `0 8px 24px rgba(0,0,0,0.5)`,
    padding: '12px 16px',
    display: 'flex',
    alignItems: 'center',
    gap: theme.spacing.md,
    width: '360px',
    maxWidth: '90vw',
    '@supports (backdrop-filter: none) or (-webkit-backdrop-filter: none)': {
      backdropFilter: 'blur(16px)'
    }
  });
  const iconContainerClass = createStyle({
    color: variantColors[toast.variant],
    flexShrink: 0,
    width: '24px',
    height: '24px',
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center'
  });
  if (!isRendered) return null;
  const IconComponent = icons[toast.variant];
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: containerClass,
    style: {
      opacity: isVisible ? 1 : 0,
      transition: 'all 0.3s cubic-bezier(0.21, 1.02, 0.73, 1)',
      transform: isVisible ? 'translateX(0)' : 'translateX(20px)'
    },
    role: "alert",
    "aria-live": "assertive"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: iconContainerClass,
    "aria-hidden": "true"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(IconComponent, null)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Text_Text__WEBPACK_IMPORTED_MODULE_4__.Text, {
    weight: "600"
  }, toast.title), toast.description && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Text_Text__WEBPACK_IMPORTED_MODULE_4__.Text, {
    size: "14px",
    color: theme.colors.textSecondary
  }, toast.description)));
};

/***/ }),

/***/ "./src/components/Toast/ToastProvider.tsx":
/*!************************************************!*\
  !*** ./src/components/Toast/ToastProvider.tsx ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ToastProvider: () => (/* binding */ ToastProvider)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ "./node_modules/react-dom/index.js");
/* harmony import */ var _useToast__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./useToast */ "./src/components/Toast/useToast.ts");
/* harmony import */ var _Toast__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Toast */ "./src/components/Toast/Toast.tsx");
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");





const ToastProvider = ({
  children
}) => {
  const [toasts, setToasts] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_4__.useStyles)('toast-container');
  const addToast = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(options => {
    const id = new Date().getTime().toString();
    const newToast = {
      id,
      duration: 5000,
      variant: 'info',
      ...options
    };
    setToasts(prev => [...prev, newToast]);
  }, []);
  const removeToast = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(id => {
    setToasts(prev => prev.filter(t => t.id !== id));
  }, []);
  const containerClass = createStyle({
    position: 'fixed',
    top: '1rem',
    right: '1rem',
    zIndex: 1000,
    display: 'grid',
    gap: '0.75rem'
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_useToast__WEBPACK_IMPORTED_MODULE_2__.ToastContext.Provider, {
    value: {
      addToast
    }
  }, children, /*#__PURE__*/(0,react_dom__WEBPACK_IMPORTED_MODULE_1__.createPortal)(/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: containerClass
  }, toasts.map(toast => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Toast__WEBPACK_IMPORTED_MODULE_3__.Toast, {
    key: toast.id,
    toast: toast,
    onDismiss: removeToast
  }))), document.body));
};

/***/ }),

/***/ "./src/components/Toast/useToast.ts":
/*!******************************************!*\
  !*** ./src/components/Toast/useToast.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ToastContext: () => (/* binding */ ToastContext),
/* harmony export */   useToast: () => (/* binding */ useToast)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);

const ToastContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);
const useToast = () => {
  const context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(ToastContext);
  if (!context) {
    throw new Error('useToast must be used within a ToastProvider');
  }
  return context;
};

/***/ }),

/***/ "./src/components/ToggleButton/ToggleButton.tsx":
/*!******************************************************!*\
  !*** ./src/components/ToggleButton/ToggleButton.tsx ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ToggleButton: () => (/* binding */ ToggleButton),
/* harmony export */   ToggleButtonGroup: () => (/* binding */ ToggleButtonGroup),
/* harmony export */   useToggleButtonGroup: () => (/* binding */ useToggleButtonGroup)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }



const ToggleButtonGroupContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);
const useToggleButtonGroup = () => {
  const context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(ToggleButtonGroupContext);
  if (!context) {
    throw new Error('ToggleButton must be used within a ToggleButtonGroup.');
  }
  return context;
};
const ToggleButtonGroup = ({
  children,
  value,
  onChange,
  type = 'single',
  className
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('toggle-button-group');
  const containerClass = createStyle({
    display: 'inline-flex',
    borderRadius: '8px',
    overflow: 'hidden',
    border: `1px solid ${theme.colors.border}`
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ToggleButtonGroupContext.Provider, {
    value: {
      value,
      onChange,
      type
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: `${containerClass} ${className}`,
    role: type === 'single' ? 'radiogroup' : 'group'
  }, children));
};
const ToggleButton = ({
  children,
  value,
  ...props
}) => {
  const {
    value: groupValue,
    onChange,
    type
  } = useToggleButtonGroup();
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('toggle-button');
  const isActive = type === 'multiple' ? groupValue?.includes(value) : groupValue === value;
  const buttonClass = createStyle({
    padding: '0.5rem 1rem',
    border: 'none',
    borderRight: `1px solid ${theme.colors.border}`,
    backgroundColor: isActive ? theme.colors.primary : 'transparent',
    color: isActive ? '#fff' : theme.colors.textSecondary,
    cursor: 'pointer',
    transition: 'all 0.2s',
    '&:last-child': {
      borderRight: 'none'
    },
    '&:hover': {
      backgroundColor: isActive ? theme.colors.primary : 'rgba(255, 255, 255, 0.05)'
    }
  });
  const handleClick = () => {
    if (type === 'single') {
      onChange(value);
    } else {
      const currentValue = groupValue || [];
      const newValues = currentValue.includes(value) ? currentValue.filter(v => v !== value) : [...currentValue, value];
      onChange(newValues);
    }
  };
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("button", _extends({
    className: buttonClass,
    onClick: handleClick,
    "aria-pressed": isActive
  }, props), children);
};

/***/ }),

/***/ "./src/components/Tooltip/Tooltip.tsx":
/*!********************************************!*\
  !*** ./src/components/Tooltip/Tooltip.tsx ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Tooltip: () => (/* binding */ Tooltip)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");



const Tooltip = ({
  children,
  style,
  className = ''
}) => {
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_1__.useStyles)('tooltip');
  const tooltipClass = createStyle({
    position: 'fixed',
    padding: `${theme.spacing.sm} ${theme.spacing.md}`,
    backgroundColor: 'rgba(20, 20, 20, 0.8)',
    backdropFilter: 'blur(8px)',
    border: `1px solid ${theme.colors.border}`,
    borderRadius: '6px',
    color: theme.colors.text,
    fontSize: theme.typography.fontSizes.sm,
    boxShadow: '0 4px 12px rgba(0,0,0,0.5)',
    pointerEvents: 'none',
    zIndex: 1000,
    transition: 'opacity 0.2s, transform 0.2s',
    whiteSpace: 'nowrap'
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: `${tooltipClass} ${className}`,
    style: style
  }, children);
};

/***/ }),

/***/ "./src/components/TransferList/TransferList.tsx":
/*!******************************************************!*\
  !*** ./src/components/TransferList/TransferList.tsx ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TransferList: () => (/* binding */ TransferList)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Card_Card__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Card/Card */ "./src/components/Card/Card.tsx");
/* harmony import */ var _List_List__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../List/List */ "./src/components/List/List.tsx");
/* harmony import */ var _Checkbox_Checkbox__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Checkbox/Checkbox */ "./src/components/Checkbox/Checkbox.tsx");
/* harmony import */ var _Button__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Button */ "./src/components/Button.tsx");
/* harmony import */ var _Stack_Stack__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Stack/Stack */ "./src/components/Stack/Stack.tsx");
/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core */ "./src/core/index.ts");







const TransferList = ({
  initialLeft,
  initialRight,
  leftTitle = 'Choices',
  rightTitle = 'Chosen'
}) => {
  const {
    theme
  } = (0,_core__WEBPACK_IMPORTED_MODULE_6__.useTheme)();
  const [left, setLeft] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(initialLeft);
  const [right, setRight] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(initialRight);
  const [checked, setChecked] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(new Set());
  const leftChecked = left.filter(item => checked.has(item.id));
  const rightChecked = right.filter(item => checked.has(item.id));
  const handleToggle = item => {
    const newChecked = new Set(checked);
    if (newChecked.has(item.id)) {
      newChecked.delete(item.id);
    } else {
      newChecked.add(item.id);
    }
    setChecked(newChecked);
  };
  const moveRight = () => {
    setRight(right.concat(leftChecked));
    setLeft(left.filter(item => !checked.has(item.id)));
    const newChecked = new Set(checked);
    leftChecked.forEach(item => newChecked.delete(item.id));
    setChecked(newChecked);
  };
  const moveLeft = () => {
    setLeft(left.concat(rightChecked));
    setRight(right.filter(item => !checked.has(item.id)));
    const newChecked = new Set(checked);
    rightChecked.forEach(item => newChecked.delete(item.id));
    setChecked(newChecked);
  };
  const CustomList = ({
    title,
    items
  }) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Card_Card__WEBPACK_IMPORTED_MODULE_1__.Card, {
    title: title,
    style: {
      height: '300px',
      display: 'flex',
      flexDirection: 'column'
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_List_List__WEBPACK_IMPORTED_MODULE_2__.List, {
    style: {
      flex: 1,
      overflowY: 'auto',
      backgroundColor: 'transparent',
      border: 'none'
    }
  }, items.map(item => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_List_List__WEBPACK_IMPORTED_MODULE_2__.ListItem, {
    key: item.id,
    onClick: () => handleToggle(item),
    style: {
      cursor: 'pointer',
      padding: `${theme.spacing.sm} 0`
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Checkbox_Checkbox__WEBPACK_IMPORTED_MODULE_3__.Checkbox, {
    checked: checked.has(item.id),
    label: item.label,
    readOnly: true
  })))));
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Stack_Stack__WEBPACK_IMPORTED_MODULE_5__.Stack, {
    direction: "row",
    align: "center",
    gap: "1rem"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    style: {
      flex: 1
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(CustomList, {
    title: leftTitle,
    items: left
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Stack_Stack__WEBPACK_IMPORTED_MODULE_5__.Stack, {
    direction: "column",
    gap: "0.5rem"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Button__WEBPACK_IMPORTED_MODULE_4__.Button, {
    variant: "secondary",
    onClick: moveRight,
    disabled: leftChecked.length === 0
  }, ">"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Button__WEBPACK_IMPORTED_MODULE_4__.Button, {
    variant: "secondary",
    onClick: moveLeft,
    disabled: rightChecked.length === 0
  }, "<")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    style: {
      flex: 1
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(CustomList, {
    title: rightTitle,
    items: right
  })));
};

/***/ }),

/***/ "./src/components/TreeView/TreeView.tsx":
/*!**********************************************!*\
  !*** ./src/components/TreeView/TreeView.tsx ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TreeView: () => (/* binding */ TreeView)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core */ "./src/core/index.ts");
/* harmony import */ var _Icon_Icon__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Icon/Icon */ "./src/components/Icon/Icon.tsx");
/* harmony import */ var _icons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../icons */ "./src/icons/index.ts");
/* harmony import */ var _TreeViewContext__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./TreeViewContext */ "./src/components/TreeView/TreeViewContext.ts");
/* harmony import */ var _useTreeItem__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./useTreeItem */ "./src/components/TreeView/useTreeItem.ts");




// FIX: `useTreeViewContext` was not imported, causing a reference error.


// --- Default Item Component ---

const DefaultTreeItem = props => {
  const {
    node,
    isExpanded,
    isExpandable,
    isSelected,
    level,
    getTreeItemProps,
    getToggleProps
  } = props;
  const {
    expandIcon,
    collapseIcon,
    defaultEndIcon
  } = (0,_TreeViewContext__WEBPACK_IMPORTED_MODULE_4__.useTreeViewContext)();
  const {
    theme
  } = (0,_core__WEBPACK_IMPORTED_MODULE_1__.useTheme)();
  const createStyle = (0,_core__WEBPACK_IMPORTED_MODULE_1__.useStyles)('tree-item-default');
  const itemClass = createStyle({
    display: 'flex',
    alignItems: 'center',
    padding: '4px 8px',
    paddingLeft: `calc(${level} * 1.5rem)`,
    borderRadius: '4px',
    cursor: 'pointer',
    transition: 'background-color 0.2s, color 0.2s',
    color: isSelected ? theme.colors.text : theme.colors.textSecondary,
    backgroundColor: isSelected ? 'rgba(59, 130, 246, 0.2)' : 'transparent',
    '&:hover': {
      backgroundColor: isSelected ? 'rgba(59, 130, 246, 0.3)' : 'rgba(255, 255, 255, 0.05)',
      color: theme.colors.text
    },
    '&:focus': {
      outline: 'none',
      boxShadow: `0 0 0 2px ${theme.colors.background}, 0 0 0 4px ${theme.colors.primary}`
    }
  });
  const iconContainerClass = createStyle({
    width: '16px',
    height: '16px',
    marginRight: '0.5rem',
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    flexShrink: 0
  });
  const renderIcon = () => {
    if (!isExpandable) {
      return defaultEndIcon ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
        className: iconContainerClass
      }, defaultEndIcon) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", {
        style: {
          width: '16px',
          marginRight: '0.5rem'
        }
      });
    }
    if (expandIcon || collapseIcon) {
      return isExpanded ? collapseIcon : expandIcon;
    }
    const chevronClass = createStyle({
      transition: 'transform 0.2s',
      transform: isExpanded ? 'rotate(90deg)' : 'rotate(0deg)'
    });
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Icon_Icon__WEBPACK_IMPORTED_MODULE_2__.Icon, {
      as: _icons__WEBPACK_IMPORTED_MODULE_3__.ChevronRightIcon,
      size: 16,
      className: chevronClass
    });
  };
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", getTreeItemProps({
    className: itemClass
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", getToggleProps({
    className: iconContainerClass
  }), renderIcon()), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", null, node.label));
};

// --- Recursive Renderer ---

const NodeRenderer = ({
  nodeId,
  level
}) => {
  const {
    nodesById,
    item: CustomItemComponent,
    groupTransition: TransitionComponent
  } = (0,_TreeViewContext__WEBPACK_IMPORTED_MODULE_4__.useTreeViewContext)();
  const node = nodesById.get(nodeId);
  if (!node) return null;
  const itemProps = (0,_useTreeItem__WEBPACK_IMPORTED_MODULE_5__.useTreeItem)(node, level);
  const Item = CustomItemComponent || DefaultTreeItem;
  const Transition = TransitionComponent || (react__WEBPACK_IMPORTED_MODULE_0___default().Fragment);
  const TransitionWrapper = TransitionComponent ? Transition : 'div';
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Item, itemProps), itemProps.isExpandable && node.children &&
  /*#__PURE__*/
  // @ts-ignore
  react__WEBPACK_IMPORTED_MODULE_0___default().createElement(TransitionWrapper, TransitionComponent && {
    in: itemProps.isExpanded
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    role: "group"
  }, itemProps.isExpanded && node.children.map(child => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(NodeRenderer, {
    key: child.id,
    nodeId: child.id,
    level: level + 1
  })))));
};

// --- Main TreeView Component ---

const flattenTree = (nodes, parent = null, map, parents) => {
  nodes.forEach(node => {
    map.set(node.id, node);
    parents.set(node.id, parent);
    if (node.children) {
      flattenTree(node.children, node.id, map, parents);
    }
  });
};
const TreeView = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(({
  data,
  selectionMode = 'single',
  defaultSelectedIds = [],
  defaultExpandedIds = [],
  onSelectionChange,
  onExpansionChange,
  item,
  ...rest // icon and transition props
}, ref) => {
  const [expandedIds, setExpandedIds] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(new Set(defaultExpandedIds));
  const [selectedIds, setSelectedIds] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(new Set(defaultSelectedIds));
  const itemRefs = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(new Map());
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useImperativeHandle)(ref, () => ({
    focusItem: id => {
      const itemEl = itemRefs.current.get(id);
      itemEl?.focus({
        preventScroll: false
      });
    }
  }));
  const {
    nodesById,
    nodeParents
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {
    const map = new Map();
    const parents = new Map();
    flattenTree(data, null, map, parents);
    return {
      nodesById: map,
      nodeParents: parents
    };
  }, [data]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    onExpansionChange?.(Array.from(expandedIds));
  }, [expandedIds, onExpansionChange]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    onSelectionChange?.(Array.from(selectedIds));
  }, [selectedIds, onSelectionChange]);
  const toggleExpand = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(id => {
    setExpandedIds(prev => {
      const newSet = new Set(prev);
      if (newSet.has(id)) {
        newSet.delete(id);
      } else {
        newSet.add(id);
      }
      return newSet;
    });
  }, []);
  const toggleSelect = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((event, id) => {
    const isMultiSelect = selectionMode === 'multiple' && (event.ctrlKey || event.metaKey);
    setSelectedIds(prev => {
      // FIX: Explicitly type `new Set()` as `new Set<string>()` to prevent TypeScript from inferring `Set<unknown>`, which caused a type mismatch.
      const newSet = isMultiSelect ? new Set(prev) : new Set();
      if (newSet.has(id) && isMultiSelect) {
        newSet.delete(id);
      } else {
        newSet.add(id);
      }
      return newSet;
    });
  }, [selectionMode]);
  const contextValue = {
    expandedIds,
    selectedIds,
    nodesById,
    nodeParents,
    toggleExpand,
    toggleSelect,
    itemRefs,
    item,
    ...rest
  };
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_TreeViewContext__WEBPACK_IMPORTED_MODULE_4__.TreeViewContext.Provider, {
    value: contextValue
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    role: "tree"
  }, data.map(node => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(NodeRenderer, {
    key: node.id,
    nodeId: node.id,
    level: 0
  }))));
});
TreeView.displayName = 'TreeView';

/***/ }),

/***/ "./src/components/TreeView/TreeViewContext.ts":
/*!****************************************************!*\
  !*** ./src/components/TreeView/TreeViewContext.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TreeViewContext: () => (/* binding */ TreeViewContext),
/* harmony export */   useTreeViewContext: () => (/* binding */ useTreeViewContext)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);

const TreeViewContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);
const useTreeViewContext = () => {
  const context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(TreeViewContext);
  if (!context) {
    throw new Error('useTreeViewContext must be used within a TreeView provider.');
  }
  return context;
};

// Props that will be passed to custom item components

/***/ }),

/***/ "./src/components/TreeView/useTreeItem.ts":
/*!************************************************!*\
  !*** ./src/components/TreeView/useTreeItem.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   useTreeItem: () => (/* binding */ useTreeItem)
/* harmony export */ });
/* harmony import */ var _TreeViewContext__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./TreeViewContext */ "./src/components/TreeView/TreeViewContext.ts");

const useTreeItem = (node, level) => {
  const {
    expandedIds,
    selectedIds,
    toggleExpand,
    toggleSelect,
    itemRefs
  } = (0,_TreeViewContext__WEBPACK_IMPORTED_MODULE_0__.useTreeViewContext)();
  const isExpanded = expandedIds.has(node.id);
  const isSelected = selectedIds.has(node.id);
  const isExpandable = !!(node.children && node.children.length > 0);
  const getTreeItemProps = (props = {}) => ({
    ...props,
    ref: el => {
      if (itemRefs) {
        itemRefs.current.set(node.id, el);
      }
    },
    role: 'treeitem',
    'aria-expanded': isExpandable ? isExpanded : undefined,
    'aria-selected': isSelected,
    tabIndex: -1,
    onClick: e => {
      // A click on the item toggles selection
      toggleSelect(e, node.id);

      // If the click is not on the icon, also toggle expansion
      const target = e.target;
      if (!target.closest('[data-zwtv-toggle]')) {
        if (isExpandable) {
          toggleExpand(node.id);
        }
      }
      props.onClick?.(e);
    }
  });
  const getToggleProps = (props = {}) => ({
    ...props,
    'data-zwtv-toggle': true,
    // Custom attribute to identify the toggle area
    onClick: e => {
      e.stopPropagation(); // prevent selection and double-toggle
      if (isExpandable) {
        toggleExpand(node.id);
      }
      props.onClick?.(e);
    }
  });
  return {
    node,
    isExpanded,
    isExpandable,
    isSelected,
    level,
    getTreeItemProps,
    getToggleProps
  };
};

/***/ }),

/***/ "./src/components/Video/Video.tsx":
/*!****************************************!*\
  !*** ./src/components/Video/Video.tsx ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Video: () => (/* binding */ Video)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _VideoContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./VideoContext */ "./src/components/Video/VideoContext.tsx");
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");




const Video = ({
  children,
  className
}) => {
  const videoRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const [isPlaying, setIsPlaying] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [currentTime, setCurrentTime] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);
  const [duration, setDuration] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);
  const [volume, setVolume] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(1);
  const [isMuted, setIsMuted] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_3__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_2__.useStyles)('video-container');
  const containerClass = createStyle({
    backgroundColor: theme.colors.backgroundSecondary,
    borderRadius: '8px',
    border: `1px solid ${theme.colors.border}`,
    '@supports (backdrop-filter: none) or (-webkit-backdrop-filter: none)': {
      backdropFilter: 'blur(12px)'
    }
  });
  const togglePlay = () => {
    const video = videoRef.current;
    if (video) {
      video.paused ? video.play() : video.pause();
    }
  };
  const seek = time => {
    if (videoRef.current) {
      videoRef.current.currentTime = time;
    }
  };
  const handleSetVolume = newVolume => {
    if (videoRef.current) {
      const clampedVolume = Math.max(0, Math.min(1, newVolume));
      videoRef.current.muted = clampedVolume === 0;
      videoRef.current.volume = clampedVolume;
    }
  };
  const toggleMute = () => {
    if (videoRef.current) {
      videoRef.current.muted = !videoRef.current.muted;
    }
  };
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    const video = videoRef.current;
    if (!video) return;
    const handlePlay = () => setIsPlaying(true);
    const handlePause = () => setIsPlaying(false);
    const handleTimeUpdate = () => setCurrentTime(video.currentTime);
    const handleLoadedMetadata = () => {
      setDuration(video.duration);
      setVolume(video.volume);
      setIsMuted(video.muted);
    };
    const handleVolumeChange = () => {
      setVolume(video.volume);
      setIsMuted(video.muted);
    };
    video.addEventListener('play', handlePlay);
    video.addEventListener('pause', handlePause);
    video.addEventListener('timeupdate', handleTimeUpdate);
    video.addEventListener('loadedmetadata', handleLoadedMetadata);
    video.addEventListener('volumechange', handleVolumeChange);
    return () => {
      video.removeEventListener('play', handlePlay);
      video.removeEventListener('pause', handlePause);
      video.removeEventListener('timeupdate', handleTimeUpdate);
      video.removeEventListener('loadedmetadata', handleLoadedMetadata);
      video.removeEventListener('volumechange', handleVolumeChange);
    };
  }, []);
  const contextValue = {
    videoRef,
    isPlaying,
    currentTime,
    duration,
    togglePlay,
    volume,
    isMuted,
    seek,
    setVolume: handleSetVolume,
    toggleMute
  };
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_VideoContext__WEBPACK_IMPORTED_MODULE_1__.VideoContext.Provider, {
    value: contextValue
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: `${containerClass} ${className}`
  }, children));
};

/***/ }),

/***/ "./src/components/Video/VideoContext.tsx":
/*!***********************************************!*\
  !*** ./src/components/Video/VideoContext.tsx ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   VideoContext: () => (/* binding */ VideoContext),
/* harmony export */   useVideo: () => (/* binding */ useVideo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);

const VideoContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);
const useVideo = () => {
  const context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(VideoContext);
  if (!context) {
    throw new Error('useVideo must be used within a Video provider');
  }
  return context;
};

/***/ }),

/***/ "./src/components/Video/VideoControls.tsx":
/*!************************************************!*\
  !*** ./src/components/Video/VideoControls.tsx ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   VideoControls: () => (/* binding */ VideoControls)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _VideoContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./VideoContext */ "./src/components/Video/VideoContext.tsx");
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
/* harmony import */ var _core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");
/* harmony import */ var _Stack_Stack__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Stack/Stack */ "./src/components/Stack/Stack.tsx");
/* harmony import */ var _Button__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Button */ "./src/components/Button.tsx");
/* harmony import */ var _Slider_Slider__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../Slider/Slider */ "./src/components/Slider/Slider.tsx");
/* harmony import */ var _VideoTime__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./VideoTime */ "./src/components/Video/VideoTime.tsx");
/* harmony import */ var _VideoDuration__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./VideoDuration */ "./src/components/Video/VideoDuration.tsx");
/* harmony import */ var _Text_Text__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../Text/Text */ "./src/components/Text/Text.tsx");
/* harmony import */ var _Popover_Popover__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../Popover/Popover */ "./src/components/Popover/Popover.tsx");
/* harmony import */ var _Icon_Icon__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../Icon/Icon */ "./src/components/Icon/Icon.tsx");
/* harmony import */ var _icons__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../icons */ "./src/icons/index.ts");













const VideoControls = ({
  className
}) => {
  const {
    isPlaying,
    togglePlay,
    currentTime,
    duration,
    seek,
    volume,
    setVolume,
    isMuted,
    toggleMute
  } = (0,_VideoContext__WEBPACK_IMPORTED_MODULE_1__.useVideo)();
  const {
    theme
  } = (0,_core_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_3__.useTheme)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_2__.useStyles)('video-controls');
  const containerClass = createStyle({
    padding: `${theme.spacing.sm} ${theme.spacing.md}`,
    display: 'grid',
    gridTemplateColumns: 'auto 1fr auto auto',
    alignItems: 'center',
    gap: theme.spacing.md
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: `${containerClass} ${className}`
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Button__WEBPACK_IMPORTED_MODULE_5__.Button, {
    variant: "secondary",
    onClick: togglePlay,
    style: {
      padding: '0.5rem'
    },
    "aria-label": isPlaying ? 'Pause' : 'Play'
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Icon_Icon__WEBPACK_IMPORTED_MODULE_11__.Icon, {
    as: isPlaying ? _icons__WEBPACK_IMPORTED_MODULE_12__.PauseIcon : _icons__WEBPACK_IMPORTED_MODULE_12__.PlayIcon,
    size: 20
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Stack_Stack__WEBPACK_IMPORTED_MODULE_4__.Stack, {
    direction: "row",
    align: "center",
    gap: theme.spacing.sm
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Slider_Slider__WEBPACK_IMPORTED_MODULE_6__.Slider, {
    min: 0,
    max: duration || 100,
    value: currentTime,
    onChange: seek
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Stack_Stack__WEBPACK_IMPORTED_MODULE_4__.Stack, {
    direction: "row",
    gap: "0.25rem",
    align: "center"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_VideoTime__WEBPACK_IMPORTED_MODULE_7__.VideoTime, null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Text_Text__WEBPACK_IMPORTED_MODULE_9__.Text, {
    as: "span",
    color: theme.colors.textSecondary
  }, "/"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_VideoDuration__WEBPACK_IMPORTED_MODULE_8__.VideoDuration, null)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Popover_Popover__WEBPACK_IMPORTED_MODULE_10__.Popover, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Popover_Popover__WEBPACK_IMPORTED_MODULE_10__.PopoverTrigger, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Button__WEBPACK_IMPORTED_MODULE_5__.Button, {
    variant: "secondary",
    onClick: toggleMute,
    style: {
      padding: '0.5rem'
    },
    "aria-label": isMuted ? 'Unmute' : 'Mute'
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Icon_Icon__WEBPACK_IMPORTED_MODULE_11__.Icon, {
    as: isMuted || volume === 0 ? _icons__WEBPACK_IMPORTED_MODULE_12__.VolumeMuteIcon : _icons__WEBPACK_IMPORTED_MODULE_12__.VolumeUpIcon,
    size: 20
  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Popover_Popover__WEBPACK_IMPORTED_MODULE_10__.PopoverContent, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    style: {
      padding: '0.5rem',
      width: '120px'
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Slider_Slider__WEBPACK_IMPORTED_MODULE_6__.Slider, {
    min: 0,
    max: 100,
    value: isMuted ? 0 : volume * 100,
    onChange: v => setVolume(v / 100)
  })))));
};

/***/ }),

/***/ "./src/components/Video/VideoDuration.tsx":
/*!************************************************!*\
  !*** ./src/components/Video/VideoDuration.tsx ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   VideoDuration: () => (/* binding */ VideoDuration)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _VideoContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./VideoContext */ "./src/components/Video/VideoContext.tsx");
/* harmony import */ var _Text_Text__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Text/Text */ "./src/components/Text/Text.tsx");



const formatTime = time => {
  if (isNaN(time) || time === 0) return '0:00';
  const minutes = Math.floor(time / 60);
  const seconds = Math.floor(time % 60).toString().padStart(2, '0');
  return `${minutes}:${seconds}`;
};
const VideoDuration = ({
  className
}) => {
  const {
    duration
  } = (0,_VideoContext__WEBPACK_IMPORTED_MODULE_1__.useVideo)();
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Text_Text__WEBPACK_IMPORTED_MODULE_2__.Text, {
    as: "span",
    className: className
  }, formatTime(duration));
};

/***/ }),

/***/ "./src/components/Video/VideoFile.tsx":
/*!********************************************!*\
  !*** ./src/components/Video/VideoFile.tsx ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   VideoFile: () => (/* binding */ VideoFile)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);

const VideoFile = props => {
  // This component renders a <source> tag and is intended to be used
  // as a child of the <VideoView> component.
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("source", props);
};

/***/ }),

/***/ "./src/components/Video/VideoMetadata.tsx":
/*!************************************************!*\
  !*** ./src/components/Video/VideoMetadata.tsx ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   VideoMetadata: () => (/* binding */ VideoMetadata)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _VideoContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./VideoContext */ "./src/components/Video/VideoContext.tsx");
/* harmony import */ var _Text_Text__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Text/Text */ "./src/components/Text/Text.tsx");




// FIX: Add style prop to allow for custom styling.
const VideoMetadata = ({
  className,
  style
}) => {
  const {
    duration,
    videoRef
  } = (0,_VideoContext__WEBPACK_IMPORTED_MODULE_1__.useVideo)();
  const videoElement = videoRef.current;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: className,
    style: style
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Text_Text__WEBPACK_IMPORTED_MODULE_2__.Text, {
    size: "12px",
    color: "textSecondary"
  }, videoElement ? `Dimensions: ${videoElement.videoWidth}x${videoElement.videoHeight}` : 'Loading...', ' | ', "Duration: ", duration.toFixed(2), "s"));
};

/***/ }),

/***/ "./src/components/Video/VideoTime.tsx":
/*!********************************************!*\
  !*** ./src/components/Video/VideoTime.tsx ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   VideoTime: () => (/* binding */ VideoTime)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _VideoContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./VideoContext */ "./src/components/Video/VideoContext.tsx");
/* harmony import */ var _Text_Text__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Text/Text */ "./src/components/Text/Text.tsx");



const formatTime = time => {
  if (isNaN(time)) return '0:00';
  const minutes = Math.floor(time / 60);
  const seconds = Math.floor(time % 60).toString().padStart(2, '0');
  return `${minutes}:${seconds}`;
};
const VideoTime = ({
  className
}) => {
  const {
    currentTime
  } = (0,_VideoContext__WEBPACK_IMPORTED_MODULE_1__.useVideo)();
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Text_Text__WEBPACK_IMPORTED_MODULE_2__.Text, {
    as: "span",
    className: className
  }, formatTime(currentTime));
};

/***/ }),

/***/ "./src/components/Video/VideoView.tsx":
/*!********************************************!*\
  !*** ./src/components/Video/VideoView.tsx ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   VideoView: () => (/* binding */ VideoView)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _VideoContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./VideoContext */ "./src/components/Video/VideoContext.tsx");
/* harmony import */ var _core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/hooks/useStyles */ "./src/core/hooks/useStyles.ts");
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }



const VideoView = ({
  className = '',
  children,
  ...props
}) => {
  const {
    videoRef
  } = (0,_VideoContext__WEBPACK_IMPORTED_MODULE_1__.useVideo)();
  const createStyle = (0,_core_hooks_useStyles__WEBPACK_IMPORTED_MODULE_2__.useStyles)('video-view');
  const videoClass = createStyle({
    width: '100%',
    borderRadius: '8px',
    display: 'block'
  });
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("video", _extends({
    ref: videoRef,
    className: `${videoClass} ${className}`
  }, props), children, "Your browser does not support the video tag.");
};

/***/ }),

/***/ "./src/components/XNodeTree/XNodeTree.tsx":
/*!************************************************!*\
  !*** ./src/components/XNodeTree/XNodeTree.tsx ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   XNodeTree: () => (/* binding */ XNodeTree)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core */ "./src/core/index.ts");
/* harmony import */ var _Icon_Icon__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Icon/Icon */ "./src/components/Icon/Icon.tsx");
/* harmony import */ var _icons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../icons */ "./src/icons/index.ts");
/* harmony import */ var _icons_LockOpenIcon__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../icons/LockOpenIcon */ "./src/icons/LockOpenIcon.tsx");





const XNodeTree = ({
  data,
  initialExpandedIds = [],
  initialLockedIds = []
}) => {
  const {
    theme
  } = (0,_core__WEBPACK_IMPORTED_MODULE_1__.useTheme)();
  const createStyle = (0,_core__WEBPACK_IMPORTED_MODULE_1__.useStyles)('x-node-tree');
  const [expandedIds, setExpandedIds] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(new Set(initialExpandedIds));
  const [lockedIds, setLockedIds] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(new Set(initialLockedIds));
  const toggleExpand = id => {
    setExpandedIds(prev => {
      const newSet = new Set(prev);
      if (newSet.has(id)) {
        newSet.delete(id);
      } else {
        newSet.add(id);
      }
      return newSet;
    });
  };
  const toggleLock = id => {
    setLockedIds(prev => {
      const newSet = new Set(prev);
      if (newSet.has(id)) {
        newSet.delete(id);
      } else {
        newSet.add(id);
      }
      return newSet;
    });
  };
  const treeClass = createStyle({
    color: theme.colors.text,
    fontSize: theme.typography.fontSizes.sm,
    userSelect: 'none'
  });
  const nodeItemClass = createStyle({
    display: 'flex',
    alignItems: 'center',
    padding: '4px 8px',
    borderRadius: '4px',
    cursor: 'pointer',
    transition: 'background-color 0.2s',
    '&:hover': {
      backgroundColor: 'rgba(255, 255, 255, 0.05)'
    }
  });
  const iconClass = isExpanded => createStyle({
    transition: 'transform 0.2s',
    transform: isExpanded ? 'rotate(90deg)' : 'rotate(0deg)'
  });
  const lockIconClass = createStyle({
    marginLeft: 'auto',
    color: theme.colors.textSecondary,
    opacity: 0.5,
    '&:hover': {
      color: theme.colors.text,
      opacity: 1
    }
  });
  const renderNode = (node, level) => {
    const isExpanded = expandedIds.has(node.id);
    const isLocked = lockedIds.has(node.id);
    const hasChildren = node.children && node.children.length > 0;
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
      key: node.id
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
      className: nodeItemClass,
      style: {
        paddingLeft: `calc(${level} * 1.25rem + 0.5rem)`
      },
      onClick: () => hasChildren && toggleExpand(node.id)
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Icon_Icon__WEBPACK_IMPORTED_MODULE_2__.Icon, {
      as: _icons__WEBPACK_IMPORTED_MODULE_3__.ChevronRightIcon,
      size: 16,
      className: iconClass(isExpanded),
      style: {
        visibility: hasChildren ? 'visible' : 'hidden',
        marginRight: '0.25rem',
        flexShrink: 0
      }
    }), node.icon && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Icon_Icon__WEBPACK_IMPORTED_MODULE_2__.Icon, {
      as: node.icon,
      size: 16,
      style: {
        marginRight: '0.5rem',
        color: theme.colors.textSecondary,
        flexShrink: 0
      }
    }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", {
      style: {
        whiteSpace: 'nowrap',
        overflow: 'hidden',
        textOverflow: 'ellipsis'
      }
    }, node.label), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Icon_Icon__WEBPACK_IMPORTED_MODULE_2__.Icon, {
      as: isLocked ? _icons__WEBPACK_IMPORTED_MODULE_3__.LockIcon : _icons_LockOpenIcon__WEBPACK_IMPORTED_MODULE_4__.LockOpenIcon,
      size: 14,
      className: lockIconClass,
      onClick: e => {
        e.stopPropagation();
        toggleLock(node.id);
      }
    })), hasChildren && isExpanded && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", null, node.children.map(child => renderNode(child, level + 1))));
  };
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
    className: treeClass
  }, data.map(node => renderNode(node, 0)));
};

/***/ }),

/***/ "./src/components/XmlRenderer/XmlRenderer.tsx":
/*!****************************************************!*\
  !*** ./src/components/XmlRenderer/XmlRenderer.tsx ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   XmlRenderer: () => (/* binding */ XmlRenderer),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Layer_Layer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Layer/Layer */ "./src/components/Layer/Layer.tsx");
/* harmony import */ var _Stack_Stack__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Stack/Stack */ "./src/components/Stack/Stack.tsx");
/* harmony import */ var _icons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../icons */ "./src/icons/index.ts");




const defaultMap = {
  layer: _Layer_Layer__WEBPACK_IMPORTED_MODULE_1__.Layer,
  layout: _Stack_Stack__WEBPACK_IMPORTED_MODULE_2__.Stack,
  div: 'div',
  span: 'span',
  p: 'p',
  h1: 'h1',
  h2: 'h2',
  h3: 'h3',
  h4: 'h4',
  h5: 'h5',
  h6: 'h6',
  a: 'a',
  img: 'img',
  ul: 'ul',
  ol: 'ol',
  li: 'li',
  button: 'button',
  input: 'input',
  textarea: 'textarea',
  select: 'select',
  option: 'option',
  form: 'form',
  label: 'label',
  fieldset: 'fieldset',
  legend: 'legend',
  table: 'table',
  thead: 'thead',
  tbody: 'tbody',
  tfoot: 'tfoot',
  tr: 'tr',
  th: 'th',
  td: 'td',
  iframe: 'iframe',
  video: 'video',
  audio: 'audio',
  canvas: 'canvas',
  svg: 'svg',
  path: 'path',
  circle: 'circle',
  rect: 'rect',
  polyline: 'polyline',
  polygon: 'polygon',
  line: 'line',
  text: 'text',
  tspan: 'tspan',
  g: 'g',
  defs: 'defs',
  use: 'use',
  symbol: 'symbol',
  marker: 'marker',
  pattern: 'pattern',
  clipPath: 'clipPath',
  mask: 'mask',
  linearGradient: 'linearGradient',
  radialGradient: 'radialGradient',
  stop: 'stop',
  foreignObject: 'foreignObject'
};
function parseAttributes(node) {
  const attrs = {};
  for (let i = 0; i < node.attributes.length; i++) {
    const a = node.attributes[i];
    if (a.name === 'style') {
      try {
        // Attempt to parse the style attribute as JSON
        attrs.style = JSON.parse(a.value);
      } catch (e) {
        console.error("Failed to parse style attribute JSON:", a.value, e);
        // Fallback to treating it as a string if parsing fails
        attrs.style = a.value;
      }
    } else {
      if (a.value === 'true') {
        attrs[a.name] = true;
      } else if (a.value === 'false') {
        attrs[a.name] = false;
      } else {
        attrs[a.name] = a.value;
      }
    }
  }
  return attrs;
}
function nodeToElement(node, map) {
  if (node.nodeType === Node.TEXT_NODE) {
    return node.textContent;
  }
  if (node.nodeType !== Node.ELEMENT_NODE) return null;
  const el = node;
  const tag = el.tagName;
  const Comp = map[tag] || map[tag.toLowerCase()] || 'div';
  const props = parseAttributes(el);
  const children = Array.from(el.childNodes).map((childNode, index) => {
    const childElement = nodeToElement(childNode, map);
    if (/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().isValidElement(childElement)) {
      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().cloneElement(childElement, {
        key: index
      });
    }
    return childElement;
  }).filter(child => child != null);
  if (children.length > 0) {
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Comp, props, ...children);
  }
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Comp, props);
}
const XmlRenderer = ({
  xml,
  components: customComponents = {}
}) => {
  const map = {
    ...defaultMap,
    ..._icons__WEBPACK_IMPORTED_MODULE_3__,
    ...customComponents
  };
  if (typeof window === 'undefined' || typeof window.DOMParser === 'undefined') {
    // server-side or no DOMParser: very simple fallback
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", null, xml);
  }
  try {
    const parser = new DOMParser();
    const doc = parser.parseFromString(`<root>${xml}</root>`, 'text/xml');

    // Check for parsing errors
    const parseError = doc.querySelector('parsererror');
    if (parseError) {
      console.error('XML parsing error:', parseError.textContent);
      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
        style: {
          color: 'red',
          fontFamily: 'monospace'
        }
      }, "XML Parsing Error. Check console for details.");
    }
    const result = Array.from(doc.documentElement.childNodes).map((n, index) => {
      const el = nodeToElement(n, map);
      if (/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().isValidElement(el)) {
        return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().cloneElement(el, {
          key: index
        });
      }
      return el;
    }).filter(el => el != null);
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, result);
  } catch (err) {
    console.error('Error rendering XML:', err);
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
      style: {
        color: 'red',
        fontFamily: 'monospace'
      }
    }, "Error rendering component. Check console.");
  }
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (XmlRenderer);

/***/ }),

/***/ "./src/components/index.ts":
/*!*********************************!*\
  !*** ./src/components/index.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Accordion: () => (/* reexport safe */ _Accordion_Accordion__WEBPACK_IMPORTED_MODULE_0__.Accordion),
/* harmony export */   AccordionContent: () => (/* reexport safe */ _Accordion_Accordion__WEBPACK_IMPORTED_MODULE_0__.AccordionContent),
/* harmony export */   AccordionItem: () => (/* reexport safe */ _Accordion_Accordion__WEBPACK_IMPORTED_MODULE_0__.AccordionItem),
/* harmony export */   AccordionTrigger: () => (/* reexport safe */ _Accordion_Accordion__WEBPACK_IMPORTED_MODULE_0__.AccordionTrigger),
/* harmony export */   Alert: () => (/* reexport safe */ _Alert_Alert__WEBPACK_IMPORTED_MODULE_1__.Alert),
/* harmony export */   AnimatedBlock: () => (/* reexport safe */ _AnimatedBlock_AnimatedBlock__WEBPACK_IMPORTED_MODULE_2__.AnimatedBlock),
/* harmony export */   AspectRatio: () => (/* reexport safe */ _AspectRatio_AspectRatio__WEBPACK_IMPORTED_MODULE_3__.AspectRatio),
/* harmony export */   Audio: () => (/* reexport safe */ _Audio_Audio__WEBPACK_IMPORTED_MODULE_4__.Audio),
/* harmony export */   AudioContext: () => (/* reexport safe */ _Audio_AudioContext__WEBPACK_IMPORTED_MODULE_5__.AudioContext),
/* harmony export */   AudioControls: () => (/* reexport safe */ _Audio_AudioControls__WEBPACK_IMPORTED_MODULE_6__.AudioControls),
/* harmony export */   AudioDuration: () => (/* reexport safe */ _Audio_AudioDuration__WEBPACK_IMPORTED_MODULE_7__.AudioDuration),
/* harmony export */   AudioFile: () => (/* reexport safe */ _Audio_AudioFile__WEBPACK_IMPORTED_MODULE_8__.AudioFile),
/* harmony export */   AudioFilters: () => (/* reexport safe */ _Audio_AudioFilters__WEBPACK_IMPORTED_MODULE_9__.AudioFilters),
/* harmony export */   AudioTime: () => (/* reexport safe */ _Audio_AudioTime__WEBPACK_IMPORTED_MODULE_10__.AudioTime),
/* harmony export */   AudioView: () => (/* reexport safe */ _Audio_AudioView__WEBPACK_IMPORTED_MODULE_11__.AudioView),
/* harmony export */   AudioVisualizer: () => (/* reexport safe */ _Audio_AudioVisualizer__WEBPACK_IMPORTED_MODULE_12__.AudioVisualizer),
/* harmony export */   Avatar: () => (/* reexport safe */ _Avatar_Avatar__WEBPACK_IMPORTED_MODULE_13__.Avatar),
/* harmony export */   AvatarGroup: () => (/* reexport safe */ _Avatar_Avatar__WEBPACK_IMPORTED_MODULE_13__.AvatarGroup),
/* harmony export */   Backdrop: () => (/* reexport safe */ _Backdrop_Backdrop__WEBPACK_IMPORTED_MODULE_14__.Backdrop),
/* harmony export */   Badge: () => (/* reexport safe */ _Badge_Badge__WEBPACK_IMPORTED_MODULE_15__.Badge),
/* harmony export */   Box: () => (/* reexport safe */ _Box_Box__WEBPACK_IMPORTED_MODULE_16__.Box),
/* harmony export */   Breadcrumbs: () => (/* reexport safe */ _Breadcrumbs_Breadcrumbs__WEBPACK_IMPORTED_MODULE_17__.Breadcrumbs),
/* harmony export */   Button: () => (/* reexport safe */ _Button__WEBPACK_IMPORTED_MODULE_18__.Button),
/* harmony export */   ButtonGroup: () => (/* reexport safe */ _ButtonGroup_ButtonGroup__WEBPACK_IMPORTED_MODULE_19__.ButtonGroup),
/* harmony export */   Calendar: () => (/* reexport safe */ _Calendar_Calendar__WEBPACK_IMPORTED_MODULE_20__.Calendar),
/* harmony export */   Card: () => (/* reexport safe */ _Card_Card__WEBPACK_IMPORTED_MODULE_21__.Card),
/* harmony export */   Center: () => (/* reexport safe */ _Center_Center__WEBPACK_IMPORTED_MODULE_22__.Center),
/* harmony export */   ChartArea: () => (/* reexport safe */ _Charts_ChartArea__WEBPACK_IMPORTED_MODULE_24__.ChartArea),
/* harmony export */   ChartAxis: () => (/* reexport safe */ _Charts_ChartAxis__WEBPACK_IMPORTED_MODULE_25__.ChartAxis),
/* harmony export */   ChartBar: () => (/* reexport safe */ _Charts_ChartBar__WEBPACK_IMPORTED_MODULE_26__.ChartBar),
/* harmony export */   ChartHeatmap: () => (/* reexport safe */ _Charts_ChartHeatmap__WEBPACK_IMPORTED_MODULE_27__.ChartHeatmap),
/* harmony export */   ChartLine: () => (/* reexport safe */ _Charts_ChartLine__WEBPACK_IMPORTED_MODULE_28__.ChartLine),
/* harmony export */   ChartRadar: () => (/* reexport safe */ _Charts_ChartRadar__WEBPACK_IMPORTED_MODULE_29__.ChartRadar),
/* harmony export */   ChartRadial: () => (/* reexport safe */ _Charts_ChartRadial__WEBPACK_IMPORTED_MODULE_30__.ChartRadial),
/* harmony export */   ChartSparkline: () => (/* reexport safe */ _Charts_ChartSparkline__WEBPACK_IMPORTED_MODULE_31__.ChartSparkline),
/* harmony export */   ChartTooltip: () => (/* reexport safe */ _Charts_ChartTooltip__WEBPACK_IMPORTED_MODULE_32__.ChartTooltip),
/* harmony export */   Charts: () => (/* reexport safe */ _Charts_Charts__WEBPACK_IMPORTED_MODULE_23__.Charts),
/* harmony export */   Checkbox: () => (/* reexport safe */ _Checkbox_Checkbox__WEBPACK_IMPORTED_MODULE_33__.Checkbox),
/* harmony export */   CircularProgress: () => (/* reexport safe */ _Progress_CircularProgress__WEBPACK_IMPORTED_MODULE_77__.CircularProgress),
/* harmony export */   Code: () => (/* reexport safe */ _Code_Code__WEBPACK_IMPORTED_MODULE_34__.Code),
/* harmony export */   CodeEditor: () => (/* reexport safe */ _Code_CodeEditor__WEBPACK_IMPORTED_MODULE_35__.CodeEditor),
/* harmony export */   Collapse: () => (/* reexport safe */ _Collapse_Collapse__WEBPACK_IMPORTED_MODULE_37__.Collapse),
/* harmony export */   ColorPicker: () => (/* reexport safe */ _ColorPicker_ColorPicker__WEBPACK_IMPORTED_MODULE_38__.ColorPicker),
/* harmony export */   Combobox: () => (/* reexport safe */ _Combobox_Combobox__WEBPACK_IMPORTED_MODULE_39__.Combobox),
/* harmony export */   Container: () => (/* reexport safe */ _Container_Container__WEBPACK_IMPORTED_MODULE_40__.Container),
/* harmony export */   ContextMenu: () => (/* reexport safe */ _ContextMenu_ContextMenu__WEBPACK_IMPORTED_MODULE_41__.ContextMenu),
/* harmony export */   DataTable: () => (/* reexport safe */ _DataTable_DataTable__WEBPACK_IMPORTED_MODULE_42__.DataTable),
/* harmony export */   DatePicker: () => (/* reexport safe */ _DatePicker_DatePicker__WEBPACK_IMPORTED_MODULE_43__.DatePicker),
/* harmony export */   Dialog: () => (/* reexport safe */ _Dialog_Dialog__WEBPACK_IMPORTED_MODULE_44__.Dialog),
/* harmony export */   Divider: () => (/* reexport safe */ _Divider_Divider__WEBPACK_IMPORTED_MODULE_45__.Divider),
/* harmony export */   Drawer: () => (/* reexport safe */ _Drawer_Drawer__WEBPACK_IMPORTED_MODULE_46__.Drawer),
/* harmony export */   Dropdown: () => (/* reexport safe */ _Dropdown_Dropdown__WEBPACK_IMPORTED_MODULE_47__.Dropdown),
/* harmony export */   DropdownContent: () => (/* reexport safe */ _Dropdown_Dropdown__WEBPACK_IMPORTED_MODULE_47__.DropdownContent),
/* harmony export */   DropdownItem: () => (/* reexport safe */ _Dropdown_Dropdown__WEBPACK_IMPORTED_MODULE_47__.DropdownItem),
/* harmony export */   DropdownTrigger: () => (/* reexport safe */ _Dropdown_Dropdown__WEBPACK_IMPORTED_MODULE_47__.DropdownTrigger),
/* harmony export */   Editable: () => (/* reexport safe */ _Editable_Editable__WEBPACK_IMPORTED_MODULE_48__.Editable),
/* harmony export */   Error: () => (/* reexport safe */ _Error_Error__WEBPACK_IMPORTED_MODULE_49__.Error),
/* harmony export */   FileUpload: () => (/* reexport safe */ _FileUpload_FileUpload__WEBPACK_IMPORTED_MODULE_50__.FileUpload),
/* harmony export */   Flex: () => (/* reexport safe */ _Flex_Flex__WEBPACK_IMPORTED_MODULE_51__.Flex),
/* harmony export */   FloatingActionButton: () => (/* reexport safe */ _FloatingActionButton_FloatingActionButton__WEBPACK_IMPORTED_MODULE_52__.FloatingActionButton),
/* harmony export */   Footer: () => (/* reexport safe */ _Footer_Footer__WEBPACK_IMPORTED_MODULE_53__.Footer),
/* harmony export */   FormControl: () => (/* reexport safe */ _FormControl_FormControl__WEBPACK_IMPORTED_MODULE_54__.FormControl),
/* harmony export */   FormErrorMessage: () => (/* reexport safe */ _FormControl_FormControl__WEBPACK_IMPORTED_MODULE_54__.FormErrorMessage),
/* harmony export */   FormHelperText: () => (/* reexport safe */ _FormControl_FormControl__WEBPACK_IMPORTED_MODULE_54__.FormHelperText),
/* harmony export */   FormLabel: () => (/* reexport safe */ _FormControl_FormControl__WEBPACK_IMPORTED_MODULE_54__.FormLabel),
/* harmony export */   GraphicsContext: () => (/* reexport safe */ _GraphicsNodeEditor_GraphicsContext__WEBPACK_IMPORTED_MODULE_55__.GraphicsContext),
/* harmony export */   GraphicsNodeEditorView: () => (/* reexport safe */ _GraphicsNodeEditor_GraphicsNodeEditor__WEBPACK_IMPORTED_MODULE_56__.GraphicsNodeEditorView),
/* harmony export */   GraphicsProvider: () => (/* reexport safe */ _GraphicsNodeEditor_GraphicsNodeEditor__WEBPACK_IMPORTED_MODULE_56__.GraphicsProvider),
/* harmony export */   Grid: () => (/* reexport safe */ _Grid_Grid__WEBPACK_IMPORTED_MODULE_57__.Grid),
/* harmony export */   Header: () => (/* reexport safe */ _Header_Header__WEBPACK_IMPORTED_MODULE_58__.Header),
/* harmony export */   HoverCard: () => (/* reexport safe */ _HoverCard_HoverCard__WEBPACK_IMPORTED_MODULE_59__.HoverCard),
/* harmony export */   HoverCardContent: () => (/* reexport safe */ _HoverCard_HoverCard__WEBPACK_IMPORTED_MODULE_59__.HoverCardContent),
/* harmony export */   HoverCardTrigger: () => (/* reexport safe */ _HoverCard_HoverCard__WEBPACK_IMPORTED_MODULE_59__.HoverCardTrigger),
/* harmony export */   Icon: () => (/* reexport safe */ _Icon_Icon__WEBPACK_IMPORTED_MODULE_60__.Icon),
/* harmony export */   IconButton: () => (/* reexport safe */ _IconButton_IconButton__WEBPACK_IMPORTED_MODULE_61__.IconButton),
/* harmony export */   Image: () => (/* reexport safe */ _Image_Image__WEBPACK_IMPORTED_MODULE_62__.Image),
/* harmony export */   Input: () => (/* reexport safe */ _Input_Input__WEBPACK_IMPORTED_MODULE_63__.Input),
/* harmony export */   Kbd: () => (/* reexport safe */ _Kbd_Kbd__WEBPACK_IMPORTED_MODULE_64__.Kbd),
/* harmony export */   Layer: () => (/* reexport safe */ _Layer_Layer__WEBPACK_IMPORTED_MODULE_65__.Layer),
/* harmony export */   LinearProgress: () => (/* reexport safe */ _Progress_LinearProgress__WEBPACK_IMPORTED_MODULE_78__.LinearProgress),
/* harmony export */   Link: () => (/* reexport safe */ _Link_Link__WEBPACK_IMPORTED_MODULE_66__.Link),
/* harmony export */   List: () => (/* reexport safe */ _List_List__WEBPACK_IMPORTED_MODULE_67__.List),
/* harmony export */   ListItem: () => (/* reexport safe */ _List_List__WEBPACK_IMPORTED_MODULE_67__.ListItem),
/* harmony export */   ListItemBody: () => (/* reexport safe */ _List_List__WEBPACK_IMPORTED_MODULE_67__.ListItemBody),
/* harmony export */   ListItemText: () => (/* reexport safe */ _List_List__WEBPACK_IMPORTED_MODULE_67__.ListItemText),
/* harmony export */   Menu: () => (/* reexport safe */ _Menu_Menu__WEBPACK_IMPORTED_MODULE_68__.Menu),
/* harmony export */   MenuButton: () => (/* reexport safe */ _Menu_Menu__WEBPACK_IMPORTED_MODULE_68__.MenuButton),
/* harmony export */   MenuItem: () => (/* reexport safe */ _Menu_Menu__WEBPACK_IMPORTED_MODULE_68__.MenuItem),
/* harmony export */   MenuItems: () => (/* reexport safe */ _Menu_Menu__WEBPACK_IMPORTED_MODULE_68__.MenuItems),
/* harmony export */   Modal: () => (/* reexport safe */ _Modal_Modal__WEBPACK_IMPORTED_MODULE_70__.Modal),
/* harmony export */   Nav: () => (/* reexport safe */ _Nav_Nav__WEBPACK_IMPORTED_MODULE_71__.Nav),
/* harmony export */   NumberInput: () => (/* reexport safe */ _NumberInput_NumberInput__WEBPACK_IMPORTED_MODULE_72__.NumberInput),
/* harmony export */   Pagination: () => (/* reexport safe */ _Pagination_Pagination__WEBPACK_IMPORTED_MODULE_73__.Pagination),
/* harmony export */   PinInput: () => (/* reexport safe */ _PinInput_PinInput__WEBPACK_IMPORTED_MODULE_74__.PinInput),
/* harmony export */   Popover: () => (/* reexport safe */ _Popover_Popover__WEBPACK_IMPORTED_MODULE_75__.Popover),
/* harmony export */   PopoverContent: () => (/* reexport safe */ _Popover_Popover__WEBPACK_IMPORTED_MODULE_75__.PopoverContent),
/* harmony export */   PopoverTrigger: () => (/* reexport safe */ _Popover_Popover__WEBPACK_IMPORTED_MODULE_75__.PopoverTrigger),
/* harmony export */   Popper: () => (/* reexport safe */ _Popper_Popper__WEBPACK_IMPORTED_MODULE_76__.Popper),
/* harmony export */   PopperContent: () => (/* reexport safe */ _Popper_Popper__WEBPACK_IMPORTED_MODULE_76__.PopperContent),
/* harmony export */   PopperTrigger: () => (/* reexport safe */ _Popper_Popper__WEBPACK_IMPORTED_MODULE_76__.PopperTrigger),
/* harmony export */   RadioGroup: () => (/* reexport safe */ _RadioGroup_RadioGroup__WEBPACK_IMPORTED_MODULE_79__.RadioGroup),
/* harmony export */   RadioGroupItem: () => (/* reexport safe */ _RadioGroup_RadioGroup__WEBPACK_IMPORTED_MODULE_79__.RadioGroupItem),
/* harmony export */   Rating: () => (/* reexport safe */ _Rating_Rating__WEBPACK_IMPORTED_MODULE_80__.Rating),
/* harmony export */   Search: () => (/* reexport safe */ _Search_Search__WEBPACK_IMPORTED_MODULE_81__.Search),
/* harmony export */   SegmentedControl: () => (/* reexport safe */ _SegmentedControl_SegmentedControl__WEBPACK_IMPORTED_MODULE_82__.SegmentedControl),
/* harmony export */   Select: () => (/* reexport safe */ _Select_Select__WEBPACK_IMPORTED_MODULE_83__.Select),
/* harmony export */   Sidebar: () => (/* reexport safe */ _Sidebar_Sidebar__WEBPACK_IMPORTED_MODULE_84__.Sidebar),
/* harmony export */   SidebarNav: () => (/* reexport safe */ _Sidebar_Sidebar__WEBPACK_IMPORTED_MODULE_84__.SidebarNav),
/* harmony export */   SidebarNavItem: () => (/* reexport safe */ _Sidebar_Sidebar__WEBPACK_IMPORTED_MODULE_84__.SidebarNavItem),
/* harmony export */   Skeleton: () => (/* reexport safe */ _Skeleton_Skeleton__WEBPACK_IMPORTED_MODULE_85__.Skeleton),
/* harmony export */   Slider: () => (/* reexport safe */ _Slider_Slider__WEBPACK_IMPORTED_MODULE_86__.Slider),
/* harmony export */   Snackbar: () => (/* reexport safe */ _Snackbar_Snackbar__WEBPACK_IMPORTED_MODULE_87__.Snackbar),
/* harmony export */   SnackbarContext: () => (/* reexport safe */ _Snackbar_useSnackbar__WEBPACK_IMPORTED_MODULE_89__.SnackbarContext),
/* harmony export */   SnackbarProvider: () => (/* reexport safe */ _Snackbar_SnackbarProvider__WEBPACK_IMPORTED_MODULE_88__.SnackbarProvider),
/* harmony export */   Sofa: () => (/* reexport safe */ _Sofa_Sofa__WEBPACK_IMPORTED_MODULE_90__.Sofa),
/* harmony export */   SpeedDial: () => (/* reexport safe */ _SpeedDial_SpeedDial__WEBPACK_IMPORTED_MODULE_91__.SpeedDial),
/* harmony export */   Spinner: () => (/* reexport safe */ _Spinner_Spinner__WEBPACK_IMPORTED_MODULE_92__.Spinner),
/* harmony export */   Stack: () => (/* reexport safe */ _Stack_Stack__WEBPACK_IMPORTED_MODULE_93__.Stack),
/* harmony export */   Stepper: () => (/* reexport safe */ _Stepper_Stepper__WEBPACK_IMPORTED_MODULE_94__.Stepper),
/* harmony export */   StyledMenu: () => (/* reexport safe */ _Menu_StyledMenu__WEBPACK_IMPORTED_MODULE_69__.StyledMenu),
/* harmony export */   Switch: () => (/* reexport safe */ _Switch_Switch__WEBPACK_IMPORTED_MODULE_95__.Switch),
/* harmony export */   SyntaxHighlighter: () => (/* reexport safe */ _Code_SyntaxHighlighter__WEBPACK_IMPORTED_MODULE_36__.SyntaxHighlighter),
/* harmony export */   Tab: () => (/* reexport safe */ _Tabs_Tabs__WEBPACK_IMPORTED_MODULE_97__.Tab),
/* harmony export */   TabList: () => (/* reexport safe */ _Tabs_Tabs__WEBPACK_IMPORTED_MODULE_97__.TabList),
/* harmony export */   TabPanel: () => (/* reexport safe */ _Tabs_Tabs__WEBPACK_IMPORTED_MODULE_97__.TabPanel),
/* harmony export */   TabPanels: () => (/* reexport safe */ _Tabs_Tabs__WEBPACK_IMPORTED_MODULE_97__.TabPanels),
/* harmony export */   Table: () => (/* reexport safe */ _Table_Table__WEBPACK_IMPORTED_MODULE_96__.Table),
/* harmony export */   TableBody: () => (/* reexport safe */ _Table_Table__WEBPACK_IMPORTED_MODULE_96__.TableBody),
/* harmony export */   TableCell: () => (/* reexport safe */ _Table_Table__WEBPACK_IMPORTED_MODULE_96__.TableCell),
/* harmony export */   TableHead: () => (/* reexport safe */ _Table_Table__WEBPACK_IMPORTED_MODULE_96__.TableHead),
/* harmony export */   TableHeader: () => (/* reexport safe */ _Table_Table__WEBPACK_IMPORTED_MODULE_96__.TableHeader),
/* harmony export */   TableRow: () => (/* reexport safe */ _Table_Table__WEBPACK_IMPORTED_MODULE_96__.TableRow),
/* harmony export */   Tabs: () => (/* reexport safe */ _Tabs_Tabs__WEBPACK_IMPORTED_MODULE_97__.Tabs),
/* harmony export */   Tag: () => (/* reexport safe */ _Tag_Tag__WEBPACK_IMPORTED_MODULE_98__.Tag),
/* harmony export */   Text: () => (/* reexport safe */ _Text_Text__WEBPACK_IMPORTED_MODULE_99__.Text),
/* harmony export */   TextInput: () => (/* reexport safe */ _TextInput_TextInput__WEBPACK_IMPORTED_MODULE_101__.TextInput),
/* harmony export */   Textarea: () => (/* reexport safe */ _Textarea_Textarea__WEBPACK_IMPORTED_MODULE_100__.Textarea),
/* harmony export */   ThemeSwitcher: () => (/* reexport safe */ _ThemeSwitcher_ThemeSwitcher__WEBPACK_IMPORTED_MODULE_102__.ThemeSwitcher),
/* harmony export */   Timeline: () => (/* reexport safe */ _Timeline_Timeline__WEBPACK_IMPORTED_MODULE_103__.Timeline),
/* harmony export */   TimelineConnector: () => (/* reexport safe */ _Timeline_Timeline__WEBPACK_IMPORTED_MODULE_103__.TimelineConnector),
/* harmony export */   TimelineContent: () => (/* reexport safe */ _Timeline_Timeline__WEBPACK_IMPORTED_MODULE_103__.TimelineContent),
/* harmony export */   TimelineDot: () => (/* reexport safe */ _Timeline_Timeline__WEBPACK_IMPORTED_MODULE_103__.TimelineDot),
/* harmony export */   TimelineItem: () => (/* reexport safe */ _Timeline_Timeline__WEBPACK_IMPORTED_MODULE_103__.TimelineItem),
/* harmony export */   Toast: () => (/* reexport safe */ _Toast_Toast__WEBPACK_IMPORTED_MODULE_104__.Toast),
/* harmony export */   ToastContext: () => (/* reexport safe */ _Toast_useToast__WEBPACK_IMPORTED_MODULE_106__.ToastContext),
/* harmony export */   ToastProvider: () => (/* reexport safe */ _Toast_ToastProvider__WEBPACK_IMPORTED_MODULE_105__.ToastProvider),
/* harmony export */   ToggleButton: () => (/* reexport safe */ _ToggleButton_ToggleButton__WEBPACK_IMPORTED_MODULE_107__.ToggleButton),
/* harmony export */   ToggleButtonGroup: () => (/* reexport safe */ _ToggleButton_ToggleButton__WEBPACK_IMPORTED_MODULE_107__.ToggleButtonGroup),
/* harmony export */   Tooltip: () => (/* reexport safe */ _Tooltip_Tooltip__WEBPACK_IMPORTED_MODULE_108__.Tooltip),
/* harmony export */   TransferList: () => (/* reexport safe */ _TransferList_TransferList__WEBPACK_IMPORTED_MODULE_109__.TransferList),
/* harmony export */   TreeView: () => (/* reexport safe */ _TreeView_TreeView__WEBPACK_IMPORTED_MODULE_110__.TreeView),
/* harmony export */   Video: () => (/* reexport safe */ _Video_Video__WEBPACK_IMPORTED_MODULE_112__.Video),
/* harmony export */   VideoContext: () => (/* reexport safe */ _Video_VideoContext__WEBPACK_IMPORTED_MODULE_113__.VideoContext),
/* harmony export */   VideoControls: () => (/* reexport safe */ _Video_VideoControls__WEBPACK_IMPORTED_MODULE_114__.VideoControls),
/* harmony export */   VideoDuration: () => (/* reexport safe */ _Video_VideoDuration__WEBPACK_IMPORTED_MODULE_115__.VideoDuration),
/* harmony export */   VideoFile: () => (/* reexport safe */ _Video_VideoFile__WEBPACK_IMPORTED_MODULE_116__.VideoFile),
/* harmony export */   VideoMetadata: () => (/* reexport safe */ _Video_VideoMetadata__WEBPACK_IMPORTED_MODULE_117__.VideoMetadata),
/* harmony export */   VideoTime: () => (/* reexport safe */ _Video_VideoTime__WEBPACK_IMPORTED_MODULE_118__.VideoTime),
/* harmony export */   VideoView: () => (/* reexport safe */ _Video_VideoView__WEBPACK_IMPORTED_MODULE_119__.VideoView),
/* harmony export */   XNodeTree: () => (/* reexport safe */ _XNodeTree_XNodeTree__WEBPACK_IMPORTED_MODULE_120__.XNodeTree),
/* harmony export */   XmlRenderer: () => (/* reexport safe */ _XmlRenderer_XmlRenderer__WEBPACK_IMPORTED_MODULE_121__.XmlRenderer),
/* harmony export */   useAudio: () => (/* reexport safe */ _Audio_AudioContext__WEBPACK_IMPORTED_MODULE_5__.useAudio),
/* harmony export */   useGraphicsContext: () => (/* reexport safe */ _GraphicsNodeEditor_GraphicsContext__WEBPACK_IMPORTED_MODULE_55__.useGraphicsContext),
/* harmony export */   usePopperContext: () => (/* reexport safe */ _Popper_Popper__WEBPACK_IMPORTED_MODULE_76__.usePopperContext),
/* harmony export */   useSnackbar: () => (/* reexport safe */ _Snackbar_useSnackbar__WEBPACK_IMPORTED_MODULE_89__.useSnackbar),
/* harmony export */   useToast: () => (/* reexport safe */ _Toast_useToast__WEBPACK_IMPORTED_MODULE_106__.useToast),
/* harmony export */   useToggleButtonGroup: () => (/* reexport safe */ _ToggleButton_ToggleButton__WEBPACK_IMPORTED_MODULE_107__.useToggleButtonGroup),
/* harmony export */   useTreeItem: () => (/* reexport safe */ _TreeView_useTreeItem__WEBPACK_IMPORTED_MODULE_111__.useTreeItem),
/* harmony export */   useVideo: () => (/* reexport safe */ _Video_VideoContext__WEBPACK_IMPORTED_MODULE_113__.useVideo)
/* harmony export */ });
/* harmony import */ var _Accordion_Accordion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Accordion/Accordion */ "./src/components/Accordion/Accordion.tsx");
/* harmony import */ var _Alert_Alert__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Alert/Alert */ "./src/components/Alert/Alert.tsx");
/* harmony import */ var _AnimatedBlock_AnimatedBlock__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AnimatedBlock/AnimatedBlock */ "./src/components/AnimatedBlock/AnimatedBlock.tsx");
/* harmony import */ var _AspectRatio_AspectRatio__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./AspectRatio/AspectRatio */ "./src/components/AspectRatio/AspectRatio.tsx");
/* harmony import */ var _Audio_Audio__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Audio/Audio */ "./src/components/Audio/Audio.tsx");
/* harmony import */ var _Audio_AudioContext__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Audio/AudioContext */ "./src/components/Audio/AudioContext.tsx");
/* harmony import */ var _Audio_AudioControls__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Audio/AudioControls */ "./src/components/Audio/AudioControls.tsx");
/* harmony import */ var _Audio_AudioDuration__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Audio/AudioDuration */ "./src/components/Audio/AudioDuration.tsx");
/* harmony import */ var _Audio_AudioFile__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Audio/AudioFile */ "./src/components/Audio/AudioFile.tsx");
/* harmony import */ var _Audio_AudioFilters__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Audio/AudioFilters */ "./src/components/Audio/AudioFilters.tsx");
/* harmony import */ var _Audio_AudioTime__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./Audio/AudioTime */ "./src/components/Audio/AudioTime.tsx");
/* harmony import */ var _Audio_AudioView__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./Audio/AudioView */ "./src/components/Audio/AudioView.tsx");
/* harmony import */ var _Audio_AudioVisualizer__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./Audio/AudioVisualizer */ "./src/components/Audio/AudioVisualizer.tsx");
/* harmony import */ var _Avatar_Avatar__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./Avatar/Avatar */ "./src/components/Avatar/Avatar.tsx");
/* harmony import */ var _Backdrop_Backdrop__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./Backdrop/Backdrop */ "./src/components/Backdrop/Backdrop.tsx");
/* harmony import */ var _Badge_Badge__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./Badge/Badge */ "./src/components/Badge/Badge.tsx");
/* harmony import */ var _Box_Box__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./Box/Box */ "./src/components/Box/Box.tsx");
/* harmony import */ var _Breadcrumbs_Breadcrumbs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./Breadcrumbs/Breadcrumbs */ "./src/components/Breadcrumbs/Breadcrumbs.tsx");
/* harmony import */ var _Button__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./Button */ "./src/components/Button.tsx");
/* harmony import */ var _ButtonGroup_ButtonGroup__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./ButtonGroup/ButtonGroup */ "./src/components/ButtonGroup/ButtonGroup.tsx");
/* harmony import */ var _Calendar_Calendar__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./Calendar/Calendar */ "./src/components/Calendar/Calendar.tsx");
/* harmony import */ var _Card_Card__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./Card/Card */ "./src/components/Card/Card.tsx");
/* harmony import */ var _Center_Center__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./Center/Center */ "./src/components/Center/Center.tsx");
/* harmony import */ var _Charts_Charts__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./Charts/Charts */ "./src/components/Charts/Charts.tsx");
/* harmony import */ var _Charts_ChartArea__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./Charts/ChartArea */ "./src/components/Charts/ChartArea.tsx");
/* harmony import */ var _Charts_ChartAxis__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./Charts/ChartAxis */ "./src/components/Charts/ChartAxis.tsx");
/* harmony import */ var _Charts_ChartBar__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./Charts/ChartBar */ "./src/components/Charts/ChartBar.tsx");
/* harmony import */ var _Charts_ChartHeatmap__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./Charts/ChartHeatmap */ "./src/components/Charts/ChartHeatmap.tsx");
/* harmony import */ var _Charts_ChartLine__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./Charts/ChartLine */ "./src/components/Charts/ChartLine.tsx");
/* harmony import */ var _Charts_ChartRadar__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./Charts/ChartRadar */ "./src/components/Charts/ChartRadar.tsx");
/* harmony import */ var _Charts_ChartRadial__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./Charts/ChartRadial */ "./src/components/Charts/ChartRadial.tsx");
/* harmony import */ var _Charts_ChartSparkline__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./Charts/ChartSparkline */ "./src/components/Charts/ChartSparkline.tsx");
/* harmony import */ var _Charts_ChartTooltip__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./Charts/ChartTooltip */ "./src/components/Charts/ChartTooltip.tsx");
/* harmony import */ var _Checkbox_Checkbox__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./Checkbox/Checkbox */ "./src/components/Checkbox/Checkbox.tsx");
/* harmony import */ var _Code_Code__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./Code/Code */ "./src/components/Code/Code.tsx");
/* harmony import */ var _Code_CodeEditor__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./Code/CodeEditor */ "./src/components/Code/CodeEditor.tsx");
/* harmony import */ var _Code_SyntaxHighlighter__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./Code/SyntaxHighlighter */ "./src/components/Code/SyntaxHighlighter.tsx");
/* harmony import */ var _Collapse_Collapse__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./Collapse/Collapse */ "./src/components/Collapse/Collapse.tsx");
/* harmony import */ var _ColorPicker_ColorPicker__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./ColorPicker/ColorPicker */ "./src/components/ColorPicker/ColorPicker.tsx");
/* harmony import */ var _Combobox_Combobox__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./Combobox/Combobox */ "./src/components/Combobox/Combobox.tsx");
/* harmony import */ var _Container_Container__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./Container/Container */ "./src/components/Container/Container.tsx");
/* harmony import */ var _ContextMenu_ContextMenu__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./ContextMenu/ContextMenu */ "./src/components/ContextMenu/ContextMenu.tsx");
/* harmony import */ var _DataTable_DataTable__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./DataTable/DataTable */ "./src/components/DataTable/DataTable.tsx");
/* harmony import */ var _DatePicker_DatePicker__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./DatePicker/DatePicker */ "./src/components/DatePicker/DatePicker.tsx");
/* harmony import */ var _Dialog_Dialog__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./Dialog/Dialog */ "./src/components/Dialog/Dialog.tsx");
/* harmony import */ var _Divider_Divider__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./Divider/Divider */ "./src/components/Divider/Divider.tsx");
/* harmony import */ var _Drawer_Drawer__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./Drawer/Drawer */ "./src/components/Drawer/Drawer.tsx");
/* harmony import */ var _Dropdown_Dropdown__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./Dropdown/Dropdown */ "./src/components/Dropdown/Dropdown.tsx");
/* harmony import */ var _Editable_Editable__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./Editable/Editable */ "./src/components/Editable/Editable.tsx");
/* harmony import */ var _Error_Error__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./Error/Error */ "./src/components/Error/Error.tsx");
/* harmony import */ var _FileUpload_FileUpload__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./FileUpload/FileUpload */ "./src/components/FileUpload/FileUpload.tsx");
/* harmony import */ var _Flex_Flex__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./Flex/Flex */ "./src/components/Flex/Flex.tsx");
/* harmony import */ var _FloatingActionButton_FloatingActionButton__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./FloatingActionButton/FloatingActionButton */ "./src/components/FloatingActionButton/FloatingActionButton.tsx");
/* harmony import */ var _Footer_Footer__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./Footer/Footer */ "./src/components/Footer/Footer.tsx");
/* harmony import */ var _FormControl_FormControl__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ./FormControl/FormControl */ "./src/components/FormControl/FormControl.tsx");
/* harmony import */ var _GraphicsNodeEditor_GraphicsContext__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ./GraphicsNodeEditor/GraphicsContext */ "./src/components/GraphicsNodeEditor/GraphicsContext.tsx");
/* harmony import */ var _GraphicsNodeEditor_GraphicsNodeEditor__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ./GraphicsNodeEditor/GraphicsNodeEditor */ "./src/components/GraphicsNodeEditor/GraphicsNodeEditor.tsx");
/* harmony import */ var _Grid_Grid__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ./Grid/Grid */ "./src/components/Grid/Grid.tsx");
/* harmony import */ var _Header_Header__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ./Header/Header */ "./src/components/Header/Header.tsx");
/* harmony import */ var _HoverCard_HoverCard__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ./HoverCard/HoverCard */ "./src/components/HoverCard/HoverCard.tsx");
/* harmony import */ var _Icon_Icon__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ./Icon/Icon */ "./src/components/Icon/Icon.tsx");
/* harmony import */ var _IconButton_IconButton__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ./IconButton/IconButton */ "./src/components/IconButton/IconButton.tsx");
/* harmony import */ var _Image_Image__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ./Image/Image */ "./src/components/Image/Image.tsx");
/* harmony import */ var _Input_Input__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ./Input/Input */ "./src/components/Input/Input.tsx");
/* harmony import */ var _Kbd_Kbd__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ./Kbd/Kbd */ "./src/components/Kbd/Kbd.tsx");
/* harmony import */ var _Layer_Layer__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ./Layer/Layer */ "./src/components/Layer/Layer.tsx");
/* harmony import */ var _Link_Link__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ./Link/Link */ "./src/components/Link/Link.tsx");
/* harmony import */ var _List_List__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! ./List/List */ "./src/components/List/List.tsx");
/* harmony import */ var _Menu_Menu__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! ./Menu/Menu */ "./src/components/Menu/Menu.tsx");
/* harmony import */ var _Menu_StyledMenu__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! ./Menu/StyledMenu */ "./src/components/Menu/StyledMenu.tsx");
/* harmony import */ var _Modal_Modal__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! ./Modal/Modal */ "./src/components/Modal/Modal.tsx");
/* harmony import */ var _Nav_Nav__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! ./Nav/Nav */ "./src/components/Nav/Nav.tsx");
/* harmony import */ var _NumberInput_NumberInput__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! ./NumberInput/NumberInput */ "./src/components/NumberInput/NumberInput.tsx");
/* harmony import */ var _Pagination_Pagination__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! ./Pagination/Pagination */ "./src/components/Pagination/Pagination.tsx");
/* harmony import */ var _PinInput_PinInput__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! ./PinInput/PinInput */ "./src/components/PinInput/PinInput.tsx");
/* harmony import */ var _Popover_Popover__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! ./Popover/Popover */ "./src/components/Popover/Popover.tsx");
/* harmony import */ var _Popper_Popper__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! ./Popper/Popper */ "./src/components/Popper/Popper.tsx");
/* harmony import */ var _Progress_CircularProgress__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! ./Progress/CircularProgress */ "./src/components/Progress/CircularProgress.tsx");
/* harmony import */ var _Progress_LinearProgress__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(/*! ./Progress/LinearProgress */ "./src/components/Progress/LinearProgress.tsx");
/* harmony import */ var _RadioGroup_RadioGroup__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(/*! ./RadioGroup/RadioGroup */ "./src/components/RadioGroup/RadioGroup.tsx");
/* harmony import */ var _Rating_Rating__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(/*! ./Rating/Rating */ "./src/components/Rating/Rating.tsx");
/* harmony import */ var _Search_Search__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(/*! ./Search/Search */ "./src/components/Search/Search.tsx");
/* harmony import */ var _SegmentedControl_SegmentedControl__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(/*! ./SegmentedControl/SegmentedControl */ "./src/components/SegmentedControl/SegmentedControl.tsx");
/* harmony import */ var _Select_Select__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(/*! ./Select/Select */ "./src/components/Select/Select.tsx");
/* harmony import */ var _Sidebar_Sidebar__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(/*! ./Sidebar/Sidebar */ "./src/components/Sidebar/Sidebar.tsx");
/* harmony import */ var _Skeleton_Skeleton__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__(/*! ./Skeleton/Skeleton */ "./src/components/Skeleton/Skeleton.tsx");
/* harmony import */ var _Slider_Slider__WEBPACK_IMPORTED_MODULE_86__ = __webpack_require__(/*! ./Slider/Slider */ "./src/components/Slider/Slider.tsx");
/* harmony import */ var _Snackbar_Snackbar__WEBPACK_IMPORTED_MODULE_87__ = __webpack_require__(/*! ./Snackbar/Snackbar */ "./src/components/Snackbar/Snackbar.tsx");
/* harmony import */ var _Snackbar_SnackbarProvider__WEBPACK_IMPORTED_MODULE_88__ = __webpack_require__(/*! ./Snackbar/SnackbarProvider */ "./src/components/Snackbar/SnackbarProvider.tsx");
/* harmony import */ var _Snackbar_useSnackbar__WEBPACK_IMPORTED_MODULE_89__ = __webpack_require__(/*! ./Snackbar/useSnackbar */ "./src/components/Snackbar/useSnackbar.ts");
/* harmony import */ var _Sofa_Sofa__WEBPACK_IMPORTED_MODULE_90__ = __webpack_require__(/*! ./Sofa/Sofa */ "./src/components/Sofa/Sofa.tsx");
/* harmony import */ var _SpeedDial_SpeedDial__WEBPACK_IMPORTED_MODULE_91__ = __webpack_require__(/*! ./SpeedDial/SpeedDial */ "./src/components/SpeedDial/SpeedDial.tsx");
/* harmony import */ var _Spinner_Spinner__WEBPACK_IMPORTED_MODULE_92__ = __webpack_require__(/*! ./Spinner/Spinner */ "./src/components/Spinner/Spinner.tsx");
/* harmony import */ var _Stack_Stack__WEBPACK_IMPORTED_MODULE_93__ = __webpack_require__(/*! ./Stack/Stack */ "./src/components/Stack/Stack.tsx");
/* harmony import */ var _Stepper_Stepper__WEBPACK_IMPORTED_MODULE_94__ = __webpack_require__(/*! ./Stepper/Stepper */ "./src/components/Stepper/Stepper.tsx");
/* harmony import */ var _Switch_Switch__WEBPACK_IMPORTED_MODULE_95__ = __webpack_require__(/*! ./Switch/Switch */ "./src/components/Switch/Switch.tsx");
/* harmony import */ var _Table_Table__WEBPACK_IMPORTED_MODULE_96__ = __webpack_require__(/*! ./Table/Table */ "./src/components/Table/Table.tsx");
/* harmony import */ var _Tabs_Tabs__WEBPACK_IMPORTED_MODULE_97__ = __webpack_require__(/*! ./Tabs/Tabs */ "./src/components/Tabs/Tabs.tsx");
/* harmony import */ var _Tag_Tag__WEBPACK_IMPORTED_MODULE_98__ = __webpack_require__(/*! ./Tag/Tag */ "./src/components/Tag/Tag.tsx");
/* harmony import */ var _Text_Text__WEBPACK_IMPORTED_MODULE_99__ = __webpack_require__(/*! ./Text/Text */ "./src/components/Text/Text.tsx");
/* harmony import */ var _Textarea_Textarea__WEBPACK_IMPORTED_MODULE_100__ = __webpack_require__(/*! ./Textarea/Textarea */ "./src/components/Textarea/Textarea.tsx");
/* harmony import */ var _TextInput_TextInput__WEBPACK_IMPORTED_MODULE_101__ = __webpack_require__(/*! ./TextInput/TextInput */ "./src/components/TextInput/TextInput.tsx");
/* harmony import */ var _ThemeSwitcher_ThemeSwitcher__WEBPACK_IMPORTED_MODULE_102__ = __webpack_require__(/*! ./ThemeSwitcher/ThemeSwitcher */ "./src/components/ThemeSwitcher/ThemeSwitcher.tsx");
/* harmony import */ var _Timeline_Timeline__WEBPACK_IMPORTED_MODULE_103__ = __webpack_require__(/*! ./Timeline/Timeline */ "./src/components/Timeline/Timeline.tsx");
/* harmony import */ var _Toast_Toast__WEBPACK_IMPORTED_MODULE_104__ = __webpack_require__(/*! ./Toast/Toast */ "./src/components/Toast/Toast.tsx");
/* harmony import */ var _Toast_ToastProvider__WEBPACK_IMPORTED_MODULE_105__ = __webpack_require__(/*! ./Toast/ToastProvider */ "./src/components/Toast/ToastProvider.tsx");
/* harmony import */ var _Toast_useToast__WEBPACK_IMPORTED_MODULE_106__ = __webpack_require__(/*! ./Toast/useToast */ "./src/components/Toast/useToast.ts");
/* harmony import */ var _ToggleButton_ToggleButton__WEBPACK_IMPORTED_MODULE_107__ = __webpack_require__(/*! ./ToggleButton/ToggleButton */ "./src/components/ToggleButton/ToggleButton.tsx");
/* harmony import */ var _Tooltip_Tooltip__WEBPACK_IMPORTED_MODULE_108__ = __webpack_require__(/*! ./Tooltip/Tooltip */ "./src/components/Tooltip/Tooltip.tsx");
/* harmony import */ var _TransferList_TransferList__WEBPACK_IMPORTED_MODULE_109__ = __webpack_require__(/*! ./TransferList/TransferList */ "./src/components/TransferList/TransferList.tsx");
/* harmony import */ var _TreeView_TreeView__WEBPACK_IMPORTED_MODULE_110__ = __webpack_require__(/*! ./TreeView/TreeView */ "./src/components/TreeView/TreeView.tsx");
/* harmony import */ var _TreeView_useTreeItem__WEBPACK_IMPORTED_MODULE_111__ = __webpack_require__(/*! ./TreeView/useTreeItem */ "./src/components/TreeView/useTreeItem.ts");
/* harmony import */ var _Video_Video__WEBPACK_IMPORTED_MODULE_112__ = __webpack_require__(/*! ./Video/Video */ "./src/components/Video/Video.tsx");
/* harmony import */ var _Video_VideoContext__WEBPACK_IMPORTED_MODULE_113__ = __webpack_require__(/*! ./Video/VideoContext */ "./src/components/Video/VideoContext.tsx");
/* harmony import */ var _Video_VideoControls__WEBPACK_IMPORTED_MODULE_114__ = __webpack_require__(/*! ./Video/VideoControls */ "./src/components/Video/VideoControls.tsx");
/* harmony import */ var _Video_VideoDuration__WEBPACK_IMPORTED_MODULE_115__ = __webpack_require__(/*! ./Video/VideoDuration */ "./src/components/Video/VideoDuration.tsx");
/* harmony import */ var _Video_VideoFile__WEBPACK_IMPORTED_MODULE_116__ = __webpack_require__(/*! ./Video/VideoFile */ "./src/components/Video/VideoFile.tsx");
/* harmony import */ var _Video_VideoMetadata__WEBPACK_IMPORTED_MODULE_117__ = __webpack_require__(/*! ./Video/VideoMetadata */ "./src/components/Video/VideoMetadata.tsx");
/* harmony import */ var _Video_VideoTime__WEBPACK_IMPORTED_MODULE_118__ = __webpack_require__(/*! ./Video/VideoTime */ "./src/components/Video/VideoTime.tsx");
/* harmony import */ var _Video_VideoView__WEBPACK_IMPORTED_MODULE_119__ = __webpack_require__(/*! ./Video/VideoView */ "./src/components/Video/VideoView.tsx");
/* harmony import */ var _XNodeTree_XNodeTree__WEBPACK_IMPORTED_MODULE_120__ = __webpack_require__(/*! ./XNodeTree/XNodeTree */ "./src/components/XNodeTree/XNodeTree.tsx");
/* harmony import */ var _XmlRenderer_XmlRenderer__WEBPACK_IMPORTED_MODULE_121__ = __webpack_require__(/*! ./XmlRenderer/XmlRenderer */ "./src/components/XmlRenderer/XmlRenderer.tsx");



















































































// FIX: Export `Select` component.


// FIX: Removed legacy export for `SignInPage`. Authentication components are now exclusively exported from the `core` module.






































/***/ }),

/***/ "./src/core/animation/CurveContextAnimation.ts":
/*!*****************************************************!*\
  !*** ./src/core/animation/CurveContextAnimation.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CurveContextAnimation: () => (/* binding */ CurveContextAnimation)
/* harmony export */ });
class CurveContextAnimation {
  animationFrame = null;
  startTime = null;
  constructor(config, onUpdate, onComplete) {
    this.config = config;
    this.onUpdate = onUpdate;
    this.onComplete = onComplete;
  }
  easingFunctions = {
    linear: t => t,
    easeIn: t => t * t,
    easeOut: t => 1 - (1 - t) * (1 - t),
    easeInOut: t => t < 0.5 ? 2 * t * t : 1 - Math.pow(-2 * t + 2, 2) / 2,
    bounce: t => {
      const strength = this.config.bounceStrength || 3;
      const bounce = Math.exp(-strength * t) * Math.cos(2 * Math.PI * t);
      return 1 - bounce;
    },
    elastic: t => {
      const elasticity = this.config.elasticity || 0.3;
      return Math.pow(2, -10 * t) * Math.sin((t - elasticity / 4) * (2 * Math.PI) / elasticity) + 1;
    }
  };
  interpolate(progress) {
    const easingFn = this.easingFunctions[this.config.type];
    const easedProgress = easingFn(progress);
    return this.config.from + (this.config.to - this.config.from) * easedProgress;
  }
  animate = currentTime => {
    if (!this.startTime) this.startTime = currentTime;
    const elapsed = currentTime - this.startTime;
    const progress = Math.min(elapsed / this.config.duration, 1);
    const currentValue = this.interpolate(progress);
    this.onUpdate({
      value: currentValue,
      progress,
      isRunning: progress < 1
    });
    if (progress < 1) {
      this.animationFrame = requestAnimationFrame(this.animate);
    } else {
      this.stop();
      this.onComplete?.();
    }
  };
  start() {
    if (this.animationFrame !== null) return;
    this.startTime = null;
    this.animationFrame = requestAnimationFrame(this.animate);
  }
  stop() {
    if (this.animationFrame !== null) {
      cancelAnimationFrame(this.animationFrame);
      this.animationFrame = null;
    }
  }
  updateConfig(newConfig) {
    this.config = {
      ...this.config,
      ...newConfig
    };
  }
}

/***/ }),

/***/ "./src/core/auth/Alerts.tsx":
/*!**********************************!*\
  !*** ./src/core/auth/Alerts.tsx ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AuthAlert: () => (/* binding */ AuthAlert)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _components_Alert_Alert__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../components/Alert/Alert */ "./src/components/Alert/Alert.tsx");


const AuthAlert = ({
  alert
}) => {
  if (!alert) return null;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components_Alert_Alert__WEBPACK_IMPORTED_MODULE_1__.Alert, {
    title: alert.type === 'error' ? 'Error' : 'Success',
    variant: alert.type
  }, alert.message);
};

/***/ }),

/***/ "./src/core/auth/AuthResponse.ts":
/*!***************************************!*\
  !*** ./src/core/auth/AuthResponse.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./src/core/auth/CredentialsForm.tsx":
/*!*******************************************!*\
  !*** ./src/core/auth/CredentialsForm.tsx ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CredentialsForm: () => (/* binding */ CredentialsForm)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../components */ "./src/components/index.ts");


const CredentialsForm = ({
  provider,
  onSubmit
}) => {
  const [formData, setFormData] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({});
  const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const handleInputChange = e => {
    setFormData(prev => ({
      ...prev,
      [e.target.name]: e.target.value
    }));
  };
  const handleSubmit = async e => {
    e.preventDefault();
    setLoading(true);
    await onSubmit(formData);
    setLoading(false);
  };
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("form", {
    onSubmit: handleSubmit
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
    gap: "1rem"
  }, Object.entries(provider.credentials).map(([key, props]) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components__WEBPACK_IMPORTED_MODULE_1__.Input, {
    key: key,
    name: key,
    type: props.type,
    label: props.label,
    placeholder: props.placeholder,
    onChange: handleInputChange,
    required: true
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
    type: "submit",
    variant: "primary",
    disabled: loading
  }, loading ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components__WEBPACK_IMPORTED_MODULE_1__.Spinner, {
    size: 20
  }) : `Sign in with ${provider.name}`)));
};

/***/ }),

/***/ "./src/core/auth/MagicLinkForm.tsx":
/*!*****************************************!*\
  !*** ./src/core/auth/MagicLinkForm.tsx ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MagicLinkForm: () => (/* binding */ MagicLinkForm)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../components */ "./src/components/index.ts");


const MagicLinkForm = ({
  provider,
  onSubmit
}) => {
  const [email, setEmail] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('');
  const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const handleSubmit = async e => {
    e.preventDefault();
    setLoading(true);
    await onSubmit({
      email
    });
    setLoading(false);
  };
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("form", {
    onSubmit: handleSubmit
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
    gap: "1rem"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components__WEBPACK_IMPORTED_MODULE_1__.Input, {
    name: "email",
    type: "email",
    label: "Email Address",
    placeholder: "you@example.com",
    onChange: e => setEmail(e.target.value),
    required: true
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
    type: "submit",
    variant: "primary",
    disabled: loading
  }, loading ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components__WEBPACK_IMPORTED_MODULE_1__.Spinner, {
    size: 20
  }) : `Send Magic Link`)));
};

/***/ }),

/***/ "./src/core/auth/SignInPage.tsx":
/*!**************************************!*\
  !*** ./src/core/auth/SignInPage.tsx ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SignInPage: () => (/* binding */ SignInPage)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../components */ "./src/components/index.ts");
/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core */ "./src/core/index.ts");
/* harmony import */ var _icons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../icons */ "./src/icons/index.ts");
/* harmony import */ var _Alerts__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Alerts */ "./src/core/auth/Alerts.tsx");
/* harmony import */ var _CredentialsForm__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./CredentialsForm */ "./src/core/auth/CredentialsForm.tsx");
/* harmony import */ var _MagicLinkForm__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./MagicLinkForm */ "./src/core/auth/MagicLinkForm.tsx");








// A more generic provider type for the UI

const providerIcons = {
  google: _icons__WEBPACK_IMPORTED_MODULE_3__.GoogleIcon,
  github: _icons__WEBPACK_IMPORTED_MODULE_3__.GithubIcon
};
const SignInPage = ({
  providers,
  signIn,
  title = 'Sign In',
  subtitle,
  className
}) => {
  const {
    theme
  } = (0,_core__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const [alert, setAlert] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);
  const [loadingProvider, setLoadingProvider] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);
  const oauthProviders = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => providers.filter(p => p.type === 'oauth'), [providers]);
  const credentialsProvider = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => providers.find(p => p.type === 'credentials'), [providers]);
  const magicLinkProvider = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => providers.find(p => p.type === 'magiclink'), [providers]);
  const handleSignIn = async (providerId, formData) => {
    setLoadingProvider(providerId);
    setAlert(null);
    try {
      const response = await signIn(providerId, formData);
      if (response) {
        if (response.error) setAlert({
          type: 'error',
          message: response.error
        });else if (response.success) setAlert({
          type: 'success',
          message: response.success
        });
      }
    } catch (e) {
      setAlert({
        type: 'error',
        message: e.message || 'An unknown error occurred.'
      });
    } finally {
      setLoadingProvider(null);
    }
  };
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components__WEBPACK_IMPORTED_MODULE_1__.Card, {
    className: className,
    style: {
      maxWidth: '400px',
      margin: '0 auto'
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
    gap: "1.5rem"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
    gap: "0.25rem",
    style: {
      textAlign: 'center'
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    as: "h1",
    size: "1.5rem",
    weight: "600"
  }, title), subtitle && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    color: theme.colors.textSecondary
  }, subtitle)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Alerts__WEBPACK_IMPORTED_MODULE_4__.AuthAlert, {
    alert: alert
  }), oauthProviders.length > 0 && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
    gap: "1rem"
  }, oauthProviders.map(provider => {
    const ProviderIcon = providerIcons[provider.id];
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components__WEBPACK_IMPORTED_MODULE_1__.Button, {
      key: provider.id,
      variant: "secondary",
      onClick: () => handleSignIn(provider.id),
      disabled: !!loadingProvider
    }, loadingProvider === provider.id ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components__WEBPACK_IMPORTED_MODULE_1__.Spinner, {
      size: 20
    }) : ProviderIcon && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components__WEBPACK_IMPORTED_MODULE_1__.Icon, {
      as: ProviderIcon,
      size: 20
    }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", null, "Sign in with ", provider.name));
  })), oauthProviders.length > 0 && (credentialsProvider || magicLinkProvider) && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components__WEBPACK_IMPORTED_MODULE_1__.Stack, {
    direction: "row",
    align: "center",
    gap: "1rem"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components__WEBPACK_IMPORTED_MODULE_1__.Divider, null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components__WEBPACK_IMPORTED_MODULE_1__.Text, {
    size: "0.75rem",
    color: theme.colors.textSecondary
  }, "OR"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components__WEBPACK_IMPORTED_MODULE_1__.Divider, null)), credentialsProvider && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_CredentialsForm__WEBPACK_IMPORTED_MODULE_5__.CredentialsForm, {
    provider: credentialsProvider,
    onSubmit: formData => handleSignIn(credentialsProvider.id, formData)
  }), magicLinkProvider && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_MagicLinkForm__WEBPACK_IMPORTED_MODULE_6__.MagicLinkForm, {
    provider: magicLinkProvider,
    onSubmit: formData => handleSignIn(magicLinkProvider.id, formData)
  })));
};

/***/ }),

/***/ "./src/core/color/utils.ts":
/*!*********************************!*\
  !*** ./src/core/color/utils.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   hexToRgba: () => (/* binding */ hexToRgba),
/* harmony export */   parseColor: () => (/* binding */ parseColor)
/* harmony export */ });
function hexToRgba(hex, alpha = 1) {
  let c;
  if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {
    c = hex.substring(1).split('');
    if (c.length === 3) {
      c = [c[0], c[0], c[1], c[1], c[2], c[2]];
    }
    c = '0x' + c.join('');
    return `rgba(${[c >> 16 & 255, c >> 8 & 255, c & 255].join(',')},${alpha})`;
  }
  throw new Error('Bad Hex');
}
function parseColor(color) {
  if (color.startsWith('#')) {
    const hex = color.slice(1);
    const bigint = parseInt(hex, 16);
    const r = bigint >> 16 & 255;
    const g = bigint >> 8 & 255;
    const b = bigint & 255;
    return [r, g, b];
  }
  if (color.startsWith('rgb')) {
    const parts = color.match(/(\d+)/g);
    if (parts && parts.length >= 3) {
      return [parseInt(parts[0]), parseInt(parts[1]), parseInt(parts[2])];
    }
  }
  return [0, 0, 0]; // default fallback
}

/***/ }),

/***/ "./src/core/css/createClassFlow.ts":
/*!*****************************************!*\
  !*** ./src/core/css/createClassFlow.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   clearStyles: () => (/* binding */ clearStyles),
/* harmony export */   combineClasses: () => (/* binding */ combineClasses),
/* harmony export */   createClassFlow: () => (/* binding */ createClassFlow)
/* harmony export */ });
let styleSheet = null;
const cache = new Map();
let counter = 0;
const hashCode = str => {
  let hash = 0;
  for (let i = 0; i < str.length; i++) {
    const char = str.charCodeAt(i);
    hash = (hash << 5) - hash + char;
    hash = hash & hash;
  }
  return Math.abs(hash).toString(36);
};
const createStyleSheet = () => {
  if (!styleSheet && typeof document !== 'undefined') {
    styleSheet = document.createElement('style');
    styleSheet.setAttribute('data-zwheui', '');
    document.head.appendChild(styleSheet);
  }
  return styleSheet;
};

// --- Theme Value Resolution ---

const propertyToThemeScaleMap = {
  borderRadius: 'radii'
};
const valueFunctionsToThemeScaleMap = {
  blur: 'blur'
};
const resolveValue = (key, value, theme) => {
  if (!theme || typeof value !== 'string') {
    return value;
  }

  // Direct key lookup (e.g., borderRadius: 'lg')
  const directScaleKey = propertyToThemeScaleMap[key];
  if (directScaleKey) {
    const scale = theme[directScaleKey];
    if (scale && scale[value]) {
      return scale[value];
    }
  }

  // Functional value lookup (e.g., backdropFilter: 'blur(md)')
  const functionalRegex = /(\w+)\((.+)\)/;
  const match = value.match(functionalRegex);
  if (match) {
    const [, funcName, themeKey] = match;
    const funcScaleKey = valueFunctionsToThemeScaleMap[funcName];
    if (funcScaleKey) {
      const scale = theme[funcScaleKey];
      if (scale && scale[themeKey]) {
        return `${funcName}(${scale[themeKey]})`;
      }
    }
  }
  return value;
};
const objectToCssString = (styleObject, theme) => {
  return Object.entries(styleObject).map(([key, value]) => {
    if (typeof value === 'object' && value !== null) {
      return ''; // This function should not handle nested rules; they are parsed by the main function.
    }
    if (value === undefined) return '';
    const resolvedValue = resolveValue(key, value, theme);
    const cssKey = key.replace(/([A-Z])/g, '-$1').toLowerCase();
    return `${cssKey}: ${resolvedValue};`;
  }).filter(Boolean).join(' ');
};
const toKebabCase = str => str.replace(/([a-z0-9]|(?=[A-Z]))([A-Z])/g, '$1-$2').toLowerCase();
const parseMediaQuery = (query, theme) => {
  if (!theme?.breakpoints) {
    return query;
  }

  // Regex to find things like (property: 'breakpointKey') or (property: breakpointKey)
  const sassLikeQueryRegex = /\(\s*([a-zA-Z-]+)\s*:\s*['"]?(\w+)['"]?\s*\)/g;
  return query.replace(sassLikeQueryRegex, (match, property, key) => {
    const breakpointValue = theme.breakpoints[key];
    if (breakpointValue) {
      const cssProperty = toKebabCase(property);
      return `(${cssProperty}: ${breakpointValue})`;
    }
    return match; // Return original if breakpoint key not found
  });
};
const createClassFlow = (styles, options = {}, theme) => {
  const {
    prefix = 'zw',
    cache: useCache = true
  } = options;
  const styleStr = JSON.stringify(styles);
  if (useCache && cache.has(styleStr)) {
    return cache.get(styleStr);
  }
  const sheet = createStyleSheet();
  if (!sheet) return '';
  counter++;
  const className = `${prefix}-${hashCode(styleStr)}-${counter}`;
  const baseStyles = {};
  const nestedRules = [];
  const keyframesRules = [];

  // Separate base properties from nested/at-rules
  for (const [key, value] of Object.entries(styles)) {
    if (key === '@media' || value === undefined) {
      continue; // Handle the special '@media' object separately for backward compatibility
    }
    if (typeof value === 'object' && value !== null) {
      if (key.startsWith('&')) {
        // Handle pseudo-selectors and nested selectors
        const selector = key.replace(/&/g, `.${className}`);
        nestedRules.push(`${selector} { ${objectToCssString(value, theme)} }`);
      } else if (key.startsWith('@keyframes')) {
        // Handle keyframes
        const keyframeContent = Object.entries(value).map(([frame, frameStyles]) => `${frame} { ${objectToCssString(frameStyles, theme)} }`).join(' ');
        keyframesRules.push(`${key} { ${keyframeContent} }`);
      } else if (key.startsWith('@')) {
        // Handle other at-rules like @supports or direct @media queries
        nestedRules.push(`${key} { .${className} { ${objectToCssString(value, theme)} } }`);
      }
    } else {
      baseStyles[key] = value;
    }
  }
  let cssRules = `.${className} { ${objectToCssString(baseStyles, theme)} }`;

  // Process nested pseudo-selectors and at-rules
  if (nestedRules.length > 0) {
    cssRules += `\n${nestedRules.join('\n')}`;
  }

  // Handle the special top-level @media property for backward compatibility
  if (styles['@media']) {
    Object.entries(styles['@media']).forEach(([query, props]) => {
      const parsedQuery = parseMediaQuery(query, theme);
      cssRules += `\n@media ${parsedQuery} { .${className} { ${objectToCssString(props, theme)} } }`;
    });
  }

  // Keyframes are always top-level rules
  if (keyframesRules.length > 0) {
    cssRules += `\n${keyframesRules.join('\n')}`;
  }
  sheet.textContent += `\n${cssRules}`;
  if (useCache) {
    cache.set(styleStr, className);
  }
  return className;
};
const clearStyles = () => {
  if (styleSheet) {
    styleSheet.remove();
    styleSheet = null;
  }
  cache.clear();
  counter = 0;
};
const combineClasses = (...classes) => {
  return classes.filter(Boolean).join(' ');
};

/***/ }),

/***/ "./src/core/css/types.ts":
/*!*******************************!*\
  !*** ./src/core/css/types.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ "./src/core/hooks/useAnimation.ts":
/*!****************************************!*\
  !*** ./src/core/hooks/useAnimation.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   useFade: () => (/* binding */ useFade),
/* harmony export */   useSlide: () => (/* binding */ useSlide),
/* harmony export */   useTransition: () => (/* binding */ useTransition)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);

const useTransition = (initialState = false, options = {}) => {
  const {
    duration = 300,
    delay = 0,
    timingFunction = 'ease'
  } = options;
  const [isVisible, setIsVisible] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(initialState);
  const [isRendered, setIsRendered] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(initialState);
  const timeoutRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);

  // FIX: This effect syncs the internal state of the hook with the controlling prop.
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    setIsVisible(initialState);
  }, [initialState]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (isVisible) {
      setIsRendered(true);
    } else {
      timeoutRef.current = setTimeout(() => {
        setIsRendered(false);
      }, duration);
    }
    return () => {
      if (timeoutRef.current) {
        clearTimeout(timeoutRef.current);
      }
    };
  }, [isVisible, duration]);
  const style = {
    transition: `opacity ${duration}ms ${timingFunction} ${delay}ms`,
    opacity: isVisible ? 1 : 0
  };
  const show = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => setIsVisible(true), []);
  const hide = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => setIsVisible(false), []);
  const toggle = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => setIsVisible(prev => !prev), []);
  return {
    isVisible,
    isRendered,
    style,
    show,
    hide,
    toggle
  };
};
const useFade = (initialState = false, duration = 300) => {
  return useTransition(initialState, {
    duration
  });
};
const useSlide = (initialState = false, options = {}) => {
  const {
    direction = 'right',
    duration = 300,
    delay = 0,
    timingFunction = 'ease'
  } = options;
  const [isVisible, setIsVisible] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(initialState);
  const [isRendered, setIsRendered] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(initialState);

  // FIX: This effect syncs the internal state of the hook with the controlling prop.
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    setIsVisible(initialState);
  }, [initialState]);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    if (isVisible) {
      setIsRendered(true);
    } else {
      const timeout = setTimeout(() => {
        setIsRendered(false);
      }, duration);
      return () => clearTimeout(timeout);
    }
  }, [isVisible, duration]);
  const getTransform = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {
    const distance = '100%';
    switch (direction) {
      case 'left':
        return `translateX(${isVisible ? '0' : `-${distance}`})`;
      case 'right':
        return `translateX(${isVisible ? '0' : distance})`;
      case 'up':
        return `translateY(${isVisible ? '0' : `-${distance}`})`;
      case 'down':
        return `translateY(${isVisible ? '0' : distance})`;
    }
  }, [direction, isVisible]);
  const style = {
    transition: `transform ${duration}ms ${timingFunction} ${delay}ms`,
    transform: getTransform()
  };
  const show = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => setIsVisible(true), []);
  const hide = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => setIsVisible(false), []);
  const toggle = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => setIsVisible(prev => !prev), []);
  return {
    isVisible,
    isRendered,
    style,
    show,
    hide,
    toggle
  };
};

/***/ }),

/***/ "./src/core/hooks/useCurveAnimation.ts":
/*!*********************************************!*\
  !*** ./src/core/hooks/useCurveAnimation.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   useCurveAnimation: () => (/* binding */ useCurveAnimation)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _animation_CurveContextAnimation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../animation/CurveContextAnimation */ "./src/core/animation/CurveContextAnimation.ts");


const useCurveAnimation = config => {
  const {
    initialValue = 0,
    duration = 1000,
    type = 'easeInOut',
    bounceStrength,
    elasticity,
    autoStart = false
  } = config;
  const [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({
    value: initialValue,
    progress: 0,
    isRunning: false
  });
  const animationRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  const createAnimation = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((from, to) => {
    if (animationRef.current) {
      animationRef.current.stop();
    }
    animationRef.current = new _animation_CurveContextAnimation__WEBPACK_IMPORTED_MODULE_1__.CurveContextAnimation({
      duration,
      from,
      to,
      type,
      bounceStrength,
      elasticity
    }, setState);
  }, [duration, type, bounceStrength, elasticity]);
  const animate = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(targetValue => {
    createAnimation(state.value, targetValue);
    animationRef.current?.start();
  }, [state.value, createAnimation]);
  const stop = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {
    animationRef.current?.stop();
  }, []);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    return () => {
      animationRef.current?.stop();
    };
  }, []);
  return {
    ...state,
    animate,
    stop
  };
};

// Example usage:
/*
const MyComponent = () => {
  const animation = useCurveAnimation({
    duration: 1000,
    type: 'bounce',
    bounceStrength: 3
  })

  return (
    <div
      style={{
        transform: `translateX(${animation.value}px)`
      }}
    >
      <button onClick={() => animation.animate(200)}>
        Move Right
      </button>
    </div>
  )
}
*/

/***/ }),

/***/ "./src/core/hooks/useInteractions.ts":
/*!*******************************************!*\
  !*** ./src/core/hooks/useInteractions.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   useClickOutside: () => (/* binding */ useClickOutside),
/* harmony export */   useDebounce: () => (/* binding */ useDebounce),
/* harmony export */   useHover: () => (/* binding */ useHover),
/* harmony export */   useLocalStorage: () => (/* binding */ useLocalStorage)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);

const useClickOutside = callback => {
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    const handleClick = event => {
      if (ref.current && !ref.current.contains(event.target)) {
        callback();
      }
    };
    document.addEventListener('mousedown', handleClick);
    return () => document.removeEventListener('mousedown', handleClick);
  }, [callback]);
  return ref;
};
const useHover = () => {
  const [isHovered, setIsHovered] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const ref = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    const element = ref.current;
    if (!element) return;
    const handleMouseEnter = () => setIsHovered(true);
    const handleMouseLeave = () => setIsHovered(false);
    element.addEventListener('mouseenter', handleMouseEnter);
    element.addEventListener('mouseleave', handleMouseLeave);
    return () => {
      element.removeEventListener('mouseenter', handleMouseEnter);
      element.removeEventListener('mouseleave', handleMouseLeave);
    };
  }, []);
  return [ref, isHovered];
};
const useLocalStorage = (key, initialValue) => {
  const [storedValue, setStoredValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(() => {
    if (typeof window === 'undefined') return initialValue;
    try {
      const item = window.localStorage.getItem(key);
      return item ? JSON.parse(item) : initialValue;
    } catch (error) {
      console.warn(`Error reading localStorage key "${key}":`, error);
      return initialValue;
    }
  });
  const setValue = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(value => {
    try {
      const valueToStore = value instanceof Function ? value(storedValue) : value;
      setStoredValue(valueToStore);
      if (typeof window !== 'undefined') {
        window.localStorage.setItem(key, JSON.stringify(valueToStore));
      }
    } catch (error) {
      console.warn(`Error setting localStorage key "${key}":`, error);
    }
  }, [key, storedValue]);
  return [storedValue, setValue];
};
const useDebounce = (value, delay) => {
  const [debouncedValue, setDebouncedValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(value);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    const timer = setTimeout(() => setDebouncedValue(value), delay);
    return () => clearTimeout(timer);
  }, [value, delay]);
  return debouncedValue;
};

/***/ }),

/***/ "./src/core/hooks/useMedia.ts":
/*!************************************!*\
  !*** ./src/core/hooks/useMedia.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   useBreakpoint: () => (/* binding */ useBreakpoint),
/* harmony export */   useMediaQuery: () => (/* binding */ useMediaQuery),
/* harmony export */   useResponsiveValue: () => (/* binding */ useResponsiveValue)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");


const useMediaQuery = query => {
  const [matches, setMatches] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    const media = window.matchMedia(query);
    setMatches(media.matches);
    const listener = e => {
      setMatches(e.matches);
    };
    media.addEventListener('change', listener);
    return () => media.removeEventListener('change', listener);
  }, [query]);
  return matches;
};
const useBreakpoint = breakpoint => {
  const {
    theme
  } = (0,_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_1__.useTheme)();
  return useMediaQuery(`(min-width: ${theme.breakpoints[breakpoint]})`);
};
const useResponsiveValue = values => {
  const {
    theme
  } = (0,_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_1__.useTheme)();
  const breakpoints = Object.keys(theme.breakpoints);
  const matches = breakpoints.map(bp => ({
    breakpoint: bp,
    matches: useBreakpoint(bp)
  }));

  // Find the largest matching breakpoint
  const match = [...matches].reverse().find(m => m.matches && values[m.breakpoint] !== undefined);
  return match ? values[match.breakpoint] : values.default;
};

/***/ }),

/***/ "./src/core/hooks/useStyles.ts":
/*!*************************************!*\
  !*** ./src/core/hooks/useStyles.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   useStyles: () => (/* binding */ useStyles),
/* harmony export */   withStyles: () => (/* binding */ withStyles)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _css_createClassFlow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../css/createClassFlow */ "./src/core/css/createClassFlow.ts");
/* harmony import */ var _theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");



const useStyles = prefix => {
  const {
    theme
  } = (0,_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
  const cacheRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(new Map());
  const createStyle = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((styles, options = {}) => {
    return (0,_css_createClassFlow__WEBPACK_IMPORTED_MODULE_1__.createClassFlow)(styles, {
      ...options,
      prefix
    }, theme);
  }, [prefix, theme]);
  return createStyle;
};
const withStyles = (Component, styles, options = {}) => {
  return props => {
    const {
      theme
    } = (0,_theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme)();
    const className = (0,_css_createClassFlow__WEBPACK_IMPORTED_MODULE_1__.createClassFlow)(typeof styles === 'function' ? styles(props) : styles, options, theme);

    // Avoid JSX in .ts files to keep parsing safe; use createElement
    return react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Component, {
      ...props,
      className
    });
  };
};

/***/ }),

/***/ "./src/core/hooks/useThemeSwitch.ts":
/*!******************************************!*\
  !*** ./src/core/hooks/useThemeSwitch.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   defaultTheme: () => (/* binding */ defaultTheme),
/* harmony export */   useThemeSwitch: () => (/* binding */ useThemeSwitch)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);

const defaultTheme = {
  colors: {
    primary: '#60a5fa',
    // A nice blue from the charts
    secondary: '#4b5563',
    // A darker gray for borders/secondary elements
    accent: '#b45309',
    // amber-700, WCAG AA compliant with white text
    background: 'transparent',
    // Main background, pure black
    backgroundSecondary: 'rgba(28, 28, 28, 0.75)',
    // A slightly off-black glassy background
    border: 'rgba(255, 255, 255, 0.15)',
    // A slightly brighter border for better definition
    text: '#e6edf3',
    // Main text color
    textSecondary: '#7d8590' // Lighter text color for labels
  },
  spacing: {
    xs: '0.25rem',
    sm: '0.5rem',
    md: '1rem',
    lg: '1.5rem',
    xl: '2.5rem'
  },
  breakpoints: {
    xs: '480px',
    sm: '640px',
    md: '768px',
    lg: '1024px',
    xl: '1280px',
    '2xl': '1536px'
  },
  typography: {
    fontSizes: {
      xs: '0.75rem',
      sm: '0.875rem',
      base: '1rem',
      lg: '1.125rem',
      xl: '1.25rem'
    },
    fontWeights: {
      normal: 400,
      medium: 500,
      semibold: 600,
      bold: 700
    },
    lineHeights: {
      tight: 1.25,
      normal: 1.5,
      relaxed: 1.75
    }
  },
  radii: {
    sm: '0.125rem',
    md: '0.25rem',
    lg: '0.5rem',
    xl: '1rem',
    '2xl': '1.5rem',
    full: '9999px'
  },
  blur: {
    sm: '4px',
    md: '8px',
    lg: '16px',
    xl: '24px'
  },
  maxWidths: {
    xs: '640px',
    sm: '768px',
    md: '1024px',
    lg: '1280px',
    xl: '1536px',
    '2xl': '1800px',
    container: '1280px'
  }
};
const darkTheme = {
  ...defaultTheme,
  colors: {
    ...defaultTheme.colors,
    primary: '#60a5fa',
    // blue-400
    secondary: '#94a3b8',
    background: 'transparent',
    text: '#f3f4f6'
  }
};

// A simple light theme example
const lightTheme = {
  ...defaultTheme,
  colors: {
    ...defaultTheme.colors,
    primary: '#1d4ed8',
    // blue-700, WCAG AA compliant with white text
    secondary: '#6b7280',
    background: '#f3f4f6',
    backgroundSecondary: 'rgba(255, 255, 255, 0.75)',
    border: 'rgba(0, 0, 0, 0.1)',
    text: '#1f2937',
    textSecondary: '#4b5563'
  }
};
const THEME_STORAGE_KEY = 'zwheui-theme-mode';
const useThemeSwitch = () => {
  const [mode, setMode] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(() => {
    if (typeof window === 'undefined') return 'dark';
    return localStorage.getItem(THEME_STORAGE_KEY) || 'dark';
  });
  const [customTheme, setCustomTheme] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);
  const getThemeByMode = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(currentMode => {
    switch (currentMode) {
      case 'dark':
        return darkTheme;
      case 'light':
        return lightTheme;
      case 'custom':
        return customTheme || defaultTheme;
      default:
        return darkTheme;
    }
  }, [customTheme]);
  const switchTheme = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((newMode, theme) => {
    setMode(newMode);
    if (newMode === 'custom' && theme) {
      setCustomTheme(theme);
    }
    if (typeof window !== 'undefined') {
      localStorage.setItem(THEME_STORAGE_KEY, newMode);
    }
  }, []);
  return {
    mode,
    switchTheme,
    currentTheme: getThemeByMode(mode),
    setCustomTheme
  };
};

/***/ }),

/***/ "./src/core/index.ts":
/*!***************************!*\
  !*** ./src/core/index.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SignInPage: () => (/* reexport safe */ _auth_SignInPage__WEBPACK_IMPORTED_MODULE_6__.SignInPage),
/* harmony export */   ThemeProvider: () => (/* reexport safe */ _theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.ThemeProvider),
/* harmony export */   clearStyles: () => (/* reexport safe */ _css_createClassFlow__WEBPACK_IMPORTED_MODULE_1__.clearStyles),
/* harmony export */   combineClasses: () => (/* reexport safe */ _css_createClassFlow__WEBPACK_IMPORTED_MODULE_1__.combineClasses),
/* harmony export */   createClassFlow: () => (/* reexport safe */ _css_createClassFlow__WEBPACK_IMPORTED_MODULE_1__.createClassFlow),
/* harmony export */   defaultTheme: () => (/* reexport safe */ _theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.defaultTheme),
/* harmony export */   useBreakpoint: () => (/* reexport safe */ _hooks_useMedia__WEBPACK_IMPORTED_MODULE_3__.useBreakpoint),
/* harmony export */   useMediaQuery: () => (/* reexport safe */ _hooks_useMedia__WEBPACK_IMPORTED_MODULE_3__.useMediaQuery),
/* harmony export */   useResponsiveValue: () => (/* reexport safe */ _hooks_useMedia__WEBPACK_IMPORTED_MODULE_3__.useResponsiveValue),
/* harmony export */   useStyles: () => (/* reexport safe */ _hooks_useStyles__WEBPACK_IMPORTED_MODULE_4__.useStyles),
/* harmony export */   useTheme: () => (/* reexport safe */ _theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__.useTheme),
/* harmony export */   withStyles: () => (/* reexport safe */ _hooks_useStyles__WEBPACK_IMPORTED_MODULE_4__.withStyles)
/* harmony export */ });
/* harmony import */ var _css_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./css/types */ "./src/core/css/types.ts");
/* harmony import */ var _css_createClassFlow__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./css/createClassFlow */ "./src/core/css/createClassFlow.ts");
/* harmony import */ var _theme_ThemeProvider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./theme/ThemeProvider */ "./src/core/theme/ThemeProvider.tsx");
/* harmony import */ var _hooks_useMedia__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./hooks/useMedia */ "./src/core/hooks/useMedia.ts");
/* harmony import */ var _hooks_useStyles__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./hooks/useStyles */ "./src/core/hooks/useStyles.ts");
/* harmony import */ var _auth_AuthResponse__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./auth/AuthResponse */ "./src/core/auth/AuthResponse.ts");
/* harmony import */ var _auth_SignInPage__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./auth/SignInPage */ "./src/core/auth/SignInPage.tsx");






// Auth exports



/***/ }),

/***/ "./src/core/theme/ThemeProvider.tsx":
/*!******************************************!*\
  !*** ./src/core/theme/ThemeProvider.tsx ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ThemeProvider: () => (/* binding */ ThemeProvider),
/* harmony export */   defaultTheme: () => (/* reexport safe */ _hooks_useThemeSwitch__WEBPACK_IMPORTED_MODULE_1__.defaultTheme),
/* harmony export */   useTheme: () => (/* binding */ useTheme)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _hooks_useThemeSwitch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../hooks/useThemeSwitch */ "./src/core/hooks/useThemeSwitch.ts");




// The new context provides the current theme and the functions to change it.

const ThemeContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);
const ThemeProvider = ({
  children
}) => {
  // The provider now uses the hook to manage its state.
  const {
    currentTheme,
    mode,
    switchTheme,
    setCustomTheme
  } = (0,_hooks_useThemeSwitch__WEBPACK_IMPORTED_MODULE_1__.useThemeSwitch)();
  const value = {
    theme: currentTheme,
    mode,
    switchTheme,
    setCustomTheme
  };
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ThemeContext.Provider, {
    value: value
  }, children);
};
const useTheme = () => {
  const context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(ThemeContext);
  if (!context) {
    throw new Error('useTheme must be used within a ThemeProvider');
  }
  return context;
};

/***/ }),

/***/ "./src/core/utils/scale.ts":
/*!*********************************!*\
  !*** ./src/core/utils/scale.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createLinearScale: () => (/* binding */ createLinearScale)
/* harmony export */ });
// Basic linear scale implementation
const createLinearScale = (domain, range) => {
  const scale = value => {
    if (domain[1] === domain[0]) return range[0];
    const ratio = (value - domain[0]) / (domain[1] - domain[0]);
    return range[0] + ratio * (range[1] - range[0]);
  };
  scale.invert = pixel => {
    if (range[1] === range[0]) return domain[0];
    const ratio = (pixel - range[0]) / (range[1] - range[0]);
    return domain[0] + ratio * (domain[1] - domain[0]);
  };
  scale.domain = () => domain;
  return scale;
};

/***/ }),

/***/ "./src/icons/ArchiveIcon.tsx":
/*!***********************************!*\
  !*** ./src/icons/ArchiveIcon.tsx ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ArchiveIcon: () => (/* binding */ ArchiveIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const ArchiveIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "1.5",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M21 8V20C21 20.5304 20.7893 21.0391 20.4142 21.4142C20.0391 21.7893 19.5304 22 19 22H5C4.46957 22 3.96086 21.7893 3.58579 21.4142C3.21071 21.0391 3 20.5304 3 20V8"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M23 3H1V8H23V3Z"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M10 12H14"
}));

/***/ }),

/***/ "./src/icons/ArrowDownIcon.tsx":
/*!*************************************!*\
  !*** ./src/icons/ArrowDownIcon.tsx ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ArrowDownIcon: () => (/* binding */ ArrowDownIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const ArrowDownIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("line", {
  x1: "12",
  y1: "5",
  x2: "12",
  y2: "19"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("polyline", {
  points: "19 12 12 19 5 12"
}));

/***/ }),

/***/ "./src/icons/BookOpenIcon.tsx":
/*!************************************!*\
  !*** ./src/icons/BookOpenIcon.tsx ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BookOpenIcon: () => (/* binding */ BookOpenIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const BookOpenIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z"
}));

/***/ }),

/***/ "./src/icons/ChatBubbleIcon.tsx":
/*!**************************************!*\
  !*** ./src/icons/ChatBubbleIcon.tsx ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ChatBubbleIcon: () => (/* binding */ ChatBubbleIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const ChatBubbleIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"
}));

/***/ }),

/***/ "./src/icons/ChatDotsIcon.tsx":
/*!************************************!*\
  !*** ./src/icons/ChatDotsIcon.tsx ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ChatDotsIcon: () => (/* binding */ ChatDotsIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const ChatDotsIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("line", {
  x1: "8",
  y1: "10",
  x2: "8.01",
  y2: "10"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("line", {
  x1: "12",
  y1: "10",
  x2: "12.01",
  y2: "10"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("line", {
  x1: "16",
  y1: "10",
  x2: "16.01",
  y2: "10"
}));

/***/ }),

/***/ "./src/icons/ChevronLeftIcon.tsx":
/*!***************************************!*\
  !*** ./src/icons/ChevronLeftIcon.tsx ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ChevronLeftIcon: () => (/* binding */ ChevronLeftIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const ChevronLeftIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("polyline", {
  points: "15 18 9 12 15 6"
}));

/***/ }),

/***/ "./src/icons/ChevronRightIcon.tsx":
/*!****************************************!*\
  !*** ./src/icons/ChevronRightIcon.tsx ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ChevronRightIcon: () => (/* binding */ ChevronRightIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const ChevronRightIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("polyline", {
  points: "9 18 15 12 9 6"
}));

/***/ }),

/***/ "./src/icons/CloudArrowDownIcon.tsx":
/*!******************************************!*\
  !*** ./src/icons/CloudArrowDownIcon.tsx ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CloudArrowDownIcon: () => (/* binding */ CloudArrowDownIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const CloudArrowDownIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M8 17l4 4 4-4"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M12 12v9"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M20.88 18.09A5 5 0 0018 9h-1.26A8 8 0 103 16.29"
}));

/***/ }),

/***/ "./src/icons/CloudArrowUpIcon.tsx":
/*!****************************************!*\
  !*** ./src/icons/CloudArrowUpIcon.tsx ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CloudArrowUpIcon: () => (/* binding */ CloudArrowUpIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const CloudArrowUpIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M8 17l4-4 4 4"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M12 19V8"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M20.88 18.09A5 5 0 0018 9h-1.26A8 8 0 103 16.29"
}));

/***/ }),

/***/ "./src/icons/CogIcon.tsx":
/*!*******************************!*\
  !*** ./src/icons/CogIcon.tsx ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CogIcon: () => (/* binding */ CogIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const CogIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("circle", {
  cx: "12",
  cy: "12",
  r: "3"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z"
}));

/***/ }),

/***/ "./src/icons/CoinsIcon.tsx":
/*!*********************************!*\
  !*** ./src/icons/CoinsIcon.tsx ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CoinsIcon: () => (/* binding */ CoinsIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const CoinsIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("circle", {
  cx: "8",
  cy: "8",
  r: "6"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M18.09 10.76A6 6 0 0 0 10.24 3M8 12.5A6 6 0 1 0 8 23a6 6 0 0 0 0-10.5z"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M14.24 16.76A6 6 0 0 0 16 9"
}));

/***/ }),

/***/ "./src/icons/CommentsIcon.tsx":
/*!************************************!*\
  !*** ./src/icons/CommentsIcon.tsx ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CommentsIcon: () => (/* binding */ CommentsIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const CommentsIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"
}));

/***/ }),

/***/ "./src/icons/CopyIcon.tsx":
/*!********************************!*\
  !*** ./src/icons/CopyIcon.tsx ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CopyIcon: () => (/* binding */ CopyIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const CopyIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "1.5",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M16 4H20C21.1046 4 22 4.89543 22 6V20C22 21.1046 21.1046 22 20 22H8C6.89543 22 6 21.1046 6 20V16"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M16 2H8C6.89543 2 6 2.89543 6 4V16C6 17.1046 6.89543 18 8 18H16C17.1046 18 18 17.1046 18 16V4C18 2.89543 17.1046 2 16 2Z"
}));

/***/ }),

/***/ "./src/icons/DiamondIcon.tsx":
/*!***********************************!*\
  !*** ./src/icons/DiamondIcon.tsx ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DiamondIcon: () => (/* binding */ DiamondIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const DiamondIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M12 2L2 12l10 10 10-10L12 2z"
}));

/***/ }),

/***/ "./src/icons/DocumentIcon.tsx":
/*!************************************!*\
  !*** ./src/icons/DocumentIcon.tsx ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DocumentIcon: () => (/* binding */ DocumentIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const DocumentIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("polyline", {
  points: "14 2 14 8 20 8"
}));

/***/ }),

/***/ "./src/icons/DownloadIcon.tsx":
/*!************************************!*\
  !*** ./src/icons/DownloadIcon.tsx ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DownloadIcon: () => (/* binding */ DownloadIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const DownloadIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("polyline", {
  points: "7 10 12 15 17 10"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("line", {
  x1: "12",
  y1: "15",
  x2: "12",
  y2: "3"
}));

/***/ }),

/***/ "./src/icons/EllipsisVerticalIcon.tsx":
/*!********************************************!*\
  !*** ./src/icons/EllipsisVerticalIcon.tsx ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   EllipsisVerticalIcon: () => (/* binding */ EllipsisVerticalIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const EllipsisVerticalIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("circle", {
  cx: "12",
  cy: "12",
  r: "1"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("circle", {
  cx: "12",
  cy: "5",
  r: "1"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("circle", {
  cx: "12",
  cy: "19",
  r: "1"
}));

/***/ }),

/***/ "./src/icons/ErrorIcon.tsx":
/*!*********************************!*\
  !*** ./src/icons/ErrorIcon.tsx ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ErrorIcon: () => (/* binding */ ErrorIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const ErrorIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "20",
  height: "20",
  viewBox: "0 0 24 24",
  fill: "currentColor",
  xmlns: "http://www.w3.org/2000/svg"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M18.3 5.71a.996.996 0 0 0-1.41 0L12 10.59 7.11 5.7A.996.996 0 1 0 5.7 7.11L10.59 12 5.7 16.89a.996.996 0 1 0 1.41 1.41L12 13.41l4.89 4.89a.996.996 0 1 0 1.41-1.41L13.41 12l4.89-4.89c.38-.38.38-1.02 0-1.4z"
}));

/***/ }),

/***/ "./src/icons/ExternalLinkIcon.tsx":
/*!****************************************!*\
  !*** ./src/icons/ExternalLinkIcon.tsx ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ExternalLinkIcon: () => (/* binding */ ExternalLinkIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const ExternalLinkIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("polyline", {
  points: "15 3 21 3 21 9"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("line", {
  x1: "10",
  y1: "14",
  x2: "21",
  y2: "3"
}));

/***/ }),

/***/ "./src/icons/FileIcon.tsx":
/*!********************************!*\
  !*** ./src/icons/FileIcon.tsx ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   FileIcon: () => (/* binding */ FileIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const FileIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("polyline", {
  points: "13 2 13 9 20 9"
}));

/***/ }),

/***/ "./src/icons/FilterIcon.tsx":
/*!**********************************!*\
  !*** ./src/icons/FilterIcon.tsx ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   FilterIcon: () => (/* binding */ FilterIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const FilterIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("polygon", {
  points: "22 3 2 3 10 12.46 10 19 14 21 14 12.46 22 3"
}));

/***/ }),

/***/ "./src/icons/FolderIcon.tsx":
/*!**********************************!*\
  !*** ./src/icons/FolderIcon.tsx ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   FolderIcon: () => (/* binding */ FolderIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const FolderIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"
}));

/***/ }),

/***/ "./src/icons/GithubIcon.tsx":
/*!**********************************!*\
  !*** ./src/icons/GithubIcon.tsx ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   GithubIcon: () => (/* binding */ GithubIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const GithubIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  viewBox: "0 0 24 24",
  fill: "currentColor"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.91 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576C20.566 21.797 24 17.3 24 12c0-6.627-5.373-12-12-12z"
}));

/***/ }),

/***/ "./src/icons/GoogleIcon.tsx":
/*!**********************************!*\
  !*** ./src/icons/GoogleIcon.tsx ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   GoogleIcon: () => (/* binding */ GoogleIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const GoogleIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  viewBox: "0 0 48 48"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  fill: "#FFC107",
  d: "M43.611 20.083H42V20H24v8h11.303c-1.649 4.657-6.08 8-11.303 8-6.627 0-12-5.373-12-12s5.373-12 12-12c3.059 0 5.842 1.154 7.961 3.039L38.804 9.61C34.566 5.845 29.643 4 24 4 12.955 4 4 12.955 4 24s8.955 20 20 20 20-8.955 20-20c0-1.341-.138-2.65-.389-3.917z"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  fill: "#FF3D00",
  d: "M6.306 14.691c-1.321 2.356-2.094 5.12-2.094 8.129s.773 5.773 2.094 8.129l5.62-4.381C11.091 25.131 11 24.575 11 24s.091-1.131.226-2.249l-5.62-4.381z"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  fill: "#4CAF50",
  d: "M24 44c5.166 0 9.657-1.855 13.04-4.85l-5.48-4.246c-1.631 1.09-3.701 1.74-5.961 1.74-4.903 0-9.09-3.212-10.58-7.551l-5.62 4.381C8.909 39.448 15.897 44 24 44z"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  fill: "#1976D2",
  d: "M43.611 20.083H42V20H24v8h11.303c-.792 2.237-2.231 4.16-4.082 5.564l5.48 4.246c3.226-2.991 5.34-7.233 5.34-12.233c0-1.341-.138-2.65-.389-3.917z"
}));

/***/ }),

/***/ "./src/icons/HeartIcon.tsx":
/*!*********************************!*\
  !*** ./src/icons/HeartIcon.tsx ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   HeartIcon: () => (/* binding */ HeartIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const HeartIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"
}));

/***/ }),

/***/ "./src/icons/HomeIcon.tsx":
/*!********************************!*\
  !*** ./src/icons/HomeIcon.tsx ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   HomeIcon: () => (/* binding */ HomeIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const HomeIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "m3 9 9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("polyline", {
  points: "9 22 9 12 15 12 15 22"
}));

/***/ }),

/***/ "./src/icons/ImageIcon.tsx":
/*!*********************************!*\
  !*** ./src/icons/ImageIcon.tsx ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ImageIcon: () => (/* binding */ ImageIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const ImageIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("rect", {
  x: "3",
  y: "3",
  width: "18",
  height: "18",
  rx: "2",
  ry: "2"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("circle", {
  cx: "8.5",
  cy: "8.5",
  r: "1.5"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("polyline", {
  points: "21 15 16 10 5 21"
}));

/***/ }),

/***/ "./src/icons/InfoIcon.tsx":
/*!********************************!*\
  !*** ./src/icons/InfoIcon.tsx ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   InfoIcon: () => (/* binding */ InfoIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const InfoIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "20",
  height: "20",
  viewBox: "0 0 24 24",
  fill: "currentColor",
  xmlns: "http://www.w3.org/2000/svg"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z"
}));

/***/ }),

/***/ "./src/icons/KeyIcon.tsx":
/*!*******************************!*\
  !*** ./src/icons/KeyIcon.tsx ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   KeyIcon: () => (/* binding */ KeyIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const KeyIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M21 2l-2 2m-7.61 7.61a5.5 5.5 0 1 1-7.778 7.778 5.5 5.5 0 0 1 7.777-7.777zm0 0L15.5 7.5m0 0l3 3L22 7l-3-3m-3.5 3.5L19 4"
}));

/***/ }),

/***/ "./src/icons/LayoutIcon.tsx":
/*!**********************************!*\
  !*** ./src/icons/LayoutIcon.tsx ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   LayoutIcon: () => (/* binding */ LayoutIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const LayoutIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("rect", {
  x: "3",
  y: "3",
  width: "18",
  height: "18",
  rx: "2",
  ry: "2"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("line", {
  x1: "3",
  y1: "9",
  x2: "21",
  y2: "9"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("line", {
  x1: "9",
  y1: "21",
  x2: "9",
  y2: "9"
}));

/***/ }),

/***/ "./src/icons/LockIcon.tsx":
/*!********************************!*\
  !*** ./src/icons/LockIcon.tsx ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   LockIcon: () => (/* binding */ LockIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const LockIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("rect", {
  x: "3",
  y: "11",
  width: "18",
  height: "11",
  rx: "2",
  ry: "2"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M7 11V7a5 5 0 0 1 10 0v4"
}));

/***/ }),

/***/ "./src/icons/LockOpenIcon.tsx":
/*!************************************!*\
  !*** ./src/icons/LockOpenIcon.tsx ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   LockOpenIcon: () => (/* binding */ LockOpenIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const LockOpenIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("rect", {
  x: "3",
  y: "11",
  width: "18",
  height: "11",
  rx: "2",
  ry: "2"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M7 11V7a5 5 0 0 1 9.9-1"
}));

/***/ }),

/***/ "./src/icons/LoginIcon.tsx":
/*!*********************************!*\
  !*** ./src/icons/LoginIcon.tsx ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   LoginIcon: () => (/* binding */ LoginIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const LoginIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M15 3h4a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-4"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("polyline", {
  points: "10 17 15 12 10 7"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("line", {
  x1: "15",
  y1: "12",
  x2: "3",
  y2: "12"
}));

/***/ }),

/***/ "./src/icons/LogoutIcon.tsx":
/*!**********************************!*\
  !*** ./src/icons/LogoutIcon.tsx ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   LogoutIcon: () => (/* binding */ LogoutIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const LogoutIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("polyline", {
  points: "16 17 21 12 16 7"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("line", {
  x1: "21",
  y1: "12",
  x2: "9",
  y2: "12"
}));

/***/ }),

/***/ "./src/icons/MinusSquareIcon.tsx":
/*!***************************************!*\
  !*** ./src/icons/MinusSquareIcon.tsx ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MinusSquareIcon: () => (/* binding */ MinusSquareIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const MinusSquareIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("rect", {
  x: "3",
  y: "3",
  width: "18",
  height: "18",
  rx: "2",
  ry: "2"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("line", {
  x1: "8",
  y1: "12",
  x2: "16",
  y2: "12"
}));

/***/ }),

/***/ "./src/icons/PaperPlaneIcon.tsx":
/*!**************************************!*\
  !*** ./src/icons/PaperPlaneIcon.tsx ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   PaperPlaneIcon: () => (/* binding */ PaperPlaneIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const PaperPlaneIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("line", {
  x1: "22",
  y1: "2",
  x2: "11",
  y2: "13"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("polygon", {
  points: "22 2 15 22 11 13 2 9 22 2"
}));

/***/ }),

/***/ "./src/icons/PauseIcon.tsx":
/*!*********************************!*\
  !*** ./src/icons/PauseIcon.tsx ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   PauseIcon: () => (/* binding */ PauseIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const PauseIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("rect", {
  x: "6",
  y: "4",
  width: "4",
  height: "16"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("rect", {
  x: "14",
  y: "4",
  width: "4",
  height: "16"
}));

/***/ }),

/***/ "./src/icons/PencilIcon.tsx":
/*!**********************************!*\
  !*** ./src/icons/PencilIcon.tsx ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   PencilIcon: () => (/* binding */ PencilIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const PencilIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "1.5",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M21.2799 6.40005L11.7399 15.94C10.7899 16.89 7.96987 17.33 7.33987 16.7C6.70987 16.07 7.13987 13.25 8.08987 12.3L17.6399 2.75002C17.8754 2.49338 18.1605 2.28654 18.4781 2.14284C18.7956 1.99914 19.139 1.92123 19.4875 1.9139C19.836 1.90657 20.1821 1.97006 20.5056 2.10085C20.8291 2.23165 21.1219 2.4273 21.3686 2.67398C21.6153 2.92066 21.811 3.21345 21.9418 3.53697C22.0726 3.86049 22.1361 4.20655 22.1287 4.55505C22.1214 4.90355 22.0435 5.2469 21.8998 5.5644C21.7561 5.8819 21.5493 6.16702 21.2799 6.40005Z"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M11 4H6C4.93913 4 3.92172 4.42143 3.17157 5.17157C2.42143 5.92172 2 6.93913 2 8V18C2 19.0609 2.42143 20.0783 3.17157 20.8284C3.92172 21.5786 4.93913 22 6 22H16C17.0609 22 18.0783 21.5786 18.8284 20.8284C19.5786 20.0783 20 19.0609 20 18V13"
}));

/***/ }),

/***/ "./src/icons/PlayIcon.tsx":
/*!********************************!*\
  !*** ./src/icons/PlayIcon.tsx ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   PlayIcon: () => (/* binding */ PlayIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const PlayIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("polygon", {
  points: "5 3 19 12 5 21 5 3"
}));

/***/ }),

/***/ "./src/icons/PlusIcon.tsx":
/*!********************************!*\
  !*** ./src/icons/PlusIcon.tsx ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   PlusIcon: () => (/* binding */ PlusIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const PlusIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("line", {
  x1: "12",
  y1: "5",
  x2: "12",
  y2: "19"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("line", {
  x1: "5",
  y1: "12",
  x2: "19",
  y2: "12"
}));

/***/ }),

/***/ "./src/icons/PlusSquareIcon.tsx":
/*!**************************************!*\
  !*** ./src/icons/PlusSquareIcon.tsx ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   PlusSquareIcon: () => (/* binding */ PlusSquareIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const PlusSquareIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("rect", {
  x: "3",
  y: "3",
  width: "18",
  height: "18",
  rx: "2",
  ry: "2"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("line", {
  x1: "12",
  y1: "8",
  x2: "12",
  y2: "16"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("line", {
  x1: "8",
  y1: "12",
  x2: "16",
  y2: "12"
}));

/***/ }),

/***/ "./src/icons/PrintIcon.tsx":
/*!*********************************!*\
  !*** ./src/icons/PrintIcon.tsx ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   PrintIcon: () => (/* binding */ PrintIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const PrintIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("polyline", {
  points: "6 9 6 2 18 2 18 9"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M6 18H4a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("rect", {
  x: "6",
  y: "14",
  width: "12",
  height: "8"
}));

/***/ }),

/***/ "./src/icons/RedoIcon.tsx":
/*!********************************!*\
  !*** ./src/icons/RedoIcon.tsx ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   RedoIcon: () => (/* binding */ RedoIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const RedoIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("polyline", {
  points: "23 4 23 10 17 10"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M20.49 15a9 9 0 1 1-2.12-9.36L23 10"
}));

/***/ }),

/***/ "./src/icons/SelectorIcon.tsx":
/*!************************************!*\
  !*** ./src/icons/SelectorIcon.tsx ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SelectorIcon: () => (/* binding */ SelectorIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const SelectorIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("polyline", {
  points: "7 15 12 20 17 15"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("polyline", {
  points: "7 9 12 4 17 9"
}));

/***/ }),

/***/ "./src/icons/SendIcon.tsx":
/*!********************************!*\
  !*** ./src/icons/SendIcon.tsx ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SendIcon: () => (/* binding */ SendIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const SendIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("line", {
  x1: "22",
  y1: "2",
  x2: "11",
  y2: "13"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("polygon", {
  points: "22 2 15 22 11 13 2 9 22 2"
}));

/***/ }),

/***/ "./src/icons/SettingsIcon.tsx":
/*!************************************!*\
  !*** ./src/icons/SettingsIcon.tsx ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SettingsIcon: () => (/* binding */ SettingsIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const SettingsIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("circle", {
  cx: "12",
  cy: "12",
  r: "3"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z"
}));

/***/ }),

/***/ "./src/icons/ShareIcon.tsx":
/*!*********************************!*\
  !*** ./src/icons/ShareIcon.tsx ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ShareIcon: () => (/* binding */ ShareIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const ShareIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("polyline", {
  points: "16 6 12 2 8 6"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("line", {
  x1: "12",
  y1: "2",
  x2: "12",
  y2: "15"
}));

/***/ }),

/***/ "./src/icons/ShoppingCartIcon.tsx":
/*!****************************************!*\
  !*** ./src/icons/ShoppingCartIcon.tsx ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ShoppingCartIcon: () => (/* binding */ ShoppingCartIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const ShoppingCartIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("circle", {
  cx: "9",
  cy: "21",
  r: "1"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("circle", {
  cx: "20",
  cy: "21",
  r: "1"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6"
}));

/***/ }),

/***/ "./src/icons/SignOutAltIcon.tsx":
/*!**************************************!*\
  !*** ./src/icons/SignOutAltIcon.tsx ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SignOutAltIcon: () => (/* binding */ SignOutAltIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const SignOutAltIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("polyline", {
  points: "16 17 21 12 16 7"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("line", {
  x1: "21",
  y1: "12",
  x2: "9",
  y2: "12"
}));

/***/ }),

/***/ "./src/icons/SlidersIcon.tsx":
/*!***********************************!*\
  !*** ./src/icons/SlidersIcon.tsx ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SlidersIcon: () => (/* binding */ SlidersIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const SlidersIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("line", {
  x1: "4",
  y1: "21",
  x2: "4",
  y2: "14"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("line", {
  x1: "4",
  y1: "10",
  x2: "4",
  y2: "3"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("line", {
  x1: "12",
  y1: "21",
  x2: "12",
  y2: "12"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("line", {
  x1: "12",
  y1: "8",
  x2: "12",
  y2: "3"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("line", {
  x1: "20",
  y1: "21",
  x2: "20",
  y2: "16"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("line", {
  x1: "20",
  y1: "12",
  x2: "20",
  y2: "3"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("line", {
  x1: "1",
  y1: "14",
  x2: "7",
  y2: "14"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("line", {
  x1: "9",
  y1: "8",
  x2: "15",
  y2: "8"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("line", {
  x1: "17",
  y1: "16",
  x2: "23",
  y2: "16"
}));

/***/ }),

/***/ "./src/icons/SortAscendingIcon.tsx":
/*!*****************************************!*\
  !*** ./src/icons/SortAscendingIcon.tsx ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SortAscendingIcon: () => (/* binding */ SortAscendingIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const SortAscendingIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("line", {
  x1: "12",
  y1: "19",
  x2: "12",
  y2: "5"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("polyline", {
  points: "5 12 12 5 19 12"
}));

/***/ }),

/***/ "./src/icons/SortDescendingIcon.tsx":
/*!******************************************!*\
  !*** ./src/icons/SortDescendingIcon.tsx ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SortDescendingIcon: () => (/* binding */ SortDescendingIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const SortDescendingIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("line", {
  x1: "12",
  y1: "5",
  x2: "12",
  y2: "19"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("polyline", {
  points: "19 12 12 19 5 12"
}));

/***/ }),

/***/ "./src/icons/SquareIcon.tsx":
/*!**********************************!*\
  !*** ./src/icons/SquareIcon.tsx ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SquareIcon: () => (/* binding */ SquareIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const SquareIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("rect", {
  x: "3",
  y: "3",
  width: "18",
  height: "18",
  rx: "2",
  ry: "2"
}));

/***/ }),

/***/ "./src/icons/StarIcon.tsx":
/*!********************************!*\
  !*** ./src/icons/StarIcon.tsx ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   StarIcon: () => (/* binding */ StarIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const StarIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("polygon", {
  points: "12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2"
}));

/***/ }),

/***/ "./src/icons/StopIcon.tsx":
/*!********************************!*\
  !*** ./src/icons/StopIcon.tsx ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   StopIcon: () => (/* binding */ StopIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const StopIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("rect", {
  x: "6",
  y: "6",
  width: "12",
  height: "12"
}));

/***/ }),

/***/ "./src/icons/SuccessIcon.tsx":
/*!***********************************!*\
  !*** ./src/icons/SuccessIcon.tsx ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SuccessIcon: () => (/* binding */ SuccessIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const SuccessIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "20",
  height: "20",
  viewBox: "0 0 24 24",
  fill: "currentColor",
  xmlns: "http://www.w3.org/2000/svg"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
}));

/***/ }),

/***/ "./src/icons/TimesIcon.tsx":
/*!*********************************!*\
  !*** ./src/icons/TimesIcon.tsx ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TimesIcon: () => (/* binding */ TimesIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const TimesIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("line", {
  x1: "18",
  y1: "6",
  x2: "6",
  y2: "18"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("line", {
  x1: "6",
  y1: "6",
  x2: "18",
  y2: "18"
}));

/***/ }),

/***/ "./src/icons/TrashIcon.tsx":
/*!*********************************!*\
  !*** ./src/icons/TrashIcon.tsx ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TrashIcon: () => (/* binding */ TrashIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const TrashIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "1.5",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M3 6H5H21"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M8 6V4C8 3.46957 8.21071 2.96086 8.58579 2.58579C8.96086 2.21071 9.46957 2 10 2H14C14.5304 2 15.0391 2.21071 15.4142 2.58579C15.7893 2.96086 16 3.46957 16 4V6M19 6V20C19 20.5304 18.7893 21.0391 18.4142 21.4142C18.0391 21.7893 17.5304 22 17 22H7C6.46957 22 5.96086 21.7893 5.58579 21.4142C5.21071 21.0391 5 20.5304 5 20V6H19Z"
}));

/***/ }),

/***/ "./src/icons/TrophyIcon.tsx":
/*!**********************************!*\
  !*** ./src/icons/TrophyIcon.tsx ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TrophyIcon: () => (/* binding */ TrophyIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const TrophyIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M12 2L9 9h6l-3-7z"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M12 9c-2.76 0-5 2.24-5 5s2.24 5 5 5 5-2.24 5-5-2.24-5-5-5z"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M12 19.5V22"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M7 22h10"
}));

/***/ }),

/***/ "./src/icons/TypeIcon.tsx":
/*!********************************!*\
  !*** ./src/icons/TypeIcon.tsx ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TypeIcon: () => (/* binding */ TypeIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const TypeIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("polyline", {
  points: "4 7 4 4 20 4 20 7"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("line", {
  x1: "9",
  y1: "20",
  x2: "15",
  y2: "20"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("line", {
  x1: "12",
  y1: "4",
  x2: "12",
  y2: "20"
}));

/***/ }),

/***/ "./src/icons/UploadIcon.tsx":
/*!**********************************!*\
  !*** ./src/icons/UploadIcon.tsx ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   UploadIcon: () => (/* binding */ UploadIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const UploadIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("polyline", {
  points: "17 8 12 3 7 8"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("line", {
  x1: "12",
  y1: "3",
  x2: "12",
  y2: "15"
}));

/***/ }),

/***/ "./src/icons/UserIcon.tsx":
/*!********************************!*\
  !*** ./src/icons/UserIcon.tsx ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   UserIcon: () => (/* binding */ UserIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const UserIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("circle", {
  cx: "12",
  cy: "7",
  r: "4"
}));

/***/ }),

/***/ "./src/icons/UserPlusIcon.tsx":
/*!************************************!*\
  !*** ./src/icons/UserPlusIcon.tsx ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   UserPlusIcon: () => (/* binding */ UserPlusIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const UserPlusIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("circle", {
  cx: "8.5",
  cy: "7",
  r: "4"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("line", {
  x1: "20",
  y1: "8",
  x2: "20",
  y2: "14"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("line", {
  x1: "17",
  y1: "11",
  x2: "23",
  y2: "11"
}));

/***/ }),

/***/ "./src/icons/UsersIcon.tsx":
/*!*********************************!*\
  !*** ./src/icons/UsersIcon.tsx ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   UsersIcon: () => (/* binding */ UsersIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const UsersIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("circle", {
  cx: "9",
  cy: "7",
  r: "4"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M23 21v-2a4 4 0 0 0-3-3.87"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M16 3.13a4 4 0 0 1 0 7.75"
}));

/***/ }),

/***/ "./src/icons/VolumeMuteIcon.tsx":
/*!**************************************!*\
  !*** ./src/icons/VolumeMuteIcon.tsx ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   VolumeMuteIcon: () => (/* binding */ VolumeMuteIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const VolumeMuteIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("polygon", {
  points: "11 5 6 9 2 9 2 15 6 15 11 19 11 5"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("line", {
  x1: "23",
  y1: "9",
  x2: "17",
  y2: "15"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("line", {
  x1: "17",
  y1: "9",
  x2: "23",
  y2: "15"
}));

/***/ }),

/***/ "./src/icons/VolumeUpIcon.tsx":
/*!************************************!*\
  !*** ./src/icons/VolumeUpIcon.tsx ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   VolumeUpIcon: () => (/* binding */ VolumeUpIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const VolumeUpIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "1em",
  height: "1em",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  strokeWidth: "2",
  strokeLinecap: "round",
  strokeLinejoin: "round"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("polygon", {
  points: "11 5 6 9 2 9 2 15 6 15 11 19 11 5"
}), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M19.07 4.93a10 10 0 0 1 0 14.14M15.54 8.46a5 5 0 0 1 0 7.07"
}));

/***/ }),

/***/ "./src/icons/WarningIcon.tsx":
/*!***********************************!*\
  !*** ./src/icons/WarningIcon.tsx ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   WarningIcon: () => (/* binding */ WarningIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

const WarningIcon = props => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("svg", _extends({
  width: "20",
  height: "20",
  viewBox: "0 0 24 24",
  fill: "currentColor",
  xmlns: "http://www.w3.org/2000/svg"
}, props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("path", {
  d: "M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z"
}));

/***/ }),

/***/ "./src/icons/index.ts":
/*!****************************!*\
  !*** ./src/icons/index.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ArchiveIcon: () => (/* reexport safe */ _ArchiveIcon__WEBPACK_IMPORTED_MODULE_44__.ArchiveIcon),
/* harmony export */   ArrowDownIcon: () => (/* reexport safe */ _ArrowDownIcon__WEBPACK_IMPORTED_MODULE_21__.ArrowDownIcon),
/* harmony export */   BookOpenIcon: () => (/* reexport safe */ _BookOpenIcon__WEBPACK_IMPORTED_MODULE_22__.BookOpenIcon),
/* harmony export */   ChatBubbleIcon: () => (/* reexport safe */ _ChatBubbleIcon__WEBPACK_IMPORTED_MODULE_13__.ChatBubbleIcon),
/* harmony export */   ChatDotsIcon: () => (/* reexport safe */ _ChatDotsIcon__WEBPACK_IMPORTED_MODULE_14__.ChatDotsIcon),
/* harmony export */   ChevronLeftIcon: () => (/* reexport safe */ _ChevronLeftIcon__WEBPACK_IMPORTED_MODULE_23__.ChevronLeftIcon),
/* harmony export */   ChevronRightIcon: () => (/* reexport safe */ _ChevronRightIcon__WEBPACK_IMPORTED_MODULE_49__.ChevronRightIcon),
/* harmony export */   CloudArrowDownIcon: () => (/* reexport safe */ _CloudArrowDownIcon__WEBPACK_IMPORTED_MODULE_24__.CloudArrowDownIcon),
/* harmony export */   CloudArrowUpIcon: () => (/* reexport safe */ _CloudArrowUpIcon__WEBPACK_IMPORTED_MODULE_25__.CloudArrowUpIcon),
/* harmony export */   CogIcon: () => (/* reexport safe */ _CogIcon__WEBPACK_IMPORTED_MODULE_16__.CogIcon),
/* harmony export */   CoinsIcon: () => (/* reexport safe */ _CoinsIcon__WEBPACK_IMPORTED_MODULE_39__.CoinsIcon),
/* harmony export */   CommentsIcon: () => (/* reexport safe */ _CommentsIcon__WEBPACK_IMPORTED_MODULE_26__.CommentsIcon),
/* harmony export */   CopyIcon: () => (/* reexport safe */ _CopyIcon__WEBPACK_IMPORTED_MODULE_43__.CopyIcon),
/* harmony export */   DiamondIcon: () => (/* reexport safe */ _DiamondIcon__WEBPACK_IMPORTED_MODULE_56__.DiamondIcon),
/* harmony export */   DocumentIcon: () => (/* reexport safe */ _DocumentIcon__WEBPACK_IMPORTED_MODULE_57__.DocumentIcon),
/* harmony export */   DownloadIcon: () => (/* reexport safe */ _DownloadIcon__WEBPACK_IMPORTED_MODULE_27__.DownloadIcon),
/* harmony export */   EllipsisVerticalIcon: () => (/* reexport safe */ _EllipsisVerticalIcon__WEBPACK_IMPORTED_MODULE_28__.EllipsisVerticalIcon),
/* harmony export */   ErrorIcon: () => (/* reexport safe */ _ErrorIcon__WEBPACK_IMPORTED_MODULE_3__.ErrorIcon),
/* harmony export */   ExternalLinkIcon: () => (/* reexport safe */ _ExternalLinkIcon__WEBPACK_IMPORTED_MODULE_41__.ExternalLinkIcon),
/* harmony export */   FileIcon: () => (/* reexport safe */ _FileIcon__WEBPACK_IMPORTED_MODULE_65__.FileIcon),
/* harmony export */   FilterIcon: () => (/* reexport safe */ _FilterIcon__WEBPACK_IMPORTED_MODULE_17__.FilterIcon),
/* harmony export */   FolderIcon: () => (/* reexport safe */ _FolderIcon__WEBPACK_IMPORTED_MODULE_66__.FolderIcon),
/* harmony export */   GithubIcon: () => (/* reexport safe */ _GithubIcon__WEBPACK_IMPORTED_MODULE_62__.GithubIcon),
/* harmony export */   GoogleIcon: () => (/* reexport safe */ _GoogleIcon__WEBPACK_IMPORTED_MODULE_61__.GoogleIcon),
/* harmony export */   HeartIcon: () => (/* reexport safe */ _HeartIcon__WEBPACK_IMPORTED_MODULE_40__.HeartIcon),
/* harmony export */   HomeIcon: () => (/* reexport safe */ _HomeIcon__WEBPACK_IMPORTED_MODULE_0__.HomeIcon),
/* harmony export */   ImageIcon: () => (/* reexport safe */ _ImageIcon__WEBPACK_IMPORTED_MODULE_29__.ImageIcon),
/* harmony export */   InfoIcon: () => (/* reexport safe */ _InfoIcon__WEBPACK_IMPORTED_MODULE_4__.InfoIcon),
/* harmony export */   KeyIcon: () => (/* reexport safe */ _KeyIcon__WEBPACK_IMPORTED_MODULE_9__.KeyIcon),
/* harmony export */   LayoutIcon: () => (/* reexport safe */ _LayoutIcon__WEBPACK_IMPORTED_MODULE_52__.LayoutIcon),
/* harmony export */   LockIcon: () => (/* reexport safe */ _LockIcon__WEBPACK_IMPORTED_MODULE_10__.LockIcon),
/* harmony export */   LockOpenIcon: () => (/* reexport safe */ _LockOpenIcon__WEBPACK_IMPORTED_MODULE_55__.LockOpenIcon),
/* harmony export */   LoginIcon: () => (/* reexport safe */ _LoginIcon__WEBPACK_IMPORTED_MODULE_7__.LoginIcon),
/* harmony export */   LogoutIcon: () => (/* reexport safe */ _LogoutIcon__WEBPACK_IMPORTED_MODULE_8__.LogoutIcon),
/* harmony export */   MinusSquareIcon: () => (/* reexport safe */ _MinusSquareIcon__WEBPACK_IMPORTED_MODULE_64__.MinusSquareIcon),
/* harmony export */   PaperPlaneIcon: () => (/* reexport safe */ _PaperPlaneIcon__WEBPACK_IMPORTED_MODULE_30__.PaperPlaneIcon),
/* harmony export */   PauseIcon: () => (/* reexport safe */ _PauseIcon__WEBPACK_IMPORTED_MODULE_46__.PauseIcon),
/* harmony export */   PencilIcon: () => (/* reexport safe */ _PencilIcon__WEBPACK_IMPORTED_MODULE_42__.PencilIcon),
/* harmony export */   PlayIcon: () => (/* reexport safe */ _PlayIcon__WEBPACK_IMPORTED_MODULE_31__.PlayIcon),
/* harmony export */   PlusIcon: () => (/* reexport safe */ _PlusIcon__WEBPACK_IMPORTED_MODULE_32__.PlusIcon),
/* harmony export */   PlusSquareIcon: () => (/* reexport safe */ _PlusSquareIcon__WEBPACK_IMPORTED_MODULE_63__.PlusSquareIcon),
/* harmony export */   PrintIcon: () => (/* reexport safe */ _PrintIcon__WEBPACK_IMPORTED_MODULE_51__.PrintIcon),
/* harmony export */   RedoIcon: () => (/* reexport safe */ _RedoIcon__WEBPACK_IMPORTED_MODULE_33__.RedoIcon),
/* harmony export */   SelectorIcon: () => (/* reexport safe */ _SelectorIcon__WEBPACK_IMPORTED_MODULE_60__.SelectorIcon),
/* harmony export */   SendIcon: () => (/* reexport safe */ _SendIcon__WEBPACK_IMPORTED_MODULE_15__.SendIcon),
/* harmony export */   SettingsIcon: () => (/* reexport safe */ _SettingsIcon__WEBPACK_IMPORTED_MODULE_1__.SettingsIcon),
/* harmony export */   ShareIcon: () => (/* reexport safe */ _ShareIcon__WEBPACK_IMPORTED_MODULE_50__.ShareIcon),
/* harmony export */   ShoppingCartIcon: () => (/* reexport safe */ _ShoppingCartIcon__WEBPACK_IMPORTED_MODULE_20__.ShoppingCartIcon),
/* harmony export */   SignOutAltIcon: () => (/* reexport safe */ _SignOutAltIcon__WEBPACK_IMPORTED_MODULE_19__.SignOutAltIcon),
/* harmony export */   SlidersIcon: () => (/* reexport safe */ _SlidersIcon__WEBPACK_IMPORTED_MODULE_18__.SlidersIcon),
/* harmony export */   SortAscendingIcon: () => (/* reexport safe */ _SortAscendingIcon__WEBPACK_IMPORTED_MODULE_58__.SortAscendingIcon),
/* harmony export */   SortDescendingIcon: () => (/* reexport safe */ _SortDescendingIcon__WEBPACK_IMPORTED_MODULE_59__.SortDescendingIcon),
/* harmony export */   SquareIcon: () => (/* reexport safe */ _SquareIcon__WEBPACK_IMPORTED_MODULE_54__.SquareIcon),
/* harmony export */   StarIcon: () => (/* reexport safe */ _StarIcon__WEBPACK_IMPORTED_MODULE_34__.StarIcon),
/* harmony export */   StopIcon: () => (/* reexport safe */ _StopIcon__WEBPACK_IMPORTED_MODULE_35__.StopIcon),
/* harmony export */   SuccessIcon: () => (/* reexport safe */ _SuccessIcon__WEBPACK_IMPORTED_MODULE_5__.SuccessIcon),
/* harmony export */   TimesIcon: () => (/* reexport safe */ _TimesIcon__WEBPACK_IMPORTED_MODULE_36__.TimesIcon),
/* harmony export */   TrashIcon: () => (/* reexport safe */ _TrashIcon__WEBPACK_IMPORTED_MODULE_45__.TrashIcon),
/* harmony export */   TrophyIcon: () => (/* reexport safe */ _TrophyIcon__WEBPACK_IMPORTED_MODULE_37__.TrophyIcon),
/* harmony export */   TypeIcon: () => (/* reexport safe */ _TypeIcon__WEBPACK_IMPORTED_MODULE_53__.TypeIcon),
/* harmony export */   UploadIcon: () => (/* reexport safe */ _UploadIcon__WEBPACK_IMPORTED_MODULE_38__.UploadIcon),
/* harmony export */   UserIcon: () => (/* reexport safe */ _UserIcon__WEBPACK_IMPORTED_MODULE_2__.UserIcon),
/* harmony export */   UserPlusIcon: () => (/* reexport safe */ _UserPlusIcon__WEBPACK_IMPORTED_MODULE_11__.UserPlusIcon),
/* harmony export */   UsersIcon: () => (/* reexport safe */ _UsersIcon__WEBPACK_IMPORTED_MODULE_12__.UsersIcon),
/* harmony export */   VolumeMuteIcon: () => (/* reexport safe */ _VolumeMuteIcon__WEBPACK_IMPORTED_MODULE_48__.VolumeMuteIcon),
/* harmony export */   VolumeUpIcon: () => (/* reexport safe */ _VolumeUpIcon__WEBPACK_IMPORTED_MODULE_47__.VolumeUpIcon),
/* harmony export */   WarningIcon: () => (/* reexport safe */ _WarningIcon__WEBPACK_IMPORTED_MODULE_6__.WarningIcon)
/* harmony export */ });
/* harmony import */ var _HomeIcon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./HomeIcon */ "./src/icons/HomeIcon.tsx");
/* harmony import */ var _SettingsIcon__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SettingsIcon */ "./src/icons/SettingsIcon.tsx");
/* harmony import */ var _UserIcon__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./UserIcon */ "./src/icons/UserIcon.tsx");
/* harmony import */ var _ErrorIcon__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ErrorIcon */ "./src/icons/ErrorIcon.tsx");
/* harmony import */ var _InfoIcon__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./InfoIcon */ "./src/icons/InfoIcon.tsx");
/* harmony import */ var _SuccessIcon__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./SuccessIcon */ "./src/icons/SuccessIcon.tsx");
/* harmony import */ var _WarningIcon__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./WarningIcon */ "./src/icons/WarningIcon.tsx");
/* harmony import */ var _LoginIcon__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./LoginIcon */ "./src/icons/LoginIcon.tsx");
/* harmony import */ var _LogoutIcon__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./LogoutIcon */ "./src/icons/LogoutIcon.tsx");
/* harmony import */ var _KeyIcon__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./KeyIcon */ "./src/icons/KeyIcon.tsx");
/* harmony import */ var _LockIcon__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./LockIcon */ "./src/icons/LockIcon.tsx");
/* harmony import */ var _UserPlusIcon__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./UserPlusIcon */ "./src/icons/UserPlusIcon.tsx");
/* harmony import */ var _UsersIcon__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./UsersIcon */ "./src/icons/UsersIcon.tsx");
/* harmony import */ var _ChatBubbleIcon__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./ChatBubbleIcon */ "./src/icons/ChatBubbleIcon.tsx");
/* harmony import */ var _ChatDotsIcon__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./ChatDotsIcon */ "./src/icons/ChatDotsIcon.tsx");
/* harmony import */ var _SendIcon__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./SendIcon */ "./src/icons/SendIcon.tsx");
/* harmony import */ var _CogIcon__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./CogIcon */ "./src/icons/CogIcon.tsx");
/* harmony import */ var _FilterIcon__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./FilterIcon */ "./src/icons/FilterIcon.tsx");
/* harmony import */ var _SlidersIcon__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./SlidersIcon */ "./src/icons/SlidersIcon.tsx");
/* harmony import */ var _SignOutAltIcon__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./SignOutAltIcon */ "./src/icons/SignOutAltIcon.tsx");
/* harmony import */ var _ShoppingCartIcon__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./ShoppingCartIcon */ "./src/icons/ShoppingCartIcon.tsx");
/* harmony import */ var _ArrowDownIcon__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./ArrowDownIcon */ "./src/icons/ArrowDownIcon.tsx");
/* harmony import */ var _BookOpenIcon__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./BookOpenIcon */ "./src/icons/BookOpenIcon.tsx");
/* harmony import */ var _ChevronLeftIcon__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./ChevronLeftIcon */ "./src/icons/ChevronLeftIcon.tsx");
/* harmony import */ var _CloudArrowDownIcon__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./CloudArrowDownIcon */ "./src/icons/CloudArrowDownIcon.tsx");
/* harmony import */ var _CloudArrowUpIcon__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./CloudArrowUpIcon */ "./src/icons/CloudArrowUpIcon.tsx");
/* harmony import */ var _CommentsIcon__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./CommentsIcon */ "./src/icons/CommentsIcon.tsx");
/* harmony import */ var _DownloadIcon__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./DownloadIcon */ "./src/icons/DownloadIcon.tsx");
/* harmony import */ var _EllipsisVerticalIcon__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./EllipsisVerticalIcon */ "./src/icons/EllipsisVerticalIcon.tsx");
/* harmony import */ var _ImageIcon__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./ImageIcon */ "./src/icons/ImageIcon.tsx");
/* harmony import */ var _PaperPlaneIcon__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./PaperPlaneIcon */ "./src/icons/PaperPlaneIcon.tsx");
/* harmony import */ var _PlayIcon__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./PlayIcon */ "./src/icons/PlayIcon.tsx");
/* harmony import */ var _PlusIcon__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./PlusIcon */ "./src/icons/PlusIcon.tsx");
/* harmony import */ var _RedoIcon__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./RedoIcon */ "./src/icons/RedoIcon.tsx");
/* harmony import */ var _StarIcon__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./StarIcon */ "./src/icons/StarIcon.tsx");
/* harmony import */ var _StopIcon__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./StopIcon */ "./src/icons/StopIcon.tsx");
/* harmony import */ var _TimesIcon__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./TimesIcon */ "./src/icons/TimesIcon.tsx");
/* harmony import */ var _TrophyIcon__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./TrophyIcon */ "./src/icons/TrophyIcon.tsx");
/* harmony import */ var _UploadIcon__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./UploadIcon */ "./src/icons/UploadIcon.tsx");
/* harmony import */ var _CoinsIcon__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./CoinsIcon */ "./src/icons/CoinsIcon.tsx");
/* harmony import */ var _HeartIcon__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./HeartIcon */ "./src/icons/HeartIcon.tsx");
/* harmony import */ var _ExternalLinkIcon__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./ExternalLinkIcon */ "./src/icons/ExternalLinkIcon.tsx");
/* harmony import */ var _PencilIcon__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./PencilIcon */ "./src/icons/PencilIcon.tsx");
/* harmony import */ var _CopyIcon__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./CopyIcon */ "./src/icons/CopyIcon.tsx");
/* harmony import */ var _ArchiveIcon__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./ArchiveIcon */ "./src/icons/ArchiveIcon.tsx");
/* harmony import */ var _TrashIcon__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./TrashIcon */ "./src/icons/TrashIcon.tsx");
/* harmony import */ var _PauseIcon__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./PauseIcon */ "./src/icons/PauseIcon.tsx");
/* harmony import */ var _VolumeUpIcon__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./VolumeUpIcon */ "./src/icons/VolumeUpIcon.tsx");
/* harmony import */ var _VolumeMuteIcon__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./VolumeMuteIcon */ "./src/icons/VolumeMuteIcon.tsx");
/* harmony import */ var _ChevronRightIcon__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./ChevronRightIcon */ "./src/icons/ChevronRightIcon.tsx");
/* harmony import */ var _ShareIcon__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./ShareIcon */ "./src/icons/ShareIcon.tsx");
/* harmony import */ var _PrintIcon__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./PrintIcon */ "./src/icons/PrintIcon.tsx");
/* harmony import */ var _LayoutIcon__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./LayoutIcon */ "./src/icons/LayoutIcon.tsx");
/* harmony import */ var _TypeIcon__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./TypeIcon */ "./src/icons/TypeIcon.tsx");
/* harmony import */ var _SquareIcon__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ./SquareIcon */ "./src/icons/SquareIcon.tsx");
/* harmony import */ var _LockOpenIcon__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ./LockOpenIcon */ "./src/icons/LockOpenIcon.tsx");
/* harmony import */ var _DiamondIcon__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ./DiamondIcon */ "./src/icons/DiamondIcon.tsx");
/* harmony import */ var _DocumentIcon__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ./DocumentIcon */ "./src/icons/DocumentIcon.tsx");
/* harmony import */ var _SortAscendingIcon__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ./SortAscendingIcon */ "./src/icons/SortAscendingIcon.tsx");
/* harmony import */ var _SortDescendingIcon__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ./SortDescendingIcon */ "./src/icons/SortDescendingIcon.tsx");
/* harmony import */ var _SelectorIcon__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ./SelectorIcon */ "./src/icons/SelectorIcon.tsx");
/* harmony import */ var _GoogleIcon__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ./GoogleIcon */ "./src/icons/GoogleIcon.tsx");
/* harmony import */ var _GithubIcon__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ./GithubIcon */ "./src/icons/GithubIcon.tsx");
/* harmony import */ var _PlusSquareIcon__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ./PlusSquareIcon */ "./src/icons/PlusSquareIcon.tsx");
/* harmony import */ var _MinusSquareIcon__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ./MinusSquareIcon */ "./src/icons/MinusSquareIcon.tsx");
/* harmony import */ var _FileIcon__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ./FileIcon */ "./src/icons/FileIcon.tsx");
/* harmony import */ var _FolderIcon__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ./FolderIcon */ "./src/icons/FolderIcon.tsx");




































































/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Accordion: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Accordion),
/* harmony export */   AccordionContent: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.AccordionContent),
/* harmony export */   AccordionItem: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.AccordionItem),
/* harmony export */   AccordionTrigger: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.AccordionTrigger),
/* harmony export */   Alert: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Alert),
/* harmony export */   AnimatedBlock: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.AnimatedBlock),
/* harmony export */   AspectRatio: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.AspectRatio),
/* harmony export */   Audio: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Audio),
/* harmony export */   AudioContext: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.AudioContext),
/* harmony export */   AudioControls: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.AudioControls),
/* harmony export */   AudioDuration: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.AudioDuration),
/* harmony export */   AudioFile: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.AudioFile),
/* harmony export */   AudioFilters: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.AudioFilters),
/* harmony export */   AudioTime: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.AudioTime),
/* harmony export */   AudioView: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.AudioView),
/* harmony export */   AudioVisualizer: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.AudioVisualizer),
/* harmony export */   Avatar: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Avatar),
/* harmony export */   AvatarGroup: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.AvatarGroup),
/* harmony export */   Backdrop: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Backdrop),
/* harmony export */   Badge: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Badge),
/* harmony export */   Box: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Box),
/* harmony export */   Breadcrumbs: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Breadcrumbs),
/* harmony export */   Button: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Button),
/* harmony export */   ButtonGroup: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.ButtonGroup),
/* harmony export */   Calendar: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Calendar),
/* harmony export */   Card: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Card),
/* harmony export */   Center: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Center),
/* harmony export */   ChartArea: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.ChartArea),
/* harmony export */   ChartAxis: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.ChartAxis),
/* harmony export */   ChartBar: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.ChartBar),
/* harmony export */   ChartHeatmap: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.ChartHeatmap),
/* harmony export */   ChartLine: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.ChartLine),
/* harmony export */   ChartRadar: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.ChartRadar),
/* harmony export */   ChartRadial: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.ChartRadial),
/* harmony export */   ChartSparkline: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.ChartSparkline),
/* harmony export */   ChartTooltip: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.ChartTooltip),
/* harmony export */   Charts: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Charts),
/* harmony export */   Checkbox: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Checkbox),
/* harmony export */   CircularProgress: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.CircularProgress),
/* harmony export */   Code: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Code),
/* harmony export */   CodeEditor: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.CodeEditor),
/* harmony export */   Collapse: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Collapse),
/* harmony export */   ColorPicker: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.ColorPicker),
/* harmony export */   Combobox: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Combobox),
/* harmony export */   Container: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Container),
/* harmony export */   ContextMenu: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.ContextMenu),
/* harmony export */   DataTable: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.DataTable),
/* harmony export */   DatePicker: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.DatePicker),
/* harmony export */   Dialog: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Dialog),
/* harmony export */   Divider: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Divider),
/* harmony export */   Drawer: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Drawer),
/* harmony export */   Dropdown: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Dropdown),
/* harmony export */   DropdownContent: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.DropdownContent),
/* harmony export */   DropdownItem: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.DropdownItem),
/* harmony export */   DropdownTrigger: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.DropdownTrigger),
/* harmony export */   Editable: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Editable),
/* harmony export */   Error: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Error),
/* harmony export */   FileUpload: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.FileUpload),
/* harmony export */   Flex: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Flex),
/* harmony export */   FloatingActionButton: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.FloatingActionButton),
/* harmony export */   Footer: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Footer),
/* harmony export */   FormControl: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.FormControl),
/* harmony export */   FormErrorMessage: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.FormErrorMessage),
/* harmony export */   FormHelperText: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.FormHelperText),
/* harmony export */   FormLabel: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.FormLabel),
/* harmony export */   GraphicsContext: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.GraphicsContext),
/* harmony export */   GraphicsNodeEditorView: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.GraphicsNodeEditorView),
/* harmony export */   GraphicsProvider: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.GraphicsProvider),
/* harmony export */   Grid: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Grid),
/* harmony export */   Header: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Header),
/* harmony export */   HoverCard: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.HoverCard),
/* harmony export */   HoverCardContent: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.HoverCardContent),
/* harmony export */   HoverCardTrigger: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.HoverCardTrigger),
/* harmony export */   Icon: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Icon),
/* harmony export */   IconButton: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.IconButton),
/* harmony export */   Image: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Image),
/* harmony export */   Input: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Input),
/* harmony export */   Kbd: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Kbd),
/* harmony export */   Layer: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Layer),
/* harmony export */   LinearProgress: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.LinearProgress),
/* harmony export */   Link: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Link),
/* harmony export */   List: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.List),
/* harmony export */   ListItem: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.ListItem),
/* harmony export */   ListItemBody: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.ListItemBody),
/* harmony export */   ListItemText: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.ListItemText),
/* harmony export */   Menu: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Menu),
/* harmony export */   MenuButton: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.MenuButton),
/* harmony export */   MenuItem: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.MenuItem),
/* harmony export */   MenuItems: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.MenuItems),
/* harmony export */   Modal: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Modal),
/* harmony export */   Nav: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Nav),
/* harmony export */   NumberInput: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.NumberInput),
/* harmony export */   Pagination: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Pagination),
/* harmony export */   PinInput: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.PinInput),
/* harmony export */   Popover: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Popover),
/* harmony export */   PopoverContent: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.PopoverContent),
/* harmony export */   PopoverTrigger: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.PopoverTrigger),
/* harmony export */   Popper: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Popper),
/* harmony export */   PopperContent: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.PopperContent),
/* harmony export */   PopperTrigger: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.PopperTrigger),
/* harmony export */   RadioGroup: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.RadioGroup),
/* harmony export */   RadioGroupItem: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.RadioGroupItem),
/* harmony export */   Rating: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Rating),
/* harmony export */   Search: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Search),
/* harmony export */   SegmentedControl: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.SegmentedControl),
/* harmony export */   Select: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Select),
/* harmony export */   Sidebar: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Sidebar),
/* harmony export */   SidebarNav: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.SidebarNav),
/* harmony export */   SidebarNavItem: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.SidebarNavItem),
/* harmony export */   SignInPage: () => (/* reexport safe */ _core__WEBPACK_IMPORTED_MODULE_0__.SignInPage),
/* harmony export */   Skeleton: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Skeleton),
/* harmony export */   Slider: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Slider),
/* harmony export */   Snackbar: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Snackbar),
/* harmony export */   SnackbarContext: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.SnackbarContext),
/* harmony export */   SnackbarProvider: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.SnackbarProvider),
/* harmony export */   Sofa: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Sofa),
/* harmony export */   SpeedDial: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.SpeedDial),
/* harmony export */   Spinner: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Spinner),
/* harmony export */   Stack: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Stack),
/* harmony export */   Stepper: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Stepper),
/* harmony export */   StyledMenu: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.StyledMenu),
/* harmony export */   Switch: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Switch),
/* harmony export */   SyntaxHighlighter: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.SyntaxHighlighter),
/* harmony export */   Tab: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Tab),
/* harmony export */   TabList: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.TabList),
/* harmony export */   TabPanel: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.TabPanel),
/* harmony export */   TabPanels: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.TabPanels),
/* harmony export */   Table: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Table),
/* harmony export */   TableBody: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.TableBody),
/* harmony export */   TableCell: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.TableCell),
/* harmony export */   TableHead: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.TableHead),
/* harmony export */   TableHeader: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.TableHeader),
/* harmony export */   TableRow: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.TableRow),
/* harmony export */   Tabs: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Tabs),
/* harmony export */   Tag: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Tag),
/* harmony export */   Text: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Text),
/* harmony export */   TextInput: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.TextInput),
/* harmony export */   Textarea: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Textarea),
/* harmony export */   ThemeProvider: () => (/* reexport safe */ _core__WEBPACK_IMPORTED_MODULE_0__.ThemeProvider),
/* harmony export */   ThemeSwitcher: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.ThemeSwitcher),
/* harmony export */   Timeline: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Timeline),
/* harmony export */   TimelineConnector: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.TimelineConnector),
/* harmony export */   TimelineContent: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.TimelineContent),
/* harmony export */   TimelineDot: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.TimelineDot),
/* harmony export */   TimelineItem: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.TimelineItem),
/* harmony export */   Toast: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Toast),
/* harmony export */   ToastContext: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.ToastContext),
/* harmony export */   ToastProvider: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.ToastProvider),
/* harmony export */   ToggleButton: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.ToggleButton),
/* harmony export */   ToggleButtonGroup: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.ToggleButtonGroup),
/* harmony export */   Tooltip: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Tooltip),
/* harmony export */   TransferList: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.TransferList),
/* harmony export */   TreeView: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.TreeView),
/* harmony export */   Video: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.Video),
/* harmony export */   VideoContext: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.VideoContext),
/* harmony export */   VideoControls: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.VideoControls),
/* harmony export */   VideoDuration: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.VideoDuration),
/* harmony export */   VideoFile: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.VideoFile),
/* harmony export */   VideoMetadata: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.VideoMetadata),
/* harmony export */   VideoTime: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.VideoTime),
/* harmony export */   VideoView: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.VideoView),
/* harmony export */   XNodeTree: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.XNodeTree),
/* harmony export */   XmlRenderer: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.XmlRenderer),
/* harmony export */   clearStyles: () => (/* reexport safe */ _core__WEBPACK_IMPORTED_MODULE_0__.clearStyles),
/* harmony export */   combineClasses: () => (/* reexport safe */ _core__WEBPACK_IMPORTED_MODULE_0__.combineClasses),
/* harmony export */   createClassFlow: () => (/* reexport safe */ _core__WEBPACK_IMPORTED_MODULE_0__.createClassFlow),
/* harmony export */   defaultTheme: () => (/* reexport safe */ _core__WEBPACK_IMPORTED_MODULE_0__.defaultTheme),
/* harmony export */   useAudio: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.useAudio),
/* harmony export */   useBreakpoint: () => (/* reexport safe */ _core__WEBPACK_IMPORTED_MODULE_0__.useBreakpoint),
/* harmony export */   useGraphicsContext: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.useGraphicsContext),
/* harmony export */   useMediaQuery: () => (/* reexport safe */ _core__WEBPACK_IMPORTED_MODULE_0__.useMediaQuery),
/* harmony export */   usePopperContext: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.usePopperContext),
/* harmony export */   useResponsiveValue: () => (/* reexport safe */ _core__WEBPACK_IMPORTED_MODULE_0__.useResponsiveValue),
/* harmony export */   useSnackbar: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.useSnackbar),
/* harmony export */   useStyles: () => (/* reexport safe */ _core__WEBPACK_IMPORTED_MODULE_0__.useStyles),
/* harmony export */   useTheme: () => (/* reexport safe */ _core__WEBPACK_IMPORTED_MODULE_0__.useTheme),
/* harmony export */   useToast: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.useToast),
/* harmony export */   useToggleButtonGroup: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.useToggleButtonGroup),
/* harmony export */   useTreeItem: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.useTreeItem),
/* harmony export */   useVideo: () => (/* reexport safe */ _components__WEBPACK_IMPORTED_MODULE_1__.useVideo),
/* harmony export */   withStyles: () => (/* reexport safe */ _core__WEBPACK_IMPORTED_MODULE_0__.withStyles)
/* harmony export */ });
/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core */ "./src/core/index.ts");
/* harmony import */ var _components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components */ "./src/components/index.ts");
/* harmony import */ var _styles_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./styles.css */ "./src/styles.css");
// Core systems


// Components


// Styles


/***/ }),

/***/ "./src/styles.css":
/*!************************!*\
  !*** ./src/styles.css ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleDomAPI.js */ "./node_modules/style-loader/dist/runtime/styleDomAPI.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertBySelector.js */ "./node_modules/style-loader/dist/runtime/insertBySelector.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertStyleElement.js */ "./node_modules/style-loader/dist/runtime/insertStyleElement.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleTagTransform.js */ "./node_modules/style-loader/dist/runtime/styleTagTransform.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _node_modules_css_loader_dist_cjs_js_node_modules_postcss_loader_dist_cjs_js_styles_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../node_modules/css-loader/dist/cjs.js!../node_modules/postcss-loader/dist/cjs.js!./styles.css */ "./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./src/styles.css");

      
      
      
      
      
      
      
      
      

var options = {};

options.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());
options.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());
options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, "head");
options.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());
options.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());

var update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_node_modules_postcss_loader_dist_cjs_js_styles_css__WEBPACK_IMPORTED_MODULE_6__["default"], options);




       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_node_modules_postcss_loader_dist_cjs_js_styles_css__WEBPACK_IMPORTED_MODULE_6__["default"] && _node_modules_css_loader_dist_cjs_js_node_modules_postcss_loader_dist_cjs_js_styles_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals ? _node_modules_css_loader_dist_cjs_js_node_modules_postcss_loader_dist_cjs_js_styles_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals : undefined);


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/nonce */
/******/ 	(() => {
/******/ 		__webpack_require__.nc = undefined;
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry needs to be wrapped in an IIFE because it needs to be isolated against other modules in the chunk.
(() => {
/*!*******************!*\
  !*** ./index.tsx ***!
  \*******************/
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_dom_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom/client */ "./node_modules/react-dom/client.js");
/* harmony import */ var _App__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./App */ "./App.tsx");
/* harmony import */ var _src_styles_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/styles.css */ "./src/styles.css");




const rootElement = document.getElementById('root');
if (!rootElement) {
  throw new Error("Could not find root element to mount to");
}
const root = react_dom_client__WEBPACK_IMPORTED_MODULE_1__.createRoot(rootElement);
root.render(/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().StrictMode), null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_App__WEBPACK_IMPORTED_MODULE_2__["default"], null)));
})();

/******/ })()
;
//# sourceMappingURL=main.a01abc33.js.map